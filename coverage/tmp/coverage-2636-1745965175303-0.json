{"result":[{"scriptId":"3","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9489,"endOffset":9562,"count":349}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9568,"endOffset":9619,"count":1347}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9625,"endOffset":9672,"count":291}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11284,"endOffset":11353,"count":312}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":12035,"endOffset":12063,"count":1095}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12377,"endOffset":12405,"count":322}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12843,"endOffset":12899,"count":2}],"isBlockCoverage":false},{"functionName":"SafeWeakRef","ranges":[{"startOffset":13059,"endOffset":13097,"count":61}],"isBlockCoverage":false},{"functionName":"SafePromise","ranges":[{"startOffset":13253,"endOffset":13295,"count":2526}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13813,"endOffset":14094,"count":421}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13961,"endOffset":14088,"count":421}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13992,"endOffset":14041,"count":421}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15452,"endOffset":16024,"count":170}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15488,"endOffset":16023,"count":170}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15889,"endOffset":16001,"count":476}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16376,"endOffset":16842,"count":308}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16412,"endOffset":16841,"count":308}],"isBlockCoverage":false},{"functionName":"onFulfilled","ranges":[{"startOffset":16547,"endOffset":16628,"count":751}],"isBlockCoverage":false}]},{"scriptId":"5","url":"node:internal/per_context/messageport","functions":[{"functionName":"","ranges":[{"startOffset":425,"endOffset":1031,"count":1750}],"isBlockCoverage":false}]},{"scriptId":"6","url":"node:internal/bootstrap/realm","functions":[{"functionName":"binding","ranges":[{"startOffset":4823,"endOffset":5688,"count":1}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":6187,"endOffset":6456,"count":144}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":6735,"endOffset":6893,"count":746}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9791,"endOffset":9868,"count":187}],"isBlockCoverage":false},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9881,"endOffset":9977,"count":771}],"isBlockCoverage":false},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9990,"endOffset":10346,"count":371}],"isBlockCoverage":false},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10619,"endOffset":10730,"count":1}],"isBlockCoverage":false},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10895,"endOffset":11572,"count":92}],"isBlockCoverage":false},{"functionName":"getESMFacade","ranges":[{"startOffset":11578,"endOffset":12230,"count":32}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11959,"endOffset":12065,"count":32}],"isBlockCoverage":false},{"functionName":"syncExports","ranges":[{"startOffset":12532,"endOffset":12886,"count":32}],"isBlockCoverage":false},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12892,"endOffset":13740,"count":2036}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13946,"endOffset":14321,"count":1947}],"isBlockCoverage":false},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":14441,"endOffset":14724,"count":65}],"isBlockCoverage":false}]},{"scriptId":"7","url":"node:internal/errors","functions":[{"functionName":"setInternalPrepareStackTrace","ranges":[{"startOffset":2903,"endOffset":2996,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13403,"endOffset":14111,"count":1}],"isBlockCoverage":false},{"functionName":"NodeError","ranges":[{"startOffset":13437,"endOffset":13729,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13880,"endOffset":13938,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13950,"endOffset":14007,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":14019,"endOffset":14102,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":15211,"endOffset":15519,"count":18}],"isBlockCoverage":false},{"functionName":"wrappedFn","ranges":[{"startOffset":15245,"endOffset":15458,"count":8065}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":16948,"endOffset":17733,"count":1}],"isBlockCoverage":false},{"functionName":"formatList","ranges":[{"startOffset":30886,"endOffset":31276,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":53981,"endOffset":54435,"count":1}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":54139,"endOffset":54154,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54207,"endOffset":54316,"count":1}],"isBlockCoverage":false}]},{"scriptId":"8","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":167,"endOffset":322,"count":1152}],"isBlockCoverage":false}]},{"scriptId":"9","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3929,"endOffset":3981,"count":375}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4048,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4198,"endOffset":4236,"count":3}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4243,"endOffset":4676,"count":3}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6675,"endOffset":6937,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8774,"endOffset":8940,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9045,"endOffset":9249,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13563,"endOffset":13615,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14756,"endOffset":14794,"count":3012}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15700,"endOffset":15737,"count":332}],"isBlockCoverage":false}]},{"scriptId":"10","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4504,"endOffset":4531,"count":1}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":6053,"endOffset":6401,"count":35}],"isBlockCoverage":false},{"functionName":"Timeout","ranges":[{"startOffset":6511,"endOffset":7587,"count":34}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":8003,"endOffset":8149,"count":2}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":8375,"endOffset":8688,"count":26}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":9286,"endOffset":9475,"count":1}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":10122,"endOffset":10293,"count":34}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":10297,"endOffset":10469,"count":34}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":11662,"endOffset":12422,"count":1030}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":13309,"endOffset":13523,"count":1076}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":13527,"endOffset":13600,"count":1029}],"isBlockCoverage":false},{"functionName":"processImmediate","ranges":[{"startOffset":13922,"endOffset":16073,"count":1}],"isBlockCoverage":false},{"functionName":"processTimers","ranges":[{"startOffset":16081,"endOffset":16589,"count":997}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":16595,"endOffset":19578,"count":996}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":19669,"endOffset":20005,"count":1}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":20011,"endOffset":20287,"count":1}],"isBlockCoverage":false}]},{"scriptId":"11","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14965,"endOffset":15037,"count":466}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15426,"endOffset":15722,"count":442}],"isBlockCoverage":false},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":16055,"endOffset":16561,"count":2}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":16565,"endOffset":16630,"count":3503}],"isBlockCoverage":false},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16634,"endOffset":16695,"count":1435}],"isBlockCoverage":false},{"functionName":"initHooksExist","ranges":[{"startOffset":16699,"endOffset":16756,"count":466}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16823,"endOffset":16886,"count":409}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17398,"endOffset":17579,"count":1435}],"isBlockCoverage":false},{"functionName":"emitAfterScript","ranges":[{"startOffset":17585,"endOffset":17710,"count":1435}],"isBlockCoverage":false},{"functionName":"emitDestroyScript","ranges":[{"startOffset":17716,"endOffset":17931,"count":56}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":17937,"endOffset":18002,"count":64}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":18072,"endOffset":18652,"count":1435}],"isBlockCoverage":false},{"functionName":"popAsyncContext","ranges":[{"startOffset":18721,"endOffset":19347,"count":1435}],"isBlockCoverage":false}]},{"scriptId":"12","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":1130,"endOffset":1191,"count":287}],"isBlockCoverage":false},{"functionName":"parseFileMode","ranges":[{"startOffset":1950,"endOffset":2272,"count":431}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2531,"endOffset":2919,"count":131}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3177,"endOffset":3651,"count":135}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3894,"endOffset":4339,"count":433}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4541,"endOffset":4656,"count":3020}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4910,"endOffset":5367,"count":836}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5566,"endOffset":5908,"count":6}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5713,"endOffset":5775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6114,"endOffset":6231,"count":147}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6834,"endOffset":7882,"count":953}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8866,"endOffset":9152,"count":156}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11606,"endOffset":11842,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11953,"endOffset":12273,"count":247}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12584,"endOffset":12954,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13133,"endOffset":13357,"count":876}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13567,"endOffset":13686,"count":2653}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15506,"endOffset":15720,"count":242}],"isBlockCoverage":false}]},{"scriptId":"13","url":"node:internal/util","functions":[{"functionName":"removeColors","ranges":[{"startOffset":2013,"endOffset":2100,"count":12}],"isBlockCoverage":false},{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2524,"endOffset":3194,"count":31}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2625,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2675,"endOffset":3190,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":3967,"endOffset":5054,"count":31}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4343,"endOffset":4654,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5338,"endOffset":5415,"count":5}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5599,"endOffset":5733,"count":972}],"isBlockCoverage":false},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":7868,"endOffset":8219,"count":1}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":8223,"endOffset":8386,"count":4}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8276,"endOffset":8382,"count":1}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":9396,"endOffset":9727,"count":1}],"isBlockCoverage":false},{"functionName":"getCWDURL","ranges":[{"startOffset":10423,"endOffset":10953,"count":1}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":11335,"endOffset":13449,"count":22}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":12097,"endOffset":12830,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12144,"endOffset":12823,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12199,"endOffset":12574,"count":2}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":13549,"endOffset":13883,"count":8}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":14028,"endOffset":14159,"count":274}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":15850,"endOffset":16199,"count":90}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15977,"endOffset":16195,"count":90}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":16982,"endOffset":17210,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":17732,"endOffset":18703,"count":2}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17957,"endOffset":18106,"count":20}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18214,"endOffset":18417,"count":20}],"isBlockCoverage":false},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":18707,"endOffset":19648,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18926,"endOffset":19172,"count":6}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":19284,"endOffset":19358,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":19652,"endOffset":19754,"count":2}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":20996,"endOffset":21194,"count":849}],"isBlockCoverage":false},{"functionName":"getInternalGlobal","ranges":[{"startOffset":21219,"endOffset":21501,"count":273}],"isBlockCoverage":false},{"functionName":"SideEffectFreeRegExpPrototypeExec","ranges":[{"startOffset":21505,"endOffset":21721,"count":272}],"isBlockCoverage":false},{"functionName":"getCrossRealmRegex","ranges":[{"startOffset":21771,"endOffset":22585,"count":99}],"isBlockCoverage":false},{"functionName":"SideEffectFreeRegExpPrototypeSymbolReplace","ranges":[{"startOffset":22589,"endOffset":22746,"count":99}],"isBlockCoverage":false},{"functionName":"getLazy","ranges":[{"startOffset":23112,"endOffset":23334,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23196,"endOffset":23330,"count":590}],"isBlockCoverage":false},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":23463,"endOffset":24157,"count":1}],"isBlockCoverage":false},{"functionName":"guessHandleType","ranges":[{"startOffset":24234,"endOffset":24334,"count":3}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":24358,"endOffset":24975,"count":39}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":24480,"endOffset":24549,"count":39}],"isBlockCoverage":false},{"functionName":"incRef","ranges":[{"startOffset":24555,"endOffset":24782,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":24788,"endOffset":24922,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24928,"endOffset":24972,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":513,"endOffset":602,"count":1101}],"isBlockCoverage":false},{"functionName":"getCLIOptionsInfoFromBinding","ranges":[{"startOffset":606,"endOffset":693,"count":1}],"isBlockCoverage":false},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":697,"endOffset":794,"count":6}],"isBlockCoverage":false},{"functionName":"refreshOptions","ranges":[{"startOffset":798,"endOffset":856,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":860,"endOffset":950,"count":1101}],"isBlockCoverage":false}]},{"scriptId":"15","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":3096}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1280,"endOffset":1394,"count":1297}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/linkedlist","functions":[{"functionName":"peek","ranges":[{"startOffset":142,"endOffset":237,"count":1992}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":275,"endOffset":513,"count":1063}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":572,"endOffset":1037,"count":1030}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":1041,"endOffset":1103,"count":32}],"isBlockCoverage":false}]},{"scriptId":"17","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":717,"endOffset":909,"count":26}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":915,"endOffset":955,"count":1993}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":1022,"endOffset":1708,"count":998}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1714,"endOffset":2220,"count":26}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2226,"endOffset":2568,"count":24}],"isBlockCoverage":false}]},{"scriptId":"18","url":"node:internal/util/inspect","functions":[{"functionName":"isUndetectableObject","ranges":[{"startOffset":3837,"endOffset":3887,"count":21}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":9374,"endOffset":11456,"count":1}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":14844,"endOffset":15010,"count":14}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":15308,"endOffset":17525,"count":14}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":17529,"endOffset":17803,"count":43}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":17937,"endOffset":17986,"count":4}],"isBlockCoverage":false},{"functionName":"isInstanceof","ranges":[{"startOffset":17990,"endOffset":18114,"count":8}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":18118,"endOffset":19433,"count":8}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":21954,"endOffset":22971,"count":4}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":22806,"endOffset":22862,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":23901,"endOffset":26734,"count":29}],"isBlockCoverage":false},{"functionName":"formatRaw","ranges":[{"startOffset":26738,"endOffset":37845,"count":8}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":55361,"endOffset":56800,"count":21}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56167,"endOffset":56206,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":60000,"endOffset":60616,"count":4}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":66380,"endOffset":69023,"count":28}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":69027,"endOffset":70007,"count":8}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":70011,"endOffset":72973,"count":8}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":74971,"endOffset":75166,"count":184}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":75554,"endOffset":79702,"count":184}],"isBlockCoverage":false}]},{"scriptId":"19","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":863,"endOffset":1348,"count":1}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":1238,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":1328,"endOffset":1339,"count":18}],"isBlockCoverage":false},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":1426,"endOffset":1772,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1789,"endOffset":1797,"count":3015}],"isBlockCoverage":false},{"functionName":"debuglogImpl","ranges":[{"startOffset":1926,"endOffset":2506,"count":12}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2120,"endOffset":2418,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2732,"endOffset":3798,"count":21}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2764,"endOffset":2863,"count":17}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2879,"endOffset":3285,"count":12}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":3317,"endOffset":3390,"count":5}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":3350,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":3410,"endOffset":3611,"count":12}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3685,"endOffset":3721,"count":5}],"isBlockCoverage":false},{"functionName":"ensureTimerFlagsAreUpdated","ranges":[{"startOffset":10042,"endOffset":10201,"count":469}],"isBlockCoverage":false},{"functionName":"internalStartTimer","ranges":[{"startOffset":10246,"endOffset":10570,"count":234}],"isBlockCoverage":false},{"functionName":"internalEndTimer","ranges":[{"startOffset":10613,"endOffset":10957,"count":235}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":11369,"endOffset":11886,"count":1}],"isBlockCoverage":false},{"functionName":"startTimer","ranges":[{"startOffset":11950,"endOffset":12105,"count":1}],"isBlockCoverage":false}]},{"scriptId":"21","url":"node:internal/async_context_frame","functions":[{"functionName":"checkEnabled","ranges":[{"startOffset":694,"endOffset":1133,"count":1}],"isBlockCoverage":false},{"functionName":"get enabled","ranges":[{"startOffset":1193,"endOffset":1269,"count":1}],"isBlockCoverage":false},{"functionName":"current","ranges":[{"startOffset":1282,"endOffset":1294,"count":545}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1305,"endOffset":1318,"count":1435}],"isBlockCoverage":false},{"functionName":"exchange","ranges":[{"startOffset":1329,"endOffset":1347,"count":1435}],"isBlockCoverage":false}]},{"scriptId":"22","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":3245,"endOffset":6666,"count":1}],"isBlockCoverage":false},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3807,"endOffset":3914,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3977,"endOffset":4170,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4471,"endOffset":5010,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":5154,"endOffset":5531,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5597,"endOffset":5789,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5854,"endOffset":6049,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":6114,"endOffset":6323,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":6418,"endOffset":6611,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6807,"endOffset":6878,"count":539}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7378,"endOffset":7436,"count":1}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":8382,"endOffset":8462,"count":1756}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8575,"endOffset":8625,"count":288}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10325,"endOffset":11015,"count":539}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":11020,"endOffset":11599,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11319,"endOffset":11533,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12438,"endOffset":12557,"count":125}],"isBlockCoverage":false},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12562,"endOffset":12715,"count":322}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":13914,"endOffset":16296,"count":1460}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":16301,"endOffset":18272,"count":661}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":18458,"endOffset":18552,"count":599}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":18851,"endOffset":18956,"count":62}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":18961,"endOffset":19233,"count":103}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":19237,"endOffset":19484,"count":239}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":19683,"endOffset":19814,"count":239}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":20448,"endOffset":21804,"count":856}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":22136,"endOffset":23578,"count":188}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":25235,"endOffset":25970,"count":373}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":26233,"endOffset":26717,"count":140}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":28869,"endOffset":30667,"count":7}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29165,"endOffset":30662,"count":7}],"isBlockCoverage":false},{"functionName":"errorListener","ranges":[{"startOffset":29215,"endOffset":29413,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":29437,"endOffset":29719,"count":7}],"isBlockCoverage":false},{"functionName":"abortListener","ranges":[{"startOffset":30233,"endOffset":30477,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticAddListener","ranges":[{"startOffset":31257,"endOffset":31701,"count":7}],"isBlockCoverage":false}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":4082,"endOffset":4276,"count":37}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4295,"endOffset":4423,"count":254}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":6995,"endOffset":7447,"count":246}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8496,"endOffset":8524,"count":9}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8793,"endOffset":9790,"count":264}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":11673,"endOffset":11952,"count":163}],"isBlockCoverage":false},{"functionName":"allocUnsafe","ranges":[{"startOffset":12137,"endOffset":12242,"count":126}],"isBlockCoverage":false},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12490,"endOffset":12609,"count":422}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":12942,"endOffset":13287,"count":126}],"isBlockCoverage":false},{"functionName":"fromStringFast","ranges":[{"startOffset":13291,"endOffset":13968,"count":252}],"isBlockCoverage":false},{"functionName":"createFromString","ranges":[{"startOffset":13972,"endOffset":14221,"count":128}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":14225,"endOffset":14596,"count":252}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":14600,"endOffset":15326,"count":6}],"isBlockCoverage":false},{"functionName":"fromArrayLike","ranges":[{"startOffset":15330,"endOffset":15737,"count":6}],"isBlockCoverage":false},{"functionName":"fromObject","ranges":[{"startOffset":15741,"endOffset":16058,"count":6}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":16543,"endOffset":16697,"count":567}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":16766,"endOffset":17952,"count":123}],"isBlockCoverage":false},{"functionName":"base64ByteLength","ranges":[{"startOffset":17957,"endOffset":18234,"count":10}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18376,"endOffset":18440,"count":238}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18454,"endOffset":18500,"count":3820}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19905,"endOffset":19970,"count":4}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":20366,"endOffset":20417,"count":10}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":20431,"endOffset":20497,"count":10}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":20511,"endOffset":20559,"count":95}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":21854,"endOffset":23726,"count":16967}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":23730,"endOffset":24487,"count":1}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":25419,"endOffset":26064,"count":3906}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":35114,"endOffset":35563,"count":8}],"isBlockCoverage":false},{"functionName":"subarray","ranges":[{"startOffset":35595,"endOffset":35904,"count":4}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40604,"endOffset":40639,"count":1}],"isBlockCoverage":false}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":27342,"endOffset":27444,"count":1148}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30449,"endOffset":30764,"count":4}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31268,"endOffset":31582,"count":238}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":31746,"endOffset":31999,"count":37}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":32601,"endOffset":32744,"count":460}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":33005,"endOffset":33079,"count":1}],"isBlockCoverage":false}]},{"scriptId":"26","url":"node:internal/worker/js_transferable","functions":[{"functionName":"markTransferMode","ranges":[{"startOffset":2670,"endOffset":3075,"count":3510}],"isBlockCoverage":false}]},{"scriptId":"27","url":"node:internal/process/per_thread","functions":[{"functionName":"buildAllowedFlags","ranges":[{"startOffset":8229,"endOffset":12510,"count":1}],"isBlockCoverage":false},{"functionName":"isAccepted","ranges":[{"startOffset":8884,"endOffset":9305,"count":31}],"isBlockCoverage":false},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9826,"endOffset":9888,"count":242}],"isBlockCoverage":false},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":10206,"endOffset":10285,"count":1}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":10293,"endOffset":10365,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":10373,"endOffset":10449,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10457,"endOffset":10511,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":10519,"endOffset":11351,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":11359,"endOffset":11528,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":11536,"endOffset":11718,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":11726,"endOffset":11789,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11797,"endOffset":11964,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12706,"endOffset":13046,"count":1}],"isBlockCoverage":false}]},{"scriptId":"28","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1251,"endOffset":1339,"count":452}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1653,"endOffset":2814,"count":253}],"isBlockCoverage":false},{"functionName":"nextTick","ranges":[{"startOffset":2962,"endOffset":3924,"count":374}],"isBlockCoverage":false},{"functionName":"runMicrotask","ranges":[{"startOffset":3928,"endOffset":4113,"count":32}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3978,"endOffset":4108,"count":32}],"isBlockCoverage":false},{"functionName":"queueMicrotask","ranges":[{"startOffset":4189,"endOffset":4488,"count":32}],"isBlockCoverage":false}]},{"scriptId":"29","url":"node:internal/process/promises","functions":[{"functionName":"","ranges":[{"startOffset":1388,"endOffset":1504,"count":9}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1541,"endOffset":1700,"count":1}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":4321,"endOffset":4413,"count":332}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":4846,"endOffset":5551,"count":220}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":7034,"endOffset":7304,"count":79}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":7347,"endOffset":7943,"count":79}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":11845,"endOffset":12412,"count":1}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":12590,"endOffset":14148,"count":253}],"isBlockCoverage":false}]},{"scriptId":"30","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3197,"endOffset":3251,"count":1298}],"isBlockCoverage":false},{"functionName":"isFull","ranges":[{"startOffset":3257,"endOffset":3326,"count":374}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3332,"endOffset":3422,"count":374}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3428,"endOffset":3650,"count":649}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":3778,"endOffset":3827,"count":649}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3833,"endOffset":4104,"count":374}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":4110,"endOffset":4374,"count":649}],"isBlockCoverage":false}]},{"scriptId":"31","url":"node:async_hooks","functions":[{"functionName":"AsyncHook","ranges":[{"startOffset":1669,"endOffset":2520,"count":1}],"isBlockCoverage":false},{"functionName":"createHook","ranges":[{"startOffset":4623,"endOffset":4682,"count":1}],"isBlockCoverage":false},{"functionName":"AsyncResource","ranges":[{"startOffset":4836,"endOffset":6131,"count":57}],"isBlockCoverage":false},{"functionName":"runInAsyncScope","ranges":[{"startOffset":6137,"endOffset":6581,"count":64}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":6587,"endOffset":6768,"count":56}],"isBlockCoverage":false},{"functionName":"asyncId","ranges":[{"startOffset":6774,"endOffset":6825,"count":24}],"isBlockCoverage":false},{"functionName":"get AsyncLocalStorage","ranges":[{"startOffset":8263,"endOffset":8462,"count":1}],"isBlockCoverage":false}]},{"scriptId":"32","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1947,"endOffset":1974,"count":1}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2283,"endOffset":3502,"count":33}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":4231,"endOffset":4928,"count":32}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":5265,"endOffset":5636,"count":37}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":5885,"endOffset":6584,"count":2}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":6688,"endOffset":6991,"count":2}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":7665,"endOffset":8254,"count":1}],"isBlockCoverage":false}]},{"scriptId":"33","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":983,"endOffset":1322,"count":1}],"isBlockCoverage":false}]},{"scriptId":"34","url":"node:path","functions":[{"functionName":"isPathSeparator","ranges":[{"startOffset":1999,"endOffset":2105,"count":3188}],"isBlockCoverage":false},{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":2109,"endOffset":2188,"count":3089}],"isBlockCoverage":false},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":2192,"endOffset":2365,"count":3016}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":2431,"endOffset":4441,"count":180}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":5639,"endOffset":10564,"count":2705}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":10636,"endOffset":13799,"count":1334}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":13872,"endOffset":14301,"count":1908}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":14376,"endOffset":16586,"count":1252}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":16893,"endOffset":21948,"count":92}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":22020,"endOffset":23159,"count":680}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":23231,"endOffset":25866,"count":1796}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":25969,"endOffset":28827,"count":248}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":28899,"endOffset":31034,"count":330}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":31270,"endOffset":36176,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36535,"endOffset":36695,"count":820}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":36929,"endOffset":38069,"count":820}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":38141,"endOffset":38777,"count":3541}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":39085,"endOffset":39466,"count":611}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":39563,"endOffset":41993,"count":189}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":42216,"endOffset":42916,"count":4}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":43019,"endOffset":45522,"count":1}],"isBlockCoverage":false}]},{"scriptId":"35","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3763,"endOffset":4576,"count":3102}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4344,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4417,"endOffset":4494,"count":1190}],"isBlockCoverage":false},{"functionName":"get hasHash","ranges":[{"startOffset":4500,"endOffset":4573,"count":1190}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":22634,"endOffset":22761,"count":3742}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23108,"endOffset":34536,"count":3102}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsModified","ranges":[{"startOffset":23234,"endOffset":23731,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":23743,"endOffset":24269,"count":3102}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":24282,"endOffset":24530,"count":987}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24536,"endOffset":25281,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromContext","ranges":[{"startOffset":25287,"endOffset":25627,"count":251}],"isBlockCoverage":false},{"functionName":"#getSearchFromParams","ranges":[{"startOffset":25633,"endOffset":25747,"count":0}],"isBlockCoverage":false},{"functionName":"#ensureSearchParamsUpdated","ranges":[{"startOffset":25753,"endOffset":26199,"count":3506}],"isBlockCoverage":false},{"functionName":"#updateContext","ranges":[{"startOffset":26454,"endOffset":28142,"count":3145}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":28148,"endOffset":28337,"count":1441}],"isBlockCoverage":false},{"functionName":"get href","ranges":[{"startOffset":28343,"endOffset":28532,"count":2923}],"isBlockCoverage":false},{"functionName":"set href","ranges":[{"startOffset":28538,"endOffset":28762,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":28783,"endOffset":29681,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":29687,"endOffset":29793,"count":3505}],"isBlockCoverage":false},{"functionName":"set protocol","ranges":[{"startOffset":29799,"endOffset":29977,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":29983,"endOffset":30215,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":30221,"endOffset":30399,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":30405,"endOffset":30633,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":30639,"endOffset":30817,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":30823,"endOffset":31265,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":31271,"endOffset":31441,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":31447,"endOffset":31736,"count":99}],"isBlockCoverage":false},{"functionName":"set hostname","ranges":[{"startOffset":31742,"endOffset":31920,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":31926,"endOffset":32039,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":32045,"endOffset":32215,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":32221,"endOffset":32521,"count":939}],"isBlockCoverage":false},{"functionName":"set pathname","ranges":[{"startOffset":32527,"endOffset":32705,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":32711,"endOffset":32912,"count":251}],"isBlockCoverage":false},{"functionName":"set search","ranges":[{"startOffset":32918,"endOffset":33127,"count":251}],"isBlockCoverage":false},{"functionName":"get searchParams","ranges":[{"startOffset":33148,"endOffset":33514,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":33520,"endOffset":33740,"count":251}],"isBlockCoverage":false},{"functionName":"set hash","ranges":[{"startOffset":33746,"endOffset":33916,"count":251}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":33922,"endOffset":34109,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":34122,"endOffset":34533,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":42634,"endOffset":44164,"count":99}],"isBlockCoverage":false},{"functionName":"fileURLToPath","ranges":[{"startOffset":44709,"endOffset":45130,"count":1234}],"isBlockCoverage":false},{"functionName":"encodePathChars","ranges":[{"startOffset":45964,"endOffset":46827,"count":363}],"isBlockCoverage":false},{"functionName":"pathToFileURL","ranges":[{"startOffset":46831,"endOffset":49396,"count":363}],"isBlockCoverage":false},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":49400,"endOffset":49541,"count":3459}],"isBlockCoverage":false}]},{"scriptId":"38","url":"node:internal/vm","functions":[{"functionName":"isContext","ranges":[{"startOffset":848,"endOffset":946,"count":3}],"isBlockCoverage":false},{"functionName":"getHostDefinedOptionId","ranges":[{"startOffset":1414,"endOffset":2767,"count":2}],"isBlockCoverage":false},{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":3079,"endOffset":3781,"count":2}],"isBlockCoverage":false}]},{"scriptId":"40","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":731,"endOffset":862,"count":1}],"isBlockCoverage":false},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1655,"endOffset":1720,"count":23}],"isBlockCoverage":false},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1813,"endOffset":2332,"count":1}],"isBlockCoverage":false},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2660,"endOffset":3276,"count":22}],"isBlockCoverage":false},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":4738,"endOffset":6330,"count":22}],"isBlockCoverage":false},{"functionName":"dataFromUrl","ranges":[{"startOffset":7415,"endOffset":7851,"count":22}],"isBlockCoverage":false},{"functionName":"lineLengths","ranges":[{"startOffset":8046,"endOffset":8860,"count":5}],"isBlockCoverage":false},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":9019,"endOffset":9309,"count":14}],"isBlockCoverage":false},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":9407,"endOffset":10097,"count":8}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":10375,"endOffset":10791,"count":22}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10454,"endOffset":10643,"count":96}],"isBlockCoverage":false}]},{"scriptId":"41","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1506,"endOffset":1533,"count":1}],"isBlockCoverage":false},{"functionName":"toRealPath","ranges":[{"startOffset":2017,"endOffset":2153,"count":147}],"isBlockCoverage":false},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":2276,"endOffset":2781,"count":1}],"isBlockCoverage":false},{"functionName":"getCjsConditions","ranges":[{"startOffset":2853,"endOffset":2985,"count":4}],"isBlockCoverage":false},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":3219,"endOffset":3609,"count":92}],"isBlockCoverage":false},{"functionName":"lazyModule","ranges":[{"startOffset":3709,"endOffset":3825,"count":128}],"isBlockCoverage":false},{"functionName":"makeRequireFunction","ranges":[{"startOffset":4055,"endOffset":5175,"count":128}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":4257,"endOffset":4317,"count":215}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4505,"endOffset":4654,"count":2}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":4807,"endOffset":4932,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":8131,"endOffset":8653,"count":22}],"isBlockCoverage":false},{"functionName":"urlToFilename","ranges":[{"startOffset":8730,"endOffset":8873,"count":21}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":14079,"endOffset":14198,"count":234}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":14690,"endOffset":15125,"count":234}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":15379,"endOffset":15652,"count":138}],"isBlockCoverage":false},{"functionName":"hasStartedUserCJSExecution","ranges":[{"startOffset":16041,"endOffset":16117,"count":1}],"isBlockCoverage":false},{"functionName":"setHasStartedUserCJSExecution","ranges":[{"startOffset":16122,"endOffset":16201,"count":125}],"isBlockCoverage":false},{"functionName":"hasStartedUserESMExecution","ranges":[{"startOffset":16206,"endOffset":16282,"count":1}],"isBlockCoverage":false},{"functionName":"setHasStartedUserESMExecution","ranges":[{"startOffset":16287,"endOffset":16366,"count":7}],"isBlockCoverage":false}]},{"scriptId":"42","url":"node:fs","functions":[{"functionName":"makeCallback","ranges":[{"startOffset":4827,"endOffset":4943,"count":221}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4898,"endOffset":4939,"count":221}],"isBlockCoverage":false},{"functionName":"makeStatsCallback","ranges":[{"startOffset":5129,"endOffset":5303,"count":212}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5205,"endOffset":5299,"count":212}],"isBlockCoverage":false},{"functionName":"isFileType","ranges":[{"startOffset":5332,"endOffset":5599,"count":3650}],"isBlockCoverage":false},{"functionName":"accessSync","ranges":[{"startOffset":6324,"endOffset":6409,"count":4}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":7611,"endOffset":7761,"count":1861}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":10404,"endOffset":10612,"count":2}],"isBlockCoverage":false},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10616,"endOffset":10940,"count":2}],"isBlockCoverage":false},{"functionName":"tryReadSync","ranges":[{"startOffset":10944,"endOffset":11209,"count":2}],"isBlockCoverage":false},{"functionName":"readFileSync","ranges":[{"startOffset":11444,"endOffset":13111,"count":287}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":13655,"endOffset":13704,"count":2}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":14663,"endOffset":14831,"count":2}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":18530,"endOffset":19627,"count":2}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":29986,"endOffset":30858,"count":10}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30357,"endOffset":30699,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":38141,"endOffset":38924,"count":95}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38679,"endOffset":38815,"count":90}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":40561,"endOffset":41197,"count":122}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":41439,"endOffset":41788,"count":90}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":43773,"endOffset":44080,"count":4065}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":50129,"endOffset":50317,"count":116}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":70032,"endOffset":70130,"count":272}],"isBlockCoverage":false},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":70381,"endOffset":70676,"count":272}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":70804,"endOffset":71072,"count":365}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":71358,"endOffset":75177,"count":402}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":75374,"endOffset":75517,"count":350}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":83365,"endOffset":83562,"count":4}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":86853,"endOffset":86924,"count":1}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":86987,"endOffset":87060,"count":1}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":87260,"endOffset":87339,"count":1}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":87410,"endOffset":87491,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":88217,"endOffset":88316,"count":90}],"isBlockCoverage":false}]},{"scriptId":"44","url":"node:internal/encoding","functions":[{"functionName":"validateEncoder","ranges":[{"startOffset":1349,"endOffset":1477,"count":1926}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1481,"endOffset":1609,"count":1202}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":9669,"endOffset":9852,"count":9}],"isBlockCoverage":false},{"functionName":"TextEncoder","ranges":[{"startOffset":9879,"endOffset":9927,"count":5}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":10009,"endOffset":10104,"count":1926}],"isBlockCoverage":false},{"functionName":"TextDecoder","ranges":[{"startOffset":11474,"endOffset":12383,"count":9}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":12670,"endOffset":13219,"count":1202}],"isBlockCoverage":false}]},{"scriptId":"45","url":"node:internal/webidl","functions":[{"functionName":"DOMString","ranges":[{"startOffset":4832,"endOffset":4968,"count":740}],"isBlockCoverage":false}]},{"scriptId":"47","url":"node:internal/webstreams/util","functions":[{"functionName":"isBrandCheck","ranges":[{"startOffset":2514,"endOffset":2684,"count":8}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2555,"endOffset":2680,"count":0}],"isBlockCoverage":false}]},{"scriptId":"48","url":"node:util","functions":[{"functionName":"lazyAbortController","ranges":[{"startOffset":2842,"endOffset":2965,"count":3}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":8292,"endOffset":8949,"count":2}],"isBlockCoverage":false},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":17352,"endOffset":17447,"count":1}],"isBlockCoverage":false},{"functionName":"get transferableAbortController","ranges":[{"startOffset":17452,"endOffset":17555,"count":1}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":17560,"endOffset":17623,"count":1}],"isBlockCoverage":false}]},{"scriptId":"49","url":"node:internal/streams/utils","functions":[{"functionName":"isIterable","ranges":[{"startOffset":3020,"endOffset":3356,"count":254}],"isBlockCoverage":false}]},{"scriptId":"50","url":"node:internal/fs/utils","functions":[{"functionName":"lazyLoadFs","ranges":[{"startOffset":3652,"endOffset":3736,"count":2}],"isBlockCoverage":false},{"functionName":"assertEncoding","ranges":[{"startOffset":3740,"endOffset":3945,"count":1053}],"isBlockCoverage":false},{"functionName":"Dirent","ranges":[{"startOffset":3967,"endOffset":4103,"count":439}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":4109,"endOffset":4172,"count":552}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":4178,"endOffset":4237,"count":382}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":4392,"endOffset":4459,"count":147}],"isBlockCoverage":false},{"functionName":"getDirents","ranges":[{"startOffset":5766,"endOffset":6924,"count":90}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6343,"endOffset":6603,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7740,"endOffset":8387,"count":1556}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":9760,"endOffset":10079,"count":1297}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10117,"endOffset":10176,"count":831}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10210,"endOffset":10269,"count":439}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":10894,"endOffset":10978,"count":3020}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":13857,"endOffset":14256,"count":1297}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14459,"endOffset":14695,"count":1270}],"isBlockCoverage":false},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14820,"endOffset":15922,"count":1297}],"isBlockCoverage":false},{"functionName":"stringToFlags","ranges":[{"startOffset":16344,"endOffset":17640,"count":708}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18658,"endOffset":19132,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19195,"endOffset":19694,"count":127}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19740,"endOffset":20472,"count":3459}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20519,"endOffset":20658,"count":3057}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20703,"endOffset":20832,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23345,"endOffset":24098,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23525,"endOffset":24093,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25454,"endOffset":25935,"count":12}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26445,"endOffset":26658,"count":127}],"isBlockCoverage":false}]},{"scriptId":"51","url":"node:internal/process/permission","functions":[{"functionName":"isEnabled","ranges":[{"startOffset":347,"endOffset":597,"count":354}],"isBlockCoverage":false}]},{"scriptId":"54","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1735,"endOffset":1838,"count":184}],"isBlockCoverage":false},{"functionName":"Console","ranges":[{"startOffset":2556,"endOffset":4653,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4158,"endOffset":4533,"count":19}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5283,"endOffset":5529,"count":1}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5761,"endOffset":6431,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5978,"endOffset":6076,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6089,"endOffset":6119,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6255,"endOffset":6357,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6370,"endOffset":6400,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6528,"endOffset":7889,"count":1}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7986,"endOffset":9496,"count":184}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9596,"endOffset":10021,"count":184}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10119,"endOffset":10303,"count":11}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10401,"endOffset":10585,"count":173}],"isBlockCoverage":false},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10680,"endOffset":11587,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10749,"endOffset":11583,"count":184}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":11860,"endOffset":11949,"count":11}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":11958,"endOffset":12048,"count":173}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":19626,"endOffset":20645,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20535,"endOffset":20640,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"node:internal/event_target","functions":[{"functionName":"isEvent","ranges":[{"startOffset":2314,"endOffset":2388,"count":530}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2404,"endOffset":7487,"count":265}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":2724,"endOffset":3218,"count":265}],"isBlockCoverage":false},{"functionName":"initEvent","ranges":[{"startOffset":3334,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3636,"endOffset":4168,"count":0}],"isBlockCoverage":false},{"functionName":"stopImmediatePropagation","ranges":[{"startOffset":4174,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":4547,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":4721,"endOffset":4836,"count":0}],"isBlockCoverage":false},{"functionName":"get currentTarget","ranges":[{"startOffset":4882,"endOffset":5038,"count":0}],"isBlockCoverage":false},{"functionName":"get srcElement","ranges":[{"startOffset":5084,"endOffset":5203,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":5244,"endOffset":5355,"count":265}],"isBlockCoverage":false},{"functionName":"get cancelable","ranges":[{"startOffset":5397,"endOffset":5519,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPrevented","ranges":[{"startOffset":5561,"endOffset":5715,"count":265}],"isBlockCoverage":false},{"functionName":"get timeStamp","ranges":[{"startOffset":5756,"endOffset":5876,"count":0}],"isBlockCoverage":false},{"functionName":"composedPath","ranges":[{"startOffset":6103,"endOffset":6254,"count":0}],"isBlockCoverage":false},{"functionName":"get returnValue","ranges":[{"startOffset":6296,"endOffset":6447,"count":0}],"isBlockCoverage":false},{"functionName":"get bubbles","ranges":[{"startOffset":6489,"endOffset":6605,"count":0}],"isBlockCoverage":false},{"functionName":"get composed","ranges":[{"startOffset":6647,"endOffset":6765,"count":0}],"isBlockCoverage":false},{"functionName":"get eventPhase","ranges":[{"startOffset":6806,"endOffset":6967,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelBubble","ranges":[{"startOffset":7009,"endOffset":7141,"count":0}],"isBlockCoverage":false},{"functionName":"set cancelBubble","ranges":[{"startOffset":7183,"endOffset":7347,"count":0}],"isBlockCoverage":false},{"functionName":"stopPropagation","ranges":[{"startOffset":7353,"endOffset":7484,"count":0}],"isBlockCoverage":false},{"functionName":"Listener","ranges":[{"startOffset":11271,"endOffset":12782,"count":740}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12603,"endOffset":12736,"count":0}],"isBlockCoverage":false},{"functionName":"get once","ranges":[{"startOffset":12788,"endOffset":12850,"count":1781}],"isBlockCoverage":false},{"functionName":"get passive","ranges":[{"startOffset":12926,"endOffset":12994,"count":1781}],"isBlockCoverage":false},{"functionName":"get isNodeStyleListener","ranges":[{"startOffset":12998,"endOffset":13080,"count":3504}],"isBlockCoverage":false},{"functionName":"get weak","ranges":[{"startOffset":13084,"endOffset":13146,"count":2521}],"isBlockCoverage":false},{"functionName":"get removed","ranges":[{"startOffset":13250,"endOffset":13318,"count":1781}],"isBlockCoverage":false},{"functionName":"set removed","ranges":[{"startOffset":13322,"endOffset":13444,"count":740}],"isBlockCoverage":false},{"functionName":"initEventTarget","ranges":[{"startOffset":13898,"endOffset":14122,"count":266}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14427,"endOffset":15300,"count":740}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":15765,"endOffset":18565,"count":740}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17150,"endOffset":17226,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":20294,"endOffset":20770,"count":265}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20776,"endOffset":23148,"count":2015}],"isBlockCoverage":false},{"functionName":"createEvent","ranges":[{"startOffset":20845,"endOffset":21052,"count":0}],"isBlockCoverage":false},{"functionName":"iterationCondition","ranges":[{"startOffset":21451,"endOffset":21621,"count":3562}],"isBlockCoverage":false},{"functionName":"initNodeEventTarget","ranges":[{"startOffset":23986,"endOffset":24051,"count":265}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":26077,"endOffset":26287,"count":740}],"isBlockCoverage":false},{"functionName":"validateEventListener","ranges":[{"startOffset":28226,"endOffset":28613,"count":740}],"isBlockCoverage":false},{"functionName":"validateEventListenerOptions","ranges":[{"startOffset":28617,"endOffset":29191,"count":740}],"isBlockCoverage":false},{"functionName":"isEventTarget","ranges":[{"startOffset":29503,"endOffset":29581,"count":1005}],"isBlockCoverage":false},{"functionName":"isNodeEventTarget","ranges":[{"startOffset":29585,"endOffset":29671,"count":740}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":29675,"endOffset":29998,"count":1719}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29824,"endOffset":29988,"count":0}],"isBlockCoverage":false},{"functionName":"defineEventHandler","ranges":[{"startOffset":30513,"endOffset":32024,"count":6}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30676,"endOffset":30815,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30920,"endOffset":31778,"count":0}],"isBlockCoverage":false}]},{"scriptId":"59","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1477,"endOffset":3141,"count":2}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2943,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3787,"endOffset":3882,"count":3}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3886,"endOffset":4598,"count":1154}],"isBlockCoverage":false},{"functionName":"cleanupStdout","ranges":[{"startOffset":4255,"endOffset":4438,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4602,"endOffset":5312,"count":1098}],"isBlockCoverage":false},{"functionName":"cleanupStderr","ranges":[{"startOffset":4969,"endOffset":5152,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":5316,"endOffset":7881,"count":2}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":6704,"endOffset":6713,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7330,"endOffset":7374,"count":0}],"isBlockCoverage":false},{"functionName":"onpause","ranges":[{"startOffset":7382,"endOffset":7630,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupStdin","ranges":[{"startOffset":7647,"endOffset":7723,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":453,"endOffset":526,"count":67}],"isBlockCoverage":false},{"functionName":"throwIfBuildingSnapshot","ranges":[{"startOffset":657,"endOffset":792,"count":31}],"isBlockCoverage":false},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":869,"endOffset":1047,"count":1}],"isBlockCoverage":false}]},{"scriptId":"61","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":254,"endOffset":352,"count":9}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":419,"endOffset":948,"count":9}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":952,"endOffset":1153,"count":1}],"isBlockCoverage":false}]},{"scriptId":"62","url":"node:url","functions":[{"functionName":"pathToFileURL","ranges":[{"startOffset":33101,"endOffset":33219,"count":35}],"isBlockCoverage":false}]},{"scriptId":"63","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":4805,"endOffset":4848,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5657,"endOffset":5719,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5811,"endOffset":5849,"count":1}],"isBlockCoverage":false},{"functionName":"wrapModuleLoad","ranges":[{"startOffset":6097,"endOffset":6539,"count":235}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":6683,"endOffset":7165,"count":672}],"isBlockCoverage":false},{"functionName":"updateChildren","ranges":[{"startOffset":7676,"endOffset":7883,"count":203}],"isBlockCoverage":false},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":8006,"endOffset":8166,"count":314}],"isBlockCoverage":false},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":8357,"endOffset":8600,"count":17}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8545,"endOffset":8587,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":8698,"endOffset":8970,"count":129}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11006,"endOffset":11033,"count":1}],"isBlockCoverage":false},{"functionName":"initializeCJS","ranges":[{"startOffset":11777,"endOffset":12787,"count":1}],"isBlockCoverage":false},{"functionName":"tryPackage","ranges":[{"startOffset":13703,"endOffset":14935,"count":38}],"isBlockCoverage":false},{"functionName":"tryFile","ranges":[{"startOffset":15304,"endOffset":15574,"count":281}],"isBlockCoverage":false},{"functionName":"tryExtensions","ranges":[{"startOffset":15847,"endOffset":16076,"count":142}],"isBlockCoverage":false},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":16266,"endOffset":16754,"count":126}],"isBlockCoverage":false},{"functionName":"trySelfParentPath","ranges":[{"startOffset":16883,"endOffset":17188,"count":157}],"isBlockCoverage":false},{"functionName":"trySelf","ranges":[{"startOffset":17403,"endOffset":18377,"count":157}],"isBlockCoverage":false},{"functionName":"resolveExports","ranges":[{"startOffset":18739,"endOffset":19577,"count":142}],"isBlockCoverage":false},{"functionName":"getDefaultExtensions","ranges":[{"startOffset":19642,"endOffset":20832,"count":111}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20091,"endOffset":20231,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20409,"endOffset":20488,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20755,"endOffset":20827,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21134,"endOffset":25335,"count":158}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25679,"endOffset":27290,"count":67}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28843,"endOffset":30171,"count":157}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":31669,"endOffset":32694,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33373,"endOffset":37363,"count":235}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37836,"endOffset":41065,"count":214}],"isBlockCoverage":false},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":41502,"endOffset":42097,"count":4}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42768,"endOffset":43659,"count":126}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43870,"endOffset":44183,"count":215}],"isBlockCoverage":false},{"functionName":"wrapSafe","ranges":[{"startOffset":48025,"endOffset":49656,"count":125}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50066,"endOffset":52508,"count":125}],"isBlockCoverage":false},{"functionName":"getMaybeCachedSource","ranges":[{"startOffset":52770,"endOffset":53187,"count":125}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55924,"endOffset":57557,"count":125}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58191,"endOffset":58331,"count":1}],"isBlockCoverage":false},{"functionName":"createRequireFromPath","ranges":[{"startOffset":58489,"endOffset":58965,"count":3}],"isBlockCoverage":false},{"functionName":"createRequire","ranges":[{"startOffset":59402,"endOffset":59964,"count":3}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60091,"endOffset":61084,"count":1}],"isBlockCoverage":false}]},{"scriptId":"64","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"deserializePackageJSON","ranges":[{"startOffset":499,"endOffset":2028,"count":848}],"isBlockCoverage":false},{"functionName":"requiresJSONParse","ranges":[{"startOffset":1310,"endOffset":1384,"count":438}],"isBlockCoverage":false},{"functionName":"get imports","ranges":[{"startOffset":1573,"endOffset":1792,"count":0}],"isBlockCoverage":false},{"functionName":"get exports","ranges":[{"startOffset":1799,"endOffset":2018,"count":438}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2316,"endOffset":2752,"count":227}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":2973,"endOffset":3109,"count":99}],"isBlockCoverage":false},{"functionName":"getNearestParentPackageJSON","ranges":[{"startOffset":3442,"endOffset":3953,"count":262}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":4188,"endOffset":4603,"count":359}],"isBlockCoverage":false}]},{"scriptId":"65","url":"node:diagnostics_channel","functions":[{"functionName":"set","ranges":[{"startOffset":920,"endOffset":1040,"count":39}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1046,"endOffset":1096,"count":39}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3927,"endOffset":4074,"count":39}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4568,"endOffset":4614,"count":1253}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4772,"endOffset":5047,"count":39}],"isBlockCoverage":false},{"functionName":"tracingChannelFrom","ranges":[{"startOffset":5636,"endOffset":6175,"count":15}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":6205,"endOffset":6486,"count":3}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":6492,"endOffset":6713,"count":244}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":7232,"endOffset":7763,"count":235}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7449,"endOffset":7756,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7769,"endOffset":8995,"count":7}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":7979,"endOffset":8245,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8253,"endOffset":8484,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8524,"endOffset":8988,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":10141,"endOffset":10231,"count":3}],"isBlockCoverage":false}]},{"scriptId":"66","url":"node:internal/modules/esm/utils","functions":[{"functionName":"getDefaultConditions","ranges":[{"startOffset":1338,"endOffset":1447,"count":339}],"isBlockCoverage":false},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":1584,"endOffset":1702,"count":338}],"isBlockCoverage":false},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1858,"endOffset":2361,"count":1}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":2437,"endOffset":2805,"count":338}],"isBlockCoverage":false},{"functionName":"defaultInitializeImportMetaForModule","ranges":[{"startOffset":5976,"endOffset":6208,"count":8}],"isBlockCoverage":false},{"functionName":"initializeImportMetaObject","ranges":[{"startOffset":6530,"endOffset":6996,"count":8}],"isBlockCoverage":false},{"functionName":"defaultImportModuleDynamicallyForModule","ranges":[{"startOffset":7416,"endOffset":7674,"count":6}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":9037,"endOffset":10541,"count":6}],"isBlockCoverage":false},{"functionName":"initializeESM","ranges":[{"startOffset":10862,"endOffset":11255,"count":1}],"isBlockCoverage":false},{"functionName":"forceDefaultLoader","ranges":[{"startOffset":11390,"endOffset":11455,"count":1}],"isBlockCoverage":false},{"functionName":"compileSourceTextModule","ranges":[{"startOffset":13044,"endOffset":13517,"count":117}],"isBlockCoverage":false}]},{"scriptId":"67","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1138,"endOffset":1328,"count":1}],"isBlockCoverage":false},{"functionName":"prepareExecution","ranges":[{"startOffset":2546,"endOffset":4712,"count":1}],"isBlockCoverage":false},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":4716,"endOffset":5474,"count":1}],"isBlockCoverage":false},{"functionName":"setupUserModules","ranges":[{"startOffset":5478,"endOffset":6246,"count":1}],"isBlockCoverage":false},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":6250,"endOffset":6308,"count":1}],"isBlockCoverage":false},{"functionName":"patchProcessObject","ranges":[{"startOffset":6744,"endOffset":9165,"count":1}],"isBlockCoverage":false},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":9169,"endOffset":9461,"count":13}],"isBlockCoverage":false},{"functionName":"setupWarningHandler","ranges":[{"startOffset":9465,"endOffset":10003,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9881,"endOffset":9986,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":10082,"endOffset":10423,"count":1}],"isBlockCoverage":false},{"functionName":"setupEventsource","ranges":[{"startOffset":10494,"endOffset":10623,"count":1}],"isBlockCoverage":false},{"functionName":"setupNavigator","ranges":[{"startOffset":10731,"endOffset":11141,"count":1}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":11249,"endOffset":12232,"count":1}],"isBlockCoverage":false},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":11587,"endOffset":11767,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":12077,"endOffset":12178,"count":0}],"isBlockCoverage":false},{"functionName":"setupSQLite","ranges":[{"startOffset":12236,"endOffset":12448,"count":1}],"isBlockCoverage":false},{"functionName":"setupWebStorage","ranges":[{"startOffset":12452,"endOffset":12868,"count":1}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":12872,"endOffset":13404,"count":1}],"isBlockCoverage":false},{"functionName":"setupCustomEvent","ranges":[{"startOffset":13514,"endOffset":13798,"count":1}],"isBlockCoverage":false},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":13802,"endOffset":14035,"count":1}],"isBlockCoverage":false},{"functionName":"initializeReport","ranges":[{"startOffset":14039,"endOffset":14298,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14189,"endOffset":14287,"count":2}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":14302,"endOffset":14538,"count":1}],"isBlockCoverage":false},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":14603,"endOffset":14796,"count":1}],"isBlockCoverage":false},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":14800,"endOffset":15557,"count":1}],"isBlockCoverage":false},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":15118,"endOffset":15275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15473,"endOffset":15547,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":15561,"endOffset":15824,"count":1}],"isBlockCoverage":false},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":15828,"endOffset":16423,"count":1}],"isBlockCoverage":false},{"functionName":"setupNetworkInspection","ranges":[{"startOffset":16427,"endOffset":16748,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDeprecations","ranges":[{"startOffset":16948,"endOffset":18908,"count":1}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":18912,"endOffset":19444,"count":1}],"isBlockCoverage":false},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":19448,"endOffset":19725,"count":1}],"isBlockCoverage":false},{"functionName":"initializePermission","ranges":[{"startOffset":19729,"endOffset":21790,"count":1}],"isBlockCoverage":false},{"functionName":"binding","ranges":[{"startOffset":19898,"endOffset":19987,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21615,"endOffset":21780,"count":6}],"isBlockCoverage":false},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":21794,"endOffset":21918,"count":1}],"isBlockCoverage":false},{"functionName":"initializeESMLoader","ranges":[{"startOffset":21922,"endOffset":22520,"count":1}],"isBlockCoverage":false},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":22524,"endOffset":22727,"count":1}],"isBlockCoverage":false},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":22731,"endOffset":22923,"count":1}],"isBlockCoverage":false},{"functionName":"loadPreloadModules","ranges":[{"startOffset":23036,"endOffset":23395,"count":1}],"isBlockCoverage":false},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":23399,"endOffset":23495,"count":1}],"isBlockCoverage":false}]},{"scriptId":"69","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":745,"endOffset":1878,"count":1}],"isBlockCoverage":false},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":2045,"endOffset":3601,"count":1}],"isBlockCoverage":false},{"functionName":"asyncRunEntryPointWithESMLoader","ranges":[{"startOffset":3681,"endOffset":4435,"count":2}],"isBlockCoverage":false},{"functionName":"runEntryPointWithESMLoader","ranges":[{"startOffset":4829,"endOffset":5249,"count":1}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":6029,"endOffset":7169,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6916,"endOffset":7159,"count":1}],"isBlockCoverage":false}]},{"scriptId":"70","url":"node:internal/dns/utils","functions":[{"functionName":"lazyBinding","ranges":[{"startOffset":613,"endOffset":705,"count":1}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":973,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"validateTries","ranges":[{"startOffset":1128,"endOffset":1267,"count":1}],"isBlockCoverage":false},{"functionName":"ResolverBase","ranges":[{"startOffset":1673,"endOffset":2031,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2037,"endOffset":2176,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDns","ranges":[{"startOffset":5669,"endOffset":6167,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6104,"endOffset":6162,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6448,"endOffset":6736,"count":2}],"isBlockCoverage":false},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6817,"endOffset":7044,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6952,"endOffset":7039,"count":30}],"isBlockCoverage":false},{"functionName":"getDefaultResultOrder","ranges":[{"startOffset":7832,"endOffset":7889,"count":2}],"isBlockCoverage":false},{"functionName":"createResolverClass","ranges":[{"startOffset":7893,"endOffset":9024,"count":2}],"isBlockCoverage":false}]},{"scriptId":"71","url":"node:internal/net","functions":[{"functionName":"isIPv4","ranges":[{"startOffset":1067,"endOffset":1345,"count":4}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1349,"endOffset":1627,"count":4}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1631,"endOffset":1721,"count":4}],"isBlockCoverage":false}]},{"scriptId":"72","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3870,"endOffset":3977,"count":864}],"isBlockCoverage":false}]},{"scriptId":"73","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1404,"count":1}],"isBlockCoverage":false}]},{"scriptId":"74","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13350,"count":1}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":2488,"endOffset":2615,"count":3}],"isBlockCoverage":true},{"functionName":"Script","ranges":[{"startOffset":2662,"endOffset":4161,"count":1},{"startOffset":2767,"endOffset":2815,"count":0},{"startOffset":3326,"endOffset":3391,"count":0},{"startOffset":4014,"endOffset":4085,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":4167,"endOffset":4468,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4474,"endOffset":4869,"count":1},{"startOffset":4692,"endOffset":4730,"count":0},{"startOffset":4732,"endOffset":4806,"count":0}],"isBlockCoverage":true},{"functionName":"runInNewContext","ranges":[{"startOffset":4875,"endOffset":5049,"count":1}],"isBlockCoverage":true},{"functionName":"validateContext","ranges":[{"startOffset":5056,"endOffset":5280,"count":1},{"startOffset":5142,"endOffset":5277,"count":0}],"isBlockCoverage":true},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5284,"endOffset":5992,"count":1},{"startOffset":5489,"endOffset":5556,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5996,"endOffset":7090,"count":2},{"startOffset":6056,"endOffset":6066,"count":0},{"startOffset":6400,"endOffset":6463,"count":0},{"startOffset":6516,"endOffset":6948,"count":0},{"startOffset":6998,"endOffset":7061,"count":0}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":7128,"endOffset":8568,"count":2},{"startOffset":7276,"endOffset":7596,"count":1},{"startOffset":7596,"endOffset":7637,"count":0},{"startOffset":7637,"endOffset":7680,"count":1},{"startOffset":7680,"endOffset":7737,"count":0},{"startOffset":7737,"endOffset":7820,"count":1},{"startOffset":7820,"endOffset":8007,"count":0},{"startOffset":8007,"endOffset":8567,"count":1}],"isBlockCoverage":true},{"functionName":"createScript","ranges":[{"startOffset":8572,"endOffset":8650,"count":1}],"isBlockCoverage":true},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8808,"endOffset":9283,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":9287,"endOffset":9697,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9701,"endOffset":10060,"count":1},{"startOffset":9794,"endOffset":9838,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":10064,"endOffset":10255,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":10259,"endOffset":11896,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":12185,"endOffset":12769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"75","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"76","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36158,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":1608,"endOffset":1741,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1901,"endOffset":2025,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":2193,"endOffset":2318,"count":171}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3122,"endOffset":28681,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":4216,"endOffset":4295,"count":1}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5885,"endOffset":6136,"count":1},{"startOffset":5990,"endOffset":6074,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":6142,"endOffset":6787,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForImport","ranges":[{"startOffset":7425,"endOffset":7680,"count":483}],"isBlockCoverage":true},{"functionName":"getModuleJobForRequireInImportedCJS","ranges":[{"startOffset":8191,"endOffset":8451,"count":0}],"isBlockCoverage":false},{"functionName":"#getJobFromResolveResult","ranges":[{"startOffset":9044,"endOffset":9530,"count":483},{"startOffset":9385,"endOffset":9506,"count":170}],"isBlockCoverage":true},{"functionName":"importSyncForRequire","ranges":[{"startOffset":10077,"endOffset":12087,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobForRequire","ranges":[{"startOffset":12521,"endOffset":15908,"count":0}],"isBlockCoverage":false},{"functionName":"#translate","ranges":[{"startOffset":16490,"endOffset":16799,"count":170},{"startOffset":16653,"endOffset":16718,"count":0}],"isBlockCoverage":true},{"functionName":"loadAndTranslateForRequireInImportedCJS","ranges":[{"startOffset":17226,"endOffset":18170,"count":0}],"isBlockCoverage":false},{"functionName":"loadAndTranslate","ranges":[{"startOffset":18542,"endOffset":18722,"count":170}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":19548,"endOffset":20559,"count":170},{"startOffset":19802,"endOffset":19909,"count":0},{"startOffset":20042,"endOffset":20083,"count":1},{"startOffset":20141,"endOffset":20156,"count":0},{"startOffset":20158,"endOffset":20214,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":21032,"endOffset":21442,"count":7}],"isBlockCoverage":true},{"functionName":"onImport.tracePromise.__proto__","ranges":[{"startOffset":21143,"endOffset":21360,"count":7}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":21513,"endOffset":22069,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":22808,"endOffset":23135,"count":483},{"startOffset":22922,"endOffset":23050,"count":0}],"isBlockCoverage":true},{"functionName":"#cachedDefaultResolve","ranges":[{"startOffset":23507,"endOffset":23963,"count":483},{"startOffset":23761,"endOffset":23797,"count":0}],"isBlockCoverage":true},{"functionName":"#resolveAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":24397,"endOffset":24699,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSync","ranges":[{"startOffset":25425,"endOffset":25608,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":25827,"endOffset":26178,"count":483}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":26502,"endOffset":26740,"count":170},{"startOffset":26560,"endOffset":26623,"count":0}],"isBlockCoverage":true},{"functionName":"#loadAndMaybeBlockOnLoaderThread","ranges":[{"startOffset":27109,"endOffset":27383,"count":0}],"isBlockCoverage":false},{"functionName":"#loadSync","ranges":[{"startOffset":27940,"endOffset":28035,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":28041,"endOffset":28196,"count":170},{"startOffset":28100,"endOffset":28191,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":28202,"endOffset":28544,"count":8},{"startOffset":28271,"endOffset":28357,"count":0}],"isBlockCoverage":true},{"functionName":"forceLoadHooks","ranges":[{"startOffset":28610,"endOffset":28678,"count":1},{"startOffset":28654,"endOffset":28670,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":28767,"endOffset":31430,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":31823,"endOffset":33479,"count":1},{"startOffset":32237,"endOffset":33425,"count":0}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":32314,"endOffset":32816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33140,"endOffset":33228,"count":0}],"isBlockCoverage":false},{"functionName":"getHooksProxy","ranges":[{"startOffset":33599,"endOffset":33782,"count":0}],"isBlockCoverage":false},{"functionName":"getOrInitializeCascadedLoader","ranges":[{"startOffset":34298,"endOffset":34413,"count":15}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":35686,"endOffset":36042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"77","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3991,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1343,"endOffset":1384,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1817,"endOffset":3236,"count":170},{"startOffset":2016,"endOffset":2147,"count":0},{"startOffset":2223,"endOffset":2371,"count":0},{"startOffset":2646,"endOffset":2707,"count":0},{"startOffset":2715,"endOffset":2826,"count":0},{"startOffset":2834,"endOffset":3228,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3477,"endOffset":3911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"78","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4174,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":295,"endOffset":322,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":878,"endOffset":906,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1262,"endOffset":1890,"count":483},{"startOffset":1680,"endOffset":1889,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1804,"endOffset":1870,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1896,"endOffset":2118,"count":966},{"startOffset":2012,"endOffset":2086,"count":84}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2300,"endOffset":2404,"count":483}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2551,"endOffset":2683,"count":483}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":2689,"endOffset":2795,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2936,"endOffset":2964,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3014,"endOffset":3164,"count":483},{"startOffset":3150,"endOffset":3158,"count":313}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3168,"endOffset":3796,"count":170},{"startOffset":3407,"endOffset":3444,"count":0},{"startOffset":3446,"endOffset":3518,"count":0},{"startOffset":3607,"endOffset":3613,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3800,"endOffset":3964,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":3968,"endOffset":4112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"79","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17515,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1143,"endOffset":1170,"count":1}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":1743,"endOffset":1874,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParseSync","ranges":[{"startOffset":2184,"endOffset":2325,"count":1}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":2525,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":2761,"endOffset":3091,"count":117}],"isBlockCoverage":true},{"functionName":"loadCJSModule","ranges":[{"startOffset":3764,"endOffset":5865,"count":0}],"isBlockCoverage":false},{"functionName":"createCJSModuleWrap","ranges":[{"startOffset":6361,"endOffset":7849,"count":21},{"startOffset":6635,"endOffset":6668,"count":0},{"startOffset":6837,"endOffset":6860,"count":3},{"startOffset":6861,"endOffset":6890,"count":18},{"startOffset":6909,"endOffset":6967,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7029,"endOffset":7836,"count":21},{"startOffset":7109,"endOffset":7174,"count":20},{"startOffset":7331,"endOffset":7376,"count":0},{"startOffset":7420,"endOffset":7790,"count":90},{"startOffset":7525,"endOffset":7554,"count":3},{"startOffset":7554,"endOffset":7683,"count":87},{"startOffset":7683,"endOffset":7741,"count":0},{"startOffset":7741,"endOffset":7790,"count":87}],"isBlockCoverage":true},{"functionName":"requireCommonJS","ranges":[{"startOffset":7886,"endOffset":8161,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8327,"endOffset":8446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8623,"endOffset":8823,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":9015,"endOffset":9778,"count":21},{"startOffset":9082,"endOffset":9113,"count":1},{"startOffset":9517,"endOffset":9532,"count":0},{"startOffset":9662,"endOffset":9712,"count":0}],"isBlockCoverage":true},{"functionName":"cjsLoader","ranges":[{"startOffset":9365,"endOffset":9516,"count":20}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":9974,"endOffset":12584,"count":27},{"startOffset":10159,"endOffset":10202,"count":0},{"startOffset":10204,"endOffset":10275,"count":0},{"startOffset":10673,"endOffset":10678,"count":0},{"startOffset":10687,"endOffset":10739,"count":0},{"startOffset":10912,"endOffset":12544,"count":6},{"startOffset":11789,"endOffset":11824,"count":0},{"startOffset":12044,"endOffset":12061,"count":0},{"startOffset":12062,"endOffset":12092,"count":0},{"startOffset":12477,"endOffset":12523,"count":27}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":12712,"endOffset":13129,"count":32},{"startOffset":12997,"endOffset":13051,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":13196,"endOffset":15510,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15579,"endOffset":16705,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16804,"endOffset":17112,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17205,"endOffset":17511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"80","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42331,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2558,"endOffset":3206,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3733,"endOffset":4490,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":5018,"endOffset":6126,"count":29},{"startOffset":5118,"endOffset":5137,"count":0},{"startOffset":5220,"endOffset":5231,"count":28},{"startOffset":5231,"endOffset":5287,"count":1},{"startOffset":5287,"endOffset":5658,"count":0},{"startOffset":5658,"endOffset":6123,"count":1},{"startOffset":5701,"endOffset":6123,"count":0}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7304,"endOffset":8038,"count":29},{"startOffset":7509,"endOffset":7520,"count":0},{"startOffset":7725,"endOffset":7758,"count":28},{"startOffset":7751,"endOffset":7758,"count":0},{"startOffset":7759,"endOffset":7763,"count":1}],"isBlockCoverage":true},{"functionName":"finalizeResolution","ranges":[{"startOffset":8836,"endOffset":10341,"count":250},{"startOffset":8973,"endOffset":9130,"count":0},{"startOffset":9197,"endOffset":9328,"count":0},{"startOffset":9469,"endOffset":9501,"count":0},{"startOffset":9574,"endOffset":9668,"count":0},{"startOffset":9691,"endOffset":9986,"count":0},{"startOffset":10240,"endOffset":10245,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":10764,"endOffset":10979,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11384,"endOffset":11583,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12232,"endOffset":12621,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":13088,"endOffset":13476,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":14854,"endOffset":17685,"count":104},{"startOffset":15035,"endOffset":15046,"count":0},{"startOffset":15047,"endOffset":15083,"count":0},{"startOffset":15085,"endOffset":15171,"count":0},{"startOffset":15223,"endOffset":15793,"count":0},{"startOffset":15887,"endOffset":16511,"count":0},{"startOffset":16736,"endOffset":16822,"count":0},{"startOffset":16868,"endOffset":17684,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15561,"endOffset":15574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16100,"endOffset":16113,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16249,"endOffset":16262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17006,"endOffset":17019,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17250,"endOffset":17263,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17614,"endOffset":17627,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":17884,"endOffset":18032,"count":269},{"startOffset":17982,"endOffset":18028,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":18842,"endOffset":21126,"count":221},{"startOffset":19037,"endOffset":19195,"count":104},{"startOffset":19195,"endOffset":21006,"count":117},{"startOffset":19227,"endOffset":20074,"count":15},{"startOffset":19259,"endOffset":19287,"count":0},{"startOffset":19617,"endOffset":19771,"count":0},{"startOffset":19812,"endOffset":19841,"count":0},{"startOffset":19877,"endOffset":19937,"count":0},{"startOffset":19973,"endOffset":20074,"count":0},{"startOffset":20074,"endOffset":21006,"count":102},{"startOffset":20229,"endOffset":20464,"count":269},{"startOffset":20289,"endOffset":20457,"count":0},{"startOffset":20508,"endOffset":20927,"count":217},{"startOffset":20567,"endOffset":20589,"count":179},{"startOffset":20591,"endOffset":20920,"count":102},{"startOffset":20867,"endOffset":20880,"count":0},{"startOffset":20927,"endOffset":21006,"count":0},{"startOffset":21006,"endOffset":21125,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":21418,"endOffset":22382,"count":104},{"startOffset":21525,"endOffset":21549,"count":96},{"startOffset":21551,"endOffset":21567,"count":8},{"startOffset":21567,"endOffset":21622,"count":96},{"startOffset":21624,"endOffset":21641,"count":0},{"startOffset":21641,"endOffset":21786,"count":96},{"startOffset":21786,"endOffset":22349,"count":369},{"startOffset":21899,"endOffset":21958,"count":96},{"startOffset":21958,"endOffset":22344,"count":273},{"startOffset":22014,"endOffset":22344,"count":0},{"startOffset":22349,"endOffset":22381,"count":96}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":22890,"endOffset":25536,"count":104},{"startOffset":23097,"endOffset":23136,"count":22},{"startOffset":23549,"endOffset":23625,"count":0},{"startOffset":23659,"endOffset":25535,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":25919,"endOffset":26486,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":26984,"endOffset":29517,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":29689,"endOffset":30779,"count":129},{"startOffset":29884,"endOffset":30120,"count":31},{"startOffset":29966,"endOffset":30007,"count":0},{"startOffset":30168,"endOffset":30184,"count":109},{"startOffset":30185,"endOffset":30237,"count":20},{"startOffset":30414,"endOffset":30451,"count":0},{"startOffset":30480,"endOffset":30602,"count":0},{"startOffset":30660,"endOffset":30664,"count":109},{"startOffset":30665,"endOffset":30719,"count":20}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":31112,"endOffset":33189,"count":217},{"startOffset":31278,"endOffset":31326,"count":88},{"startOffset":31326,"endOffset":31818,"count":129},{"startOffset":31623,"endOffset":31813,"count":1},{"startOffset":31818,"endOffset":31995,"count":128},{"startOffset":31995,"endOffset":33057,"count":568},{"startOffset":32224,"endOffset":32508,"count":440},{"startOffset":32303,"endOffset":32341,"count":121},{"startOffset":32342,"endOffset":32368,"count":319},{"startOffset":32508,"endOffset":32693,"count":128},{"startOffset":32693,"endOffset":32813,"count":99},{"startOffset":32813,"endOffset":32962,"count":29},{"startOffset":32962,"endOffset":33057,"count":0},{"startOffset":33057,"endOffset":33188,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":33306,"endOffset":33418,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":33543,"endOffset":33830,"count":821},{"startOffset":33614,"endOffset":33810,"count":232},{"startOffset":33673,"endOffset":33689,"count":216},{"startOffset":33689,"endOffset":33805,"count":16},{"startOffset":33810,"endOffset":33829,"count":589}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":33985,"endOffset":34180,"count":821},{"startOffset":34072,"endOffset":34089,"count":0},{"startOffset":34119,"endOffset":34135,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":34552,"endOffset":35868,"count":338},{"startOffset":34745,"endOffset":34765,"count":0},{"startOffset":34985,"endOffset":35217,"count":116},{"startOffset":35049,"endOffset":35212,"count":0},{"startOffset":35217,"endOffset":35734,"count":222},{"startOffset":35273,"endOffset":35347,"count":0},{"startOffset":35411,"endOffset":35729,"count":217},{"startOffset":35445,"endOffset":35500,"count":0},{"startOffset":35502,"endOffset":35659,"count":0},{"startOffset":35773,"endOffset":35801,"count":88},{"startOffset":35801,"endOffset":35867,"count":250}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":36076,"endOffset":37949,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":38095,"endOffset":38375,"count":483},{"startOffset":38173,"endOffset":38226,"count":1},{"startOffset":38226,"endOffset":38264,"count":482},{"startOffset":38264,"endOffset":38284,"count":0},{"startOffset":38286,"endOffset":38372,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":38891,"endOffset":41127,"count":483},{"startOffset":39069,"endOffset":39119,"count":482},{"startOffset":39206,"endOffset":39264,"count":116},{"startOffset":39264,"endOffset":39311,"count":367},{"startOffset":39337,"endOffset":39544,"count":266},{"startOffset":39478,"endOffset":39539,"count":0},{"startOffset":39569,"endOffset":39579,"count":0},{"startOffset":39610,"endOffset":39657,"count":145},{"startOffset":39657,"endOffset":39720,"count":338},{"startOffset":39720,"endOffset":40237,"count":1},{"startOffset":40189,"endOffset":40232,"count":0},{"startOffset":40237,"endOffset":40402,"count":338},{"startOffset":40402,"endOffset":40424,"count":1},{"startOffset":40425,"endOffset":40443,"count":337},{"startOffset":40458,"endOffset":40892,"count":0},{"startOffset":40892,"endOffset":41126,"count":338}],"isBlockCoverage":true},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":41398,"endOffset":42023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"81","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9680,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":881,"endOffset":912,"count":88}],"isBlockCoverage":true},{"functionName":"detectModuleFormat","ranges":[{"startOffset":1088,"endOffset":1333,"count":81},{"startOffset":1147,"endOffset":1191,"count":62},{"startOffset":1176,"endOffset":1188,"count":0},{"startOffset":1191,"endOffset":1214,"count":19},{"startOffset":1214,"endOffset":1236,"count":0},{"startOffset":1236,"endOffset":1306,"count":19},{"startOffset":1306,"endOffset":1316,"count":0},{"startOffset":1317,"endOffset":1329,"count":19}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1400,"endOffset":1623,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1910,"endOffset":2281,"count":298},{"startOffset":2012,"endOffset":2264,"count":962},{"startOffset":2076,"endOffset":2112,"count":0},{"startOffset":2122,"endOffset":2252,"count":298},{"startOffset":2211,"endOffset":2215,"count":0},{"startOffset":2264,"endOffset":2280,"count":0}],"isBlockCoverage":true},{"functionName":"underNodeModules","ranges":[{"startOffset":2519,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"warnTypelessPackageJsonFile","ranges":[{"startOffset":2790,"endOffset":3428,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":3577,"endOffset":8788,"count":298},{"startOffset":3750,"endOffset":5363,"count":230},{"startOffset":3885,"endOffset":3920,"count":149},{"startOffset":3920,"endOffset":4057,"count":81},{"startOffset":4057,"endOffset":4420,"count":0},{"startOffset":4428,"endOffset":4553,"count":0},{"startOffset":4561,"endOffset":5351,"count":81},{"startOffset":5014,"endOffset":5033,"count":0},{"startOffset":5035,"endOffset":5318,"count":0},{"startOffset":5363,"endOffset":5385,"count":68},{"startOffset":5385,"endOffset":5432,"count":0},{"startOffset":5434,"endOffset":7434,"count":0},{"startOffset":7434,"endOffset":7456,"count":68},{"startOffset":7456,"endOffset":8487,"count":0},{"startOffset":8487,"endOffset":8566,"count":68},{"startOffset":8566,"endOffset":8787,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":8940,"endOffset":9181,"count":367},{"startOffset":9096,"endOffset":9120,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":9333,"endOffset":9562,"count":19},{"startOffset":9476,"endOffset":9500,"count":0}],"isBlockCoverage":true}]},{"scriptId":"82","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2016,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":875,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1601,"endOffset":1915,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7289,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":1093,"endOffset":1768,"count":136},{"startOffset":1370,"endOffset":1713,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceSync","ranges":[{"startOffset":1958,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"defaultLoad","ranges":[{"startOffset":2666,"endOffset":4528,"count":170},{"startOffset":2858,"endOffset":2893,"count":0},{"startOffset":2894,"endOffset":2926,"count":0},{"startOffset":2928,"endOffset":3143,"count":0},{"startOffset":3273,"endOffset":3326,"count":32},{"startOffset":3326,"endOffset":3952,"count":138},{"startOffset":3358,"endOffset":3385,"count":2},{"startOffset":3387,"endOffset":3952,"count":136},{"startOffset":3573,"endOffset":3947,"count":19},{"startOffset":4114,"endOffset":4164,"count":21},{"startOffset":4166,"endOffset":4203,"count":0},{"startOffset":4258,"endOffset":4334,"count":0},{"startOffset":4335,"endOffset":4366,"count":0},{"startOffset":4368,"endOffset":4439,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoadSync","ranges":[{"startOffset":5061,"endOffset":5925,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":6074,"endOffset":6541,"count":170},{"startOffset":6281,"endOffset":6309,"count":32},{"startOffset":6310,"endOffset":6338,"count":32},{"startOffset":6339,"endOffset":6415,"count":0},{"startOffset":6421,"endOffset":6538,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownModuleFormat","ranges":[{"startOffset":6929,"endOffset":7176,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"node:internal/data_url","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10529,"count":1}],"isBlockCoverage":false},{"functionName":"lazyEncoder","ranges":[{"startOffset":407,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"dataURLProcessor","ranges":[{"startOffset":773,"endOffset":3973,"count":0}],"isBlockCoverage":false},{"functionName":"URLSerializer","ranges":[{"startOffset":4101,"endOffset":4520,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePointsFast","ranges":[{"startOffset":4721,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"stringPercentDecode","ranges":[{"startOffset":5196,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"isHexCharByte","ranges":[{"startOffset":5453,"endOffset":5614,"count":0}],"isBlockCoverage":false},{"functionName":"hexByteToNumber","ranges":[{"startOffset":5653,"endOffset":5866,"count":0}],"isBlockCoverage":false},{"functionName":"percentDecode","ranges":[{"startOffset":5952,"endOffset":7267,"count":0}],"isBlockCoverage":false},{"functionName":"forgivingBase64","ranges":[{"startOffset":7359,"endOffset":8528,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIWhitespace","ranges":[{"startOffset":8624,"endOffset":8777,"count":0}],"isBlockCoverage":false},{"functionName":"removeASCIIWhitespace","ranges":[{"startOffset":8972,"endOffset":9111,"count":0}],"isBlockCoverage":false},{"functionName":"removeChars","ranges":[{"startOffset":9261,"endOffset":9697,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicDecode","ranges":[{"startOffset":9821,"endOffset":10480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11560,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":611,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":906,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2688,"endOffset":3121,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3127,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3365,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3632,"endOffset":9504,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9997,"endOffset":11344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34679,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3350,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3510,"endOffset":3595,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3626,"endOffset":3676,"count":1}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":3967,"endOffset":4100,"count":79}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4142,"endOffset":10513,"count":421}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":4228,"endOffset":4454,"count":421},{"startOffset":4387,"endOffset":4391,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":4460,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":4525,"endOffset":4563,"count":719}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":4569,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":4659,"endOffset":4717,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":4723,"endOffset":4789,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":4795,"endOffset":4849,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":4855,"endOffset":4901,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":4907,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":5024,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":5113,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":5188,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":5342,"endOffset":5404,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":5410,"endOffset":5476,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":5482,"endOffset":5558,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5564,"endOffset":5677,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":5683,"endOffset":5768,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":5774,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5871,"endOffset":6694,"count":421},{"startOffset":5906,"endOffset":5946,"count":0},{"startOffset":5979,"endOffset":6022,"count":0},{"startOffset":6257,"endOffset":6629,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6197,"endOffset":6239,"count":421}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":6344,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6462,"endOffset":6611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6701,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":6967,"endOffset":8715,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":9028,"endOffset":9182,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":9501,"endOffset":9658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9664,"endOffset":10079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10085,"endOffset":10140,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10146,"endOffset":10236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10242,"endOffset":10277,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10283,"endOffset":10510,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":10517,"endOffset":10899,"count":421}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10631,"endOffset":10690,"count":421}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10677,"endOffset":10689,"count":421}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10697,"endOffset":10889,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10903,"endOffset":11196,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":11200,"endOffset":11678,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":11682,"endOffset":11805,"count":1561},{"startOffset":11727,"endOffset":11736,"count":0},{"startOffset":11743,"endOffset":11802,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":11809,"endOffset":12984,"count":127},{"startOffset":11934,"endOffset":12471,"count":0},{"startOffset":12605,"endOffset":12612,"count":0}],"isBlockCoverage":true},{"functionName":"readFileHandle","ranges":[{"startOffset":12988,"endOffset":15478,"count":294},{"startOffset":13143,"endOffset":13173,"count":156},{"startOffset":13543,"endOffset":13581,"count":156},{"startOffset":13582,"endOffset":13588,"count":138},{"startOffset":13616,"endOffset":13666,"count":0},{"startOffset":13702,"endOffset":13740,"count":0},{"startOffset":13971,"endOffset":15475,"count":298},{"startOffset":14024,"endOffset":14098,"count":6},{"startOffset":14288,"endOffset":14292,"count":0},{"startOffset":14381,"endOffset":14449,"count":4},{"startOffset":14438,"endOffset":14448,"count":0},{"startOffset":14451,"endOffset":15033,"count":294},{"startOffset":14546,"endOffset":14557,"count":2},{"startOffset":14558,"endOffset":14569,"count":292},{"startOffset":14616,"endOffset":14678,"count":0},{"startOffset":14703,"endOffset":14887,"count":138},{"startOffset":14725,"endOffset":14739,"count":0},{"startOffset":14741,"endOffset":14854,"count":0},{"startOffset":14887,"endOffset":14966,"count":156},{"startOffset":14966,"endOffset":15033,"count":0},{"startOffset":15033,"endOffset":15124,"count":4},{"startOffset":15125,"endOffset":15140,"count":0},{"startOffset":15161,"endOffset":15213,"count":0},{"startOffset":15213,"endOffset":15470,"count":4},{"startOffset":15270,"endOffset":15470,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":15635,"endOffset":15834,"count":60}],"isBlockCoverage":true},{"functionName":"cp","ranges":[{"startOffset":15838,"endOffset":16054,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":16058,"endOffset":16333,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":16457,"endOffset":16798,"count":421}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":16802,"endOffset":18355,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":18359,"endOffset":18735,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18739,"endOffset":20139,"count":127},{"startOffset":18851,"endOffset":18903,"count":0},{"startOffset":19012,"endOffset":19168,"count":0},{"startOffset":19196,"endOffset":19223,"count":0},{"startOffset":19327,"endOffset":19363,"count":0},{"startOffset":19737,"endOffset":19741,"count":0},{"startOffset":19802,"endOffset":20082,"count":0}],"isBlockCoverage":true},{"functionName":"writev","ranges":[{"startOffset":20143,"endOffset":20624,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":20628,"endOffset":20916,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":20920,"endOffset":21056,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":21060,"endOffset":21307,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":21311,"endOffset":21488,"count":2}],"isBlockCoverage":true},{"functionName":"rmdir","ranges":[{"startOffset":21492,"endOffset":21929,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":21933,"endOffset":22108,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":22112,"endOffset":22279,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":22283,"endOffset":22817,"count":8},{"startOffset":22388,"endOffset":22428,"count":0},{"startOffset":22498,"endOffset":22513,"count":0}],"isBlockCoverage":true},{"functionName":"readdirRecursive","ranges":[{"startOffset":22821,"endOffset":24867,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":24871,"endOffset":25372,"count":1},{"startOffset":25005,"endOffset":25056,"count":0},{"startOffset":25307,"endOffset":25354,"count":0}],"isBlockCoverage":true},{"functionName":"readlink","ranges":[{"startOffset":25376,"endOffset":25648,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":25652,"endOffset":26930,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":26934,"endOffset":27193,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":27197,"endOffset":27467,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":27471,"endOffset":27739,"count":61},{"startOffset":27697,"endOffset":27738,"count":40}],"isBlockCoverage":true},{"functionName":"statfs","ranges":[{"startOffset":27743,"endOffset":27998,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":28002,"endOffset":28311,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":28315,"endOffset":28495,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":28499,"endOffset":28719,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":28723,"endOffset":28968,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":28972,"endOffset":29206,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":29210,"endOffset":29522,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":29526,"endOffset":29811,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":29815,"endOffset":30125,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":30129,"endOffset":30423,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":30427,"endOffset":30714,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":30718,"endOffset":30998,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":31002,"endOffset":31247,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":31251,"endOffset":31570,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":31574,"endOffset":32479,"count":127},{"startOffset":31769,"endOffset":31775,"count":0},{"startOffset":31808,"endOffset":31816,"count":0},{"startOffset":32030,"endOffset":32039,"count":0},{"startOffset":32129,"endOffset":32198,"count":0},{"startOffset":32382,"endOffset":32430,"count":0}],"isBlockCoverage":true},{"functionName":"isCustomIterable","ranges":[{"startOffset":32483,"endOffset":32599,"count":254},{"startOffset":32569,"endOffset":32595,"count":127}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":32603,"endOffset":32849,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":32853,"endOffset":33208,"count":294},{"startOffset":32972,"endOffset":32978,"count":0},{"startOffset":33022,"endOffset":33059,"count":0}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":33212,"endOffset":33891,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33920,"endOffset":33958,"count":0}],"isBlockCoverage":false},{"functionName":"glob","ranges":[{"startOffset":33962,"endOffset":34114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7352,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":727,"endOffset":6296,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":6484,"endOffset":7060,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":7064,"endOffset":7288,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5307,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2236,"endOffset":2494,"count":158},{"startOffset":2338,"endOffset":2475,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2713,"endOffset":2916,"count":158}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3248,"endOffset":3644,"count":1},{"startOffset":3307,"endOffset":3318,"count":0},{"startOffset":3356,"endOffset":3509,"count":0},{"startOffset":3540,"endOffset":3596,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":3930,"endOffset":4128,"count":2},{"startOffset":3998,"endOffset":4020,"count":0},{"startOffset":4075,"endOffset":4110,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":4348,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4654,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4969,"endOffset":5034,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5133,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11649,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1486,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1540,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1902,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2666,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3759,"endOffset":3767,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":4019,"endOffset":4310,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4402,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4877,"endOffset":5166,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5201,"endOffset":5457,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5464,"endOffset":6464,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":7011,"endOffset":7954,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":8177,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8312,"endOffset":8660,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8691,"endOffset":8763,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8796,"endOffset":8870,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8875,"endOffset":8929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9159,"endOffset":9195,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9200,"endOffset":9241,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":9282,"endOffset":11507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"90","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7491,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":747,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":908,"endOffset":7431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40457,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3967,"endOffset":9659,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9907,"endOffset":10009,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":10013,"endOffset":10114,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10230,"endOffset":10283,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10383,"endOffset":10428,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10434,"endOffset":10633,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10779,"endOffset":11041,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11047,"endOffset":11366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11372,"endOffset":11623,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11629,"endOffset":11718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11724,"endOffset":11898,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11904,"endOffset":12107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12113,"endOffset":13325,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13331,"endOffset":14374,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14464,"endOffset":14643,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14730,"endOffset":14867,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14965,"endOffset":15107,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15392,"endOffset":15558,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15564,"endOffset":17343,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17349,"endOffset":18042,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18048,"endOffset":18460,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18466,"endOffset":20743,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20749,"endOffset":21222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21228,"endOffset":21492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21498,"endOffset":21992,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21998,"endOffset":22493,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22499,"endOffset":23281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23287,"endOffset":23724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23730,"endOffset":24015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24021,"endOffset":24285,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24291,"endOffset":24557,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24563,"endOffset":24723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24729,"endOffset":25423,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":25429,"endOffset":25584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25590,"endOffset":25750,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25756,"endOffset":25948,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25954,"endOffset":26275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26281,"endOffset":26602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27046,"endOffset":27701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27707,"endOffset":28436,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28514,"endOffset":29485,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":29672,"endOffset":29845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29968,"endOffset":30548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30588,"endOffset":39126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39445,"endOffset":39836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12765,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":383,"endOffset":585,"count":4},{"startOffset":547,"endOffset":562,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":976,"endOffset":1247,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1251,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2278,"endOffset":12197,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":12230,"endOffset":12642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2886,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":492,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1270,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1963,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2462,"endOffset":2796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14368,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":483,"endOffset":510,"count":1}],"isBlockCoverage":true},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":1235,"endOffset":1370,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJobBase","ranges":[{"startOffset":1400,"endOffset":1593,"count":170}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1751,"endOffset":11103,"count":170}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":2473,"endOffset":3451,"count":170},{"startOffset":2827,"endOffset":2986,"count":0}],"isBlockCoverage":true},{"functionName":"_link","ranges":[{"startOffset":3595,"endOffset":5257,"count":170},{"startOffset":4596,"endOffset":5178,"count":476}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4858,"endOffset":5013,"count":476}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":5263,"endOffset":5413,"count":7}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":5419,"endOffset":9233,"count":7},{"startOffset":5967,"endOffset":6148,"count":0},{"startOffset":6208,"endOffset":8979,"count":0},{"startOffset":9028,"endOffset":9228,"count":308}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":5520,"endOffset":5862,"count":758},{"startOffset":5657,"endOffset":5684,"count":450},{"startOffset":5684,"endOffset":5861,"count":308}],"isBlockCoverage":true},{"functionName":"runSync","ranges":[{"startOffset":9239,"endOffset":9689,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":9695,"endOffset":11100,"count":7},{"startOffset":9783,"endOffset":9859,"count":1},{"startOffset":10034,"endOffset":11041,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11732,"endOffset":14242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/vitest.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51,"count":1}],"isBlockCoverage":true}]},{"scriptId":"96","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/cli-wrapper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3510,"count":1}],"isBlockCoverage":true},{"functionName":"main","ranges":[{"startOffset":757,"endOffset":2479,"count":1},{"startOffset":889,"endOffset":944,"count":0},{"startOffset":994,"endOffset":1355,"count":2},{"startOffset":1089,"endOffset":1155,"count":0},{"startOffset":1231,"endOffset":1291,"count":0},{"startOffset":1293,"endOffset":1349,"count":0},{"startOffset":1427,"endOffset":1827,"count":0},{"startOffset":1867,"endOffset":2478,"count":0}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":2480,"endOffset":3509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/picocolors/picocolors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2663,"count":1},{"startOffset":16,"endOffset":21,"count":0},{"startOffset":37,"endOffset":42,"count":0},{"startOffset":56,"endOffset":61,"count":0},{"startOffset":212,"endOffset":262,"count":0},{"startOffset":263,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"formatter","ranges":[{"startOffset":293,"endOffset":511,"count":41}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":327,"endOffset":511,"count":69995},{"startOffset":424,"endOffset":484,"count":32},{"startOffset":485,"endOffset":508,"count":69963}],"isBlockCoverage":true},{"functionName":"replaceClose","ranges":[{"startOffset":532,"endOffset":791,"count":32},{"startOffset":602,"endOffset":732,"count":64}],"isBlockCoverage":true},{"functionName":"createColors","ranges":[{"startOffset":812,"endOffset":2586,"count":1},{"startOffset":875,"endOffset":889,"count":0}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":877,"endOffset":889,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"node:internal/deps/cjs-module-lexer/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55157,"count":1}],"isBlockCoverage":false},{"functionName":"resetState","ranges":[{"startOffset":303,"endOffset":761,"count":54}],"isBlockCoverage":true},{"functionName":"parseCJS","ranges":[{"startOffset":850,"endOffset":1334,"count":27},{"startOffset":951,"endOffset":1121,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1172,"endOffset":1226,"count":90}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262,"endOffset":1292,"count":6}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":1338,"endOffset":2115,"count":152},{"startOffset":1384,"endOffset":1402,"count":137},{"startOffset":1404,"endOffset":2080,"count":61},{"startOffset":1570,"endOffset":2031,"count":588},{"startOffset":1739,"endOffset":2022,"count":0},{"startOffset":2067,"endOffset":2075,"count":0},{"startOffset":2080,"endOffset":2112,"count":91}],"isBlockCoverage":true},{"functionName":"parseSource","ranges":[{"startOffset":2119,"endOffset":8029,"count":27},{"startOffset":2291,"endOffset":2321,"count":0},{"startOffset":2328,"endOffset":2532,"count":0},{"startOffset":2558,"endOffset":7876,"count":609500},{"startOffset":2615,"endOffset":2635,"count":477495},{"startOffset":2626,"endOffset":2635,"count":25055},{"startOffset":2644,"endOffset":2653,"count":157060},{"startOffset":2653,"endOffset":2687,"count":452440},{"startOffset":2687,"endOffset":4222,"count":16925},{"startOffset":2719,"endOffset":2897,"count":727},{"startOffset":2785,"endOffset":2805,"count":0},{"startOffset":2820,"endOffset":2845,"count":0},{"startOffset":2907,"endOffset":3133,"count":921},{"startOffset":2994,"endOffset":3019,"count":47},{"startOffset":3034,"endOffset":3081,"count":47},{"startOffset":3143,"endOffset":4206,"count":106},{"startOffset":3225,"endOffset":3289,"count":0},{"startOffset":3291,"endOffset":3677,"count":0},{"startOffset":3736,"endOffset":3800,"count":2},{"startOffset":3758,"endOffset":3794,"count":0},{"startOffset":3802,"endOffset":4154,"count":2},{"startOffset":3891,"endOffset":3900,"count":0},{"startOffset":3954,"endOffset":4141,"count":1},{"startOffset":4098,"endOffset":4126,"count":0},{"startOffset":4215,"endOffset":4222,"count":15171},{"startOffset":4222,"endOffset":4251,"count":450686},{"startOffset":4251,"endOffset":4548,"count":43238},{"startOffset":4315,"endOffset":4335,"count":158},{"startOffset":4337,"endOffset":4532,"count":116},{"startOffset":4408,"endOffset":4440,"count":93},{"startOffset":4440,"endOffset":4521,"count":23},{"startOffset":4496,"endOffset":4521,"count":1},{"startOffset":4556,"endOffset":4731,"count":12295},{"startOffset":4601,"endOffset":4638,"count":3759},{"startOffset":4639,"endOffset":4678,"count":108},{"startOffset":4691,"endOffset":4715,"count":38},{"startOffset":4739,"endOffset":4885,"count":6773},{"startOffset":4803,"endOffset":4823,"count":57},{"startOffset":4836,"endOffset":4869,"count":50},{"startOffset":4893,"endOffset":5054,"count":1034},{"startOffset":4956,"endOffset":4976,"count":179},{"startOffset":4989,"endOffset":5038,"count":83},{"startOffset":5062,"endOffset":5152,"count":11236},{"startOffset":5160,"endOffset":5310,"count":11237},{"startOffset":5220,"endOffset":5267,"count":0},{"startOffset":5318,"endOffset":5507,"count":4818},{"startOffset":5515,"endOffset":5949,"count":5155},{"startOffset":5576,"endOffset":5621,"count":0},{"startOffset":5671,"endOffset":5776,"count":337},{"startOffset":5776,"endOffset":5933,"count":4818},{"startOffset":5829,"endOffset":5862,"count":3},{"startOffset":5877,"endOffset":5922,"count":0},{"startOffset":5957,"endOffset":6029,"count":160},{"startOffset":6037,"endOffset":6050,"count":570},{"startOffset":6058,"endOffset":6115,"count":3439},{"startOffset":6123,"endOffset":7775,"count":601},{"startOffset":6226,"endOffset":6321,"count":401},{"startOffset":6321,"endOffset":7750,"count":200},{"startOffset":6361,"endOffset":6457,"count":115},{"startOffset":6457,"endOffset":7750,"count":85},{"startOffset":6877,"endOffset":7021,"count":75},{"startOffset":6919,"endOffset":7020,"count":0},{"startOffset":7022,"endOffset":7115,"count":75},{"startOffset":7064,"endOffset":7109,"count":0},{"startOffset":7116,"endOffset":7194,"count":75},{"startOffset":7143,"endOffset":7188,"count":0},{"startOffset":7195,"endOffset":7287,"count":10},{"startOffset":7235,"endOffset":7287,"count":6},{"startOffset":7288,"endOffset":7428,"count":10},{"startOffset":7329,"endOffset":7428,"count":0},{"startOffset":7429,"endOffset":7492,"count":10},{"startOffset":7469,"endOffset":7492,"count":0},{"startOffset":7493,"endOffset":7544,"count":10},{"startOffset":7545,"endOffset":7573,"count":7},{"startOffset":7575,"endOffset":7666,"count":78},{"startOffset":7666,"endOffset":7739,"count":7},{"startOffset":7750,"endOffset":7775,"count":85},{"startOffset":7783,"endOffset":7839,"count":298},{"startOffset":7846,"endOffset":7876,"count":450170},{"startOffset":7913,"endOffset":7955,"count":0},{"startOffset":7986,"endOffset":8026,"count":0}],"isBlockCoverage":true},{"functionName":"tryBacktrackAddStarExportBinding","ranges":[{"startOffset":8033,"endOffset":9292,"count":47},{"startOffset":8421,"endOffset":8433,"count":302},{"startOffset":8435,"endOffset":8658,"count":302},{"startOffset":8480,"endOffset":8487,"count":0},{"startOffset":8544,"endOffset":8550,"count":47},{"startOffset":8550,"endOffset":8658,"count":255},{"startOffset":8684,"endOffset":8717,"count":38},{"startOffset":8724,"endOffset":9284,"count":32},{"startOffset":8922,"endOffset":9026,"count":15},{"startOffset":9001,"endOffset":9008,"count":0},{"startOffset":9036,"endOffset":9180,"count":17},{"startOffset":9155,"endOffset":9162,"count":0},{"startOffset":9190,"endOffset":9206,"count":0}],"isBlockCoverage":true},{"functionName":"tryParseObjectHasOwnProperty","ranges":[{"startOffset":9380,"endOffset":10585,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseObjectDefineOrKeys","ranges":[{"startOffset":10589,"endOffset":28502,"count":83},{"startOffset":10731,"endOffset":28479,"count":78},{"startOffset":10801,"endOffset":10847,"count":16},{"startOffset":10849,"endOffset":14604,"count":16},{"startOffset":11004,"endOffset":11010,"count":1},{"startOffset":11010,"endOffset":11111,"count":15},{"startOffset":11111,"endOffset":11117,"count":10},{"startOffset":11117,"endOffset":11182,"count":5},{"startOffset":11182,"endOffset":11188,"count":0},{"startOffset":11188,"endOffset":11268,"count":5},{"startOffset":11268,"endOffset":11280,"count":1},{"startOffset":11287,"endOffset":11293,"count":0},{"startOffset":11293,"endOffset":11466,"count":5},{"startOffset":11466,"endOffset":11472,"count":0},{"startOffset":11472,"endOffset":11554,"count":5},{"startOffset":11554,"endOffset":11560,"count":0},{"startOffset":11560,"endOffset":11642,"count":5},{"startOffset":11642,"endOffset":12093,"count":0},{"startOffset":12093,"endOffset":12377,"count":5},{"startOffset":12178,"endOffset":12184,"count":0},{"startOffset":12274,"endOffset":12280,"count":0},{"startOffset":12377,"endOffset":14527,"count":0},{"startOffset":14527,"endOffset":14545,"count":11},{"startOffset":14545,"endOffset":14597,"count":0},{"startOffset":14604,"endOffset":28474,"count":62},{"startOffset":14624,"endOffset":14637,"count":12},{"startOffset":14643,"endOffset":14679,"count":5},{"startOffset":14681,"endOffset":28474,"count":5},{"startOffset":14818,"endOffset":14824,"count":0},{"startOffset":14935,"endOffset":14941,"count":0},{"startOffset":15055,"endOffset":15061,"count":3},{"startOffset":15061,"endOffset":15162,"count":2},{"startOffset":15162,"endOffset":15283,"count":0},{"startOffset":15285,"endOffset":15533,"count":0},{"startOffset":15535,"endOffset":16083,"count":0},{"startOffset":16090,"endOffset":28467,"count":0},{"startOffset":28479,"endOffset":28501,"count":78}],"isBlockCoverage":true},{"functionName":"readExportsOrModuleDotExports","ranges":[{"startOffset":28506,"endOffset":28978,"count":15},{"startOffset":28601,"endOffset":28639,"count":0},{"startOffset":28641,"endOffset":28815,"count":0},{"startOffset":28839,"endOffset":28878,"count":9},{"startOffset":28880,"endOffset":28919,"count":5},{"startOffset":28919,"endOffset":28975,"count":10}],"isBlockCoverage":true},{"functionName":"tryParseModuleExportsDotAssign","ranges":[{"startOffset":28982,"endOffset":29327,"count":50},{"startOffset":29126,"endOffset":29304,"count":41},{"startOffset":29304,"endOffset":29326,"count":9}],"isBlockCoverage":true},{"functionName":"tryParseExportsDotAssign","ranges":[{"startOffset":29331,"endOffset":30758,"count":134},{"startOffset":29495,"endOffset":29833,"count":96},{"startOffset":29707,"endOffset":29803,"count":75},{"startOffset":29812,"endOffset":29833,"count":21},{"startOffset":29863,"endOffset":30313,"count":0},{"startOffset":30344,"endOffset":30730,"count":25},{"startOffset":30379,"endOffset":30723,"count":24},{"startOffset":30421,"endOffset":30443,"count":3},{"startOffset":30545,"endOffset":30613,"count":5},{"startOffset":30613,"endOffset":30684,"count":19},{"startOffset":30684,"endOffset":30714,"count":9},{"startOffset":30735,"endOffset":30757,"count":54}],"isBlockCoverage":true},{"functionName":"tryParseRequire","ranges":[{"startOffset":30762,"endOffset":31771,"count":930},{"startOffset":30895,"endOffset":31751,"count":58},{"startOffset":30972,"endOffset":31724,"count":56},{"startOffset":31081,"endOffset":31093,"count":14},{"startOffset":31279,"endOffset":31405,"count":9},{"startOffset":31419,"endOffset":31543,"count":0},{"startOffset":31557,"endOffset":31684,"count":47},{"startOffset":31724,"endOffset":31751,"count":2},{"startOffset":31751,"endOffset":31770,"count":874}],"isBlockCoverage":true},{"functionName":"tryParseLiteralExports","ranges":[{"startOffset":31775,"endOffset":33388,"count":5},{"startOffset":31865,"endOffset":33385,"count":16},{"startOffset":32041,"endOffset":32297,"count":0},{"startOffset":32365,"endOffset":33262,"count":0},{"startOffset":33298,"endOffset":33305,"count":1},{"startOffset":33305,"endOffset":33333,"count":15},{"startOffset":33333,"endOffset":33380,"count":4}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":44773,"endOffset":44992,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":45060,"endOffset":45438,"count":372},{"startOffset":45121,"endOffset":45139,"count":8},{"startOffset":45139,"endOffset":45158,"count":364},{"startOffset":45158,"endOffset":45169,"count":20},{"startOffset":45169,"endOffset":45188,"count":344},{"startOffset":45188,"endOffset":45206,"count":10},{"startOffset":45206,"endOffset":45237,"count":334},{"startOffset":45237,"endOffset":45437,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":45505,"endOffset":45984,"count":1470},{"startOffset":45565,"endOffset":45583,"count":152},{"startOffset":45583,"endOffset":45602,"count":1318},{"startOffset":45602,"endOffset":45613,"count":14},{"startOffset":45613,"endOffset":45632,"count":1304},{"startOffset":45632,"endOffset":45644,"count":0},{"startOffset":45644,"endOffset":45663,"count":1304},{"startOffset":45663,"endOffset":45674,"count":135},{"startOffset":45674,"endOffset":45693,"count":1169},{"startOffset":45693,"endOffset":45711,"count":14},{"startOffset":45711,"endOffset":45731,"count":1155},{"startOffset":45731,"endOffset":45742,"count":1146},{"startOffset":45742,"endOffset":45839,"count":9},{"startOffset":45786,"endOffset":45839,"count":0},{"startOffset":45839,"endOffset":45981,"count":0}],"isBlockCoverage":true},{"functionName":"identifier","ranges":[{"startOffset":45988,"endOffset":46430,"count":117},{"startOffset":46107,"endOffset":46120,"count":0},{"startOffset":46189,"endOffset":46411,"count":1168},{"startOffset":46228,"endOffset":46268,"count":1051},{"startOffset":46268,"endOffset":46406,"count":117},{"startOffset":46296,"endOffset":46373,"count":0}],"isBlockCoverage":true},{"functionName":"codePointLen","ranges":[{"startOffset":46434,"endOffset":46509,"count":1423},{"startOffset":46493,"endOffset":46508,"count":0}],"isBlockCoverage":true},{"functionName":"codePointAtLast","ranges":[{"startOffset":46513,"endOffset":46774,"count":302},{"startOffset":46677,"endOffset":46757,"count":0}],"isBlockCoverage":true},{"functionName":"esmSyntaxErr","ranges":[{"startOffset":46778,"endOffset":46885,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfImportStatement","ranges":[{"startOffset":46889,"endOffset":47708,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfExportStatement","ranges":[{"startOffset":47712,"endOffset":47948,"count":1},{"startOffset":47876,"endOffset":47947,"count":0}],"isBlockCoverage":true},{"functionName":"commentWhitespace","ranges":[{"startOffset":47952,"endOffset":48370,"count":883},{"startOffset":48001,"endOffset":48332,"count":1101},{"startOffset":48062,"endOffset":48271,"count":2},{"startOffset":48156,"endOffset":48170,"count":0},{"startOffset":48232,"endOffset":48264,"count":0},{"startOffset":48271,"endOffset":48327,"count":1099},{"startOffset":48301,"endOffset":48327,"count":883},{"startOffset":48332,"endOffset":48369,"count":0}],"isBlockCoverage":true},{"functionName":"templateString","ranges":[{"startOffset":48374,"endOffset":48779,"count":635},{"startOffset":48426,"endOffset":48758,"count":12927},{"startOffset":48492,"endOffset":48529,"count":344},{"startOffset":48536,"endOffset":48674,"count":337},{"startOffset":48674,"endOffset":48707,"count":12590},{"startOffset":48707,"endOffset":48714,"count":298},{"startOffset":48714,"endOffset":48747,"count":12292},{"startOffset":48747,"endOffset":48753,"count":120},{"startOffset":48758,"endOffset":48778,"count":0}],"isBlockCoverage":true},{"functionName":"blockComment","ranges":[{"startOffset":48783,"endOffset":48997,"count":117},{"startOffset":48843,"endOffset":48994,"count":12403},{"startOffset":48909,"endOffset":48945,"count":502},{"startOffset":48952,"endOffset":48989,"count":117}],"isBlockCoverage":true},{"functionName":"lineComment","ranges":[{"startOffset":49001,"endOffset":49159,"count":401},{"startOffset":49050,"endOffset":49156,"count":22244},{"startOffset":49117,"endOffset":49129,"count":21843},{"startOffset":49144,"endOffset":49151,"count":401}],"isBlockCoverage":true},{"functionName":"stringLiteral","ranges":[{"startOffset":49163,"endOffset":49545,"count":3500},{"startOffset":49219,"endOffset":49498,"count":54626},{"startOffset":49289,"endOffset":49296,"count":3500},{"startOffset":49296,"endOffset":49322,"count":51126},{"startOffset":49322,"endOffset":49455,"count":1512},{"startOffset":49389,"endOffset":49425,"count":0},{"startOffset":49442,"endOffset":49448,"count":0},{"startOffset":49455,"endOffset":49493,"count":49614},{"startOffset":49487,"endOffset":49493,"count":0},{"startOffset":49498,"endOffset":49544,"count":0}],"isBlockCoverage":true},{"functionName":"regexCharacterClass","ranges":[{"startOffset":49549,"endOffset":49869,"count":72},{"startOffset":49606,"endOffset":49796,"count":519},{"startOffset":49678,"endOffset":49688,"count":72},{"startOffset":49688,"endOffset":49721,"count":447},{"startOffset":49721,"endOffset":49727,"count":70},{"startOffset":49727,"endOffset":49791,"count":377},{"startOffset":49785,"endOffset":49791,"count":0},{"startOffset":49796,"endOffset":49868,"count":0}],"isBlockCoverage":true},{"functionName":"regularExpression","ranges":[{"startOffset":49873,"endOffset":50247,"count":78},{"startOffset":49928,"endOffset":50180,"count":1302},{"startOffset":50000,"endOffset":50007,"count":78},{"startOffset":50007,"endOffset":50040,"count":1224},{"startOffset":50040,"endOffset":50067,"count":72},{"startOffset":50067,"endOffset":50175,"count":1152},{"startOffset":50105,"endOffset":50111,"count":141},{"startOffset":50111,"endOffset":50175,"count":1011},{"startOffset":50169,"endOffset":50175,"count":0},{"startOffset":50180,"endOffset":50246,"count":0}],"isBlockCoverage":true},{"functionName":"isBr","ranges":[{"startOffset":50389,"endOffset":50455,"count":49614}],"isBlockCoverage":true},{"functionName":"isBrOrWs","ranges":[{"startOffset":50459,"endOffset":50537,"count":1207},{"startOffset":50509,"endOffset":50520,"count":1185},{"startOffset":50521,"endOffset":50533,"count":953}],"isBlockCoverage":true},{"functionName":"isBrOrWsOrPunctuatorNotDot","ranges":[{"startOffset":50541,"endOffset":50673,"count":12739},{"startOffset":50609,"endOffset":50620,"count":12283},{"startOffset":50621,"endOffset":50633,"count":9255},{"startOffset":50634,"endOffset":50664,"count":9255},{"startOffset":50653,"endOffset":50664,"count":1289}],"isBlockCoverage":true},{"functionName":"keywordStart","ranges":[{"startOffset":50677,"endOffset":50788,"count":12738},{"startOffset":50727,"endOffset":50784,"count":12736}],"isBlockCoverage":true},{"functionName":"readPrecedingKeyword","ranges":[{"startOffset":50792,"endOffset":51033,"count":3},{"startOffset":50873,"endOffset":50886,"count":0}],"isBlockCoverage":true},{"functionName":"readPrecedingKeyword1","ranges":[{"startOffset":51037,"endOffset":51196,"count":3},{"startOffset":51120,"endOffset":51192,"count":0}],"isBlockCoverage":true},{"functionName":"isExpressionKeyword","ranges":[{"startOffset":51322,"endOffset":53492,"count":10},{"startOffset":51401,"endOffset":51710,"count":0},{"startOffset":51716,"endOffset":52294,"count":0},{"startOffset":52300,"endOffset":52736,"count":0},{"startOffset":52742,"endOffset":52875,"count":3},{"startOffset":52881,"endOffset":52964,"count":0},{"startOffset":52970,"endOffset":53059,"count":0},{"startOffset":53065,"endOffset":53148,"count":0},{"startOffset":53154,"endOffset":53467,"count":0},{"startOffset":53472,"endOffset":53491,"count":7}],"isBlockCoverage":true},{"functionName":"isParenKeyword","ranges":[{"startOffset":53496,"endOffset":53807,"count":6},{"startOffset":53580,"endOffset":53620,"count":0},{"startOffset":53670,"endOffset":53708,"count":0},{"startOffset":53762,"endOffset":53798,"count":0}],"isBlockCoverage":true},{"functionName":"isPunctuator","ranges":[{"startOffset":53811,"endOffset":54104,"count":9256},{"startOffset":53928,"endOffset":53940,"count":9236},{"startOffset":53946,"endOffset":53958,"count":9236},{"startOffset":53964,"endOffset":53990,"count":9236},{"startOffset":53980,"endOffset":53990,"count":9230},{"startOffset":53991,"endOffset":54012,"count":8012},{"startOffset":54002,"endOffset":54012,"count":8005},{"startOffset":54013,"endOffset":54030,"count":8012},{"startOffset":54036,"endOffset":54048,"count":8000},{"startOffset":54054,"endOffset":54066,"count":8000},{"startOffset":54072,"endOffset":54100,"count":8000},{"startOffset":54089,"endOffset":54100,"count":33}],"isBlockCoverage":true},{"functionName":"isExpressionPunctuator","ranges":[{"startOffset":54108,"endOffset":54416,"count":85},{"startOffset":54231,"endOffset":54243,"count":81},{"startOffset":54249,"endOffset":54261,"count":81},{"startOffset":54267,"endOffset":54306,"count":81},{"startOffset":54294,"endOffset":54306,"count":44},{"startOffset":54307,"endOffset":54328,"count":43},{"startOffset":54318,"endOffset":54328,"count":36},{"startOffset":54329,"endOffset":54346,"count":11},{"startOffset":54352,"endOffset":54364,"count":11},{"startOffset":54370,"endOffset":54407,"count":11},{"startOffset":54382,"endOffset":54393,"count":1},{"startOffset":54394,"endOffset":54407,"count":1}],"isBlockCoverage":true},{"functionName":"isExpressionTerminator","ranges":[{"startOffset":54420,"endOffset":54998,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.init","ranges":[{"startOffset":55066,"endOffset":55083,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.initSync","ranges":[{"startOffset":55112,"endOffset":55120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7897,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":955,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"handleArguments","ranges":[{"startOffset":1214,"endOffset":1941,"count":0}],"isBlockCoverage":false},{"functionName":"handleOutput","ranges":[{"startOffset":1965,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"execa","ranges":[{"startOffset":2278,"endOffset":4678,"count":0}],"isBlockCoverage":false},{"functionName":"execaSync","ranges":[{"startOffset":4687,"endOffset":6032,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeScriptStdin","ranges":[{"startOffset":6063,"endOffset":6191,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeScriptOptions","ranges":[{"startOffset":6225,"endOffset":6316,"count":0}],"isBlockCoverage":false},{"functionName":"create$","ranges":[{"startOffset":6319,"endOffset":6973,"count":1}],"isBlockCoverage":true},{"functionName":"$","ranges":[{"startOffset":6348,"endOffset":6640,"count":0}],"isBlockCoverage":false},{"functionName":"$.sync","ranges":[{"startOffset":6652,"endOffset":6958,"count":0}],"isBlockCoverage":false},{"functionName":"execaCommand","ranges":[{"startOffset":7011,"endOffset":7138,"count":0}],"isBlockCoverage":false},{"functionName":"execaCommandSync","ranges":[{"startOffset":7147,"endOffset":7282,"count":0}],"isBlockCoverage":false},{"functionName":"execaNode","ranges":[{"startOffset":7291,"endOffset":7896,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"node:internal/file","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1939,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":494,"endOffset":1686,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28202,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1993,"endOffset":2024,"count":1}],"isBlockCoverage":true},{"functionName":"fork","ranges":[{"startOffset":3532,"endOffset":5257,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5261,"endOffset":5762,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5766,"endOffset":6298,"count":1},{"startOffset":6184,"endOffset":6199,"count":0}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":6860,"endOffset":7112,"count":1}],"isBlockCoverage":true},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":7150,"endOffset":7530,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7172,"endOffset":7526,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7675,"endOffset":8611,"count":1},{"startOffset":7766,"endOffset":7811,"count":0},{"startOffset":7933,"endOffset":8038,"count":0},{"startOffset":8125,"endOffset":8156,"count":0},{"startOffset":8257,"endOffset":8292,"count":0},{"startOffset":8438,"endOffset":8561,"count":0}],"isBlockCoverage":true},{"functionName":"execFile","ranges":[{"startOffset":9251,"endOffset":14170,"count":1},{"startOffset":10316,"endOffset":10350,"count":0},{"startOffset":12111,"endOffset":12236,"count":0}],"isBlockCoverage":true},{"functionName":"exithandler","ranges":[{"startOffset":10505,"endOffset":11623,"count":1},{"startOffset":10559,"endOffset":10566,"count":0},{"startOffset":10609,"endOffset":10674,"count":0},{"startOffset":10697,"endOffset":10704,"count":0},{"startOffset":10780,"endOffset":10840,"count":0},{"startOffset":10899,"endOffset":10953,"count":0},{"startOffset":10972,"endOffset":11032,"count":0},{"startOffset":11091,"endOffset":11145,"count":0},{"startOffset":11257,"endOffset":11281,"count":0},{"startOffset":11290,"endOffset":11622,"count":0}],"isBlockCoverage":true},{"functionName":"errorhandler","ranges":[{"startOffset":11629,"endOffset":11807,"count":0}],"isBlockCoverage":false},{"functionName":"kill","ranges":[{"startOffset":11813,"endOffset":12080,"count":0}],"isBlockCoverage":false},{"functionName":"delayedKill","ranges":[{"startOffset":12141,"endOffset":12212,"count":0}],"isBlockCoverage":false},{"functionName":"onChildStdout","ranges":[{"startOffset":12355,"endOffset":13177,"count":1},{"startOffset":12472,"endOffset":12544,"count":0},{"startOffset":12677,"endOffset":12700,"count":0},{"startOffset":12755,"endOffset":12802,"count":0},{"startOffset":12876,"endOffset":13109,"count":0}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":12766,"endOffset":12802,"count":0}],"isBlockCoverage":false},{"functionName":"onChildStderr","ranges":[{"startOffset":13303,"endOffset":14050,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":14322,"endOffset":14528,"count":2},{"startOffset":14422,"endOffset":14480,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14532,"endOffset":20015,"count":2},{"startOffset":14698,"endOffset":14763,"count":0},{"startOffset":14838,"endOffset":15036,"count":0},{"startOffset":15121,"endOffset":15144,"count":0},{"startOffset":15326,"endOffset":15381,"count":1},{"startOffset":15454,"endOffset":15520,"count":0},{"startOffset":15586,"endOffset":15610,"count":0},{"startOffset":15612,"endOffset":15692,"count":0},{"startOffset":15758,"endOffset":15782,"count":0},{"startOffset":15784,"endOffset":15864,"count":0},{"startOffset":15934,"endOffset":15978,"count":1},{"startOffset":15979,"endOffset":16022,"count":0},{"startOffset":16024,"endOffset":16158,"count":0},{"startOffset":16225,"endOffset":16348,"count":0},{"startOffset":16643,"endOffset":16754,"count":1},{"startOffset":16779,"endOffset":17666,"count":1},{"startOffset":17051,"endOffset":17072,"count":0},{"startOffset":17121,"endOffset":17133,"count":0},{"startOffset":17362,"endOffset":17411,"count":0},{"startOffset":17418,"endOffset":17661,"count":0},{"startOffset":17711,"endOffset":17766,"count":0},{"startOffset":18122,"endOffset":18737,"count":0},{"startOffset":18838,"endOffset":18883,"count":216},{"startOffset":19436,"endOffset":19696,"count":216}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19173,"endOffset":19389,"count":216},{"startOffset":19286,"endOffset":19323,"count":0}],"isBlockCoverage":true},{"functionName":"abortChildProcess","ranges":[{"startOffset":20019,"endOffset":20285,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20864,"endOffset":22134,"count":2},{"startOffset":21240,"endOffset":21632,"count":0},{"startOffset":21658,"endOffset":22112,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21274,"endOffset":21471,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21517,"endOffset":21625,"count":0}],"isBlockCoverage":false},{"functionName":"onAbortListener","ranges":[{"startOffset":22004,"endOffset":22107,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22926,"endOffset":24461,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":24467,"endOffset":24866,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":25401,"endOffset":25882,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":26401,"endOffset":26792,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":26798,"endOffset":27025,"count":438},{"startOffset":26881,"endOffset":26922,"count":437},{"startOffset":26924,"endOffset":27022,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":27031,"endOffset":27197,"count":2}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":27203,"endOffset":27395,"count":3},{"startOffset":27262,"endOffset":27308,"count":1},{"startOffset":27310,"endOffset":27392,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":27401,"endOffset":27680,"count":1},{"startOffset":27521,"endOffset":27677,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":27686,"endOffset":28057,"count":3},{"startOffset":27766,"endOffset":27799,"count":2},{"startOffset":27801,"endOffset":27853,"count":1},{"startOffset":27853,"endOffset":28054,"count":2},{"startOffset":27883,"endOffset":28054,"count":0}],"isBlockCoverage":true}]},{"scriptId":"102","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32895,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2591,"endOffset":2652,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2661,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2785,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2863,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":3043,"endOffset":4643,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4652,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5423,"endOffset":5898,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5969,"endOffset":6030,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6039,"endOffset":6095,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6166,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6299,"endOffset":6464,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6479,"endOffset":6909,"count":1},{"startOffset":6575,"endOffset":6589,"count":0},{"startOffset":6595,"endOffset":6613,"count":0},{"startOffset":6694,"endOffset":6754,"count":0},{"startOffset":6760,"endOffset":6824,"count":0},{"startOffset":6848,"endOffset":6885,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess","ranges":[{"startOffset":6913,"endOffset":8463,"count":2},{"startOffset":8388,"endOffset":8460,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess._handle.onexit","ranges":[{"startOffset":7269,"endOffset":8343,"count":1},{"startOffset":7318,"endOffset":7363,"count":0},{"startOffset":7552,"endOffset":7857,"count":0}],"isBlockCoverage":true},{"functionName":"flushStdio","ranges":[{"startOffset":8591,"endOffset":9084,"count":1},{"startOffset":8684,"endOffset":8691,"count":0},{"startOffset":8736,"endOffset":9081,"count":3},{"startOffset":9002,"endOffset":9027,"count":1},{"startOffset":9029,"endOffset":9054,"count":2},{"startOffset":9054,"endOffset":9081,"count":1}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":9090,"endOffset":9182,"count":5}],"isBlockCoverage":true},{"functionName":"getHandleWrapType","ranges":[{"startOffset":9188,"endOffset":9424,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9428,"endOffset":9544,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9581,"endOffset":13277,"count":2},{"startOffset":9738,"endOffset":9747,"count":1},{"startOffset":10095,"endOffset":10490,"count":0},{"startOffset":10613,"endOffset":10645,"count":0},{"startOffset":10998,"endOffset":11262,"count":0},{"startOffset":11277,"endOffset":11580,"count":0},{"startOffset":11707,"endOffset":12654,"count":6},{"startOffset":11774,"endOffset":11783,"count":0},{"startOffset":11807,"endOffset":11861,"count":0},{"startOffset":12087,"endOffset":12357,"count":0},{"startOffset":12384,"endOffset":12649,"count":5},{"startOffset":12462,"endOffset":12468,"count":0},{"startOffset":12497,"endOffset":12514,"count":3},{"startOffset":12516,"endOffset":12642,"count":3},{"startOffset":12747,"endOffset":12753,"count":0},{"startOffset":12846,"endOffset":12852,"count":0},{"startOffset":12922,"endOffset":12944,"count":1},{"startOffset":12945,"endOffset":12951,"count":1},{"startOffset":13020,"endOffset":13131,"count":6},{"startOffset":13105,"endOffset":13111,"count":1},{"startOffset":13112,"endOffset":13129,"count":5},{"startOffset":13218,"endOffset":13257,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12584,"endOffset":12631,"count":2}],"isBlockCoverage":true},{"functionName":"onErrorNT","ranges":[{"startOffset":13284,"endOffset":13347,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":13353,"endOffset":13405,"count":2}],"isBlockCoverage":true},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":13441,"endOffset":14139,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":14184,"endOffset":14245,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":14281,"endOffset":14337,"count":77}],"isBlockCoverage":true},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":14375,"endOffset":14433,"count":78}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14473,"endOffset":15476,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15630,"endOffset":28131,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":28169,"endOffset":28486,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":28524,"endOffset":31550,"count":2},{"startOffset":28661,"endOffset":28799,"count":1},{"startOffset":28739,"endOffset":28799,"count":0},{"startOffset":29049,"endOffset":29086,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29203,"endOffset":31506,"count":6},{"startOffset":29470,"endOffset":29520,"count":0},{"startOffset":29552,"endOffset":29612,"count":0},{"startOffset":29639,"endOffset":29664,"count":1},{"startOffset":29665,"endOffset":29724,"count":1},{"startOffset":29711,"endOffset":29723,"count":0},{"startOffset":29726,"endOffset":29991,"count":5},{"startOffset":29785,"endOffset":29799,"count":0},{"startOffset":29991,"endOffset":31482,"count":1},{"startOffset":30018,"endOffset":30430,"count":0},{"startOffset":30555,"endOffset":31482,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":29229,"endOffset":29426,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":31556,"endOffset":31880,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":31886,"endOffset":32093,"count":3},{"startOffset":32009,"endOffset":32090,"count":1}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":32097,"endOffset":32759,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":71923,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1688,"endOffset":1715,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":4355,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4852,"endOffset":4948,"count":1},{"startOffset":4910,"endOffset":4940,"count":0}],"isBlockCoverage":true},{"functionName":"createHandle","ranges":[{"startOffset":4952,"endOffset":5351,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5357,"endOffset":5498,"count":17},{"startOffset":5453,"endOffset":5472,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5504,"endOffset":5589,"count":1},{"startOffset":5561,"endOffset":5585,"count":0}],"isBlockCoverage":true},{"functionName":"createServer","ranges":[{"startOffset":5802,"endOffset":5908,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":6146,"endOffset":6563,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6567,"endOffset":6644,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6648,"endOffset":6767,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6771,"endOffset":6876,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6880,"endOffset":7075,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7581,"endOffset":8340,"count":1},{"startOffset":7652,"endOffset":7737,"count":0},{"startOffset":7818,"endOffset":7834,"count":0},{"startOffset":7836,"endOffset":7892,"count":0},{"startOffset":7920,"endOffset":7978,"count":0},{"startOffset":8105,"endOffset":8144,"count":0},{"startOffset":8249,"endOffset":8283,"count":0}],"isBlockCoverage":true},{"functionName":"initSocketHandle","ranges":[{"startOffset":8416,"endOffset":9041,"count":8},{"startOffset":8783,"endOffset":9033,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":9045,"endOffset":9397,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9166,"endOffset":9387,"count":3},{"startOffset":9271,"endOffset":9380,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":9657,"endOffset":14431,"count":13},{"startOffset":9718,"endOffset":9745,"count":5},{"startOffset":9745,"endOffset":9772,"count":8},{"startOffset":9774,"endOffset":9909,"count":0},{"startOffset":9909,"endOffset":10235,"count":8},{"startOffset":9979,"endOffset":10235,"count":0},{"startOffset":10235,"endOffset":10280,"count":8},{"startOffset":10298,"endOffset":10502,"count":0},{"startOffset":10502,"endOffset":11083,"count":8},{"startOffset":11083,"endOffset":11109,"count":0},{"startOffset":11109,"endOffset":11639,"count":8},{"startOffset":11639,"endOffset":12923,"count":0},{"startOffset":12923,"endOffset":13012,"count":8},{"startOffset":13013,"endOffset":13091,"count":0},{"startOffset":13092,"endOffset":13139,"count":0},{"startOffset":13141,"endOffset":13364,"count":0},{"startOffset":13364,"endOffset":13913,"count":8},{"startOffset":13915,"endOffset":14189,"count":6},{"startOffset":13949,"endOffset":14123,"count":0},{"startOffset":14155,"endOffset":14184,"count":3},{"startOffset":14189,"endOffset":14215,"count":8},{"startOffset":14215,"endOffset":14269,"count":0},{"startOffset":14269,"endOffset":14430,"count":8}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14609,"endOffset":14744,"count":2314},{"startOffset":14714,"endOffset":14736,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":14869,"endOffset":15514,"count":2},{"startOffset":14988,"endOffset":15092,"count":0},{"startOffset":15122,"endOffset":15134,"count":0},{"startOffset":15423,"endOffset":15435,"count":0},{"startOffset":15464,"endOffset":15511,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15064,"endOffset":15085,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15519,"endOffset":15671,"count":2}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15883,"endOffset":16411,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16498,"endOffset":17017,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":17054,"endOffset":17446,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17485,"endOffset":18117,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":18151,"endOffset":18197,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18288,"endOffset":18334,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18419,"endOffset":18477,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18595,"endOffset":18921,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19016,"endOffset":19100,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19193,"endOffset":19240,"count":259}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":19252,"endOffset":19509,"count":3},{"startOffset":19458,"endOffset":19506,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":19604,"endOffset":19936,"count":130},{"startOffset":19774,"endOffset":19869,"count":0},{"startOffset":19902,"endOffset":19933,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19843,"endOffset":19862,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":19966,"endOffset":20126,"count":2}],"isBlockCoverage":true},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":20166,"endOffset":20530,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20560,"endOffset":20887,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":20920,"endOffset":21110,"count":4},{"startOffset":20954,"endOffset":20973,"count":0},{"startOffset":20974,"endOffset":20989,"count":0},{"startOffset":20990,"endOffset":21021,"count":0},{"startOffset":21023,"endOffset":21054,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":21141,"endOffset":21333,"count":137},{"startOffset":21176,"endOffset":21195,"count":0},{"startOffset":21196,"endOffset":21211,"count":0},{"startOffset":21212,"endOffset":21243,"count":0},{"startOffset":21245,"endOffset":21276,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":21384,"endOffset":21487,"count":2}],"isBlockCoverage":true},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":21524,"endOffset":21679,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":21714,"endOffset":23280,"count":3},{"startOffset":22024,"endOffset":22030,"count":0},{"startOffset":22255,"endOffset":22508,"count":0},{"startOffset":22549,"endOffset":22789,"count":0},{"startOffset":23018,"endOffset":23092,"count":0},{"startOffset":23116,"endOffset":23277,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22332,"endOffset":22420,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22732,"endOffset":22780,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":23311,"endOffset":23414,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":23451,"endOffset":23758,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":23763,"endOffset":23952,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23981,"endOffset":24074,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":24109,"endOffset":24177,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":24211,"endOffset":24277,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":24309,"endOffset":24371,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":24411,"endOffset":24696,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":24731,"endOffset":24798,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":24831,"endOffset":24892,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":24925,"endOffset":24990,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":25033,"endOffset":25082,"count":130}],"isBlockCoverage":true},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":25120,"endOffset":26066,"count":2055},{"startOffset":25346,"endOffset":25702,"count":0},{"startOffset":25787,"endOffset":25846,"count":0},{"startOffset":25906,"endOffset":25942,"count":2},{"startOffset":25942,"endOffset":26001,"count":2053},{"startOffset":26025,"endOffset":26063,"count":130}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":25444,"endOffset":25561,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":25569,"endOffset":25650,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":26100,"endOffset":26170,"count":2}],"isBlockCoverage":true},{"functionName":"Socket._write","ranges":[{"startOffset":26203,"endOffset":26286,"count":2053}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":26484,"endOffset":26590,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":26624,"endOffset":27587,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":27595,"endOffset":28412,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":28418,"endOffset":30583,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":30589,"endOffset":33623,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":33654,"endOffset":35295,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":35340,"endOffset":35501,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":35506,"endOffset":35661,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":35665,"endOffset":39724,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":39728,"endOffset":43942,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":43946,"endOffset":44007,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":44036,"endOffset":44234,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":44266,"endOffset":44470,"count":2},{"startOffset":44301,"endOffset":44364,"count":0}],"isBlockCoverage":true},{"functionName":"afterConnect","ranges":[{"startOffset":44477,"endOffset":46225,"count":0}],"isBlockCoverage":false},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":46229,"endOffset":46656,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":46660,"endOffset":47199,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":47203,"endOffset":48560,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":48564,"endOffset":49072,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":49076,"endOffset":49521,"count":1},{"startOffset":49186,"endOffset":49518,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":49297,"endOffset":49328,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":49525,"endOffset":51190,"count":1},{"startOffset":49611,"endOffset":49658,"count":0},{"startOffset":49729,"endOffset":49847,"count":0},{"startOffset":49991,"endOffset":50049,"count":0},{"startOffset":50054,"endOffset":50133,"count":0},{"startOffset":50195,"endOffset":50398,"count":0},{"startOffset":50452,"endOffset":50647,"count":0},{"startOffset":50885,"endOffset":50893,"count":0}],"isBlockCoverage":true},{"functionName":"toNumber","ranges":[{"startOffset":51306,"endOffset":51371,"count":2},{"startOffset":51357,"endOffset":51360,"count":1},{"startOffset":51361,"endOffset":51368,"count":1}],"isBlockCoverage":true},{"functionName":"createServerHandle","ranges":[{"startOffset":51442,"endOffset":52950,"count":1},{"startOffset":51664,"endOffset":51674,"count":0},{"startOffset":51676,"endOffset":52001,"count":0},{"startOffset":52023,"endOffset":52044,"count":0},{"startOffset":52046,"endOffset":52304,"count":0},{"startOffset":52397,"endOffset":52404,"count":0},{"startOffset":52405,"endOffset":52413,"count":0},{"startOffset":52447,"endOffset":52455,"count":0},{"startOffset":52477,"endOffset":52722,"count":0},{"startOffset":52808,"endOffset":52863,"count":0},{"startOffset":52883,"endOffset":52927,"count":0}],"isBlockCoverage":true},{"functionName":"setupListenHandle","ranges":[{"startOffset":52954,"endOffset":55731,"count":1},{"startOffset":53264,"endOffset":53326,"count":0},{"startOffset":53647,"endOffset":53743,"count":0},{"startOffset":53864,"endOffset":53929,"count":0},{"startOffset":53967,"endOffset":54245,"count":0},{"startOffset":54693,"endOffset":55186,"count":0},{"startOffset":55228,"endOffset":55291,"count":0},{"startOffset":55528,"endOffset":55541,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":55802,"endOffset":55866,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":55872,"endOffset":55991,"count":1}],"isBlockCoverage":true},{"functionName":"listenInCluster","ranges":[{"startOffset":55997,"endOffset":57627,"count":1},{"startOffset":56243,"endOffset":56255,"count":0},{"startOffset":56507,"endOffset":57626,"count":0}],"isBlockCoverage":true},{"functionName":"listenOnPrimaryHandle","ranges":[{"startOffset":56838,"endOffset":57624,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":57659,"endOffset":62140,"count":1},{"startOffset":57806,"endOffset":57856,"count":0},{"startOffset":57898,"endOffset":57972,"count":0},{"startOffset":57995,"endOffset":58034,"count":0},{"startOffset":58201,"endOffset":58211,"count":0},{"startOffset":58529,"endOffset":58714,"count":0},{"startOffset":58867,"endOffset":58885,"count":0},{"startOffset":58887,"endOffset":58986,"count":0},{"startOffset":59351,"endOffset":59371,"count":0},{"startOffset":59406,"endOffset":59435,"count":0},{"startOffset":59664,"endOffset":59699,"count":0},{"startOffset":59874,"endOffset":60002,"count":0},{"startOffset":60282,"endOffset":60454,"count":0},{"startOffset":60456,"endOffset":61932,"count":0},{"startOffset":61935,"endOffset":62139,"count":0}],"isBlockCoverage":true},{"functionName":"isIpv6LinkLocal","ranges":[{"startOffset":62145,"endOffset":62798,"count":0}],"isBlockCoverage":false},{"functionName":"filterOnlyValidAddress","ranges":[{"startOffset":62802,"endOffset":63097,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":63101,"endOffset":63741,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":63827,"endOffset":63872,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":63953,"endOffset":64243,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":64248,"endOffset":66224,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":66381,"endOffset":67169,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":67201,"endOffset":68129,"count":1},{"startOffset":67299,"endOffset":67406,"count":0},{"startOffset":67569,"endOffset":68063,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":67327,"endOffset":67397,"count":0}],"isBlockCoverage":false},{"functionName":"onWorkerClose","ranges":[{"startOffset":67636,"endOffset":67750,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":68173,"endOffset":68298,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":68342,"endOffset":68741,"count":1},{"startOffset":68439,"endOffset":68555,"count":0}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":68748,"endOffset":68834,"count":1}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":68896,"endOffset":69068,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":69297,"endOffset":69333,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":69338,"endOffset":69379,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":69464,"endOffset":69495,"count":2536}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":69500,"endOffset":69536,"count":11}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":69578,"endOffset":69826,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":69854,"endOffset":69959,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":69989,"endOffset":70095,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":70245,"endOffset":70934,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":70975,"endOffset":71223,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":71359,"endOffset":71464,"count":1}],"isBlockCoverage":true},{"functionName":"get SocketAddress","ranges":[{"startOffset":71469,"endOffset":71594,"count":1}],"isBlockCoverage":true}]},{"scriptId":"104","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5247,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2619,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3301,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4521,"endOffset":4555,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4659,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4801,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":5033,"endOffset":5244,"count":132}],"isBlockCoverage":true}]},{"scriptId":"105","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10576,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1013,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1620,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":4875,"endOffset":5028,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5032,"endOffset":5369,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5373,"endOffset":5520,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5524,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5909,"endOffset":6248,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6469,"endOffset":6586,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6593,"endOffset":8081,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8085,"endOffset":8530,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8534,"endOffset":8735,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8739,"endOffset":9072,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9076,"endOffset":9646,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9650,"endOffset":10347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14289,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1772,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2392,"endOffset":2660,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2664,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3384,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":4072,"endOffset":4561,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":4603,"endOffset":4689,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":4727,"endOffset":4809,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4815,"endOffset":4936,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4942,"endOffset":5075,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":5159,"endOffset":5322,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":5406,"endOffset":5694,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":5787,"endOffset":7297,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7303,"endOffset":8085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8091,"endOffset":8451,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8457,"endOffset":9087,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9093,"endOffset":9357,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9363,"endOffset":9826,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":9833,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":9981,"endOffset":9989,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":10376,"endOffset":11685,"count":0}],"isBlockCoverage":false},{"functionName":"runAbort","ranges":[{"startOffset":11742,"endOffset":11875,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11901,"endOffset":12608,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":12763,"endOffset":12979,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":13056,"endOffset":13147,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":13248,"endOffset":13817,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8811,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":930,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1043,"endOffset":1051,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1056,"endOffset":7320,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7324,"endOffset":8264,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":8268,"endOffset":8747,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5768,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":619,"endOffset":5765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12958,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1104,"endOffset":1551,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1555,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1893,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2192,"endOffset":2372,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2376,"endOffset":3476,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3480,"endOffset":4105,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":4109,"endOffset":4204,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4208,"endOffset":11021,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":11025,"endOffset":12908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7716,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":520,"endOffset":843,"count":130},{"startOffset":565,"endOffset":840,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":957,"endOffset":1873,"count":65},{"startOffset":1130,"endOffset":1134,"count":62},{"startOffset":1154,"endOffset":1187,"count":3},{"startOffset":1240,"endOffset":1323,"count":0},{"startOffset":1515,"endOffset":1551,"count":3},{"startOffset":1699,"endOffset":1810,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1726,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1877,"endOffset":2537,"count":65},{"startOffset":2495,"endOffset":2534,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1940,"endOffset":2436,"count":65},{"startOffset":1983,"endOffset":2006,"count":0},{"startOffset":2145,"endOffset":2182,"count":3},{"startOffset":2270,"endOffset":2294,"count":0},{"startOffset":2311,"endOffset":2373,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2541,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2635,"endOffset":2972,"count":65},{"startOffset":2744,"endOffset":2783,"count":3},{"startOffset":2852,"endOffset":2885,"count":3},{"startOffset":2938,"endOffset":2969,"count":62}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":2976,"endOffset":3342,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":3346,"endOffset":4065,"count":8}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":4069,"endOffset":5246,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5250,"endOffset":5689,"count":0}],"isBlockCoverage":false},{"functionName":"constructNT","ranges":[{"startOffset":5693,"endOffset":6469,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":6473,"endOffset":6571,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6575,"endOffset":6637,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6641,"endOffset":6764,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6802,"endOffset":7615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6794,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2414,"endOffset":4450,"count":8},{"startOffset":2480,"endOffset":2507,"count":0},{"startOffset":3220,"endOffset":3360,"count":2},{"startOffset":3400,"endOffset":3580,"count":0},{"startOffset":3635,"endOffset":3661,"count":0},{"startOffset":3717,"endOffset":3745,"count":0},{"startOffset":3802,"endOffset":3832,"count":0},{"startOffset":3890,"endOffset":3922,"count":0},{"startOffset":3978,"endOffset":4006,"count":0},{"startOffset":4066,"endOffset":4102,"count":0},{"startOffset":4137,"endOffset":4174,"count":0},{"startOffset":4179,"endOffset":4223,"count":0},{"startOffset":4291,"endOffset":4447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4326,"endOffset":4440,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5622,"endOffset":5840,"count":261},{"startOffset":5722,"endOffset":5755,"count":0},{"startOffset":5800,"endOffset":5832,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5847,"endOffset":6115,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":6196,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":6385,"endOffset":6507,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":6527,"endOffset":6618,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":6655,"endOffset":6791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3376,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":140,"endOffset":190,"count":70}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":308,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":2223,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2502,"endOffset":3325,"count":62},{"startOffset":2765,"endOffset":3134,"count":0},{"startOffset":3141,"endOffset":3322,"count":0}],"isBlockCoverage":true}]},{"scriptId":"113","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53066,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1934,"endOffset":1961,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2965,"endOffset":2973,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3899,"endOffset":4130,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3977,"endOffset":4021,"count":402}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4028,"endOffset":4120,"count":69},{"startOffset":4059,"endOffset":4079,"count":16},{"startOffset":4079,"endOffset":4113,"count":53}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6349,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6446,"endOffset":6619,"count":8},{"startOffset":6477,"endOffset":6560,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6702,"endOffset":6802,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6809,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7121,"endOffset":7211,"count":2},{"startOffset":7197,"endOffset":7203,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7218,"endOffset":7391,"count":2},{"startOffset":7332,"endOffset":7384,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7467,"endOffset":7559,"count":8},{"startOffset":7522,"endOffset":7544,"count":1},{"startOffset":7545,"endOffset":7551,"count":7}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7566,"endOffset":7742,"count":2},{"startOffset":7682,"endOffset":7735,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7817,"endOffset":7922,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7929,"endOffset":8205,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":8223,"endOffset":10239,"count":70},{"startOffset":8602,"endOffset":8614,"count":8},{"startOffset":8621,"endOffset":8649,"count":0},{"startOffset":8668,"endOffset":8698,"count":8},{"startOffset":8705,"endOffset":8733,"count":0},{"startOffset":8912,"endOffset":8985,"count":8},{"startOffset":8986,"endOffset":9023,"count":62},{"startOffset":9190,"endOffset":9220,"count":8},{"startOffset":9222,"endOffset":9250,"count":8},{"startOffset":9342,"endOffset":9374,"count":8},{"startOffset":9376,"endOffset":9406,"count":0},{"startOffset":9641,"endOffset":9658,"count":8},{"startOffset":9691,"endOffset":9720,"count":0},{"startOffset":9721,"endOffset":9751,"count":0},{"startOffset":9802,"endOffset":9965,"count":0},{"startOffset":10122,"endOffset":10132,"count":8},{"startOffset":10134,"endOffset":10236,"count":0}],"isBlockCoverage":true},{"functionName":"onConstructed","ranges":[{"startOffset":10285,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":10411,"endOffset":11487,"count":62},{"startOffset":10481,"endOffset":10510,"count":0},{"startOffset":10967,"endOffset":11310,"count":0},{"startOffset":11378,"endOffset":11484,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11413,"endOffset":11477,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":11628,"endOffset":11662,"count":62}],"isBlockCoverage":true},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11715,"endOffset":11755,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11801,"endOffset":12064,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":12299,"endOffset":12575,"count":198},{"startOffset":12504,"endOffset":12571,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":12674,"endOffset":12947,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":12954,"endOffset":14053,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":14057,"endOffset":14306,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":14310,"endOffset":14652,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14656,"endOffset":16099,"count":198},{"startOffset":14751,"endOffset":14841,"count":64},{"startOffset":14841,"endOffset":14878,"count":134},{"startOffset":14878,"endOffset":15049,"count":7},{"startOffset":14905,"endOffset":14929,"count":0},{"startOffset":15049,"endOffset":15411,"count":127},{"startOffset":15110,"endOffset":15411,"count":0},{"startOffset":15411,"endOffset":15448,"count":134},{"startOffset":15450,"endOffset":15558,"count":0},{"startOffset":15558,"endOffset":15600,"count":134},{"startOffset":15600,"endOffset":15687,"count":0},{"startOffset":15687,"endOffset":15746,"count":134},{"startOffset":15746,"endOffset":15771,"count":0},{"startOffset":15771,"endOffset":15845,"count":134},{"startOffset":15845,"endOffset":15857,"count":1},{"startOffset":15859,"endOffset":16022,"count":1},{"startOffset":15938,"endOffset":16017,"count":0},{"startOffset":16022,"endOffset":16098,"count":134}],"isBlockCoverage":true},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":16103,"endOffset":16724,"count":0}],"isBlockCoverage":false},{"functionName":"canPushMore","ranges":[{"startOffset":16728,"endOffset":17064,"count":134},{"startOffset":17038,"endOffset":17059,"count":0}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":17068,"endOffset":18041,"count":134},{"startOffset":17387,"endOffset":17435,"count":0},{"startOffset":17564,"endOffset":18005,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.isPaused","ranges":[{"startOffset":18075,"endOffset":18233,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":18300,"endOffset":18890,"count":2},{"startOffset":18682,"endOffset":18725,"count":0},{"startOffset":18810,"endOffset":18837,"count":0}],"isBlockCoverage":true},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18955,"endOffset":19321,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":19438,"endOffset":19933,"count":330},{"startOffset":19487,"endOffset":19544,"count":129},{"startOffset":19551,"endOffset":19560,"count":265},{"startOffset":19560,"endOffset":19610,"count":65},{"startOffset":19610,"endOffset":19619,"count":0},{"startOffset":19619,"endOffset":19828,"count":65},{"startOffset":19751,"endOffset":19797,"count":0},{"startOffset":19828,"endOffset":19925,"count":0},{"startOffset":19926,"endOffset":19929,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":20033,"endOffset":24847,"count":330},{"startOffset":20221,"endOffset":20241,"count":129},{"startOffset":20241,"endOffset":20310,"count":201},{"startOffset":20272,"endOffset":20310,"count":0},{"startOffset":20481,"endOffset":20530,"count":0},{"startOffset":20554,"endOffset":20589,"count":129},{"startOffset":20780,"endOffset":20827,"count":201},{"startOffset":20828,"endOffset":20984,"count":134},{"startOffset":20913,"endOffset":20940,"count":0},{"startOffset":20986,"endOffset":21170,"count":0},{"startOffset":21319,"endOffset":21398,"count":66},{"startOffset":21398,"endOffset":22722,"count":264},{"startOffset":22722,"endOffset":22763,"count":0},{"startOffset":22765,"endOffset":23158,"count":264},{"startOffset":23158,"endOffset":23239,"count":65},{"startOffset":23239,"endOffset":23882,"count":199},{"startOffset":23558,"endOffset":23612,"count":0},{"startOffset":23845,"endOffset":23877,"count":0},{"startOffset":23882,"endOffset":23916,"count":264},{"startOffset":23916,"endOffset":23941,"count":0},{"startOffset":23941,"endOffset":24087,"count":264},{"startOffset":24066,"endOffset":24069,"count":0},{"startOffset":24087,"endOffset":24276,"count":0},{"startOffset":24276,"endOffset":24673,"count":264},{"startOffset":24608,"endOffset":24641,"count":65},{"startOffset":24650,"endOffset":24668,"count":0},{"startOffset":24673,"endOffset":24696,"count":264},{"startOffset":24696,"endOffset":24754,"count":0},{"startOffset":24756,"endOffset":24827,"count":0},{"startOffset":24827,"endOffset":24846,"count":264}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":24852,"endOffset":25832,"count":64},{"startOffset":24952,"endOffset":24959,"count":0},{"startOffset":25012,"endOffset":25034,"count":2},{"startOffset":25035,"endOffset":25041,"count":62},{"startOffset":25059,"endOffset":25244,"count":2},{"startOffset":25119,"endOffset":25239,"count":0},{"startOffset":25313,"endOffset":25520,"count":0}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":26038,"endOffset":26378,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":26382,"endOffset":27072,"count":64},{"startOffset":26988,"endOffset":27031,"count":0},{"startOffset":27032,"endOffset":27047,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":27431,"endOffset":27643,"count":134}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":27647,"endOffset":29511,"count":134},{"startOffset":29215,"endOffset":29285,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._read","ranges":[{"startOffset":29788,"endOffset":29856,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":29887,"endOffset":34555,"count":62},{"startOffset":30008,"endOffset":30239,"count":0},{"startOffset":30364,"endOffset":30389,"count":0},{"startOffset":30433,"endOffset":30474,"count":31},{"startOffset":30501,"endOffset":30508,"count":0},{"startOffset":30568,"endOffset":30592,"count":0},{"startOffset":34418,"endOffset":34438,"count":0},{"startOffset":34482,"endOffset":34534,"count":0}],"isBlockCoverage":true},{"functionName":"onunpipe","ranges":[{"startOffset":30667,"endOffset":30901,"count":396},{"startOffset":30760,"endOffset":30896,"count":62}],"isBlockCoverage":true},{"functionName":"onend","ranges":[{"startOffset":30907,"endOffset":30968,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":31018,"endOffset":31934,"count":62},{"startOffset":31226,"endOffset":31280,"count":0},{"startOffset":31816,"endOffset":31842,"count":0},{"startOffset":31843,"endOffset":31910,"count":0},{"startOffset":31919,"endOffset":31929,"count":0}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":31940,"endOffset":32966,"count":0}],"isBlockCoverage":false},{"functionName":"ondata","ranges":[{"startOffset":32999,"endOffset":33166,"count":7},{"startOffset":33137,"endOffset":33161,"count":0}],"isBlockCoverage":true},{"functionName":"onerror","ranges":[{"startOffset":33292,"endOffset":33716,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":33902,"endOffset":33988,"count":0}],"isBlockCoverage":false},{"functionName":"onfinish","ranges":[{"startOffset":34024,"endOffset":34133,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":34173,"endOffset":34242,"count":62}],"isBlockCoverage":true},{"functionName":"pipeOnDrain","ranges":[{"startOffset":34560,"endOffset":35257,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":35291,"endOffset":36023,"count":62},{"startOffset":35484,"endOffset":35496,"count":0},{"startOffset":35513,"endOffset":35738,"count":0},{"startOffset":35859,"endOffset":35871,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.on","ranges":[{"startOffset":36153,"endOffset":37191,"count":393},{"startOffset":36289,"endOffset":36729,"count":65},{"startOffset":36523,"endOffset":36543,"count":0},{"startOffset":36729,"endOffset":37171,"count":328},{"startOffset":36758,"endOffset":37171,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":37289,"endOffset":38015,"count":680},{"startOffset":37495,"endOffset":37889,"count":0},{"startOffset":37913,"endOffset":37948,"count":62},{"startOffset":37950,"endOffset":37995,"count":62}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":38121,"endOffset":38730,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":38735,"endOffset":39457,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":39461,"endOffset":39552,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":39710,"endOffset":40233,"count":66},{"startOffset":39802,"endOffset":40152,"count":65},{"startOffset":40072,"endOffset":40121,"count":0}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":40238,"endOffset":40416,"count":65}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":40420,"endOffset":40745,"count":65},{"startOffset":40549,"endOffset":40576,"count":62},{"startOffset":40727,"endOffset":40742,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":40776,"endOffset":41099,"count":62}],"isBlockCoverage":true},{"functionName":"flow","ranges":[{"startOffset":41104,"endOffset":41259,"count":129},{"startOffset":41255,"endOffset":41256,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":41448,"endOffset":42516,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":42563,"endOffset":42617,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":42652,"endOffset":42800,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":42805,"endOffset":43062,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":43066,"endOffset":44190,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44417,"endOffset":44814,"count":3},{"startOffset":44746,"endOffset":44761,"count":2},{"startOffset":44762,"endOffset":44780,"count":2},{"startOffset":44781,"endOffset":44806,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":44821,"endOffset":44956,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45044,"endOffset":45110,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45198,"endOffset":45412,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45506,"endOffset":45574,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45661,"endOffset":45723,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45811,"endOffset":45873,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45885,"endOffset":45998,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46080,"endOffset":46136,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46222,"endOffset":46312,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46396,"endOffset":46483,"count":1},{"startOffset":46469,"endOffset":46475,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":46558,"endOffset":46644,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46694,"endOffset":46780,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46857,"endOffset":46946,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46953,"endOffset":47252,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47333,"endOffset":47423,"count":62},{"startOffset":47408,"endOffset":47415,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":47573,"endOffset":47620,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47706,"endOffset":47766,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47773,"endOffset":47941,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":48258,"endOffset":50808,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":50812,"endOffset":51046,"count":66}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":51050,"endOffset":51969,"count":66},{"startOffset":51240,"endOffset":51261,"count":64},{"startOffset":51263,"endOffset":51966,"count":64},{"startOffset":51352,"endOffset":51385,"count":2},{"startOffset":51387,"endOffset":51443,"count":2},{"startOffset":51443,"endOffset":51961,"count":62},{"startOffset":51679,"endOffset":51889,"count":0}],"isBlockCoverage":true},{"functionName":"endWritableNT","ranges":[{"startOffset":51973,"endOffset":52139,"count":2}],"isBlockCoverage":true},{"functionName":"Readable.from","ranges":[{"startOffset":52159,"endOffset":52230,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":52300,"endOffset":52468,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":52491,"endOffset":52629,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":52651,"endOffset":52789,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":52810,"endOffset":53063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1794,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":588,"endOffset":752,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":789,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1153,"endOffset":1791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1491,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":409,"endOffset":579,"count":16},{"startOffset":508,"endOffset":531,"count":0},{"startOffset":569,"endOffset":575,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":583,"endOffset":715,"count":76},{"startOffset":651,"endOffset":683,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":719,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":941,"endOffset":1386,"count":16},{"startOffset":1090,"endOffset":1308,"count":3},{"startOffset":1135,"endOffset":1275,"count":0},{"startOffset":1308,"endOffset":1385,"count":13}],"isBlockCoverage":true}]},{"scriptId":"116","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4529,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":255,"endOffset":4501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34755,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2873,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3979,"endOffset":4210,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4057,"endOffset":4101,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4108,"endOffset":4200,"count":80},{"startOffset":4139,"endOffset":4159,"count":8},{"startOffset":4159,"endOffset":4193,"count":72}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7253,"endOffset":7331,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7338,"endOffset":7511,"count":8},{"startOffset":7369,"endOffset":7452,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7587,"endOffset":7687,"count":28},{"startOffset":7638,"endOffset":7672,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7694,"endOffset":7976,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8059,"endOffset":8159,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8166,"endOffset":8403,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8551,"endOffset":8628,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8635,"endOffset":8806,"count":2369},{"startOffset":8702,"endOffset":8747,"count":314},{"startOffset":8747,"endOffset":8799,"count":2055}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9001,"endOffset":9101,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9108,"endOffset":9312,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9388,"endOffset":9466,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9473,"endOffset":9647,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9665,"endOffset":12005,"count":8},{"startOffset":9939,"endOffset":9967,"count":0},{"startOffset":10023,"endOffset":10051,"count":0},{"startOffset":10348,"endOffset":10385,"count":0},{"startOffset":10441,"endOffset":10472,"count":0},{"startOffset":10736,"endOffset":10766,"count":0},{"startOffset":11028,"endOffset":11034,"count":0},{"startOffset":11067,"endOffset":11096,"count":0},{"startOffset":11097,"endOffset":11127,"count":0},{"startOffset":11178,"endOffset":11392,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":12009,"endOffset":12178,"count":13}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":12218,"endOffset":12349,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12449,"endOffset":12562,"count":0}],"isBlockCoverage":false},{"functionName":"onConstructed","ranges":[{"startOffset":12614,"endOffset":12808,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12813,"endOffset":13963,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":14049,"endOffset":14258,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":14363,"endOffset":14433,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":14438,"endOffset":15885,"count":2057},{"startOffset":14545,"endOffset":14572,"count":316},{"startOffset":14574,"endOffset":14595,"count":1741},{"startOffset":14621,"endOffset":14668,"count":0},{"startOffset":14811,"endOffset":14834,"count":0},{"startOffset":14842,"endOffset":14964,"count":0},{"startOffset":15003,"endOffset":15150,"count":1918},{"startOffset":15056,"endOffset":15143,"count":0},{"startOffset":15150,"endOffset":15478,"count":139},{"startOffset":15185,"endOffset":15221,"count":7},{"startOffset":15221,"endOffset":15478,"count":132},{"startOffset":15351,"endOffset":15478,"count":0},{"startOffset":15538,"endOffset":15589,"count":0},{"startOffset":15635,"endOffset":15687,"count":0},{"startOffset":15702,"endOffset":15797,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":15916,"endOffset":16114,"count":2057},{"startOffset":15972,"endOffset":16005,"count":316},{"startOffset":16007,"endOffset":16055,"count":316}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":16145,"endOffset":16248,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":16281,"endOffset":16532,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":16577,"endOffset":16910,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":17105,"endOffset":18346,"count":2057},{"startOffset":17223,"endOffset":17226,"count":0},{"startOffset":17361,"endOffset":17781,"count":7},{"startOffset":17407,"endOffset":17485,"count":5},{"startOffset":17623,"endOffset":17669,"count":0},{"startOffset":17712,"endOffset":17731,"count":5},{"startOffset":17733,"endOffset":17776,"count":5},{"startOffset":17781,"endOffset":18028,"count":2050},{"startOffset":17843,"endOffset":17884,"count":309},{"startOffset":18081,"endOffset":18102,"count":1},{"startOffset":18119,"endOffset":18159,"count":1},{"startOffset":18292,"endOffset":18342,"count":2056}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":18350,"endOffset":18800,"count":5},{"startOffset":18597,"endOffset":18646,"count":0},{"startOffset":18672,"endOffset":18709,"count":2},{"startOffset":18709,"endOffset":18769,"count":3}],"isBlockCoverage":true},{"functionName":"onwriteError","ranges":[{"startOffset":18804,"endOffset":19200,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":19204,"endOffset":21886,"count":2055},{"startOffset":19324,"endOffset":19401,"count":0},{"startOffset":19498,"endOffset":19520,"count":314},{"startOffset":19521,"endOffset":19526,"count":1741},{"startOffset":19676,"endOffset":20310,"count":0},{"startOffset":20362,"endOffset":20405,"count":5},{"startOffset":20423,"endOffset":21823,"count":1925},{"startOffset":20485,"endOffset":20506,"count":0},{"startOffset":20877,"endOffset":21238,"count":1741},{"startOffset":20948,"endOffset":21071,"count":0},{"startOffset":21157,"endOffset":21218,"count":0},{"startOffset":21238,"endOffset":21816,"count":184},{"startOffset":21292,"endOffset":21354,"count":181},{"startOffset":21356,"endOffset":21416,"count":181},{"startOffset":21416,"endOffset":21816,"count":3},{"startOffset":21668,"endOffset":21816,"count":0},{"startOffset":21823,"endOffset":21878,"count":130}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":21890,"endOffset":22081,"count":3}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":22085,"endOffset":22614,"count":133},{"startOffset":22266,"endOffset":22287,"count":2},{"startOffset":22307,"endOffset":22375,"count":1},{"startOffset":22401,"endOffset":22446,"count":314},{"startOffset":22492,"endOffset":22523,"count":0},{"startOffset":22566,"endOffset":22611,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":22689,"endOffset":23258,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":23327,"endOffset":25049,"count":5},{"startOffset":23499,"endOffset":23518,"count":0},{"startOffset":23729,"endOffset":23748,"count":0},{"startOffset":23844,"endOffset":23861,"count":2},{"startOffset":23863,"endOffset":24500,"count":2},{"startOffset":23966,"endOffset":23971,"count":0},{"startOffset":24269,"endOffset":24279,"count":0},{"startOffset":24280,"endOffset":24297,"count":0},{"startOffset":24500,"endOffset":25006,"count":3},{"startOffset":24635,"endOffset":24638,"count":0},{"startOffset":24759,"endOffset":24794,"count":0},{"startOffset":24866,"endOffset":25001,"count":0}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":23974,"endOffset":24087,"count":2},{"startOffset":24034,"endOffset":24080,"count":4}],"isBlockCoverage":true},{"functionName":"Writable._write","ranges":[{"startOffset":25081,"endOffset":25256,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":25324,"endOffset":27024,"count":2},{"startOffset":25432,"endOffset":25496,"count":0},{"startOffset":25538,"endOffset":25586,"count":0},{"startOffset":25625,"endOffset":25737,"count":0},{"startOffset":25808,"endOffset":25857,"count":0},{"startOffset":25872,"endOffset":25900,"count":0},{"startOffset":26384,"endOffset":26582,"count":0},{"startOffset":26618,"endOffset":27003,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":27029,"endOffset":27472,"count":4}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":27476,"endOffset":28126,"count":2},{"startOffset":27561,"endOffset":27645,"count":0},{"startOffset":27680,"endOffset":27791,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":28130,"endOffset":28674,"count":2},{"startOffset":28228,"endOffset":28247,"count":0},{"startOffset":28483,"endOffset":28540,"count":0},{"startOffset":28577,"endOffset":28671,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28436,"endOffset":28473,"count":2}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":28678,"endOffset":29196,"count":2},{"startOffset":28813,"endOffset":29188,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28888,"endOffset":29056,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":29200,"endOffset":29865,"count":2},{"startOffset":29764,"endOffset":29792,"count":0}],"isBlockCoverage":true},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":29869,"endOffset":30198,"count":2},{"startOffset":29977,"endOffset":30197,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30287,"endOffset":30392,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30445,"endOffset":30553,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30560,"endOffset":30816,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30868,"endOffset":31279,"count":4}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":31286,"endOffset":31425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31485,"endOffset":31606,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31668,"endOffset":31791,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31849,"endOffset":31947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32004,"endOffset":32123,"count":2},{"startOffset":32108,"endOffset":32115,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32184,"endOffset":32340,"count":62},{"startOffset":32325,"endOffset":32332,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":32405,"endOffset":32497,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32555,"endOffset":32651,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32709,"endOffset":32794,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32869,"endOffset":32969,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33033,"endOffset":33297,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":33380,"endOffset":33670,"count":3},{"startOffset":33529,"endOffset":33566,"count":0},{"startOffset":33568,"endOffset":33617,"count":0}],"isBlockCoverage":true},{"functionName":"Writable._destroy","ranges":[{"startOffset":33761,"endOffset":33795,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":33848,"endOffset":33888,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":33958,"endOffset":34126,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":34149,"endOffset":34287,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":34309,"endOffset":34418,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":34464,"endOffset":34752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":336,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7327,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4001,"endOffset":5623,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5627,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6101,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6262,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6393,"endOffset":7160,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7193,"endOffset":7324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1809,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1566,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1752,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"node:internal/streams/duplexpair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1435,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":262,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"duplexPair","ranges":[{"startOffset":1192,"endOffset":1403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7350,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1122,"count":1}],"isBlockCoverage":true},{"functionName":"handleWriteReq","ranges":[{"startOffset":1246,"endOffset":2134,"count":2053},{"startOffset":1350,"endOffset":1523,"count":135},{"startOffset":1479,"endOffset":1497,"count":128},{"startOffset":1529,"endOffset":1543,"count":0},{"startOffset":1549,"endOffset":1614,"count":0},{"startOffset":1620,"endOffset":1632,"count":1918},{"startOffset":1638,"endOffset":1700,"count":1918},{"startOffset":1706,"endOffset":1769,"count":0},{"startOffset":1775,"endOffset":1787,"count":0},{"startOffset":1793,"endOffset":1806,"count":0},{"startOffset":1812,"endOffset":1827,"count":0},{"startOffset":1833,"endOffset":1898,"count":0},{"startOffset":1904,"endOffset":2126,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2138,"endOffset":2752,"count":130},{"startOffset":2290,"endOffset":2492,"count":0},{"startOffset":2520,"endOffset":2613,"count":0}],"isBlockCoverage":true},{"functionName":"createWriteWrap","ranges":[{"startOffset":2756,"endOffset":3005,"count":2055}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":3009,"endOffset":3671,"count":2},{"startOffset":3246,"endOffset":3270,"count":4},{"startOffset":3275,"endOffset":3491,"count":0}],"isBlockCoverage":true},{"functionName":"writeGeneric","ranges":[{"startOffset":3675,"endOffset":3886,"count":2053}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3890,"endOffset":4207,"count":2055},{"startOffset":4062,"endOffset":4117,"count":0},{"startOffset":4138,"endOffset":4175,"count":1925},{"startOffset":4177,"endOffset":4204,"count":1925}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4211,"endOffset":6218,"count":129},{"startOffset":4413,"endOffset":4433,"count":127},{"startOffset":4435,"endOffset":5202,"count":127},{"startOffset":4524,"endOffset":4791,"count":0},{"startOffset":4980,"endOffset":5178,"count":0},{"startOffset":5202,"endOffset":5225,"count":2},{"startOffset":5225,"endOffset":5244,"count":0},{"startOffset":5244,"endOffset":5583,"count":2},{"startOffset":5583,"endOffset":5781,"count":0},{"startOffset":5781,"endOffset":5869,"count":2},{"startOffset":5869,"endOffset":5939,"count":0},{"startOffset":5939,"endOffset":6215,"count":2},{"startOffset":5986,"endOffset":6026,"count":0}],"isBlockCoverage":true},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6222,"endOffset":7127,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17335,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2721,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2996,"endOffset":3344,"count":2},{"startOffset":3053,"endOffset":3102,"count":0},{"startOffset":3108,"endOffset":3163,"count":0},{"startOffset":3169,"endOffset":3222,"count":0},{"startOffset":3228,"endOffset":3279,"count":0}],"isBlockCoverage":true},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3348,"endOffset":3783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3787,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4220,"endOffset":4289,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4334,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4574,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4722,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":5041,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6204,"endOffset":9904,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10405,"endOffset":10614,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10680,"endOffset":11735,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":12032,"endOffset":13328,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":13419,"endOffset":13696,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13700,"endOffset":13767,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13771,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":14390,"endOffset":15256,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":15260,"endOffset":16412,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":16453,"endOffset":16575,"count":2}],"isBlockCoverage":true},{"functionName":"startPerf","ranges":[{"startOffset":16581,"endOffset":16696,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16700,"endOffset":17029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3412,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":703,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":810,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1186,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1295,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1419,"endOffset":1537,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1543,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1664,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1923,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2385,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2646,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2765,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":3032,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29474,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":3037,"endOffset":3137,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3141,"endOffset":4590,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4706,"endOffset":4786,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4792,"endOffset":5251,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5255,"endOffset":5836,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5840,"endOffset":6142,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":6213,"endOffset":6730,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6758,"endOffset":10352,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":10384,"endOffset":11207,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":11214,"endOffset":11574,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11580,"endOffset":12252,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":12288,"endOffset":12609,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12718,"endOffset":13171,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":13178,"endOffset":13961,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13967,"endOffset":14365,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":14371,"endOffset":14809,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14815,"endOffset":14956,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14962,"endOffset":15089,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":15095,"endOffset":15300,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15888,"endOffset":18880,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18885,"endOffset":20071,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":20075,"endOffset":20264,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":20293,"endOffset":20883,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20927,"endOffset":21065,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":21072,"endOffset":21128,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":21161,"endOffset":21365,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":21403,"endOffset":21730,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":21769,"endOffset":21926,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21959,"endOffset":22146,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":22188,"endOffset":22393,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":22440,"endOffset":22651,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":22699,"endOffset":22973,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":23011,"endOffset":23402,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":23443,"endOffset":23837,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":23889,"endOffset":24515,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":24570,"endOffset":25202,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":25209,"endOffset":25377,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":25383,"endOffset":25555,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":25561,"endOffset":25826,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":25832,"endOffset":25950,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":25979,"endOffset":26093,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":26125,"endOffset":26241,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":26285,"endOffset":26344,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":26388,"endOffset":26447,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":26491,"endOffset":26550,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":26594,"endOffset":26653,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":26694,"endOffset":26765,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":26807,"endOffset":26879,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27003,"endOffset":27059,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27133,"endOffset":27191,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27350,"endOffset":27409,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27486,"endOffset":27547,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27709,"endOffset":27768,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27845,"endOffset":27906,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28064,"endOffset":28119,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28192,"endOffset":28249,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28407,"endOffset":28466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28543,"endOffset":28604,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28715,"endOffset":28752,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28864,"endOffset":28903,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29195,"endOffset":29231,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29236,"endOffset":29277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1928,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":485,"endOffset":588,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":594,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":695,"endOffset":1368,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1374,"endOffset":1843,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2817,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":243,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":395,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1077,"endOffset":1233,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1239,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1603,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2503,"endOffset":2753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":87,"count":1}],"isBlockCoverage":false}]},{"scriptId":"129","url":"node:internal/process/finalization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3526,"count":1}],"isBlockCoverage":false},{"functionName":"createFinalization","ranges":[{"startOffset":419,"endOffset":3475,"count":1}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":720,"endOffset":851,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":857,"endOffset":1102,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":1108,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"onBeforeExit","ranges":[{"startOffset":1167,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"callRefsToFree","ranges":[{"startOffset":1238,"endOffset":1604,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":1610,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"_register","ranges":[{"startOffset":1847,"endOffset":2104,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":2280,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"registerBeforeExit","ranges":[{"startOffset":2652,"endOffset":2872,"count":0}],"isBlockCoverage":false},{"functionName":"unregister","ranges":[{"startOffset":2991,"endOffset":3395,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5213,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1585,"endOffset":1694,"count":128}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1698,"endOffset":2188,"count":1},{"startOffset":1776,"endOffset":1811,"count":0},{"startOffset":1850,"endOffset":1879,"count":0},{"startOffset":1965,"endOffset":2012,"count":0}],"isBlockCoverage":true},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2342,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2570,"endOffset":3567,"count":2},{"startOffset":2641,"endOffset":2668,"count":0},{"startOffset":2707,"endOffset":2736,"count":0},{"startOffset":2822,"endOffset":2869,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3869,"endOffset":4311,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4370,"endOffset":4513,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4551,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4737,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4922,"endOffset":5060,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":5101,"endOffset":5153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6715,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2622,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3258,"endOffset":6368,"count":185},{"startOffset":3465,"endOffset":3839,"count":0},{"startOffset":4188,"endOffset":4216,"count":0},{"startOffset":4335,"endOffset":4442,"count":1},{"startOffset":4740,"endOffset":4795,"count":0},{"startOffset":4802,"endOffset":5592,"count":0},{"startOffset":5598,"endOffset":5615,"count":0},{"startOffset":5621,"endOffset":5662,"count":0},{"startOffset":5668,"endOffset":5716,"count":0},{"startOffset":5721,"endOffset":5789,"count":0},{"startOffset":5791,"endOffset":6367,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5061,"endOffset":5082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6151,"endOffset":6204,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6372,"endOffset":6655,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2947,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":374,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":814,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":991,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":1049,"endOffset":1140,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1145,"endOffset":1196,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1201,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1297,"endOffset":1346,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1351,"endOffset":1431,"count":0}],"isBlockCoverage":false},{"functionName":"get excludeNetwork","ranges":[{"startOffset":1436,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"set excludeNetwork","ranges":[{"startOffset":1504,"endOffset":1605,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1610,"endOffset":1657,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1662,"endOffset":1804,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1809,"endOffset":1883,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1888,"endOffset":2010,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":2015,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":2086,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2258,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2351,"endOffset":2487,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2496,"endOffset":2674,"count":0}],"isBlockCoverage":false},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2678,"endOffset":2807,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2811,"endOffset":2887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/constants.5J7I254_.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1380,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":616,"endOffset":668,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":648,"endOffset":667,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":793,"endOffset":849,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":829,"endOffset":848,"count":14}],"isBlockCoverage":true}]},{"scriptId":"134","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/cross-spawn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1}],"isBlockCoverage":true},{"functionName":"spawn","ranges":[{"startOffset":131,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":591,"endOffset":1038,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"136","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13,"count":1}],"isBlockCoverage":true}]},{"scriptId":"137","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14,"count":1}],"isBlockCoverage":true}]},{"scriptId":"138","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/strip-final-newline/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":347,"count":1}],"isBlockCoverage":true},{"functionName":"stripFinalNewline","ranges":[{"startOffset":15,"endOffset":346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/npm-run-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1316,"count":1}],"isBlockCoverage":true},{"functionName":"npmRunPath","ranges":[{"startOffset":165,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"applyPreferLocal","ranges":[{"startOffset":660,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"applyExecPath","ranges":[{"startOffset":923,"endOffset":1102,"count":0}],"isBlockCoverage":false},{"functionName":"npmRunPathEnv","ranges":[{"startOffset":1134,"endOffset":1314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/lib/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2204,"count":1}],"isBlockCoverage":true},{"functionName":"getErrorPrefix","ranges":[{"startOffset":105,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"makeError","ranges":[{"startOffset":608,"endOffset":2202,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/node_modules/onetime/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1022,"count":1}],"isBlockCoverage":true},{"functionName":"onetime","ranges":[{"startOffset":95,"endOffset":767,"count":0}],"isBlockCoverage":false},{"functionName":"onetime.callCount","ranges":[{"startOffset":790,"endOffset":995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/lib/stdio.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1157,"count":1}],"isBlockCoverage":true},{"functionName":"hasAlias","ranges":[{"startOffset":65,"endOffset":127,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStdio","ranges":[{"startOffset":160,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStdioNode","ranges":[{"startOffset":879,"endOffset":1155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"143","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/lib/pipe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1194,"count":1}],"isBlockCoverage":true},{"functionName":"isExecaChildProcess","ranges":[{"startOffset":165,"endOffset":242,"count":0}],"isBlockCoverage":false},{"functionName":"pipeToTarget","ranges":[{"startOffset":266,"endOffset":826,"count":0}],"isBlockCoverage":false},{"functionName":"addPipeMethods","ranges":[{"startOffset":859,"endOffset":1192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15837,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1129,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2163,"endOffset":3282,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3287,"endOffset":3538,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":3542,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3673,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4706,"endOffset":6514,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6709,"endOffset":6766,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6771,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6869,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":7077,"endOffset":8254,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":8291,"endOffset":8864,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8898,"endOffset":8987,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9071,"endOffset":9105,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":9138,"endOffset":11211,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11409,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11471,"endOffset":11530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11570,"endOffset":11597,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":11753,"endOffset":12573,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":12577,"endOffset":13421,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":13456,"endOffset":13855,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":13892,"endOffset":14480,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":14518,"endOffset":15091,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":15126,"endOffset":15526,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15715,"endOffset":15749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/lib/kill.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2985,"count":1}],"isBlockCoverage":true},{"functionName":"spawnedKill","ranges":[{"startOffset":216,"endOffset":369,"count":0}],"isBlockCoverage":false},{"functionName":"setKillTimeout","ranges":[{"startOffset":395,"endOffset":846,"count":0}],"isBlockCoverage":false},{"functionName":"shouldForceKill","ranges":[{"startOffset":873,"endOffset":988,"count":0}],"isBlockCoverage":false},{"functionName":"isSigterm","ranges":[{"startOffset":1009,"endOffset":1130,"count":0}],"isBlockCoverage":false},{"functionName":"getForceKillAfterTimeout","ranges":[{"startOffset":1166,"endOffset":1566,"count":0}],"isBlockCoverage":false},{"functionName":"spawnedCancel","ranges":[{"startOffset":1625,"endOffset":1738,"count":0}],"isBlockCoverage":false},{"functionName":"timeoutKill","ranges":[{"startOffset":1761,"endOffset":1890,"count":0}],"isBlockCoverage":false},{"functionName":"setupTimeout","ranges":[{"startOffset":1950,"endOffset":2419,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":2453,"endOffset":2677,"count":0}],"isBlockCoverage":false},{"functionName":"setExitHandler","ranges":[{"startOffset":2739,"endOffset":2983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9980,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2088,"endOffset":2343,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2148,"endOffset":2338,"count":1},{"startOffset":2247,"endOffset":2316,"count":0}],"isBlockCoverage":true},{"functionName":"getOSRelease","ranges":[{"startOffset":2742,"endOffset":2755,"count":3}],"isBlockCoverage":true},{"functionName":"getOSType","ranges":[{"startOffset":2808,"endOffset":2818,"count":1}],"isBlockCoverage":true},{"functionName":"getOSVersion","ranges":[{"startOffset":2874,"endOffset":2887,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2941,"endOffset":2954,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":3004,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":3070,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3124,"endOffset":3143,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3180,"endOffset":3200,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3234,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3288,"endOffset":3308,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3343,"endOffset":3361,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3402,"endOffset":3426,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3462,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3515,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3679,"endOffset":3782,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":4079,"endOffset":4527,"count":3},{"startOffset":4183,"endOffset":4188,"count":0},{"startOffset":4253,"endOffset":4506,"count":24}],"isBlockCoverage":true},{"functionName":"arch","ranges":[{"startOffset":4563,"endOffset":4607,"count":1}],"isBlockCoverage":true},{"functionName":"arch.<computed>","ranges":[{"startOffset":4635,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4690,"endOffset":4742,"count":6}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4774,"endOffset":4796,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4833,"endOffset":5242,"count":1},{"startOffset":4908,"endOffset":4938,"count":0},{"startOffset":4939,"endOffset":5011,"count":0},{"startOffset":5079,"endOffset":5128,"count":0},{"startOffset":5137,"endOffset":5178,"count":0},{"startOffset":5203,"endOffset":5238,"count":0}],"isBlockCoverage":true},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5272,"endOffset":5286,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5328,"endOffset":5377,"count":1}],"isBlockCoverage":true},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5411,"endOffset":5428,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5520,"endOffset":5778,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5782,"endOffset":6770,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6994,"endOffset":7715,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7806,"endOffset":8108,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8172,"endOffset":8440,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8758,"endOffset":9062,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/lib/verbose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"padField","ranges":[{"startOffset":148,"endOffset":204,"count":0}],"isBlockCoverage":false},{"functionName":"getTimestamp","ranges":[{"startOffset":228,"endOffset":413,"count":0}],"isBlockCoverage":false},{"functionName":"logCommand","ranges":[{"startOffset":442,"endOffset":573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"148","url":"node:internal/util/parse_args/parse_args","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14255,"count":1}],"isBlockCoverage":false},{"functionName":"getMainArgs","ranges":[{"startOffset":1192,"endOffset":1800,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1951,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2753,"endOffset":4021,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":4365,"endOffset":5535,"count":0}],"isBlockCoverage":false},{"functionName":"storeDefaultOption","ranges":[{"startOffset":5871,"endOffset":6046,"count":0}],"isBlockCoverage":false},{"functionName":"argsToTokens","ranges":[{"startOffset":6331,"endOffset":10426,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":10448,"endOffset":14212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"149","url":"node:internal/util/parse_args/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6422,"count":1}],"isBlockCoverage":false},{"functionName":"objectGetOwn","ranges":[{"startOffset":718,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"optionsGetOwn","ranges":[{"startOffset":898,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionValue","ranges":[{"startOffset":1323,"endOffset":1554,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1778,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":2005,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2419,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2776,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3847,"endOffset":4240,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4560,"endOffset":4999,"count":0}],"isBlockCoverage":false},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5333,"endOffset":5642,"count":0}],"isBlockCoverage":false},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5976,"endOffset":6149,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/lib/command.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2998,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeArgs","ranges":[{"startOffset":108,"endOffset":207,"count":0}],"isBlockCoverage":false},{"functionName":"escapeArg","ranges":[{"startOffset":267,"endOffset":400,"count":0}],"isBlockCoverage":false},{"functionName":"joinCommand","ranges":[{"startOffset":430,"endOffset":481,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedCommand","ranges":[{"startOffset":517,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":683,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":1148,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"concatTokens","ranges":[{"startOffset":1886,"endOffset":2100,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplate","ranges":[{"startOffset":2125,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplates","ranges":[{"startOffset":2792,"endOffset":2995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/lib/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1109,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91,"endOffset":105,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":186,"endOffset":281,"count":3}],"isBlockCoverage":true},{"functionName":"mergePromise","ranges":[{"startOffset":376,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"getSpawnedPromise","ranges":[{"startOffset":835,"endOffset":1107,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/lib/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3501,"count":1}],"isBlockCoverage":true},{"functionName":"validateInputOptions","ranges":[{"startOffset":268,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"getInputSync","ranges":[{"startOffset":417,"endOffset":565,"count":0}],"isBlockCoverage":false},{"functionName":"handleInputSync","ranges":[{"startOffset":646,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"getInput","ranges":[{"startOffset":839,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"handleInput","ranges":[{"startOffset":1069,"endOffset":1265,"count":0}],"isBlockCoverage":false},{"functionName":"makeAllStream","ranges":[{"startOffset":1340,"endOffset":1588,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedData","ranges":[{"startOffset":1702,"endOffset":2118,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamPromise","ranges":[{"startOffset":2146,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"applyEncoding","ranges":[{"startOffset":2578,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"getSpawnedResult","ranges":[{"startOffset":2843,"endOffset":3499,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"node:timers/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6606,"count":1}],"isBlockCoverage":false},{"functionName":"cancelListenerHandler","ranges":[{"startOffset":726,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":905,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":2258,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":3536,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"Scheduler","ranges":[{"startOffset":5837,"endOffset":5899,"count":0}],"isBlockCoverage":true},{"functionName":"yield","ranges":[{"startOffset":5950,"endOffset":6068,"count":0}],"isBlockCoverage":false},{"functionName":"wait","ranges":[{"startOffset":6277,"endOffset":6431,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6536,"endOffset":6583,"count":1}],"isBlockCoverage":true}]},{"scriptId":"154","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/npm-run-path/node_modules/path-key/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1}],"isBlockCoverage":true},{"functionName":"pathKey","ranges":[{"startOffset":15,"endOffset":262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/human-signals/build/src/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1208,"count":1}],"isBlockCoverage":true},{"functionName":"getSignalsByName","ranges":[{"startOffset":134,"endOffset":225,"count":1}],"isBlockCoverage":true},{"functionName":"getSignalByName","ranges":[{"startOffset":250,"endOffset":385,"count":69}],"isBlockCoverage":true},{"functionName":"getSignalsByNumber","ranges":[{"startOffset":464,"endOffset":650,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":558,"endOffset":608,"count":65}],"isBlockCoverage":true},{"functionName":"getSignalByNumber","ranges":[{"startOffset":677,"endOffset":935,"count":65},{"startOffset":769,"endOffset":781,"count":3},{"startOffset":781,"endOffset":934,"count":62}],"isBlockCoverage":true},{"functionName":"findSignalByNumber","ranges":[{"startOffset":965,"endOffset":1155,"count":65},{"startOffset":1079,"endOffset":1096,"count":11},{"startOffset":1096,"endOffset":1154,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1011,"endOffset":1053,"count":3850}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1118,"endOffset":1152,"count":2312}],"isBlockCoverage":true}]},{"scriptId":"156","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/node_modules/mimic-fn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2903,"count":1}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":21,"endOffset":887,"count":0}],"isBlockCoverage":false},{"functionName":"canCopyProperty","ranges":[{"startOffset":1091,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"changePrototype","ranges":[{"startOffset":1484,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedToString","ranges":[{"startOffset":1689,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"changeToString","ranges":[{"startOffset":2221,"endOffset":2603,"count":0}],"isBlockCoverage":false},{"functionName":"mimicFunction","ranges":[{"startOffset":2621,"endOffset":2902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/node_modules/is-stream/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":746,"count":1}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":7,"endOffset":132,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":141,"endOffset":323,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":332,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexStream","ranges":[{"startOffset":522,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":630,"endOffset":745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/node_modules/signal-exit/dist/mjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9090,"count":1},{"startOffset":9028,"endOffset":9054,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":323,"endOffset":690,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":882,"endOffset":2172,"count":1}],"isBlockCoverage":true},{"functionName":"Emitter","ranges":[{"startOffset":1063,"endOffset":1354,"count":1},{"startOffset":1113,"endOffset":1165,"count":0}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":1359,"endOffset":1414,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":1419,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1783,"endOffset":2170,"count":0}],"isBlockCoverage":false},{"functionName":"signalExitWrap","ranges":[{"startOffset":2221,"endOffset":2470,"count":1}],"isBlockCoverage":true},{"functionName":"onExit","ranges":[{"startOffset":2257,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2340,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2403,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":2526,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2573,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2588,"endOffset":2600,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2643,"endOffset":8102,"count":1},{"startOffset":2819,"endOffset":2829,"count":0}],"isBlockCoverage":true},{"functionName":"SignalExit","ranges":[{"startOffset":3007,"endOffset":4931,"count":1},{"startOffset":3192,"endOffset":4813,"count":3}],"isBlockCoverage":true},{"functionName":"SignalExit.#sigListeners.<computed>","ranges":[{"startOffset":3232,"endOffset":4802,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":4936,"endOffset":5529,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5534,"endOffset":6349,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":6354,"endOffset":7092,"count":0}],"isBlockCoverage":false},{"functionName":"#processReallyExit","ranges":[{"startOffset":7097,"endOffset":7463,"count":0}],"isBlockCoverage":false},{"functionName":"#processEmit","ranges":[{"startOffset":7468,"endOffset":8100,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"node:internal/source_map/source_map_cache_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3768,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":969,"endOffset":3672,"count":1}],"isBlockCoverage":false},{"functionName":"#cleanup","ranges":[{"startOffset":1407,"endOffset":1791,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2243,"endOffset":2563,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2373,"endOffset":2419,"count":22}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2671,"endOffset":2906,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":3065,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3126,"endOffset":3669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/get-stream/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true}]},{"scriptId":"161","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/human-signals/build/src/realtime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":352,"count":1}],"isBlockCoverage":true},{"functionName":"getRealtimeSignals","ranges":[{"startOffset":33,"endOffset":120,"count":2}],"isBlockCoverage":true},{"functionName":"getRealtimeSignal","ranges":[{"startOffset":147,"endOffset":305,"count":62}],"isBlockCoverage":true}]},{"scriptId":"162","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/human-signals/build/src/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":601,"count":1}],"isBlockCoverage":true},{"functionName":"getSignals","ranges":[{"startOffset":139,"endOffset":273,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeSignal","ranges":[{"startOffset":304,"endOffset":600,"count":138},{"startOffset":503,"endOffset":518,"count":22},{"startOffset":518,"endOffset":532,"count":116}],"isBlockCoverage":true}]},{"scriptId":"163","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/merge-stream/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":885,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":76,"endOffset":884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"165","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/node_modules/signal-exit/dist/mjs/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1438,"count":1},{"startOffset":1073,"endOffset":1303,"count":0},{"startOffset":1338,"endOffset":1402,"count":0}],"isBlockCoverage":true}]},{"scriptId":"166","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/get-stream/source/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":606,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamAsBuffer","ranges":[{"startOffset":66,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToNodeBuffer","ranges":[{"startOffset":554,"endOffset":604,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/get-stream/source/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1139,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamAsString","ranges":[{"startOffset":145,"endOffset":257,"count":0}],"isBlockCoverage":false},{"functionName":"initString","ranges":[{"startOffset":278,"endOffset":332,"count":0}],"isBlockCoverage":false},{"functionName":"useTextDecoder","ranges":[{"startOffset":358,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"addStringChunk","ranges":[{"startOffset":451,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"truncateStringChunk","ranges":[{"startOffset":539,"endOffset":604,"count":0}],"isBlockCoverage":false},{"functionName":"getFinalStringChunk","ranges":[{"startOffset":635,"endOffset":751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/get-stream/source/array-buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3325,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamAsArrayBuffer","ranges":[{"startOffset":124,"endOffset":246,"count":0}],"isBlockCoverage":false},{"functionName":"initArrayBuffer","ranges":[{"startOffset":272,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"useTextEncoder","ranges":[{"startOffset":336,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"useUint8Array","ranges":[{"startOffset":434,"endOffset":464,"count":0}],"isBlockCoverage":false},{"functionName":"useUint8ArrayWithOffset","ranges":[{"startOffset":499,"endOffset":572,"count":0}],"isBlockCoverage":false},{"functionName":"truncateArrayBufferChunk","ranges":[{"startOffset":608,"endOffset":673,"count":0}],"isBlockCoverage":false},{"functionName":"addArrayBufferChunk","ranges":[{"startOffset":759,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"resizeArrayBufferSlow","ranges":[{"startOffset":1272,"endOffset":1510,"count":0}],"isBlockCoverage":false},{"functionName":"resizeArrayBuffer","ranges":[{"startOffset":1853,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"getNewContentsLength","ranges":[{"startOffset":2244,"endOffset":2322,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeArrayBuffer","ranges":[{"startOffset":2378,"endOffset":2463,"count":0}],"isBlockCoverage":false},{"functionName":"hasArrayBufferResize","ranges":[{"startOffset":2867,"endOffset":2906,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/get-stream/source/contents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2789,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamContents","ranges":[{"startOffset":33,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"appendFinalChunk","ranges":[{"startOffset":838,"endOffset":1085,"count":0}],"isBlockCoverage":false},{"functionName":"appendChunk","ranges":[{"startOffset":1108,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"addNewChunk","ranges":[{"startOffset":1613,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncIterable","ranges":[{"startOffset":1780,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"getChunkType","ranges":[{"startOffset":1913,"endOffset":2608,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2707,"endOffset":2788,"count":0}],"isBlockCoverage":true}]},{"scriptId":"170","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/human-signals/build/src/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"171","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/get-stream/source/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":725,"count":1}],"isBlockCoverage":true},{"functionName":"getStreamAsArray","ranges":[{"startOffset":117,"endOffset":227,"count":0}],"isBlockCoverage":false},{"functionName":"initArray","ranges":[{"startOffset":247,"endOffset":269,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":290,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"addArrayChunk","ranges":[{"startOffset":322,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/get-stream/source/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":335,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":24,"endOffset":38,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":61,"endOffset":76,"count":0}],"isBlockCoverage":false},{"functionName":"getContentsProp","ranges":[{"startOffset":110,"endOffset":134,"count":0}],"isBlockCoverage":false},{"functionName":"throwObjectStream","ranges":[{"startOffset":170,"endOffset":262,"count":0}],"isBlockCoverage":false},{"functionName":"getLengthProp","ranges":[{"startOffset":294,"endOffset":333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/cross-spawn/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1}],"isBlockCoverage":true},{"functionName":"detectShebang","ranges":[{"startOffset":354,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"parseNonShell","ranges":[{"startOffset":661,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2369,"endOffset":3039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/cross-spawn/lib/util/resolveCommand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1557,"count":1}],"isBlockCoverage":true},{"functionName":"resolveCommandAttempt","ranges":[{"startOffset":118,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCommand","ranges":[{"startOffset":1406,"endOffset":1522,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/which/which.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3163,"count":1},{"startOffset":47,"endOffset":85,"count":0},{"startOffset":86,"endOffset":122,"count":0},{"startOffset":183,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"getNotFoundError","ranges":[{"startOffset":246,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":344,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"which","ranges":[{"startOffset":1168,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"whichSync","ranges":[{"startOffset":2299,"endOffset":3115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/isexe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1},{"startOffset":65,"endOffset":90,"count":0},{"startOffset":128,"endOffset":167,"count":0}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":211,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":930,"endOffset":1191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/isexe/windows.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":890,"count":1}],"isBlockCoverage":true},{"functionName":"checkPathExt","ranges":[{"startOffset":66,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"checkStat","ranges":[{"startOffset":510,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"isexe","ranges":[{"startOffset":664,"endOffset":801,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":803,"endOffset":889,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/path-key/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":415,"count":1}],"isBlockCoverage":true},{"functionName":"pathKey","ranges":[{"startOffset":31,"endOffset":304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/cross-spawn/lib/util/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1383,"count":1}],"isBlockCoverage":true},{"functionName":"escapeCommand","ranges":[{"startOffset":121,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"escapeArgument","ranges":[{"startOffset":243,"endOffset":1299,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/cross-spawn/lib/util/readShebang.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":true},{"functionName":"readShebang","ranges":[{"startOffset":93,"endOffset":517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/shebang-command/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":387,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":79,"endOffset":385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/shebang-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"183","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/cross-spawn/lib/enoent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1471,"count":1}],"isBlockCoverage":true},{"functionName":"notFoundError","ranges":[{"startOffset":60,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"hookChildProcess","ranges":[{"startOffset":360,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENT","ranges":[{"startOffset":1016,"endOffset":1186,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENTSync","ranges":[{"startOffset":1188,"endOffset":1366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2495,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":778,"endOffset":1557,"count":8}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":1047,"endOffset":1553,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":1868,"endOffset":2442,"count":8}],"isBlockCoverage":true}]},{"scriptId":"185","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/cli.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":236,"count":1}],"isBlockCoverage":true}]},{"scriptId":"186","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pathe/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":272,"count":1}],"isBlockCoverage":true}]},{"scriptId":"187","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/base.5NT-gWu5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3585,"count":1}],"isBlockCoverage":true},{"functionName":"collectOwnProperties","ranges":[{"startOffset":25,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"groupBy","ranges":[{"startOffset":274,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":342,"endOffset":468,"count":24},{"startOffset":404,"endOffset":422,"count":1}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":477,"endOffset":593,"count":28}],"isBlockCoverage":true},{"functionName":"getAllMockableProperties","ranges":[{"startOffset":594,"endOffset":1444,"count":0}],"isBlockCoverage":false},{"functionName":"slash","ranges":[{"startOffset":1445,"endOffset":1502,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1503,"endOffset":1522,"count":1}],"isBlockCoverage":true},{"functionName":"toArray","ranges":[{"startOffset":1523,"endOffset":1672,"count":4},{"startOffset":1595,"endOffset":1606,"count":1},{"startOffset":1652,"endOffset":1671,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1673,"endOffset":1741,"count":193}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":1742,"endOffset":1878,"count":193},{"startOffset":1817,"endOffset":1875,"count":67}],"isBlockCoverage":true},{"functionName":"deepMerge","ranges":[{"startOffset":1879,"endOffset":2401,"count":46},{"startOffset":1947,"endOffset":1961,"count":21},{"startOffset":1961,"endOffset":2025,"count":25},{"startOffset":2025,"endOffset":2039,"count":0},{"startOffset":2039,"endOffset":2100,"count":25},{"startOffset":2102,"endOffset":2400,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2136,"endOffset":2353,"count":143},{"startOffset":2189,"endOffset":2297,"count":17},{"startOffset":2227,"endOffset":2244,"count":13},{"startOffset":2297,"endOffset":2347,"count":126}],"isBlockCoverage":true},{"functionName":"isMergeableObject","ranges":[{"startOffset":2402,"endOffset":2492,"count":193},{"startOffset":2466,"endOffset":2489,"count":67}],"isBlockCoverage":true},{"functionName":"stdout","ranges":[{"startOffset":2493,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2602,"endOffset":2708,"count":0}],"isBlockCoverage":true},{"functionName":"isChildProcess","ranges":[{"startOffset":2709,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"setProcessTitle","ranges":[{"startOffset":2798,"endOffset":2896,"count":0}],"isBlockCoverage":false},{"functionName":"escapeRegExp","ranges":[{"startOffset":2897,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"wildcardPatternToRegExp","ranges":[{"startOffset":2977,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"nanoid","ranges":[{"startOffset":3193,"endOffset":3328,"count":1},{"startOffset":3271,"endOffset":3313,"count":21}],"isBlockCoverage":true}]},{"scriptId":"188","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/utils/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20868,"count":1}],"isBlockCoverage":true},{"functionName":"getSafeTimers","ranges":[{"startOffset":538,"endOffset":1229,"count":0}],"isBlockCoverage":false},{"functionName":"setSafeTimers","ranges":[{"startOffset":1230,"endOffset":1904,"count":0}],"isBlockCoverage":false},{"functionName":"random","ranges":[{"startOffset":1929,"endOffset":2018,"count":0}],"isBlockCoverage":false},{"functionName":"shuffle","ranges":[{"startOffset":2019,"endOffset":2303,"count":0}],"isBlockCoverage":false},{"functionName":"createSimpleStackTrace","ranges":[{"startOffset":2305,"endOffset":2769,"count":0}],"isBlockCoverage":false},{"functionName":"positionToOffset","ranges":[{"startOffset":2800,"endOffset":3133,"count":9},{"startOffset":2942,"endOffset":2945,"count":0},{"startOffset":3001,"endOffset":3022,"count":0},{"startOffset":3070,"endOffset":3100,"count":1132}],"isBlockCoverage":true},{"functionName":"offsetToLineNumber","ranges":[{"startOffset":3134,"endOffset":3644,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultExportFromCjs","ranges":[{"startOffset":3646,"endOffset":3786,"count":1},{"startOffset":3711,"endOffset":3764,"count":0},{"startOffset":3765,"endOffset":3779,"count":0}],"isBlockCoverage":true},{"functionName":"jsTokens_1","ranges":[{"startOffset":5863,"endOffset":16156,"count":8},{"startOffset":6267,"endOffset":16138,"count":11608},{"startOffset":6328,"endOffset":6338,"count":11554},{"startOffset":6342,"endOffset":6370,"count":11582},{"startOffset":6469,"endOffset":6584,"count":125},{"startOffset":6526,"endOffset":6583,"count":57},{"startOffset":6586,"endOffset":6993,"count":68},{"startOffset":6696,"endOffset":6987,"count":2},{"startOffset":6993,"endOffset":7072,"count":11606},{"startOffset":7072,"endOffset":10145,"count":4053},{"startOffset":7222,"endOffset":7477,"count":706},{"startOffset":7298,"endOffset":7410,"count":6},{"startOffset":7484,"endOffset":7764,"count":706},{"startOffset":7593,"endOffset":7625,"count":7},{"startOffset":7627,"endOffset":7750,"count":6},{"startOffset":7771,"endOffset":8090,"count":300},{"startOffset":7896,"endOffset":8011,"count":185},{"startOffset":7953,"endOffset":8010,"count":54},{"startOffset":8097,"endOffset":9315,"count":310},{"startOffset":8142,"endOffset":8887,"count":10},{"startOffset":8421,"endOffset":8629,"count":0},{"startOffset":8871,"endOffset":8887,"count":0},{"startOffset":8896,"endOffset":9176,"count":0},{"startOffset":9185,"endOffset":9271,"count":300},{"startOffset":9271,"endOffset":9294,"count":132},{"startOffset":9295,"endOffset":9300,"count":168},{"startOffset":9322,"endOffset":9374,"count":46},{"startOffset":9381,"endOffset":9391,"count":0},{"startOffset":9398,"endOffset":9507,"count":0},{"startOffset":9514,"endOffset":9913,"count":5},{"startOffset":9539,"endOffset":9654,"count":0},{"startOffset":9656,"endOffset":9869,"count":0},{"startOffset":9920,"endOffset":9958,"count":1980},{"startOffset":9965,"endOffset":10145,"count":4043},{"startOffset":10145,"endOffset":10224,"count":7553},{"startOffset":10224,"endOffset":10819,"count":2550},{"startOffset":10338,"endOffset":10349,"count":0},{"startOffset":10356,"endOffset":10366,"count":6},{"startOffset":10373,"endOffset":10386,"count":6},{"startOffset":10393,"endOffset":10555,"count":6},{"startOffset":10726,"endOffset":10747,"count":0},{"startOffset":10819,"endOffset":10904,"count":5003},{"startOffset":10904,"endOffset":11142,"count":366},{"startOffset":11142,"endOffset":11229,"count":4637},{"startOffset":11229,"endOffset":11434,"count":137},{"startOffset":11434,"endOffset":11509,"count":4500},{"startOffset":11509,"endOffset":12066,"count":10},{"startOffset":11883,"endOffset":12045,"count":0},{"startOffset":12066,"endOffset":12077,"count":4490},{"startOffset":12081,"endOffset":12095,"count":0},{"startOffset":12099,"endOffset":13782,"count":0},{"startOffset":13786,"endOffset":14569,"count":0},{"startOffset":14573,"endOffset":14648,"count":4490},{"startOffset":14648,"endOffset":14766,"count":3089},{"startOffset":14766,"endOffset":14865,"count":1401},{"startOffset":14865,"endOffset":15161,"count":1278},{"startOffset":15011,"endOffset":15069,"count":0},{"startOffset":15161,"endOffset":15248,"count":123},{"startOffset":15248,"endOffset":15607,"count":0},{"startOffset":15607,"endOffset":15854,"count":123},{"startOffset":15854,"endOffset":16091,"count":0},{"startOffset":16092,"endOffset":16103,"count":0},{"startOffset":16135,"endOffset":16138,"count":0}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":17078,"endOffset":17157,"count":3493},{"startOffset":17136,"endOffset":17154,"count":3403}],"isBlockCoverage":true},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":17158,"endOffset":17264,"count":3493},{"startOffset":17226,"endOffset":17261,"count":3403}],"isBlockCoverage":true},{"functionName":"isKeyword","ranges":[{"startOffset":17265,"endOffset":17322,"count":3786}],"isBlockCoverage":true},{"functionName":"getTokenType","ranges":[{"startOffset":17367,"endOffset":17857,"count":12844},{"startOffset":17424,"endOffset":17673,"count":3786},{"startOffset":17457,"endOffset":17493,"count":3493},{"startOffset":17494,"endOffset":17531,"count":3374},{"startOffset":17539,"endOffset":17556,"count":600},{"startOffset":17556,"endOffset":17630,"count":3186},{"startOffset":17638,"endOffset":17669,"count":198},{"startOffset":17673,"endOffset":17711,"count":12046},{"startOffset":17711,"endOffset":17739,"count":4043},{"startOffset":17740,"endOffset":17751,"count":2104},{"startOffset":17752,"endOffset":17854,"count":9942},{"startOffset":17779,"endOffset":17826,"count":0},{"startOffset":17827,"endOffset":17841,"count":0}],"isBlockCoverage":true},{"functionName":"getCallableType","ranges":[{"startOffset":17859,"endOffset":18091,"count":516},{"startOffset":17964,"endOffset":18090,"count":0}],"isBlockCoverage":true},{"functionName":"colorize","ranges":[{"startOffset":18107,"endOffset":18210,"count":11608},{"startOffset":18181,"endOffset":18199,"count":3901},{"startOffset":18200,"endOffset":18207,"count":7707}],"isBlockCoverage":true},{"functionName":"highlightTokens","ranges":[{"startOffset":18230,"endOffset":19497,"count":8},{"startOffset":18375,"endOffset":19473,"count":11608},{"startOffset":18447,"endOffset":18478,"count":9856},{"startOffset":18480,"endOffset":18706,"count":1752},{"startOffset":18510,"endOffset":18652,"count":7},{"startOffset":18706,"endOffset":18737,"count":9856},{"startOffset":18737,"endOffset":18892,"count":1980},{"startOffset":18769,"endOffset":18811,"count":1759},{"startOffset":18812,"endOffset":18891,"count":1751},{"startOffset":18843,"endOffset":18891,"count":1689},{"startOffset":18868,"endOffset":18890,"count":1683},{"startOffset":18894,"endOffset":18978,"count":235},{"startOffset":18978,"endOffset":19004,"count":9621},{"startOffset":19004,"endOffset":19029,"count":220},{"startOffset":19030,"endOffset":19089,"count":0},{"startOffset":19114,"endOffset":19415,"count":1745},{"startOffset":19162,"endOffset":19184,"count":1683},{"startOffset":19185,"endOffset":19225,"count":516},{"startOffset":19226,"endOffset":19263,"count":1229},{"startOffset":19415,"endOffset":19473,"count":9621}],"isBlockCoverage":true},{"functionName":"highlight$1","ranges":[{"startOffset":19499,"endOffset":19639,"count":8},{"startOffset":19611,"endOffset":19616,"count":0}],"isBlockCoverage":true},{"functionName":"getDefs","ranges":[{"startOffset":19641,"endOffset":20536,"count":8}],"isBlockCoverage":true},{"functionName":"Invalid","ranges":[{"startOffset":19681,"endOffset":19721,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateHead","ranges":[{"startOffset":20031,"endOffset":20105,"count":10}],"isBlockCoverage":true},{"functionName":"TemplateTail","ranges":[{"startOffset":20125,"endOffset":20184,"count":10}],"isBlockCoverage":true},{"functionName":"TemplateMiddle","ranges":[{"startOffset":20206,"endOffset":20307,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateIdentifierCallable","ranges":[{"startOffset":20372,"endOffset":20409,"count":0}],"isBlockCoverage":false},{"functionName":"highlight","ranges":[{"startOffset":20537,"endOffset":20699,"count":8},{"startOffset":20676,"endOffset":20690,"count":0}],"isBlockCoverage":true}]},{"scriptId":"189","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/cac.EdDItJD-.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":48132,"count":1}],"isBlockCoverage":true},{"functionName":"toArr","ranges":[{"startOffset":239,"endOffset":323,"count":63},{"startOffset":281,"endOffset":285,"count":7},{"startOffset":286,"endOffset":320,"count":56},{"startOffset":313,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"toVal","ranges":[{"startOffset":325,"endOffset":768,"count":7},{"startOffset":421,"endOffset":471,"count":0},{"startOffset":509,"endOffset":677,"count":0},{"startOffset":712,"endOffset":765,"count":0}],"isBlockCoverage":true},{"functionName":"mri2","ranges":[{"startOffset":770,"endOffset":3144,"count":7},{"startOffset":812,"endOffset":817,"count":0},{"startOffset":832,"endOffset":837,"count":0},{"startOffset":1071,"endOffset":1076,"count":0},{"startOffset":1189,"endOffset":1337,"count":49},{"startOffset":1381,"endOffset":1486,"count":420},{"startOffset":1419,"endOffset":1424,"count":392},{"startOffset":1457,"endOffset":1483,"count":28},{"startOffset":1526,"endOffset":1629,"count":0},{"startOffset":1646,"endOffset":1896,"count":0},{"startOffset":1919,"endOffset":1944,"count":0},{"startOffset":1977,"endOffset":2877,"count":14},{"startOffset":2017,"endOffset":2074,"count":0},{"startOffset":2109,"endOffset":2161,"count":28},{"startOffset":2144,"endOffset":2150,"count":14},{"startOffset":2178,"endOffset":2874,"count":7},{"startOffset":2248,"endOffset":2383,"count":0},{"startOffset":2433,"endOffset":2489,"count":49},{"startOffset":2471,"endOffset":2477,"count":0},{"startOffset":2570,"endOffset":2608,"count":0},{"startOffset":2609,"endOffset":2621,"count":0},{"startOffset":2651,"endOffset":2657,"count":0},{"startOffset":2739,"endOffset":2762,"count":0},{"startOffset":2764,"endOffset":2806,"count":0},{"startOffset":2894,"endOffset":2993,"count":0},{"startOffset":3026,"endOffset":3125,"count":14},{"startOffset":3084,"endOffset":3121,"count":0}],"isBlockCoverage":true},{"functionName":"removeBrackets","ranges":[{"startOffset":3169,"endOffset":3206,"count":145}],"isBlockCoverage":true},{"functionName":"findAllBrackets","ranges":[{"startOffset":3232,"endOffset":3877,"count":8},{"startOffset":3706,"endOffset":3745,"count":0},{"startOffset":3822,"endOffset":3861,"count":7}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3376,"endOffset":3628,"count":7}],"isBlockCoverage":true},{"functionName":"getMriOptions","ranges":[{"startOffset":3901,"endOffset":4554,"count":7},{"startOffset":4010,"endOffset":4535,"count":947},{"startOffset":4045,"endOffset":4113,"count":49},{"startOffset":4140,"endOffset":4531,"count":420},{"startOffset":4168,"endOffset":4464,"count":7},{"startOffset":4464,"endOffset":4525,"count":413}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4219,"endOffset":4360,"count":947},{"startOffset":4260,"endOffset":4314,"count":940},{"startOffset":4315,"endOffset":4349,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4276,"endOffset":4313,"count":989}],"isBlockCoverage":true},{"functionName":"findLongest","ranges":[{"startOffset":4576,"endOffset":4668,"count":0}],"isBlockCoverage":false},{"functionName":"padRight","ranges":[{"startOffset":4687,"endOffset":4789,"count":0}],"isBlockCoverage":false},{"functionName":"camelcase","ranges":[{"startOffset":4809,"endOffset":4923,"count":158}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4865,"endOffset":4919,"count":0}],"isBlockCoverage":false},{"functionName":"setDotProp","ranges":[{"startOffset":4944,"endOffset":5445,"count":7},{"startOffset":5289,"endOffset":5302,"count":0},{"startOffset":5358,"endOffset":5437,"count":0}],"isBlockCoverage":true},{"functionName":"convertKey","ranges":[{"startOffset":5062,"endOffset":5191,"count":7},{"startOffset":5121,"endOffset":5172,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":5293,"endOffset":5301,"count":0}],"isBlockCoverage":false},{"functionName":"getFileName","ranges":[{"startOffset":5467,"endOffset":5544,"count":0}],"isBlockCoverage":false},{"functionName":"camelcaseOptionName","ranges":[{"startOffset":5574,"endOffset":5683,"count":158}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5615,"endOffset":5669,"count":273},{"startOffset":5646,"endOffset":5660,"count":158},{"startOffset":5661,"endOffset":5664,"count":115}],"isBlockCoverage":true},{"functionName":"CACError","ranges":[{"startOffset":5718,"endOffset":5979,"count":0}],"isBlockCoverage":false},{"functionName":"Option","ranges":[{"startOffset":6000,"endOffset":6872,"count":137},{"startOffset":6617,"endOffset":6647,"count":1},{"startOffset":6649,"endOffset":6690,"count":1},{"startOffset":6722,"endOffset":6757,"count":68},{"startOffset":6757,"endOffset":6868,"count":69},{"startOffset":6790,"endOffset":6826,"count":9},{"startOffset":6826,"endOffset":6868,"count":60}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6279,"endOffset":6497,"count":144},{"startOffset":6372,"endOffset":6451,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6504,"endOffset":6542,"count":7},{"startOffset":6538,"endOffset":6542,"count":0}],"isBlockCoverage":true},{"functionName":"Command","ranges":[{"startOffset":7013,"endOffset":7336,"count":8}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":7339,"endOffset":7400,"count":1}],"isBlockCoverage":true},{"functionName":"allowUnknownOptions","ranges":[{"startOffset":7403,"endOffset":7491,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreOptionDefaultValue","ranges":[{"startOffset":7494,"endOffset":7592,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":7595,"endOffset":7755,"count":1}],"isBlockCoverage":true},{"functionName":"example","ranges":[{"startOffset":7758,"endOffset":7830,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7833,"endOffset":7984,"count":137}],"isBlockCoverage":true},{"functionName":"alias","ranges":[{"startOffset":7987,"endOffset":8053,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":8056,"endOffset":8130,"count":7}],"isBlockCoverage":true},{"functionName":"isMatched","ranges":[{"startOffset":8133,"endOffset":8219,"count":7},{"startOffset":8181,"endOffset":8214,"count":6}],"isBlockCoverage":true},{"functionName":"get isDefaultCommand","ranges":[{"startOffset":8222,"endOffset":8312,"count":0}],"isBlockCoverage":false},{"functionName":"get isGlobalCommand","ranges":[{"startOffset":8315,"endOffset":8384,"count":0}],"isBlockCoverage":false},{"functionName":"hasOption","ranges":[{"startOffset":8387,"endOffset":8532,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8465,"endOffset":8526,"count":150}],"isBlockCoverage":true},{"functionName":"outputHelp","ranges":[{"startOffset":8535,"endOffset":10773,"count":0}],"isBlockCoverage":false},{"functionName":"outputVersion","ranges":[{"startOffset":10776,"endOffset":10972,"count":0}],"isBlockCoverage":false},{"functionName":"checkRequiredArgs","ranges":[{"startOffset":10975,"endOffset":11217,"count":1},{"startOffset":11123,"endOffset":11213,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11043,"endOffset":11064,"count":1}],"isBlockCoverage":true},{"functionName":"checkUnknownOptions","ranges":[{"startOffset":11220,"endOffset":11597,"count":1},{"startOffset":11382,"endOffset":11587,"count":3},{"startOffset":11410,"endOffset":11434,"count":2},{"startOffset":11435,"endOffset":11468,"count":2},{"startOffset":11470,"endOffset":11579,"count":0}],"isBlockCoverage":true},{"functionName":"checkOptionValue","ranges":[{"startOffset":11600,"endOffset":12256,"count":1},{"startOffset":11782,"endOffset":12252,"count":135},{"startOffset":11889,"endOffset":11916,"count":79},{"startOffset":11916,"endOffset":11992,"count":56},{"startOffset":11992,"endOffset":12246,"count":27},{"startOffset":12132,"endOffset":12146,"count":0},{"startOffset":12148,"endOffset":12238,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12034,"endOffset":12083,"count":3645},{"startOffset":12051,"endOffset":12083,"count":27}],"isBlockCoverage":true},{"functionName":"GlobalCommand","ranges":[{"startOffset":12299,"endOffset":12359,"count":1}],"isBlockCoverage":true},{"functionName":"CAC","ranges":[{"startOffset":12428,"endOffset":12684,"count":1}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":12687,"endOffset":12757,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":12760,"endOffset":12979,"count":7}],"isBlockCoverage":true},{"functionName":"option","ranges":[{"startOffset":12982,"endOffset":13102,"count":133}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":13105,"endOffset":13291,"count":1}],"isBlockCoverage":true},{"functionName":"version","ranges":[{"startOffset":13294,"endOffset":13453,"count":1}],"isBlockCoverage":true},{"functionName":"example","ranges":[{"startOffset":13456,"endOffset":13536,"count":0}],"isBlockCoverage":false},{"functionName":"outputHelp","ranges":[{"startOffset":13539,"endOffset":13686,"count":0}],"isBlockCoverage":false},{"functionName":"outputVersion","ranges":[{"startOffset":13689,"endOffset":13750,"count":0}],"isBlockCoverage":false},{"functionName":"setParsedInfo","ranges":[{"startOffset":13753,"endOffset":14056,"count":1}],"isBlockCoverage":true},{"functionName":"unsetMatchedCommand","ranges":[{"startOffset":14059,"endOffset":14158,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":14161,"endOffset":15767,"count":1},{"startOffset":14261,"endOffset":14326,"count":0},{"startOffset":14396,"endOffset":14806,"count":7},{"startOffset":14537,"endOffset":14800,"count":1},{"startOffset":14828,"endOffset":15113,"count":0},{"startOffset":15135,"endOffset":15222,"count":0},{"startOffset":15249,"endOffset":15271,"count":0},{"startOffset":15273,"endOffset":15358,"count":0},{"startOffset":15388,"endOffset":15413,"count":0},{"startOffset":15414,"endOffset":15448,"count":0},{"startOffset":15450,"endOffset":15538,"count":0},{"startOffset":15686,"endOffset":15701,"count":0},{"startOffset":15703,"endOffset":15740,"count":0}],"isBlockCoverage":true},{"functionName":"mri","ranges":[{"startOffset":15770,"endOffset":17391,"count":7},{"startOffset":15888,"endOffset":15892,"count":0},{"startOffset":16068,"endOffset":16187,"count":0},{"startOffset":16573,"endOffset":16614,"count":0},{"startOffset":16751,"endOffset":17117,"count":947},{"startOffset":16818,"endOffset":16935,"count":7},{"startOffset":16977,"endOffset":17111,"count":933},{"startOffset":17161,"endOffset":17341,"count":14},{"startOffset":17186,"endOffset":17335,"count":7}],"isBlockCoverage":true},{"functionName":"Object.keys.reduce._","ranges":[{"startOffset":16269,"endOffset":16394,"count":14}],"isBlockCoverage":true},{"functionName":"runMatchedCommand","ranges":[{"startOffset":17394,"endOffset":17933,"count":1},{"startOffset":17525,"endOffset":17532,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17685,"endOffset":17839,"count":1},{"startOffset":17780,"endOffset":17833,"count":0}],"isBlockCoverage":true},{"functionName":"cac","ranges":[{"startOffset":17949,"endOffset":17977,"count":1}],"isBlockCoverage":true},{"functionName":"apiConfig","ranges":[{"startOffset":18022,"endOffset":18686,"count":2}],"isBlockCoverage":true},{"functionName":"watermarkTransform","ranges":[{"startOffset":19770,"endOffset":19898,"count":0}],"isBlockCoverage":false},{"functionName":"transformNestedBoolean","ranges":[{"startOffset":19899,"endOffset":20022,"count":7},{"startOffset":20004,"endOffset":20021,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":28612,"endOffset":29022,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":35839,"endOffset":36091,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":36226,"endOffset":36478,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":39331,"endOffset":39512,"count":0}],"isBlockCoverage":false},{"functionName":"addCommand","ranges":[{"startOffset":41222,"endOffset":42555,"count":137},{"startOffset":41298,"endOffset":41305,"count":135},{"startOffset":41340,"endOffset":41382,"count":5},{"startOffset":41383,"endOffset":41403,"count":132},{"startOffset":41437,"endOffset":41470,"count":83},{"startOffset":42011,"endOffset":42032,"count":23},{"startOffset":42060,"endOffset":42321,"count":135},{"startOffset":42184,"endOffset":42248,"count":13},{"startOffset":42344,"endOffset":42553,"count":15},{"startOffset":42397,"endOffset":42549,"count":92},{"startOffset":42488,"endOffset":42543,"count":81}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":41473,"endOffset":41961,"count":7},{"startOffset":41548,"endOffset":41759,"count":0},{"startOffset":41823,"endOffset":41960,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41583,"endOffset":41626,"count":0}],"isBlockCoverage":false},{"functionName":"addCliOptions","ranges":[{"startOffset":42556,"endOffset":42723,"count":2},{"startOffset":42657,"endOffset":42721,"count":91},{"startOffset":42681,"endOffset":42717,"count":56}],"isBlockCoverage":true},{"functionName":"createCLI","ranges":[{"startOffset":42724,"endOffset":45851,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42863,"endOffset":45061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45506,"endOffset":45721,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45778,"endOffset":45833,"count":0}],"isBlockCoverage":false},{"functionName":"parseCLI","ranges":[{"startOffset":45852,"endOffset":46563,"count":0}],"isBlockCoverage":false},{"functionName":"runRelated","ranges":[{"startOffset":46564,"endOffset":46734,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":46735,"endOffset":46848,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":46849,"endOffset":46958,"count":1}],"isBlockCoverage":true},{"functionName":"benchmark","ranges":[{"startOffset":46959,"endOffset":47213,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeCliOptions","ranges":[{"startOffset":47214,"endOffset":47363,"count":1},{"startOffset":47271,"endOffset":47346,"count":0}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":47364,"endOffset":48074,"count":1},{"startOffset":47463,"endOffset":47474,"count":0},{"startOffset":47705,"endOffset":47713,"count":0},{"startOffset":47766,"endOffset":47774,"count":0},{"startOffset":47810,"endOffset":48072,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47554,"endOffset":47582,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47887,"endOffset":47915,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pathe/dist/shared/pathe.ff20891b.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6539,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeWindowsPath","ranges":[{"startOffset":47,"endOffset":222,"count":2128},{"startOffset":105,"endOffset":128,"count":1},{"startOffset":128,"endOffset":221,"count":2127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":196,"endOffset":218,"count":1613}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":473,"endOffset":1174,"count":783},{"startOffset":515,"endOffset":536,"count":0},{"startOffset":794,"endOffset":892,"count":0},{"startOffset":918,"endOffset":940,"count":1},{"startOffset":976,"endOffset":998,"count":0},{"startOffset":1016,"endOffset":1106,"count":0},{"startOffset":1152,"endOffset":1164,"count":117},{"startOffset":1165,"endOffset":1171,"count":666}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":1189,"endOffset":1588,"count":782},{"startOffset":1246,"endOffset":1267,"count":0},{"startOffset":1319,"endOffset":1488,"count":1564},{"startOffset":1393,"endOffset":1478,"count":782},{"startOffset":1514,"endOffset":1535,"count":0}],"isBlockCoverage":true},{"functionName":"cwd","ranges":[{"startOffset":1590,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":1766,"endOffset":2434,"count":848},{"startOffset":1980,"endOffset":2000,"count":2073},{"startOffset":2011,"endOffset":2220,"count":1225},{"startOffset":2061,"endOffset":2068,"count":0},{"startOffset":2106,"endOffset":2129,"count":0},{"startOffset":2341,"endOffset":2377,"count":0},{"startOffset":2426,"endOffset":2431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1822,"endOffset":1866,"count":1226}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2436,"endOffset":4129,"count":1631},{"startOffset":2640,"endOffset":4113,"count":139988},{"startOffset":2671,"endOffset":2704,"count":138357},{"startOffset":2704,"endOffset":2779,"count":1631},{"startOffset":2728,"endOffset":2748,"count":849},{"startOffset":2748,"endOffset":2779,"count":782},{"startOffset":2779,"endOffset":2802,"count":139139},{"startOffset":2802,"endOffset":4019,"count":13740},{"startOffset":2838,"endOffset":2851,"count":13622},{"startOffset":2853,"endOffset":2854,"count":121},{"startOffset":2854,"endOffset":3972,"count":13619},{"startOffset":2876,"endOffset":3742,"count":6},{"startOffset":2932,"endOffset":2962,"count":0},{"startOffset":2963,"endOffset":2993,"count":0},{"startOffset":3125,"endOffset":3201,"count":0},{"startOffset":3432,"endOffset":3603,"count":0},{"startOffset":3613,"endOffset":3734,"count":0},{"startOffset":3742,"endOffset":3972,"count":13613},{"startOffset":3778,"endOffset":3846,"count":11982},{"startOffset":3846,"endOffset":3913,"count":1631},{"startOffset":3972,"endOffset":4019,"count":13734},{"startOffset":4019,"endOffset":4109,"count":125399},{"startOffset":4042,"endOffset":4056,"count":1042},{"startOffset":4058,"endOffset":4079,"count":19},{"startOffset":4079,"endOffset":4109,"count":125380}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":4149,"endOffset":4198,"count":3735}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":4225,"endOffset":4274,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":4328,"endOffset":4436,"count":28},{"startOffset":4428,"endOffset":4433,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":4455,"endOffset":4935,"count":234},{"startOffset":4689,"endOffset":4720,"count":0},{"startOffset":4788,"endOffset":4878,"count":1404},{"startOffset":4818,"endOffset":4838,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4902,"endOffset":4912,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":4953,"endOffset":5212,"count":67},{"startOffset":5082,"endOffset":5119,"count":0},{"startOffset":5121,"endOffset":5150,"count":0},{"startOffset":5179,"endOffset":5209,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":5229,"endOffset":5413,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":5432,"endOffset":5633,"count":24},{"startOffset":5540,"endOffset":5574,"count":0},{"startOffset":5575,"endOffset":5616,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":5649,"endOffset":5926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/utils/dist/chunk-display.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4034,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":340,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":957,"endOffset":3057,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":3058,"endOffset":3214,"count":17},{"startOffset":3130,"endOffset":3174,"count":0}],"isBlockCoverage":true},{"functionName":"objDisplay","ranges":[{"startOffset":3215,"endOffset":3961,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/utils/dist/chunk-colors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2979,"count":1}],"isBlockCoverage":true},{"functionName":"string","ranges":[{"startOffset":1083,"endOffset":1129,"count":0}],"isBlockCoverage":false},{"functionName":"colorsEntries.reduce.isColorSupported","ranges":[{"startOffset":1226,"endOffset":1280,"count":24}],"isBlockCoverage":true},{"functionName":"getDefaultColors","ranges":[{"startOffset":1312,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"getColors","ranges":[{"startOffset":1375,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"createColors","ranges":[{"startOffset":1458,"endOffset":2764,"count":0}],"isBlockCoverage":false},{"functionName":"setupColors","ranges":[{"startOffset":2765,"endOffset":2840,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/utils/dist/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4465,"count":1}],"isBlockCoverage":true},{"functionName":"notNullish","ranges":[{"startOffset":0,"endOffset":46,"count":255}],"isBlockCoverage":true},{"functionName":"assertTypes","ranges":[{"startOffset":47,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":287,"endOffset":403,"count":28}],"isBlockCoverage":true},{"functionName":"slash","ranges":[{"startOffset":404,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"parseRegexp","ranges":[{"startOffset":464,"endOffset":690,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":691,"endOffset":840,"count":37240},{"startOffset":763,"endOffset":774,"count":0},{"startOffset":807,"endOffset":820,"count":94},{"startOffset":820,"endOffset":839,"count":37146}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":841,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"isFinalObj","ranges":[{"startOffset":944,"endOffset":1065,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":1066,"endOffset":1155,"count":0}],"isBlockCoverage":false},{"functionName":"collectOwnProperties","ranges":[{"startOffset":1156,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnProperties","ranges":[{"startOffset":1405,"endOffset":1593,"count":0}],"isBlockCoverage":false},{"functionName":"deepClone","ranges":[{"startOffset":1648,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":1789,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3005,"endOffset":3024,"count":0}],"isBlockCoverage":false},{"functionName":"objectAttr","ranges":[{"startOffset":3025,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"createDefer","ranges":[{"startOffset":3305,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"getCallLastIndex","ranges":[{"startOffset":3532,"endOffset":4281,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/loupe/loupe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28526,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":299,"count":1},{"startOffset":112,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":307,"endOffset":28521,"count":1},{"startOffset":14568,"endOffset":14609,"count":0},{"startOffset":17328,"endOffset":17841,"count":0},{"startOffset":18951,"endOffset":18958,"count":0},{"startOffset":22244,"endOffset":22262,"count":0},{"startOffset":22445,"endOffset":22452,"count":0},{"startOffset":22458,"endOffset":22510,"count":0},{"startOffset":23277,"endOffset":23286,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":345,"endOffset":773,"count":1},{"startOffset":554,"endOffset":743,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":496,"endOffset":547,"count":68}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":578,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"_slicedToArray","ranges":[{"startOffset":777,"endOffset":941,"count":51},{"startOffset":843,"endOffset":875,"count":0},{"startOffset":876,"endOffset":914,"count":0},{"startOffset":915,"endOffset":936,"count":0}],"isBlockCoverage":true},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":945,"endOffset":1020,"count":51}],"isBlockCoverage":true},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":1024,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":1636,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2082,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":2281,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"colorise","ranges":[{"startOffset":3506,"endOffset":3768,"count":0}],"isBlockCoverage":false},{"functionName":"normaliseOptions","ranges":[{"startOffset":3772,"endOffset":5466,"count":68},{"startOffset":3883,"endOffset":3887,"count":0},{"startOffset":3980,"endOffset":3987,"count":17},{"startOffset":3988,"endOffset":4005,"count":51},{"startOffset":4078,"endOffset":4081,"count":17},{"startOffset":4082,"endOffset":4094,"count":51},{"startOffset":4171,"endOffset":4178,"count":17},{"startOffset":4179,"endOffset":4192,"count":51},{"startOffset":4297,"endOffset":4303,"count":17},{"startOffset":4304,"endOffset":4324,"count":51},{"startOffset":4413,"endOffset":4420,"count":17},{"startOffset":4421,"endOffset":4437,"count":51},{"startOffset":4546,"endOffset":4556,"count":17},{"startOffset":4557,"endOffset":4578,"count":51},{"startOffset":4675,"endOffset":4685,"count":17},{"startOffset":4686,"endOffset":4704,"count":51},{"startOffset":4773,"endOffset":4777,"count":17},{"startOffset":4778,"endOffset":4789,"count":51},{"startOffset":4874,"endOffset":4884,"count":17},{"startOffset":4885,"endOffset":4900,"count":51},{"startOffset":4981,"endOffset":4989,"count":17},{"startOffset":4990,"endOffset":5004,"count":51},{"startOffset":5400,"endOffset":5441,"count":0}],"isBlockCoverage":true},{"functionName":"truncate","ranges":[{"startOffset":5469,"endOffset":5953,"count":35},{"startOffset":5541,"endOffset":5570,"count":0},{"startOffset":5571,"endOffset":5585,"count":0},{"startOffset":5729,"endOffset":5757,"count":0},{"startOffset":5759,"endOffset":5785,"count":0},{"startOffset":5817,"endOffset":5845,"count":0},{"startOffset":5847,"endOffset":5929,"count":0}],"isBlockCoverage":true},{"functionName":"inspectList","ranges":[{"startOffset":5996,"endOffset":8293,"count":54},{"startOffset":6088,"endOffset":6117,"count":0},{"startOffset":6118,"endOffset":6132,"count":0},{"startOffset":6171,"endOffset":6189,"count":0},{"startOffset":6239,"endOffset":6396,"count":27},{"startOffset":6396,"endOffset":8240,"count":51},{"startOffset":6734,"endOffset":6737,"count":27},{"startOffset":6738,"endOffset":6756,"count":24},{"startOffset":6783,"endOffset":6839,"count":27},{"startOffset":6822,"endOffset":6826,"count":23},{"startOffset":6827,"endOffset":6838,"count":4},{"startOffset":7103,"endOffset":7133,"count":27},{"startOffset":7134,"endOffset":7187,"count":0},{"startOffset":7189,"endOffset":7213,"count":0},{"startOffset":7356,"endOffset":7372,"count":24},{"startOffset":7373,"endOffset":7408,"count":20},{"startOffset":7410,"endOffset":7434,"count":0},{"startOffset":7567,"endOffset":7571,"count":27},{"startOffset":7572,"endOffset":7641,"count":24},{"startOffset":7624,"endOffset":7628,"count":4},{"startOffset":7629,"endOffset":7640,"count":20},{"startOffset":7766,"endOffset":7781,"count":24},{"startOffset":7782,"endOffset":7817,"count":4},{"startOffset":7818,"endOffset":7862,"count":0},{"startOffset":7864,"endOffset":7888,"count":0},{"startOffset":8043,"endOffset":8059,"count":24},{"startOffset":8060,"endOffset":8105,"count":20},{"startOffset":8107,"endOffset":8211,"count":0},{"startOffset":8240,"endOffset":8292,"count":27}],"isBlockCoverage":true},{"functionName":"quoteComplexKey","ranges":[{"startOffset":8297,"endOffset":8505,"count":51},{"startOffset":8401,"endOffset":8504,"count":0}],"isBlockCoverage":true},{"functionName":"inspectProperty","ranges":[{"startOffset":8509,"endOffset":8982,"count":51},{"startOffset":8747,"endOffset":8849,"count":0}],"isBlockCoverage":true},{"functionName":"inspectArray","ranges":[{"startOffset":8986,"endOffset":9750,"count":2},{"startOffset":9292,"endOffset":9733,"count":0},{"startOffset":9734,"endOffset":9738,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9546,"endOffset":9604,"count":0}],"isBlockCoverage":false},{"functionName":"getFuncName","ranges":[{"startOffset":10377,"endOffset":11299,"count":0}],"isBlockCoverage":false},{"functionName":"getArrayName","ranges":[{"startOffset":11358,"endOffset":11697,"count":0}],"isBlockCoverage":false},{"functionName":"inspectTypedArray","ranges":[{"startOffset":11702,"endOffset":13047,"count":0}],"isBlockCoverage":false},{"functionName":"inspectDate","ranges":[{"startOffset":13051,"endOffset":13489,"count":0}],"isBlockCoverage":false},{"functionName":"inspectFunction","ranges":[{"startOffset":13493,"endOffset":13758,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMapEntry","ranges":[{"startOffset":13762,"endOffset":14097,"count":0}],"isBlockCoverage":false},{"functionName":"mapToEntries","ranges":[{"startOffset":14142,"endOffset":14298,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMap","ranges":[{"startOffset":14302,"endOffset":14539,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":14571,"endOffset":14609,"count":0}],"isBlockCoverage":false},{"functionName":"inspectNumber","ranges":[{"startOffset":14654,"endOffset":15144,"count":12},{"startOffset":14719,"endOffset":14773,"count":0},{"startOffset":14804,"endOffset":14863,"count":0},{"startOffset":14895,"endOffset":14955,"count":0},{"startOffset":14979,"endOffset":15065,"count":4},{"startOffset":15041,"endOffset":15047,"count":0},{"startOffset":15065,"endOffset":15143,"count":8}],"isBlockCoverage":true},{"functionName":"inspectBigInt","ranges":[{"startOffset":15148,"endOffset":15344,"count":0}],"isBlockCoverage":false},{"functionName":"inspectRegExp","ranges":[{"startOffset":15348,"endOffset":15634,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFromSet","ranges":[{"startOffset":15638,"endOffset":15779,"count":0}],"isBlockCoverage":false},{"functionName":"inspectSet","ranges":[{"startOffset":15783,"endOffset":15963,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":16354,"endOffset":16503,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":16507,"endOffset":16754,"count":27},{"startOffset":16589,"endOffset":16654,"count":0}],"isBlockCoverage":true},{"functionName":"inspectSymbol","ranges":[{"startOffset":16758,"endOffset":16962,"count":0}],"isBlockCoverage":false},{"functionName":"getPromiseValue","ranges":[{"startOffset":16988,"endOffset":17045,"count":0}],"isBlockCoverage":false},{"functionName":"getPromiseValue","ranges":[{"startOffset":17354,"endOffset":17834,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject","ranges":[{"startOffset":17929,"endOffset":18856,"count":27},{"startOffset":18114,"endOffset":18118,"count":0},{"startOffset":18153,"endOffset":18176,"count":0},{"startOffset":18178,"endOffset":18204,"count":0},{"startOffset":18265,"endOffset":18270,"count":0},{"startOffset":18316,"endOffset":18350,"count":0},{"startOffset":18743,"endOffset":18768,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18437,"endOffset":18492,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18571,"endOffset":18626,"count":0}],"isBlockCoverage":false},{"functionName":"inspectClass","ranges":[{"startOffset":18962,"endOffset":19407,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArguments","ranges":[{"startOffset":19411,"endOffset":19601,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject$1","ranges":[{"startOffset":19738,"endOffset":20509,"count":0}],"isBlockCoverage":false},{"functionName":"inspectAttribute","ranges":[{"startOffset":20513,"endOffset":20879,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTMLCollection","ranges":[{"startOffset":20882,"endOffset":21056,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTML","ranges":[{"startOffset":21059,"endOffset":22085,"count":0}],"isBlockCoverage":false},{"functionName":"FakeMap","ranges":[{"startOffset":22514,"endOffset":22646,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22730,"endOffset":22783,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":22843,"endOffset":22898,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":22958,"endOffset":23203,"count":0}],"isBlockCoverage":false},{"functionName":"undefined$1","ranges":[{"startOffset":23354,"endOffset":23454,"count":0}],"isBlockCoverage":false},{"functionName":"_null","ranges":[{"startOffset":23466,"endOffset":23548,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":23563,"endOffset":23651,"count":0}],"isBlockCoverage":false},{"functionName":"Boolean","ranges":[{"startOffset":23666,"endOffset":23754,"count":0}],"isBlockCoverage":false},{"functionName":"WeakSet","ranges":[{"startOffset":24317,"endOffset":24412,"count":0}],"isBlockCoverage":false},{"functionName":"WeakMap","ranges":[{"startOffset":24427,"endOffset":24522,"count":0}],"isBlockCoverage":false},{"functionName":"Generator","ranges":[{"startOffset":24899,"endOffset":24944,"count":0}],"isBlockCoverage":false},{"functionName":"DataView","ranges":[{"startOffset":24960,"endOffset":25004,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBuffer","ranges":[{"startOffset":25023,"endOffset":25070,"count":0}],"isBlockCoverage":false},{"functionName":"inspectCustom","ranges":[{"startOffset":25246,"endOffset":25955,"count":27},{"startOffset":25322,"endOffset":25365,"count":0},{"startOffset":25367,"endOffset":25416,"count":0},{"startOffset":25462,"endOffset":25505,"count":0},{"startOffset":25507,"endOffset":25571,"count":0},{"startOffset":25600,"endOffset":25638,"count":0},{"startOffset":25640,"endOffset":25699,"count":0},{"startOffset":25732,"endOffset":25772,"count":10},{"startOffset":25774,"endOffset":25849,"count":0},{"startOffset":25879,"endOffset":25935,"count":0}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":26046,"endOffset":27861,"count":68},{"startOffset":26259,"endOffset":26267,"count":0},{"startOffset":26314,"endOffset":26371,"count":29},{"startOffset":26479,"endOffset":26535,"count":41},{"startOffset":26535,"endOffset":26650,"count":27},{"startOffset":26652,"endOffset":26840,"count":27},{"startOffset":26729,"endOffset":26834,"count":0},{"startOffset":26840,"endOffset":26894,"count":27},{"startOffset":26895,"endOffset":26902,"count":0},{"startOffset":26993,"endOffset":27010,"count":17},{"startOffset":27012,"endOffset":27063,"count":27},{"startOffset":27063,"endOffset":27198,"count":0},{"startOffset":27199,"endOffset":27230,"count":0},{"startOffset":27232,"endOffset":27860,"count":0}],"isBlockCoverage":true},{"functionName":"registerConstructor","ranges":[{"startOffset":27864,"endOffset":28057,"count":0}],"isBlockCoverage":false},{"functionName":"registerStringTag","ranges":[{"startOffset":28060,"endOffset":28236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"196","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13743,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":790,"endOffset":885,"count":7},{"startOffset":860,"endOffset":865,"count":6},{"startOffset":866,"endOffset":882,"count":1}],"isBlockCoverage":true},{"functionName":"getConstructorName","ranges":[{"startOffset":1507,"endOffset":1591,"count":0}],"isBlockCoverage":false},{"functionName":"isWindow","ranges":[{"startOffset":1714,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"PrettyFormatPluginError","ranges":[{"startOffset":1895,"endOffset":2011,"count":0}],"isBlockCoverage":false},{"functionName":"isToStringedArrayType","ranges":[{"startOffset":2014,"endOffset":2607,"count":0}],"isBlockCoverage":false},{"functionName":"printNumber","ranges":[{"startOffset":2608,"endOffset":2687,"count":0}],"isBlockCoverage":false},{"functionName":"printBigInt","ranges":[{"startOffset":2688,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"printFunction","ranges":[{"startOffset":2746,"endOffset":2903,"count":0}],"isBlockCoverage":false},{"functionName":"printSymbol","ranges":[{"startOffset":2904,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"printError","ranges":[{"startOffset":2993,"endOffset":3062,"count":0}],"isBlockCoverage":false},{"functionName":"printBasicValue","ranges":[{"startOffset":3163,"endOffset":4783,"count":0}],"isBlockCoverage":false},{"functionName":"printComplexValue","ranges":[{"startOffset":4892,"endOffset":7280,"count":0}],"isBlockCoverage":false},{"functionName":"isNewPlugin","ranges":[{"startOffset":7281,"endOffset":7348,"count":0}],"isBlockCoverage":false},{"functionName":"printPlugin","ranges":[{"startOffset":7349,"endOffset":8345,"count":0}],"isBlockCoverage":false},{"functionName":"findPlugin","ranges":[{"startOffset":8346,"endOffset":8623,"count":0}],"isBlockCoverage":false},{"functionName":"printer","ranges":[{"startOffset":8624,"endOffset":9151,"count":0}],"isBlockCoverage":false},{"functionName":"toOptionsSubtype","ranges":[{"startOffset":9462,"endOffset":9480,"count":1}],"isBlockCoverage":true},{"functionName":"validateOptions","ranges":[{"startOffset":9847,"endOffset":10608,"count":0}],"isBlockCoverage":false},{"functionName":"getColorsHighlight","ranges":[{"startOffset":10636,"endOffset":11225,"count":0}],"isBlockCoverage":false},{"functionName":"getColorsEmpty","ranges":[{"startOffset":11250,"endOffset":11406,"count":0}],"isBlockCoverage":false},{"functionName":"getPrintFunctionName","ranges":[{"startOffset":11437,"endOffset":11513,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapeRegex","ranges":[{"startOffset":11538,"endOffset":11602,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapeString","ranges":[{"startOffset":11628,"endOffset":11694,"count":0}],"isBlockCoverage":false},{"functionName":"getConfig","ranges":[{"startOffset":11714,"endOffset":12626,"count":0}],"isBlockCoverage":false},{"functionName":"createIndent","ranges":[{"startOffset":12628,"endOffset":12703,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":12847,"endOffset":13396,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":3}],"isBlockCoverage":true}]},{"scriptId":"198","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"199","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3899,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi256","ranges":[{"startOffset":71,"endOffset":129,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":152,"endOffset":240,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":168,"endOffset":240,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":243,"endOffset":3781,"count":5},{"startOffset":1732,"endOffset":2064,"count":15},{"startOffset":1792,"endOffset":1971,"count":225}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2601,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3149,"endOffset":3624,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3680,"endOffset":3731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/collections.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4913,"count":1}],"isBlockCoverage":true},{"functionName":"getKeysOfEnumerableProperties","ranges":[{"startOffset":513,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"printIteratorEntries","ranges":[{"startOffset":1038,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"printIteratorValues","ranges":[{"startOffset":2401,"endOffset":3154,"count":0}],"isBlockCoverage":false},{"functionName":"printListItems","ranges":[{"startOffset":3307,"endOffset":3995,"count":0}],"isBlockCoverage":false},{"functionName":"printObjectProperties","ranges":[{"startOffset":4136,"endOffset":4912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/plugins/AsymmetricMatcher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2292,"count":1},{"startOffset":570,"endOffset":580,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":619,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":2130,"endOffset":2178,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/plugins/DOMCollection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1842,"count":1}],"isBlockCoverage":true},{"functionName":"testName","ranges":[{"startOffset":525,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":610,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedNodeMap","ranges":[{"startOffset":753,"endOffset":815,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":835,"endOffset":1718,"count":0}],"isBlockCoverage":false}]},{"scriptId":"203","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/plugins/DOMElement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2798,"count":1}],"isBlockCoverage":true},{"functionName":"testHasAttribute","ranges":[{"startOffset":544,"endOffset":673,"count":0}],"isBlockCoverage":false},{"functionName":"testNode","ranges":[{"startOffset":692,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1238,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsText","ranges":[{"startOffset":1307,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsComment","ranges":[{"startOffset":1375,"endOffset":1448,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsFragment","ranges":[{"startOffset":1449,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1543,"endOffset":2674,"count":0}],"isBlockCoverage":false}]},{"scriptId":"204","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/plugins/lib/markup.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3395,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":309,"endOffset":404,"count":1},{"startOffset":385,"endOffset":401,"count":0}],"isBlockCoverage":true},{"functionName":"printProps","ranges":[{"startOffset":657,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"printChildren","ranges":[{"startOffset":1568,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"printText","ranges":[{"startOffset":1925,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"printComment","ranges":[{"startOffset":2138,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"printElement","ranges":[{"startOffset":2634,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"printElementAsLeaf","ranges":[{"startOffset":3193,"endOffset":3344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"205","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/plugins/lib/escapeHTML.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":389,"count":1}],"isBlockCoverage":true},{"functionName":"escapeHTML","ranges":[{"startOffset":302,"endOffset":388,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/plugins/Immutable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5440,"count":1}],"isBlockCoverage":true},{"functionName":"getImmutableName","ranges":[{"startOffset":967,"endOffset":994,"count":0}],"isBlockCoverage":false},{"functionName":"printAsLeaf","ranges":[{"startOffset":1016,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"printImmutableEntries","ranges":[{"startOffset":1153,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"getRecordEntries","ranges":[{"startOffset":1646,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"printImmutableRecord","ranges":[{"startOffset":1993,"endOffset":2507,"count":0}],"isBlockCoverage":false},{"functionName":"printImmutableSeq","ranges":[{"startOffset":2535,"endOffset":3550,"count":0}],"isBlockCoverage":false},{"functionName":"printImmutableValues","ranges":[{"startOffset":3581,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3947,"endOffset":5041,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":5236,"endOffset":5326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/plugins/ReactElement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4167,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":240,"endOffset":565,"count":1},{"startOffset":326,"endOffset":338,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":457,"endOffset":548,"count":1},{"startOffset":505,"endOffset":523,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":566,"endOffset":1484,"count":1},{"startOffset":664,"endOffset":685,"count":0},{"startOffset":733,"endOffset":761,"count":0},{"startOffset":764,"endOffset":796,"count":0},{"startOffset":881,"endOffset":913,"count":0},{"startOffset":1048,"endOffset":1394,"count":28},{"startOffset":1228,"endOffset":1234,"count":0},{"startOffset":1278,"endOffset":1337,"count":0}],"isBlockCoverage":true},{"functionName":"getChildren","ranges":[{"startOffset":1808,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":2042,"endOffset":3111,"count":0}],"isBlockCoverage":false},{"functionName":"getPropKeys","ranges":[{"startOffset":3133,"endOffset":3282,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3302,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":4009,"endOffset":4053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/react-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1},{"startOffset":58,"endOffset":125,"count":0}],"isBlockCoverage":true}]},{"scriptId":"209","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/react-is/cjs/react-is.development.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7359,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":301,"endOffset":7352,"count":1}],"isBlockCoverage":true},{"functionName":"isValidElementType","ranges":[{"startOffset":1958,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"typeOf","ranges":[{"startOffset":3108,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncMode","ranges":[{"startOffset":4690,"endOffset":5021,"count":0}],"isBlockCoverage":false},{"functionName":"isConcurrentMode","ranges":[{"startOffset":5022,"endOffset":5373,"count":0}],"isBlockCoverage":false},{"functionName":"isContextConsumer","ranges":[{"startOffset":5374,"endOffset":5460,"count":0}],"isBlockCoverage":false},{"functionName":"isContextProvider","ranges":[{"startOffset":5461,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":5549,"endOffset":5677,"count":0}],"isBlockCoverage":false},{"functionName":"isForwardRef","ranges":[{"startOffset":5678,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"isFragment","ranges":[{"startOffset":5764,"endOffset":5844,"count":0}],"isBlockCoverage":false},{"functionName":"isLazy","ranges":[{"startOffset":5845,"endOffset":5917,"count":0}],"isBlockCoverage":false},{"functionName":"isMemo","ranges":[{"startOffset":5918,"endOffset":5990,"count":0}],"isBlockCoverage":false},{"functionName":"isPortal","ranges":[{"startOffset":5991,"endOffset":6067,"count":0}],"isBlockCoverage":false},{"functionName":"isProfiler","ranges":[{"startOffset":6068,"endOffset":6148,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictMode","ranges":[{"startOffset":6149,"endOffset":6234,"count":0}],"isBlockCoverage":false},{"functionName":"isSuspense","ranges":[{"startOffset":6235,"endOffset":6315,"count":0}],"isBlockCoverage":false},{"functionName":"isSuspenseList","ranges":[{"startOffset":6316,"endOffset":6405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"210","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pretty-format/build/plugins/ReactTestComponent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1799,"count":1},{"startOffset":620,"endOffset":631,"count":0}],"isBlockCoverage":true},{"functionName":"getPropKeys","ranges":[{"startOffset":653,"endOffset":807,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":827,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1644,"endOffset":1685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"211","url":"node:internal/legacy/processbinding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1168,"count":1}],"isBlockCoverage":false},{"functionName":"util","ranges":[{"startOffset":216,"endOffset":846,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":335,"endOffset":837,"count":42}],"isBlockCoverage":true},{"functionName":"natives","ranges":[{"startOffset":851,"endOffset":1161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"212","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/cli-api.E07AF1Yq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":557005,"count":1},{"startOffset":15032,"endOffset":15049,"count":0},{"startOffset":15437,"endOffset":15464,"count":0},{"startOffset":43741,"endOffset":43749,"count":0},{"startOffset":43822,"endOffset":43944,"count":0},{"startOffset":45315,"endOffset":45444,"count":0},{"startOffset":45814,"endOffset":45857,"count":0},{"startOffset":45980,"endOffset":46012,"count":0},{"startOffset":98535,"endOffset":98553,"count":0},{"startOffset":123670,"endOffset":124013,"count":0},{"startOffset":124647,"endOffset":124667,"count":0},{"startOffset":272243,"endOffset":272251,"count":0},{"startOffset":272267,"endOffset":272299,"count":0},{"startOffset":544615,"endOffset":544630,"count":0}],"isBlockCoverage":true},{"functionName":"_mergeNamespaces","ranges":[{"startOffset":3432,"endOffset":3867,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3478,"endOffset":3836,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3571,"endOffset":3830,"count":4},{"startOffset":3725,"endOffset":3728,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3776,"endOffset":3804,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleGraph","ranges":[{"startOffset":3869,"endOffset":4904,"count":0}],"isBlockCoverage":false},{"functionName":"cloneByOwnProperties","ranges":[{"startOffset":4906,"endOffset":5065,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyReplace","ranges":[{"startOffset":5066,"endOffset":5202,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5711,"endOffset":5777,"count":24}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":5730,"endOffset":5775,"count":24}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5791,"endOffset":6465,"count":2}],"isBlockCoverage":true},{"functionName":"Queue","ranges":[{"startOffset":5819,"endOffset":5853,"count":2}],"isBlockCoverage":true},{"functionName":"enqueue","ranges":[{"startOffset":5856,"endOffset":6053,"count":24},{"startOffset":5924,"endOffset":5978,"count":22},{"startOffset":5978,"endOffset":6033,"count":2}],"isBlockCoverage":true},{"functionName":"dequeue","ranges":[{"startOffset":6056,"endOffset":6206,"count":24},{"startOffset":6114,"endOffset":6130,"count":0}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":6209,"endOffset":6291,"count":2}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":6294,"endOffset":6330,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6333,"endOffset":6463,"count":0}],"isBlockCoverage":false},{"functionName":"pLimit","ranges":[{"startOffset":6467,"endOffset":7919,"count":2},{"startOffset":6536,"endOffset":6579,"count":1},{"startOffset":6602,"endOffset":6684,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":6751,"endOffset":6829,"count":24},{"startOffset":6799,"endOffset":6826,"count":11}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":6845,"endOffset":7012,"count":24},{"startOffset":6985,"endOffset":6990,"count":23},{"startOffset":6990,"endOffset":6998,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6912,"endOffset":6935,"count":24}],"isBlockCoverage":true},{"functionName":"enqueue","ranges":[{"startOffset":7032,"endOffset":7593,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7118,"endOffset":7586,"count":24},{"startOffset":7534,"endOffset":7551,"count":13},{"startOffset":7553,"endOffset":7582,"count":13}],"isBlockCoverage":true},{"functionName":"generator","ranges":[{"startOffset":7615,"endOffset":7690,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7644,"endOffset":7689,"count":24}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7756,"endOffset":7773,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7806,"endOffset":7822,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7855,"endOffset":7886,"count":0}],"isBlockCoverage":false},{"functionName":"EndError","ranges":[{"startOffset":7953,"endOffset":8009,"count":1}],"isBlockCoverage":true},{"functionName":"testElement","ranges":[{"startOffset":8085,"endOffset":8133,"count":12}],"isBlockCoverage":true},{"functionName":"finder","ranges":[{"startOffset":8220,"endOffset":8363,"count":12},{"startOffset":8308,"endOffset":8345,"count":1},{"startOffset":8345,"endOffset":8362,"count":11}],"isBlockCoverage":true},{"functionName":"pLocate","ranges":[{"startOffset":8366,"endOffset":8995,"count":1},{"startOffset":8785,"endOffset":8811,"count":0},{"startOffset":8893,"endOffset":8897,"count":0},{"startOffset":8974,"endOffset":8993,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8623,"endOffset":8680,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8852,"endOffset":8890,"count":12}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":9068,"endOffset":9218,"count":1},{"startOffset":9162,"endOffset":9217,"count":0}],"isBlockCoverage":true},{"functionName":"matchType","ranges":[{"startOffset":9238,"endOffset":9280,"count":1}],"isBlockCoverage":true},{"functionName":"toPath$1","ranges":[{"startOffset":9300,"endOffset":9376,"count":1},{"startOffset":9338,"endOffset":9364,"count":0}],"isBlockCoverage":true},{"functionName":"locatePath","ranges":[{"startOffset":9379,"endOffset":9858,"count":1},{"startOffset":9623,"endOffset":9641,"count":0}],"isBlockCoverage":true},{"functionName":"pLocate.concurrency.concurrency","ranges":[{"startOffset":9667,"endOffset":9824,"count":12},{"startOffset":9755,"endOffset":9793,"count":1},{"startOffset":9793,"endOffset":9821,"count":11}],"isBlockCoverage":true},{"functionName":"toPath","ranges":[{"startOffset":9875,"endOffset":9951,"count":1},{"startOffset":9913,"endOffset":9939,"count":0}],"isBlockCoverage":true},{"functionName":"findUpMultiple","ranges":[{"startOffset":9996,"endOffset":11072,"count":1},{"startOffset":10100,"endOffset":10105,"count":0},{"startOffset":10245,"endOffset":10272,"count":0},{"startOffset":10841,"endOffset":10856,"count":0},{"startOffset":11007,"endOffset":11052,"count":0}],"isBlockCoverage":true},{"functionName":"runMatcher","ranges":[{"startOffset":10325,"endOffset":10602,"count":1},{"startOffset":10433,"endOffset":10601,"count":0}],"isBlockCoverage":true},{"functionName":"findUp","ranges":[{"startOffset":11074,"endOffset":11208,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":11374,"endOffset":11481,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11424,"endOffset":11473,"count":1}],"isBlockCoverage":true},{"functionName":"splitWhen","ranges":[{"startOffset":11509,"endOffset":11827,"count":2},{"startOffset":11627,"endOffset":11806,"count":4},{"startOffset":11658,"endOffset":11800,"count":2}],"isBlockCoverage":true},{"functionName":"isEnoentCodeError","ranges":[{"startOffset":11978,"endOffset":12051,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":12265,"endOffset":12725,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats$1","ranges":[{"startOffset":12729,"endOffset":12825,"count":0}],"isBlockCoverage":false},{"functionName":"unixify","ranges":[{"startOffset":14212,"endOffset":14283,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbsolute","ranges":[{"startOffset":14310,"endOffset":14392,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDotSegment","ranges":[{"startOffset":14429,"endOffset":14917,"count":181},{"startOffset":14691,"endOffset":14897,"count":2},{"startOffset":14810,"endOffset":14891,"count":0}],"isBlockCoverage":true},{"functionName":"escapeWindowsPath","ranges":[{"startOffset":15051,"endOffset":15161,"count":0}],"isBlockCoverage":false},{"functionName":"escapePosixPath","ranges":[{"startOffset":15208,"endOffset":15314,"count":0}],"isBlockCoverage":false},{"functionName":"convertWindowsPathToPattern","ranges":[{"startOffset":15466,"endOffset":15647,"count":0}],"isBlockCoverage":false},{"functionName":"convertPosixPathToPattern","ranges":[{"startOffset":15714,"endOffset":15800,"count":0}],"isBlockCoverage":false},{"functionName":"isExtglob","ranges":[{"startOffset":16054,"endOffset":16325,"count":4},{"startOffset":16125,"endOffset":16148,"count":0},{"startOffset":16218,"endOffset":16306,"count":0}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":16565,"endOffset":19063,"count":4},{"startOffset":16603,"endOffset":16625,"count":0},{"startOffset":16836,"endOffset":16895,"count":2},{"startOffset":16895,"endOffset":16924,"count":0},{"startOffset":16926,"endOffset":16952,"count":0},{"startOffset":16952,"endOffset":17007,"count":2},{"startOffset":17008,"endOffset":17033,"count":0},{"startOffset":17035,"endOffset":17451,"count":0},{"startOffset":17451,"endOffset":17505,"count":2},{"startOffset":17506,"endOffset":17531,"count":0},{"startOffset":17533,"endOffset":17791,"count":0},{"startOffset":17791,"endOffset":17845,"count":2},{"startOffset":17846,"endOffset":17871,"count":0},{"startOffset":17872,"endOffset":17903,"count":0},{"startOffset":17904,"endOffset":17929,"count":0},{"startOffset":17931,"endOffset":18189,"count":0},{"startOffset":18189,"endOffset":18237,"count":2},{"startOffset":18238,"endOffset":18263,"count":0},{"startOffset":18265,"endOffset":18701,"count":0},{"startOffset":18701,"endOffset":18732,"count":2},{"startOffset":18732,"endOffset":19013,"count":0},{"startOffset":19013,"endOffset":19041,"count":2},{"startOffset":19045,"endOffset":19062,"count":2}],"isBlockCoverage":true},{"functionName":"relaxedCheck","ranges":[{"startOffset":19085,"endOffset":19622,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":19640,"endOffset":19942,"count":4},{"startOffset":19717,"endOffset":19740,"count":0},{"startOffset":19764,"endOffset":19786,"count":0},{"startOffset":19858,"endOffset":19885,"count":0},{"startOffset":19887,"endOffset":19918,"count":0}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":20366,"endOffset":21023,"count":2},{"startOffset":20528,"endOffset":20538,"count":0},{"startOffset":20539,"endOffset":20564,"count":0},{"startOffset":20566,"endOffset":20612,"count":0},{"startOffset":20717,"endOffset":20740,"count":0},{"startOffset":20861,"endOffset":20899,"count":4}],"isBlockCoverage":true},{"functionName":"isStaticPattern","ranges":[{"startOffset":22492,"endOffset":22591,"count":16}],"isBlockCoverage":true},{"functionName":"isDynamicPattern","ranges":[{"startOffset":22637,"endOffset":23695,"count":22},{"startOffset":22975,"endOffset":23004,"count":0},{"startOffset":23274,"endOffset":23302,"count":0},{"startOffset":23348,"endOffset":23397,"count":0},{"startOffset":23398,"endOffset":23437,"count":0},{"startOffset":23467,"endOffset":23544,"count":0},{"startOffset":23546,"endOffset":23645,"count":0},{"startOffset":23647,"endOffset":23694,"count":0}],"isBlockCoverage":true},{"functionName":"hasBraceExpansion","ranges":[{"startOffset":23743,"endOffset":24176,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPositivePattern","ranges":[{"startOffset":24177,"endOffset":24291,"count":22},{"startOffset":24260,"endOffset":24278,"count":0}],"isBlockCoverage":true},{"functionName":"convertToNegativePattern","ranges":[{"startOffset":24355,"endOffset":24427,"count":22}],"isBlockCoverage":true},{"functionName":"isNegativePattern","ranges":[{"startOffset":24491,"endOffset":24588,"count":26},{"startOffset":24564,"endOffset":24585,"count":0}],"isBlockCoverage":true},{"functionName":"isPositivePattern","ranges":[{"startOffset":24638,"endOffset":24717,"count":2}],"isBlockCoverage":true},{"functionName":"getNegativePatterns","ranges":[{"startOffset":24767,"endOffset":24856,"count":1}],"isBlockCoverage":true},{"functionName":"getPositivePatterns$1","ranges":[{"startOffset":24910,"endOffset":25001,"count":1}],"isBlockCoverage":true},{"functionName":"getPatternsInsideCurrentDirectory","ranges":[{"startOffset":25252,"endOffset":25394,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25334,"endOffset":25390,"count":2}],"isBlockCoverage":true},{"functionName":"getPatternsOutsideCurrentDirectory","ranges":[{"startOffset":25680,"endOffset":25800,"count":2}],"isBlockCoverage":true},{"functionName":"isPatternRelatedToParentDirectory","ranges":[{"startOffset":25884,"endOffset":26006,"count":4}],"isBlockCoverage":true},{"functionName":"getBaseDirectory","ranges":[{"startOffset":26088,"endOffset":26186,"count":2}],"isBlockCoverage":true},{"functionName":"hasGlobStar","ranges":[{"startOffset":26234,"endOffset":26306,"count":4}],"isBlockCoverage":true},{"functionName":"endsWithSlashGlobStar","ranges":[{"startOffset":26344,"endOffset":26432,"count":22}],"isBlockCoverage":true},{"functionName":"isAffectDepthOfReadingPattern","ranges":[{"startOffset":26490,"endOffset":26660,"count":22},{"startOffset":26629,"endOffset":26657,"count":14}],"isBlockCoverage":true},{"functionName":"expandPatternsWithBraceExpansion","ranges":[{"startOffset":26734,"endOffset":26920,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26815,"endOffset":26912,"count":6}],"isBlockCoverage":true},{"functionName":"expandBraceExpansion","ranges":[{"startOffset":27000,"endOffset":27528,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27340,"endOffset":27369,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27497,"endOffset":27524,"count":24}],"isBlockCoverage":true},{"functionName":"getPatternParts","ranges":[{"startOffset":27584,"endOffset":28217,"count":2},{"startOffset":27893,"endOffset":27927,"count":0},{"startOffset":28125,"endOffset":28197,"count":0}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":28263,"endOffset":28348,"count":36}],"isBlockCoverage":true},{"functionName":"convertPatternsToRe","ranges":[{"startOffset":28376,"endOffset":28491,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28450,"endOffset":28487,"count":32}],"isBlockCoverage":true},{"functionName":"matchAny","ranges":[{"startOffset":28545,"endOffset":28651,"count":171}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28611,"endOffset":28647,"count":982}],"isBlockCoverage":true},{"functionName":"removeDuplicateSlashes","ranges":[{"startOffset":28888,"endOffset":28982,"count":24}],"isBlockCoverage":true},{"functionName":"merge2$1","ranges":[{"startOffset":29329,"endOffset":31754,"count":0}],"isBlockCoverage":false},{"functionName":"pauseStreams","ranges":[{"startOffset":31793,"endOffset":32334,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":32450,"endOffset":32814,"count":0}],"isBlockCoverage":false},{"functionName":"propagateCloseEventToSources","ranges":[{"startOffset":32839,"endOffset":32944,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":33077,"endOffset":33143,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":33174,"endOffset":33226,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":34089,"endOffset":34871,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34433,"endOffset":34496,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34551,"endOffset":34615,"count":2}],"isBlockCoverage":true},{"functionName":"processPatterns","ranges":[{"startOffset":34899,"endOffset":36293,"count":2},{"startOffset":35964,"endOffset":36068,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35998,"endOffset":36060,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36229,"endOffset":36289,"count":24}],"isBlockCoverage":true},{"functionName":"convertPatternsToTasks","ranges":[{"startOffset":36565,"endOffset":37709,"count":2},{"startOffset":37462,"endOffset":37689,"count":1}],"isBlockCoverage":true},{"functionName":"getPositivePatterns","ranges":[{"startOffset":37765,"endOffset":37865,"count":1}],"isBlockCoverage":true},{"functionName":"getNegativePatternsAsPositive","ranges":[{"startOffset":37915,"endOffset":38156,"count":1}],"isBlockCoverage":true},{"functionName":"groupPatternsByBaseDirectory","ranges":[{"startOffset":38226,"endOffset":38614,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38325,"endOffset":38603,"count":2},{"startOffset":38448,"endOffset":38570,"count":1}],"isBlockCoverage":true},{"functionName":"convertPatternGroupsToTasks","ranges":[{"startOffset":38682,"endOffset":38891,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38787,"endOffset":38887,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupToTask","ranges":[{"startOffset":38957,"endOffset":39211,"count":1}],"isBlockCoverage":true},{"functionName":"read$3","ranges":[{"startOffset":39525,"endOffset":40437,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback$2","ranges":[{"startOffset":40461,"endOffset":40533,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback$2","ranges":[{"startOffset":40534,"endOffset":40614,"count":0}],"isBlockCoverage":false},{"functionName":"read$2","ranges":[{"startOffset":40718,"endOffset":41217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41280,"endOffset":41886,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":41601,"endOffset":41823,"count":3},{"startOffset":41681,"endOffset":41734,"count":0}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":42020,"endOffset":42445,"count":3}],"isBlockCoverage":true},{"functionName":"_getValue","ranges":[{"startOffset":42450,"endOffset":42552,"count":9},{"startOffset":42529,"endOffset":42537,"count":6},{"startOffset":42538,"endOffset":42545,"count":3}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":42826,"endOffset":43123,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":43143,"endOffset":43284,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings$2","ranges":[{"startOffset":43312,"endOffset":43519,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotask_1","ranges":[{"startOffset":43824,"endOffset":43944,"count":0}],"isBlockCoverage":false},{"functionName":"runParallel","ranges":[{"startOffset":44112,"endOffset":45001,"count":32},{"startOffset":44278,"endOffset":44365,"count":0},{"startOffset":44666,"endOffset":44700,"count":1},{"startOffset":44700,"endOffset":44980,"count":31},{"startOffset":44716,"endOffset":44847,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":44369,"endOffset":44526,"count":32},{"startOffset":44506,"endOffset":44522,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":44395,"endOffset":44467,"count":32}],"isBlockCoverage":true},{"functionName":"each","ranges":[{"startOffset":44530,"endOffset":44648,"count":147},{"startOffset":44612,"endOffset":44618,"count":116},{"startOffset":44620,"endOffset":44644,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44749,"endOffset":44841,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44886,"endOffset":44974,"count":147}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44918,"endOffset":44966,"count":147}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":46175,"endOffset":46635,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":46638,"endOffset":46730,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments$1","ranges":[{"startOffset":47027,"endOffset":47290,"count":147},{"startOffset":47229,"endOffset":47258,"count":0}],"isBlockCoverage":true},{"functionName":"read$1","ranges":[{"startOffset":47613,"endOffset":47873,"count":32},{"startOffset":47825,"endOffset":47872,"count":0}],"isBlockCoverage":true},{"functionName":"readdirWithFileTypes$1","ranges":[{"startOffset":47897,"endOffset":48860,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48022,"endOffset":48856,"count":32},{"startOffset":48086,"endOffset":48176,"count":0},{"startOffset":48434,"endOffset":48519,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48213,"endOffset":48388,"count":147}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48554,"endOffset":48598,"count":147}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48620,"endOffset":48848,"count":32},{"startOffset":48683,"endOffset":48781,"count":0}],"isBlockCoverage":true},{"functionName":"makeRplTaskEntry","ranges":[{"startOffset":48916,"endOffset":49540,"count":147}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48972,"endOffset":49537,"count":147},{"startOffset":49090,"endOffset":49536,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49128,"endOffset":49529,"count":0}],"isBlockCoverage":false},{"functionName":"readdir$1","ranges":[{"startOffset":49541,"endOffset":50815,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback$1","ranges":[{"startOffset":50845,"endOffset":50917,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback$1","ranges":[{"startOffset":50918,"endOffset":50998,"count":32}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":51258,"endOffset":51478,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":51499,"endOffset":52309,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":52362,"endOffset":52919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52986,"endOffset":53652,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":53367,"endOffset":53589,"count":1},{"startOffset":53447,"endOffset":53500,"count":0}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":53826,"endOffset":54559,"count":1}],"isBlockCoverage":true},{"functionName":"_getValue","ranges":[{"startOffset":54564,"endOffset":54666,"count":4},{"startOffset":54652,"endOffset":54659,"count":0}],"isBlockCoverage":true},{"functionName":"scandir","ranges":[{"startOffset":54944,"endOffset":55240,"count":32},{"startOffset":55067,"endOffset":55162,"count":0}],"isBlockCoverage":true},{"functionName":"scandirSync","ranges":[{"startOffset":55266,"endOffset":55410,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings$1","ranges":[{"startOffset":55444,"endOffset":55651,"count":32},{"startOffset":55593,"endOffset":55650,"count":0}],"isBlockCoverage":true},{"functionName":"reusify$1","ranges":[{"startOffset":55681,"endOffset":56105,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":55770,"endOffset":55983,"count":32},{"startOffset":55835,"endOffset":55869,"count":17},{"startOffset":55869,"endOffset":55933,"count":15}],"isBlockCoverage":true},{"functionName":"release","ranges":[{"startOffset":55987,"endOffset":56052,"count":32}],"isBlockCoverage":true},{"functionName":"fastqueue","ranges":[{"startOffset":56190,"endOffset":59581,"count":1},{"startOffset":56377,"endOffset":56450,"count":0}],"isBlockCoverage":true},{"functionName":"running","ranges":[{"startOffset":56948,"endOffset":56993,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":56997,"endOffset":57044,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":57048,"endOffset":57218,"count":0}],"isBlockCoverage":false},{"functionName":"getQueue","ranges":[{"startOffset":57222,"endOffset":57407,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":57411,"endOffset":57579,"count":0}],"isBlockCoverage":false},{"functionName":"idle","ranges":[{"startOffset":57583,"endOffset":57654,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":57658,"endOffset":58238,"count":32},{"startOffset":57837,"endOffset":57846,"count":0},{"startOffset":57928,"endOffset":57942,"count":16},{"startOffset":57944,"endOffset":58144,"count":16},{"startOffset":57967,"endOffset":58039,"count":13},{"startOffset":58039,"endOffset":58138,"count":3},{"startOffset":58144,"endOffset":58234,"count":16}],"isBlockCoverage":true},{"functionName":"unshift","ranges":[{"startOffset":58242,"endOffset":58784,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":58788,"endOffset":59301,"count":32},{"startOffset":58909,"endOffset":59242,"count":16},{"startOffset":58974,"endOffset":59013,"count":3},{"startOffset":59158,"endOffset":59193,"count":3},{"startOffset":59201,"endOffset":59236,"count":0},{"startOffset":59242,"endOffset":59297,"count":16},{"startOffset":59270,"endOffset":59297,"count":1}],"isBlockCoverage":true},{"functionName":"kill","ranges":[{"startOffset":59305,"endOffset":59396,"count":0}],"isBlockCoverage":false},{"functionName":"killAndDrain","ranges":[{"startOffset":59400,"endOffset":59517,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":59521,"endOffset":59579,"count":0}],"isBlockCoverage":false},{"functionName":"noop$1","ranges":[{"startOffset":59583,"endOffset":59604,"count":6}],"isBlockCoverage":true},{"functionName":"Task","ranges":[{"startOffset":59606,"endOffset":60131,"count":16}],"isBlockCoverage":true},{"functionName":"worked","ranges":[{"startOffset":59805,"endOffset":60128,"count":32},{"startOffset":60017,"endOffset":60054,"count":0}],"isBlockCoverage":true},{"functionName":"queueAsPromised","ranges":[{"startOffset":60133,"endOffset":61687,"count":0}],"isBlockCoverage":false},{"functionName":"isFatalError","ranges":[{"startOffset":62003,"endOffset":62154,"count":0}],"isBlockCoverage":false},{"functionName":"isAppliedFilter","ranges":[{"startOffset":62193,"endOffset":62281,"count":181}],"isBlockCoverage":true},{"functionName":"replacePathSegmentSeparator","ranges":[{"startOffset":62326,"endOffset":62439,"count":1}],"isBlockCoverage":true},{"functionName":"joinPathSegments","ranges":[{"startOffset":62508,"endOffset":62813,"count":147},{"startOffset":62571,"endOffset":62596,"count":17},{"startOffset":62596,"endOffset":62752,"count":130},{"startOffset":62752,"endOffset":62781,"count":0},{"startOffset":62781,"endOffset":62812,"count":130}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":63006,"endOffset":63205,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncReader","ranges":[{"startOffset":63495,"endOffset":63995,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncReader._queue.drain","ranges":[{"startOffset":63875,"endOffset":63988,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":64000,"endOffset":64224,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64101,"endOffset":64186,"count":1}],"isBlockCoverage":true},{"functionName":"get isDestroyed","ranges":[{"startOffset":64229,"endOffset":64288,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":64293,"endOffset":64487,"count":0}],"isBlockCoverage":false},{"functionName":"onEntry","ranges":[{"startOffset":64492,"endOffset":64562,"count":1}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":64567,"endOffset":64639,"count":1}],"isBlockCoverage":true},{"functionName":"onEnd","ranges":[{"startOffset":64644,"endOffset":64712,"count":1}],"isBlockCoverage":true},{"functionName":"_pushToQueue","ranges":[{"startOffset":64717,"endOffset":64952,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64832,"endOffset":64944,"count":32},{"startOffset":64877,"endOffset":64934,"count":0}],"isBlockCoverage":true},{"functionName":"_worker","ranges":[{"startOffset":64957,"endOffset":65347,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":65051,"endOffset":65339,"count":32},{"startOffset":65105,"endOffset":65184,"count":0},{"startOffset":65226,"endOffset":65294,"count":147}],"isBlockCoverage":true},{"functionName":"_handleError","ranges":[{"startOffset":65352,"endOffset":65604,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":65609,"endOffset":66236,"count":147},{"startOffset":65690,"endOffset":65721,"count":0},{"startOffset":65983,"endOffset":66030,"count":24},{"startOffset":66070,"endOffset":66131,"count":34},{"startOffset":66133,"endOffset":66230,"count":31},{"startOffset":66194,"endOffset":66205,"count":0}],"isBlockCoverage":true},{"functionName":"_emitEntry","ranges":[{"startOffset":66241,"endOffset":66310,"count":24}],"isBlockCoverage":true},{"functionName":"AsyncProvider","ranges":[{"startOffset":66461,"endOffset":66664,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":66669,"endOffset":67022,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66715,"endOffset":66787,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66819,"endOffset":66880,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66910,"endOffset":66985,"count":1}],"isBlockCoverage":true},{"functionName":"callFailureCallback","ranges":[{"startOffset":67058,"endOffset":67128,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":67129,"endOffset":67209,"count":1}],"isBlockCoverage":true},{"functionName":"StreamProvider","ranges":[{"startOffset":67382,"endOffset":67831,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":67836,"endOffset":68185,"count":0}],"isBlockCoverage":false},{"functionName":"SyncReader","ranges":[{"startOffset":68453,"endOffset":68613,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":68618,"endOffset":68755,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":68760,"endOffset":68843,"count":0}],"isBlockCoverage":false},{"functionName":"_handleQueue","ranges":[{"startOffset":68848,"endOffset":68993,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDirectory","ranges":[{"startOffset":68998,"endOffset":69328,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":69333,"endOffset":69470,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":69475,"endOffset":70015,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToStorage","ranges":[{"startOffset":70020,"endOffset":70084,"count":0}],"isBlockCoverage":false},{"functionName":"SyncProvider","ranges":[{"startOffset":70229,"endOffset":70403,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":70408,"endOffset":70458,"count":0}],"isBlockCoverage":false},{"functionName":"Settings","ranges":[{"startOffset":70645,"endOffset":71581,"count":1}],"isBlockCoverage":true},{"functionName":"_getValue","ranges":[{"startOffset":71586,"endOffset":71688,"count":6},{"startOffset":71674,"endOffset":71681,"count":0}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":72011,"endOffset":72347,"count":1},{"startOffset":72136,"endOffset":72250,"count":0}],"isBlockCoverage":true},{"functionName":"walkSync","ranges":[{"startOffset":72367,"endOffset":72563,"count":0}],"isBlockCoverage":false},{"functionName":"walkStream","ranges":[{"startOffset":72591,"endOffset":72791,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":72823,"endOffset":73028,"count":1},{"startOffset":72929,"endOffset":72970,"count":0}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":73196,"endOffset":73511,"count":2}],"isBlockCoverage":true},{"functionName":"_getFullEntryPath","ranges":[{"startOffset":73516,"endOffset":73612,"count":0}],"isBlockCoverage":false},{"functionName":"_makeEntry","ranges":[{"startOffset":73617,"endOffset":73910,"count":0}],"isBlockCoverage":false},{"functionName":"_isFatalError","ranges":[{"startOffset":73915,"endOffset":74033,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderStream","ranges":[{"startOffset":74306,"endOffset":74440,"count":1}],"isBlockCoverage":true},{"functionName":"dynamic","ranges":[{"startOffset":74445,"endOffset":74523,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":74534,"endOffset":75293,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":75298,"endOffset":75602,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":75607,"endOffset":75858,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderAsync","ranges":[{"startOffset":76089,"endOffset":76249,"count":1}],"isBlockCoverage":true},{"functionName":"dynamic","ranges":[{"startOffset":76254,"endOffset":76597,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":76306,"endOffset":76589,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":76372,"endOffset":76577,"count":1},{"startOffset":76487,"endOffset":76563,"count":0}],"isBlockCoverage":true},{"functionName":"static","ranges":[{"startOffset":76602,"endOffset":77026,"count":0}],"isBlockCoverage":false},{"functionName":"Matcher","ranges":[{"startOffset":77243,"endOffset":77487,"count":1}],"isBlockCoverage":true},{"functionName":"_fillStorage","ranges":[{"startOffset":77492,"endOffset":77881,"count":1},{"startOffset":77555,"endOffset":77875,"count":2}],"isBlockCoverage":true},{"functionName":"_getPatternSegments","ranges":[{"startOffset":77886,"endOffset":78479,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":78031,"endOffset":78471,"count":4},{"startOffset":78153,"endOffset":78282,"count":0}],"isBlockCoverage":true},{"functionName":"_splitSegmentsIntoSections","ranges":[{"startOffset":78484,"endOffset":78656,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":78572,"endOffset":78648,"count":4}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":78830,"endOffset":80044,"count":34},{"startOffset":79537,"endOffset":80006,"count":0},{"startOffset":80016,"endOffset":80043,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":78974,"endOffset":79031,"count":68},{"startOffset":78999,"endOffset":79031,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":79576,"endOffset":79936,"count":0}],"isBlockCoverage":false},{"functionName":"DeepFilter","ranges":[{"startOffset":80217,"endOffset":80357,"count":1}],"isBlockCoverage":true},{"functionName":"getFilter","ranges":[{"startOffset":80362,"endOffset":80605,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":80537,"endOffset":80598,"count":34}],"isBlockCoverage":true},{"functionName":"_getMatcher","ranges":[{"startOffset":80610,"endOffset":80728,"count":1}],"isBlockCoverage":true},{"functionName":"_getNegativePatternsRe","ranges":[{"startOffset":80733,"endOffset":80989,"count":1}],"isBlockCoverage":true},{"functionName":"_filter","ranges":[{"startOffset":80994,"endOffset":81479,"count":34},{"startOffset":81099,"endOffset":81136,"count":0},{"startOffset":81185,"endOffset":81222,"count":0},{"startOffset":81364,"endOffset":81401,"count":0}],"isBlockCoverage":true},{"functionName":"_isSkippedByDeep","ranges":[{"startOffset":81484,"endOffset":81789,"count":34},{"startOffset":81703,"endOffset":81788,"count":0}],"isBlockCoverage":true},{"functionName":"_getEntryLevel","ranges":[{"startOffset":81794,"endOffset":82078,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedSymbolicLink","ranges":[{"startOffset":82083,"endOffset":82205,"count":34},{"startOffset":82166,"endOffset":82198,"count":0}],"isBlockCoverage":true},{"functionName":"_isSkippedByPositivePatterns","ranges":[{"startOffset":82210,"endOffset":82341,"count":34}],"isBlockCoverage":true},{"functionName":"_isSkippedByNegativePatterns","ranges":[{"startOffset":82346,"endOffset":82470,"count":34}],"isBlockCoverage":true},{"functionName":"EntryFilter","ranges":[{"startOffset":82632,"endOffset":82804,"count":1}],"isBlockCoverage":true},{"functionName":"getFilter","ranges":[{"startOffset":82809,"endOffset":83164,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":83103,"endOffset":83157,"count":147}],"isBlockCoverage":true},{"functionName":"_filter","ranges":[{"startOffset":83169,"endOffset":83967,"count":147},{"startOffset":83356,"endOffset":83393,"count":0},{"startOffset":83434,"endOffset":83469,"count":113},{"startOffset":83471,"endOffset":83508,"count":34},{"startOffset":83508,"endOffset":83586,"count":113},{"startOffset":83586,"endOffset":83623,"count":0},{"startOffset":83623,"endOffset":83765,"count":113},{"startOffset":83765,"endOffset":83827,"count":24},{"startOffset":83863,"endOffset":83875,"count":113},{"startOffset":83877,"endOffset":83935,"count":24},{"startOffset":83935,"endOffset":83966,"count":113}],"isBlockCoverage":true},{"functionName":"_isDuplicateEntry","ranges":[{"startOffset":83972,"endOffset":84048,"count":147}],"isBlockCoverage":true},{"functionName":"_createIndexRecord","ranges":[{"startOffset":84053,"endOffset":84134,"count":24}],"isBlockCoverage":true},{"functionName":"_onlyFileFilter","ranges":[{"startOffset":84139,"endOffset":84236,"count":147}],"isBlockCoverage":true},{"functionName":"_onlyDirectoryFilter","ranges":[{"startOffset":84241,"endOffset":84354,"count":113},{"startOffset":84317,"endOffset":84347,"count":0}],"isBlockCoverage":true},{"functionName":"_isSkippedByAbsoluteNegativePatterns","ranges":[{"startOffset":84359,"endOffset":84648,"count":113},{"startOffset":84496,"endOffset":84647,"count":0}],"isBlockCoverage":true},{"functionName":"_isMatchToPatterns","ranges":[{"startOffset":84653,"endOffset":85159,"count":137},{"startOffset":85027,"endOffset":85041,"count":113},{"startOffset":85043,"endOffset":85127,"count":0}],"isBlockCoverage":true},{"functionName":"ErrorFilter","ranges":[{"startOffset":85325,"endOffset":85391,"count":1}],"isBlockCoverage":true},{"functionName":"getFilter","ranges":[{"startOffset":85396,"endOffset":85471,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":85425,"endOffset":85464,"count":0}],"isBlockCoverage":false},{"functionName":"_isNonFatalError","ranges":[{"startOffset":85476,"endOffset":85595,"count":0}],"isBlockCoverage":false},{"functionName":"EntryTransformer","ranges":[{"startOffset":85762,"endOffset":85828,"count":1}],"isBlockCoverage":true},{"functionName":"getTransformer","ranges":[{"startOffset":85833,"endOffset":85907,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":85867,"endOffset":85900,"count":24}],"isBlockCoverage":true},{"functionName":"_transform","ranges":[{"startOffset":85912,"endOffset":86428,"count":24},{"startOffset":86004,"endOffset":86150,"count":0},{"startOffset":86194,"endOffset":86223,"count":0},{"startOffset":86225,"endOffset":86265,"count":0},{"startOffset":86346,"endOffset":86427,"count":0}],"isBlockCoverage":true},{"functionName":"Provider","ranges":[{"startOffset":86661,"endOffset":87046,"count":1}],"isBlockCoverage":true},{"functionName":"_getRootDirectory","ranges":[{"startOffset":87051,"endOffset":87142,"count":1}],"isBlockCoverage":true},{"functionName":"_getReaderOptions","ranges":[{"startOffset":87147,"endOffset":87908,"count":1},{"startOffset":87221,"endOffset":87232,"count":0}],"isBlockCoverage":true},{"functionName":"_getMicromatchOptions","ranges":[{"startOffset":87913,"endOffset":88323,"count":2}],"isBlockCoverage":true},{"functionName":"ProviderAsync","ranges":[{"startOffset":88532,"endOffset":88644,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":88649,"endOffset":88904,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88861,"endOffset":88896,"count":24}],"isBlockCoverage":true},{"functionName":"api","ranges":[{"startOffset":88909,"endOffset":89095,"count":1},{"startOffset":89029,"endOffset":89094,"count":0}],"isBlockCoverage":true},{"functionName":"ProviderStream","ranges":[{"startOffset":89359,"endOffset":89470,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":89475,"endOffset":90075,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":90080,"endOffset":90266,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderSync","ranges":[{"startOffset":90514,"endOffset":90648,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":90653,"endOffset":90729,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":90740,"endOffset":91141,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":91146,"endOffset":91466,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":91471,"endOffset":91560,"count":0}],"isBlockCoverage":false},{"functionName":"ProviderSync","ranges":[{"startOffset":91757,"endOffset":91868,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":91873,"endOffset":92098,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":92103,"endOffset":92289,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":92345,"endOffset":95257,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":93012,"endOffset":94982,"count":1},{"startOffset":94737,"endOffset":94786,"count":0},{"startOffset":94812,"endOffset":94861,"count":0}],"isBlockCoverage":true},{"functionName":"_getValue","ranges":[{"startOffset":94988,"endOffset":95076,"count":20},{"startOffset":95052,"endOffset":95059,"count":17},{"startOffset":95060,"endOffset":95068,"count":3}],"isBlockCoverage":true},{"functionName":"_getFileSystemMethods","ranges":[{"startOffset":95082,"endOffset":95222,"count":1}],"isBlockCoverage":true},{"functionName":"FastGlob","ranges":[{"startOffset":95424,"endOffset":95648,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":95759,"endOffset":98524,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":95910,"endOffset":96093,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":96124,"endOffset":96615,"count":0}],"isBlockCoverage":false},{"functionName":"generateTasks","ranges":[{"startOffset":96650,"endOffset":96893,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":96942,"endOffset":97152,"count":0}],"isBlockCoverage":false},{"functionName":"escapePath","ranges":[{"startOffset":97207,"endOffset":97321,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathToPattern","ranges":[{"startOffset":97364,"endOffset":97502,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97566,"endOffset":97996,"count":1}],"isBlockCoverage":true},{"functionName":"escapePath","ranges":[{"startOffset":97593,"endOffset":97728,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathToPattern","ranges":[{"startOffset":97776,"endOffset":97931,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98045,"endOffset":98479,"count":1}],"isBlockCoverage":true},{"functionName":"escapePath","ranges":[{"startOffset":98072,"endOffset":98209,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathToPattern","ranges":[{"startOffset":98257,"endOffset":98414,"count":0}],"isBlockCoverage":false},{"functionName":"getWorks","ranges":[{"startOffset":98556,"endOffset":98852,"count":1}],"isBlockCoverage":true},{"functionName":"assertPatternsInput","ranges":[{"startOffset":98853,"endOffset":99164,"count":1},{"startOffset":99062,"endOffset":99162,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98967,"endOffset":99035,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":99520,"endOffset":99539,"count":0}],"isBlockCoverage":false},{"functionName":"primitives","ranges":[{"startOffset":99561,"endOffset":99629,"count":0}],"isBlockCoverage":false},{"functionName":"Primitives","ranges":[{"startOffset":99651,"endOffset":99728,"count":0}],"isBlockCoverage":false},{"functionName":"revive","ranges":[{"startOffset":99746,"endOffset":100464,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":100479,"endOffset":100600,"count":0}],"isBlockCoverage":false},{"functionName":"parse$3","ranges":[{"startOffset":100619,"endOffset":100910,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":100931,"endOffset":101772,"count":0}],"isBlockCoverage":false},{"functionName":"NOOP","ranges":[{"startOffset":102142,"endOffset":102150,"count":0}],"isBlockCoverage":false},{"functionName":"concat$1","ranges":[{"startOffset":102519,"endOffset":102968,"count":0}],"isBlockCoverage":false},{"functionName":"_mask","ranges":[{"startOffset":103298,"endOffset":103445,"count":0}],"isBlockCoverage":false},{"functionName":"_unmask","ranges":[{"startOffset":103598,"endOffset":103710,"count":0}],"isBlockCoverage":false},{"functionName":"toArrayBuffer$1","ranges":[{"startOffset":103863,"endOffset":104042,"count":0}],"isBlockCoverage":false},{"functionName":"toBuffer$2","ranges":[{"startOffset":104193,"endOffset":104587,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUtil$1.exports.mask","ranges":[{"startOffset":104889,"endOffset":105078,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUtil$1.exports.unmask","ranges":[{"startOffset":105126,"endOffset":105254,"count":0}],"isBlockCoverage":false},{"functionName":"Limiter","ranges":[{"startOffset":105736,"endOffset":105931,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":106037,"endOffset":106094,"count":0}],"isBlockCoverage":false},{"functionName":"Limiter$1","ranges":[{"startOffset":106188,"endOffset":106372,"count":0}],"isBlockCoverage":false},{"functionName":"PerMessageDeflate","ranges":[{"startOffset":108496,"endOffset":109043,"count":0}],"isBlockCoverage":false},{"functionName":"get extensionName","ranges":[{"startOffset":109086,"endOffset":109144,"count":0}],"isBlockCoverage":false},{"functionName":"offer","ranges":[{"startOffset":109265,"endOffset":109880,"count":0}],"isBlockCoverage":false},{"functionName":"accept","ranges":[{"startOffset":110088,"endOffset":110323,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":110408,"endOffset":110818,"count":0}],"isBlockCoverage":false},{"functionName":"acceptAsServer","ranges":[{"startOffset":111003,"endOffset":112347,"count":0}],"isBlockCoverage":false},{"functionName":"acceptAsClient","ranges":[{"startOffset":112539,"endOffset":113332,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParams","ranges":[{"startOffset":113538,"endOffset":115078,"count":0}],"isBlockCoverage":false},{"functionName":"decompress","ranges":[{"startOffset":115315,"endOffset":115502,"count":0}],"isBlockCoverage":false},{"functionName":"compress","ranges":[{"startOffset":115747,"endOffset":115930,"count":0}],"isBlockCoverage":false},{"functionName":"_decompress","ranges":[{"startOffset":116147,"endOffset":117607,"count":0}],"isBlockCoverage":false},{"functionName":"_compress","ranges":[{"startOffset":117832,"endOffset":119265,"count":0}],"isBlockCoverage":false},{"functionName":"deflateOnData","ranges":[{"startOffset":119444,"endOffset":119545,"count":0}],"isBlockCoverage":false},{"functionName":"inflateOnData","ranges":[{"startOffset":119675,"endOffset":120147,"count":0}],"isBlockCoverage":false},{"functionName":"inflateOnError","ranges":[{"startOffset":120277,"endOffset":120530,"count":0}],"isBlockCoverage":false},{"functionName":"isValidStatusCode$2","ranges":[{"startOffset":121578,"endOffset":121780,"count":0}],"isBlockCoverage":false},{"functionName":"_isValidUTF8","ranges":[{"startOffset":122068,"endOffset":123393,"count":0}],"isBlockCoverage":false},{"functionName":"validation.exports.isValidUTF8","ranges":[{"startOffset":123585,"endOffset":123667,"count":0}],"isBlockCoverage":false},{"functionName":"validation.exports.isValidUTF8","ranges":[{"startOffset":123858,"endOffset":123949,"count":0}],"isBlockCoverage":false},{"functionName":"Receiver","ranges":[{"startOffset":125568,"endOffset":126293,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":126528,"endOffset":126729,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":126907,"endOffset":127776,"count":0}],"isBlockCoverage":false},{"functionName":"startLoop","ranges":[{"startOffset":127876,"endOffset":128727,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":128860,"endOffset":132259,"count":0}],"isBlockCoverage":false},{"functionName":"getPayloadLength16","ranges":[{"startOffset":132391,"endOffset":132588,"count":0}],"isBlockCoverage":false},{"functionName":"getPayloadLength64","ranges":[{"startOffset":132720,"endOffset":133416,"count":0}],"isBlockCoverage":false},{"functionName":"haveLength","ranges":[{"startOffset":133541,"endOffset":134044,"count":0}],"isBlockCoverage":false},{"functionName":"getMask","ranges":[{"startOffset":134102,"endOffset":134261,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":134415,"endOffset":135282,"count":0}],"isBlockCoverage":false},{"functionName":"decompress","ranges":[{"startOffset":135418,"endOffset":136154,"count":0}],"isBlockCoverage":false},{"functionName":"dataMessage","ranges":[{"startOffset":136268,"endOffset":137323,"count":0}],"isBlockCoverage":false},{"functionName":"controlMessage","ranges":[{"startOffset":137492,"endOffset":138668,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":139107,"endOffset":139384,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotaskShim","ranges":[{"startOffset":139464,"endOffset":139545,"count":0}],"isBlockCoverage":false},{"functionName":"throwError","ranges":[{"startOffset":139631,"endOffset":139672,"count":0}],"isBlockCoverage":false},{"functionName":"throwErrorNextTick","ranges":[{"startOffset":139775,"endOffset":139848,"count":0}],"isBlockCoverage":false},{"functionName":"Sender","ranges":[{"startOffset":140607,"endOffset":140983,"count":0}],"isBlockCoverage":false},{"functionName":"frame","ranges":[{"startOffset":141861,"endOffset":143736,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":144070,"endOffset":145214,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":145446,"endOffset":146237,"count":0}],"isBlockCoverage":false},{"functionName":"pong","ranges":[{"startOffset":146469,"endOffset":147260,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":147848,"endOffset":149598,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":150509,"endOffset":151513,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":151586,"endOffset":151811,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":151932,"endOffset":152034,"count":0}],"isBlockCoverage":false},{"functionName":"sendFrame","ranges":[{"startOffset":152172,"endOffset":152414,"count":0}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":153022,"endOffset":153095,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":153126,"endOffset":153170,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":153206,"endOffset":153246,"count":0}],"isBlockCoverage":false},{"functionName":"CloseEvent","ranges":[{"startOffset":154056,"endOffset":154329,"count":0}],"isBlockCoverage":false},{"functionName":"get code","ranges":[{"startOffset":154365,"endOffset":154405,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":154441,"endOffset":154485,"count":0}],"isBlockCoverage":false},{"functionName":"get wasClean","ranges":[{"startOffset":154522,"endOffset":154570,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorEvent","ranges":[{"startOffset":155269,"endOffset":155470,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":155501,"endOffset":155543,"count":0}],"isBlockCoverage":false},{"functionName":"get message","ranges":[{"startOffset":155579,"endOffset":155625,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":156175,"endOffset":156298,"count":0}],"isBlockCoverage":false},{"functionName":"get data","ranges":[{"startOffset":156329,"endOffset":156369,"count":0}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":157133,"endOffset":158788,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":158990,"endOffset":159239,"count":0}],"isBlockCoverage":false},{"functionName":"callListener","ranges":[{"startOffset":159578,"endOffset":159789,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":160181,"endOffset":160299,"count":0}],"isBlockCoverage":false},{"functionName":"parse$2","ranges":[{"startOffset":160481,"endOffset":165013,"count":0}],"isBlockCoverage":false},{"functionName":"format$1","ranges":[{"startOffset":165234,"endOffset":165943,"count":0}],"isBlockCoverage":false},{"functionName":"WebSocket","ranges":[{"startOffset":167334,"endOffset":168326,"count":0}],"isBlockCoverage":false},{"functionName":"get binaryType","ranges":[{"startOffset":168528,"endOffset":168579,"count":0}],"isBlockCoverage":false},{"functionName":"set binaryType","ranges":[{"startOffset":168583,"endOffset":168807,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferedAmount","ranges":[{"startOffset":168843,"endOffset":168999,"count":0}],"isBlockCoverage":false},{"functionName":"get extensions","ranges":[{"startOffset":169035,"endOffset":169106,"count":0}],"isBlockCoverage":false},{"functionName":"get isPaused","ranges":[{"startOffset":169143,"endOffset":169188,"count":0}],"isBlockCoverage":false},{"functionName":"get onclose","ranges":[{"startOffset":169255,"endOffset":169291,"count":0}],"isBlockCoverage":false},{"functionName":"get onerror","ranges":[{"startOffset":169358,"endOffset":169394,"count":0}],"isBlockCoverage":false},{"functionName":"get onopen","ranges":[{"startOffset":169461,"endOffset":169496,"count":0}],"isBlockCoverage":false},{"functionName":"get onmessage","ranges":[{"startOffset":169563,"endOffset":169601,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":169637,"endOffset":169684,"count":0}],"isBlockCoverage":false},{"functionName":"get readyState","ranges":[{"startOffset":169720,"endOffset":169771,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":169807,"endOffset":169844,"count":0}],"isBlockCoverage":false},{"functionName":"setSocket","ranges":[{"startOffset":170439,"endOffset":171637,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":171703,"endOffset":172154,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":172998,"endOffset":174178,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":174235,"endOffset":174430,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":174668,"endOffset":175278,"count":0}],"isBlockCoverage":false},{"functionName":"pong","ranges":[{"startOffset":175516,"endOffset":176126,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":176184,"endOffset":176428,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":177014,"endOffset":177736,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":177806,"endOffset":178180,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":179767,"endOffset":179864,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":180072,"endOffset":180708,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":180176,"endOffset":180344,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":180350,"endOffset":180700,"count":0}],"isBlockCoverage":false},{"functionName":"initAsClient","ranges":[{"startOffset":182051,"endOffset":192424,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorAndClose","ranges":[{"startOffset":192584,"endOffset":192734,"count":0}],"isBlockCoverage":false},{"functionName":"netConnect","ranges":[{"startOffset":192935,"endOffset":193035,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnect","ranges":[{"startOffset":193242,"endOffset":193466,"count":0}],"isBlockCoverage":false},{"functionName":"abortHandshake$1","ranges":[{"startOffset":193748,"endOffset":194533,"count":0}],"isBlockCoverage":false},{"functionName":"sendAfterClose","ranges":[{"startOffset":194824,"endOffset":195532,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnConclude","ranges":[{"startOffset":195700,"endOffset":196140,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnDrain","ranges":[{"startOffset":196216,"endOffset":196342,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnError","ranges":[{"startOffset":196471,"endOffset":196931,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnFinish","ranges":[{"startOffset":197008,"endOffset":197073,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnMessage","ranges":[{"startOffset":197285,"endOffset":197385,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnPing","ranges":[{"startOffset":197520,"endOffset":197678,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnPong","ranges":[{"startOffset":197813,"endOffset":197887,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":197988,"endOffset":198034,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":198106,"endOffset":199514,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":199626,"endOffset":199732,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":199802,"endOffset":199959,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError$1","ranges":[{"startOffset":200031,"endOffset":200270,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":200511,"endOffset":201719,"count":0}],"isBlockCoverage":false},{"functionName":"WebSocketServer","ranges":[{"startOffset":203774,"endOffset":205695,"count":0}],"isBlockCoverage":false},{"functionName":"address","ranges":[{"startOffset":206046,"endOffset":206241,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":206475,"endOffset":207554,"count":0}],"isBlockCoverage":false},{"functionName":"shouldHandle","ranges":[{"startOffset":207792,"endOffset":208040,"count":0}],"isBlockCoverage":false},{"functionName":"handleUpgrade","ranges":[{"startOffset":208346,"endOffset":211650,"count":0}],"isBlockCoverage":false},{"functionName":"completeUpgrade","ranges":[{"startOffset":212200,"endOffset":214359,"count":0}],"isBlockCoverage":false},{"functionName":"addListeners","ranges":[{"startOffset":214715,"endOffset":214965,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":215088,"endOffset":215168,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":215218,"endOffset":215264,"count":0}],"isBlockCoverage":false},{"functionName":"abortHandshake","ranges":[{"startOffset":215579,"endOffset":216527,"count":0}],"isBlockCoverage":false},{"functionName":"abortHandshakeOrEmitwsClientError","ranges":[{"startOffset":216965,"endOffset":217310,"count":0}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":217392,"endOffset":223605,"count":0}],"isBlockCoverage":false},{"functionName":"WebSocketReporter","ranges":[{"startOffset":223634,"endOffset":223738,"count":0}],"isBlockCoverage":false},{"functionName":"onCollected","ranges":[{"startOffset":223741,"endOffset":224037,"count":0}],"isBlockCoverage":false},{"functionName":"onTaskUpdate","ranges":[{"startOffset":224040,"endOffset":224790,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":224793,"endOffset":225056,"count":0}],"isBlockCoverage":false},{"functionName":"onFinishedReportCoverage","ranges":[{"startOffset":225059,"endOffset":225322,"count":0}],"isBlockCoverage":false},{"functionName":"onUserConsoleLog","ranges":[{"startOffset":225325,"endOffset":225580,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformMode","ranges":[{"startOffset":225782,"endOffset":226000,"count":24},{"startOffset":225849,"endOffset":225886,"count":0},{"startOffset":225892,"endOffset":225905,"count":0},{"startOffset":225925,"endOffset":225962,"count":0},{"startOffset":225968,"endOffset":225981,"count":0}],"isBlockCoverage":true},{"functionName":"groupFilesByEnv","ranges":[{"startOffset":226001,"endOffset":227144,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":226092,"endOffset":227068,"count":24},{"startOffset":226291,"endOffset":226298,"count":0},{"startOffset":226388,"endOffset":226393,"count":0},{"startOffset":226395,"endOffset":226523,"count":0},{"startOffset":226575,"endOffset":226584,"count":0},{"startOffset":226789,"endOffset":226796,"count":0},{"startOffset":226849,"endOffset":226861,"count":0},{"startOffset":226959,"endOffset":226985,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":227103,"endOffset":227140,"count":24}],"isBlockCoverage":true},{"functionName":"createMethodsRPC","ranges":[{"startOffset":227233,"endOffset":229896,"count":24}],"isBlockCoverage":true},{"functionName":"snapshotSaved","ranges":[{"startOffset":227312,"endOffset":227377,"count":23}],"isBlockCoverage":true},{"functionName":"resolveSnapshotPath","ranges":[{"startOffset":227383,"endOffset":227469,"count":24}],"isBlockCoverage":true},{"functionName":"getSourceMap","ranges":[{"startOffset":227475,"endOffset":227784,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":227790,"endOffset":228722,"count":744},{"startOffset":227969,"endOffset":227983,"count":229},{"startOffset":227983,"endOffset":228009,"count":515},{"startOffset":228009,"endOffset":228041,"count":268},{"startOffset":228051,"endOffset":228076,"count":268},{"startOffset":228076,"endOffset":228109,"count":247},{"startOffset":228109,"endOffset":228157,"count":0},{"startOffset":228157,"endOffset":228343,"count":247},{"startOffset":228343,"endOffset":228413,"count":146},{"startOffset":228413,"endOffset":228443,"count":101},{"startOffset":228443,"endOffset":228525,"count":7},{"startOffset":228525,"endOffset":228721,"count":101}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228588,"endOffset":228614,"count":101}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":228728,"endOffset":228844,"count":659}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":228850,"endOffset":228948,"count":0}],"isBlockCoverage":false},{"functionName":"onPathsCollected","ranges":[{"startOffset":228954,"endOffset":229074,"count":0}],"isBlockCoverage":false},{"functionName":"onCollected","ranges":[{"startOffset":229080,"endOffset":229190,"count":24}],"isBlockCoverage":true},{"functionName":"onAfterSuiteRun","ranges":[{"startOffset":229196,"endOffset":229318,"count":24},{"startOffset":229276,"endOffset":229284,"count":0}],"isBlockCoverage":true},{"functionName":"onTaskUpdate","ranges":[{"startOffset":229324,"endOffset":229435,"count":129}],"isBlockCoverage":true},{"functionName":"onUserConsoleLog","ranges":[{"startOffset":229441,"endOffset":229549,"count":31}],"isBlockCoverage":true},{"functionName":"onUnhandledError","ranges":[{"startOffset":229555,"endOffset":229629,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":229635,"endOffset":229738,"count":0}],"isBlockCoverage":false},{"functionName":"onCancel","ranges":[{"startOffset":229744,"endOffset":229804,"count":0}],"isBlockCoverage":false},{"functionName":"getCountOfFailedTests","ranges":[{"startOffset":229810,"endOffset":229889,"count":0}],"isBlockCoverage":false},{"functionName":"createChildProcessChannel$1","ranges":[{"startOffset":229898,"endOffset":230803,"count":0}],"isBlockCoverage":false},{"functionName":"createForksPool","ranges":[{"startOffset":230804,"endOffset":236340,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerChannel$1","ranges":[{"startOffset":236342,"endOffset":236919,"count":24}],"isBlockCoverage":true},{"functionName":"post","ranges":[{"startOffset":236592,"endOffset":236638,"count":1603}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":236646,"endOffset":236694,"count":24}],"isBlockCoverage":true},{"functionName":"onTimeoutError","ranges":[{"startOffset":236702,"endOffset":236817,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":236852,"endOffset":236884,"count":0}],"isBlockCoverage":false},{"functionName":"createThreadsPool","ranges":[{"startOffset":236920,"endOffset":242766,"count":1},{"startOffset":237083,"endOffset":237105,"count":0},{"startOffset":237147,"endOffset":237185,"count":0},{"startOffset":237275,"endOffset":237283,"count":0},{"startOffset":237298,"endOffset":237303,"count":0},{"startOffset":238158,"endOffset":238219,"count":0}],"isBlockCoverage":true},{"functionName":"runWithFiles","ranges":[{"startOffset":238283,"endOffset":242659,"count":1}],"isBlockCoverage":true},{"functionName":"runFiles","ranges":[{"startOffset":238315,"endOffset":239525,"count":24},{"startOffset":238906,"endOffset":239451,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":239537,"endOffset":242654,"count":1},{"startOffset":240006,"endOffset":240162,"count":24},{"startOffset":240987,"endOffset":241547,"count":0},{"startOffset":241681,"endOffset":241806,"count":0},{"startOffset":241847,"endOffset":242648,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":239588,"endOffset":239619,"count":0}],"isBlockCoverage":false},{"functionName":"getConfig","ranges":[{"startOffset":239695,"endOffset":239907,"count":24},{"startOffset":239754,"endOffset":239782,"count":23},{"startOffset":239782,"endOffset":239906,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":240204,"endOffset":240373,"count":24},{"startOffset":240306,"endOffset":240314,"count":0},{"startOffset":240338,"endOffset":240346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":240419,"endOffset":240591,"count":24},{"startOffset":240523,"endOffset":240531,"count":0},{"startOffset":240555,"endOffset":240563,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":240866,"endOffset":240973,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":241036,"endOffset":241140,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":241262,"endOffset":241369,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":241404,"endOffset":241482,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":241586,"endOffset":241616,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":241622,"endOffset":241637,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":241994,"endOffset":242029,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":242245,"endOffset":242330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":242479,"endOffset":242492,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":242739,"endOffset":242759,"count":1}],"isBlockCoverage":true},{"functionName":"createBrowserPool","ranges":[{"startOffset":242768,"endOffset":244420,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultThreadsCount","ranges":[{"startOffset":244422,"endOffset":244678,"count":0}],"isBlockCoverage":false},{"functionName":"getWorkerMemoryLimit","ranges":[{"startOffset":244679,"endOffset":245057,"count":0}],"isBlockCoverage":false},{"functionName":"stringToBytes","ranges":[{"startOffset":245058,"endOffset":246645,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerChannel","ranges":[{"startOffset":246723,"endOffset":247298,"count":0}],"isBlockCoverage":false},{"functionName":"createVmThreadsPool","ranges":[{"startOffset":247299,"endOffset":251051,"count":0}],"isBlockCoverage":false},{"functionName":"getMemoryLimit$1","ranges":[{"startOffset":251052,"endOffset":251445,"count":0}],"isBlockCoverage":false},{"functionName":"createTypecheckPool","ranges":[{"startOffset":251447,"endOffset":254975,"count":0}],"isBlockCoverage":false},{"functionName":"createChildProcessChannel","ranges":[{"startOffset":255051,"endOffset":255954,"count":0}],"isBlockCoverage":false},{"functionName":"createVmForksPool","ranges":[{"startOffset":255955,"endOffset":259424,"count":0}],"isBlockCoverage":false},{"functionName":"getMemoryLimit","ranges":[{"startOffset":259425,"endOffset":259816,"count":0}],"isBlockCoverage":false},{"functionName":"createPool","ranges":[{"startOffset":259910,"endOffset":264663,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultPoolName","ranges":[{"startOffset":260078,"endOffset":260438,"count":24},{"startOffset":260165,"endOffset":260338,"count":0},{"startOffset":260385,"endOffset":260402,"count":0}],"isBlockCoverage":true},{"functionName":"getPoolName","ranges":[{"startOffset":260441,"endOffset":260939,"count":24},{"startOffset":260543,"endOffset":260889,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":261120,"endOffset":261321,"count":3},{"startOffset":261179,"endOffset":261217,"count":1},{"startOffset":261217,"endOffset":261261,"count":2},{"startOffset":261261,"endOffset":261320,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":261331,"endOffset":261357,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":261408,"endOffset":261532,"count":0}],"isBlockCoverage":false},{"functionName":"runTests","ranges":[{"startOffset":261540,"endOffset":264417,"count":1},{"startOffset":261775,"endOffset":261784,"count":0},{"startOffset":261824,"endOffset":261833,"count":0},{"startOffset":261975,"endOffset":262027,"count":113},{"startOffset":263444,"endOffset":263578,"count":24},{"startOffset":263508,"endOffset":263535,"count":0}],"isBlockCoverage":true},{"functionName":"resolveCustomPool","ranges":[{"startOffset":262089,"endOffset":262923,"count":0}],"isBlockCoverage":false},{"functionName":"browser","ranges":[{"startOffset":263112,"endOffset":263140,"count":0}],"isBlockCoverage":false},{"functionName":"vmThreads","ranges":[{"startOffset":263159,"endOffset":263198,"count":0}],"isBlockCoverage":false},{"functionName":"threads","ranges":[{"startOffset":263215,"endOffset":263252,"count":1}],"isBlockCoverage":true},{"functionName":"forks","ranges":[{"startOffset":263267,"endOffset":263302,"count":0}],"isBlockCoverage":false},{"functionName":"vmForks","ranges":[{"startOffset":263319,"endOffset":263356,"count":0}],"isBlockCoverage":false},{"functionName":"typescript","ranges":[{"startOffset":263376,"endOffset":263406,"count":0}],"isBlockCoverage":false},{"functionName":"sortSpecs","ranges":[{"startOffset":263678,"endOffset":263827,"count":1},{"startOffset":263748,"endOffset":263785,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":263882,"endOffset":264410,"count":6},{"startOffset":263985,"endOffset":263997,"count":5},{"startOffset":263997,"endOffset":264228,"count":1},{"startOffset":264228,"endOffset":264349,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":264468,"endOffset":264656,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":264533,"endOffset":264647,"count":6},{"startOffset":264589,"endOffset":264597,"count":5},{"startOffset":264598,"endOffset":264607,"count":1},{"startOffset":264617,"endOffset":264625,"count":5},{"startOffset":264626,"endOffset":264638,"count":1}],"isBlockCoverage":true},{"functionName":"loadCustomReporterModule","ranges":[{"startOffset":264665,"endOffset":265179,"count":0}],"isBlockCoverage":false},{"functionName":"createReporters","ranges":[{"startOffset":265180,"endOffset":266128,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":265312,"endOffset":266083,"count":1},{"startOffset":265493,"endOffset":265727,"count":0},{"startOffset":265889,"endOffset":266041,"count":0},{"startOffset":266047,"endOffset":266082,"count":0}],"isBlockCoverage":true},{"functionName":"createBenchmarkReporters","ranges":[{"startOffset":266129,"endOffset":266734,"count":0}],"isBlockCoverage":false},{"functionName":"isAggregateError","ranges":[{"startOffset":266736,"endOffset":266915,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":266935,"endOffset":270751,"count":1}],"isBlockCoverage":true},{"functionName":"catchError","ranges":[{"startOffset":267196,"endOffset":267770,"count":0}],"isBlockCoverage":false},{"functionName":"clearErrors","ranges":[{"startOffset":267773,"endOffset":267820,"count":1}],"isBlockCoverage":true},{"functionName":"getUnhandledErrors","ranges":[{"startOffset":267823,"endOffset":267897,"count":1}],"isBlockCoverage":true},{"functionName":"addProcessTimeoutCause","ranges":[{"startOffset":267900,"endOffset":267977,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessTimeoutCauses","ranges":[{"startOffset":267980,"endOffset":268070,"count":0}],"isBlockCoverage":false},{"functionName":"getPaths","ranges":[{"startOffset":268073,"endOffset":268127,"count":0}],"isBlockCoverage":false},{"functionName":"getFiles","ranges":[{"startOffset":268130,"endOffset":268297,"count":26},{"startOffset":268167,"endOffset":268239,"count":1},{"startOffset":268239,"endOffset":268296,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":268183,"endOffset":268214,"count":24}],"isBlockCoverage":true},{"functionName":"getFilepaths","ranges":[{"startOffset":268300,"endOffset":268365,"count":0}],"isBlockCoverage":false},{"functionName":"getFailedFilepaths","ranges":[{"startOffset":268368,"endOffset":268553,"count":0}],"isBlockCoverage":false},{"functionName":"collectPaths","ranges":[{"startOffset":268556,"endOffset":268655,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":268601,"endOffset":268649,"count":24}],"isBlockCoverage":true},{"functionName":"collectFiles","ranges":[{"startOffset":268658,"endOffset":268988,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":268703,"endOffset":268982,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":268821,"endOffset":268862,"count":0}],"isBlockCoverage":false},{"functionName":"clearFiles","ranges":[{"startOffset":269087,"endOffset":269479,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":269170,"endOffset":269473,"count":24},{"startOffset":269260,"endOffset":269467,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":269297,"endOffset":269347,"count":0}],"isBlockCoverage":false},{"functionName":"updateId","ranges":[{"startOffset":269482,"endOffset":269710,"count":238},{"startOffset":269547,"endOffset":269554,"count":0},{"startOffset":269621,"endOffset":269706,"count":82}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":269648,"endOffset":269698,"count":214}],"isBlockCoverage":true},{"functionName":"updateTasks","ranges":[{"startOffset":269713,"endOffset":270005,"count":129},{"startOffset":269778,"endOffset":270001,"count":373},{"startOffset":269921,"endOffset":269929,"count":0},{"startOffset":269968,"endOffset":269987,"count":0}],"isBlockCoverage":true},{"functionName":"updateUserLog","ranges":[{"startOffset":270008,"endOffset":270186,"count":31},{"startOffset":270102,"endOffset":270182,"count":30},{"startOffset":270134,"endOffset":270149,"count":24}],"isBlockCoverage":true},{"functionName":"getCountOfFailedTests","ranges":[{"startOffset":270189,"endOffset":270377,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":270265,"endOffset":270364,"count":238},{"startOffset":270326,"endOffset":270334,"count":0}],"isBlockCoverage":true},{"functionName":"cancelFiles","ranges":[{"startOffset":270380,"endOffset":270749,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":273552,"endOffset":274208,"count":1}],"isBlockCoverage":true},{"functionName":"getStats","ranges":[{"startOffset":273593,"endOffset":273644,"count":158}],"isBlockCoverage":true},{"functionName":"populateStats","ranges":[{"startOffset":273647,"endOffset":273883,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":273713,"endOffset":273844,"count":24}],"isBlockCoverage":true},{"functionName":"updateStats","ranges":[{"startOffset":273886,"endOffset":274069,"count":24},{"startOffset":273959,"endOffset":273966,"count":0}],"isBlockCoverage":true},{"functionName":"removeStats","ranges":[{"startOffset":274072,"endOffset":274206,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":274229,"endOffset":276258,"count":1}],"isBlockCoverage":true},{"functionName":"getCachePath","ranges":[{"startOffset":274373,"endOffset":274420,"count":0}],"isBlockCoverage":false},{"functionName":"setConfig","ranges":[{"startOffset":274423,"endOffset":274550,"count":1}],"isBlockCoverage":true},{"functionName":"getResults","ranges":[{"startOffset":274553,"endOffset":274606,"count":158}],"isBlockCoverage":true},{"functionName":"readFromCache","ranges":[{"startOffset":274609,"endOffset":275277,"count":1},{"startOffset":274664,"endOffset":274671,"count":0},{"startOffset":274720,"endOffset":274727,"count":0},{"startOffset":274874,"endOffset":274881,"count":0},{"startOffset":274930,"endOffset":275273,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":275022,"endOffset":275265,"count":0}],"isBlockCoverage":false},{"functionName":"updateResults","ranges":[{"startOffset":275280,"endOffset":275687,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":275321,"endOffset":275681,"count":24},{"startOffset":275394,"endOffset":275401,"count":0},{"startOffset":275441,"endOffset":275445,"count":1},{"startOffset":275621,"endOffset":275624,"count":0}],"isBlockCoverage":true},{"functionName":"removeFromCache","ranges":[{"startOffset":275690,"endOffset":275832,"count":0}],"isBlockCoverage":false},{"functionName":"writeToCache","ranges":[{"startOffset":275835,"endOffset":276256,"count":1},{"startOffset":275889,"endOffset":275896,"count":0},{"startOffset":276047,"endOffset":276108,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":276278,"endOffset":276745,"count":1}],"isBlockCoverage":true},{"functionName":"getFileTestResults","ranges":[{"startOffset":276347,"endOffset":276417,"count":158}],"isBlockCoverage":true},{"functionName":"getFileStats","ranges":[{"startOffset":276420,"endOffset":276480,"count":158}],"isBlockCoverage":true},{"functionName":"resolveCacheDir","ranges":[{"startOffset":276490,"endOffset":276743,"count":1},{"startOffset":276564,"endOffset":276594,"count":0},{"startOffset":276620,"endOffset":276713,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePath","ranges":[{"startOffset":276747,"endOffset":276874,"count":0}],"isBlockCoverage":false},{"functionName":"parseInspector","ranges":[{"startOffset":276875,"endOffset":277317,"count":1},{"startOffset":276982,"endOffset":277312,"count":0}],"isBlockCoverage":true},{"functionName":"resolveApiServerConfig","ranges":[{"startOffset":277318,"endOffset":278057,"count":4},{"startOffset":277389,"endOffset":277404,"count":0},{"startOffset":277410,"endOffset":277438,"count":0},{"startOffset":277476,"endOffset":277504,"count":0},{"startOffset":277553,"endOffset":277581,"count":0},{"startOffset":277621,"endOffset":277905,"count":1},{"startOffset":277636,"endOffset":277856,"count":0},{"startOffset":277917,"endOffset":277994,"count":1},{"startOffset":277967,"endOffset":277990,"count":0},{"startOffset":277994,"endOffset":278041,"count":3}],"isBlockCoverage":true},{"functionName":"resolveConfig","ranges":[{"startOffset":278058,"endOffset":293871,"count":1},{"startOffset":278299,"endOffset":278732,"count":0},{"startOffset":279071,"endOffset":279091,"count":0},{"startOffset":279158,"endOffset":279190,"count":0},{"startOffset":279293,"endOffset":279882,"count":0},{"startOffset":279909,"endOffset":279927,"count":0},{"startOffset":279933,"endOffset":279992,"count":0},{"startOffset":280024,"endOffset":280074,"count":0},{"startOffset":280106,"endOffset":280156,"count":0},{"startOffset":280421,"endOffset":280484,"count":0},{"startOffset":280532,"endOffset":281166,"count":0},{"startOffset":281214,"endOffset":281319,"count":0},{"startOffset":281426,"endOffset":281533,"count":0},{"startOffset":281784,"endOffset":281935,"count":0},{"startOffset":284026,"endOffset":284072,"count":0},{"startOffset":284186,"endOffset":284194,"count":0},{"startOffset":284229,"endOffset":284267,"count":0},{"startOffset":284269,"endOffset":284318,"count":0},{"startOffset":284648,"endOffset":284710,"count":0},{"startOffset":284751,"endOffset":284839,"count":0},{"startOffset":284894,"endOffset":285004,"count":0},{"startOffset":285045,"endOffset":285084,"count":0},{"startOffset":285090,"endOffset":285127,"count":0},{"startOffset":285359,"endOffset":285378,"count":0},{"startOffset":285379,"endOffset":285387,"count":0},{"startOffset":285406,"endOffset":285413,"count":0},{"startOffset":285844,"endOffset":285880,"count":0},{"startOffset":285897,"endOffset":285927,"count":0},{"startOffset":285967,"endOffset":286370,"count":0},{"startOffset":286409,"endOffset":286812,"count":0},{"startOffset":286849,"endOffset":287236,"count":0},{"startOffset":287273,"endOffset":287660,"count":0},{"startOffset":287687,"endOffset":287861,"count":0},{"startOffset":287911,"endOffset":287969,"count":0},{"startOffset":288198,"endOffset":289099,"count":0},{"startOffset":289612,"endOffset":289733,"count":0},{"startOffset":289811,"endOffset":289899,"count":0},{"startOffset":289970,"endOffset":290143,"count":0},{"startOffset":290230,"endOffset":290521,"count":0},{"startOffset":290839,"endOffset":290953,"count":0},{"startOffset":291093,"endOffset":291141,"count":0},{"startOffset":291174,"endOffset":291236,"count":0},{"startOffset":291252,"endOffset":291274,"count":0},{"startOffset":291628,"endOffset":291649,"count":0},{"startOffset":291651,"endOffset":292013,"count":0},{"startOffset":292139,"endOffset":292187,"count":0},{"startOffset":292189,"endOffset":292389,"count":0},{"startOffset":292431,"endOffset":292439,"count":0},{"startOffset":292519,"endOffset":292536,"count":0},{"startOffset":292678,"endOffset":292734,"count":0},{"startOffset":292969,"endOffset":292997,"count":0},{"startOffset":293098,"endOffset":293280,"count":0},{"startOffset":293300,"endOffset":293326,"count":0},{"startOffset":293607,"endOffset":293637,"count":0},{"startOffset":293643,"endOffset":293678,"count":0},{"startOffset":293745,"endOffset":293782,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":282126,"endOffset":282266,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":283170,"endOffset":283992,"count":3},{"startOffset":283239,"endOffset":283988,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":285688,"endOffset":285730,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":288034,"endOffset":288167,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":289168,"endOffset":289210,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":289286,"endOffset":289328,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":289394,"endOffset":289485,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":289859,"endOffset":289897,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":290671,"endOffset":290801,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":290923,"endOffset":290951,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":292902,"endOffset":292945,"count":0}],"isBlockCoverage":false},{"functionName":"isBrowserEnabled","ranges":[{"startOffset":293872,"endOffset":293990,"count":3},{"startOffset":293965,"endOffset":293973,"count":0}],"isBlockCoverage":true},{"functionName":"CoverageTransform","ranges":[{"startOffset":293992,"endOffset":294292,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":294080,"endOffset":294285,"count":95},{"startOffset":294178,"endOffset":294186,"count":0},{"startOffset":294226,"endOffset":294278,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifier","ranges":[{"startOffset":294766,"endOffset":294834,"count":358}],"isBlockCoverage":true},{"functionName":"transformImportSpecifiers","ranges":[{"startOffset":294835,"endOffset":295406,"count":8},{"startOffset":295360,"endOffset":295370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":294923,"endOffset":295296,"count":40},{"startOffset":294999,"endOffset":295041,"count":0},{"startOffset":295231,"endOffset":295295,"count":0}],"isBlockCoverage":true},{"functionName":"getBetterEnd","ranges":[{"startOffset":295407,"endOffset":295573,"count":42},{"startOffset":295499,"endOffset":295508,"count":13},{"startOffset":295548,"endOffset":295557,"count":13}],"isBlockCoverage":true},{"functionName":"hoistMocks","ranges":[{"startOffset":295676,"endOffset":303733,"count":95},{"startOffset":295809,"endOffset":295816,"count":87},{"startOffset":295816,"endOffset":295898,"count":8},{"startOffset":295898,"endOffset":295984,"count":0},{"startOffset":295984,"endOffset":296053,"count":8},{"startOffset":296054,"endOffset":296068,"count":0},{"startOffset":296070,"endOffset":296074,"count":8},{"startOffset":297026,"endOffset":297649,"count":66},{"startOffset":297071,"endOffset":297645,"count":29},{"startOffset":297145,"endOffset":297154,"count":8},{"startOffset":297154,"endOffset":297639,"count":21},{"startOffset":297298,"endOffset":297428,"count":0},{"startOffset":297478,"endOffset":297558,"count":20},{"startOffset":297558,"endOffset":297631,"count":1},{"startOffset":297639,"endOffset":297645,"count":21},{"startOffset":297649,"endOffset":302824,"count":8},{"startOffset":302824,"endOffset":303194,"count":13},{"startOffset":302914,"endOffset":303190,"count":9},{"startOffset":302997,"endOffset":303025,"count":0},{"startOffset":303035,"endOffset":303070,"count":0},{"startOffset":303149,"endOffset":303184,"count":0},{"startOffset":303194,"endOffset":303463,"count":8},{"startOffset":303463,"endOffset":303486,"count":0},{"startOffset":303488,"endOffset":303624,"count":8},{"startOffset":303557,"endOffset":303571,"count":0},{"startOffset":303572,"endOffset":303593,"count":0},{"startOffset":303624,"endOffset":303732,"count":8}],"isBlockCoverage":true},{"functionName":"transformImportDeclaration","ranges":[{"startOffset":296212,"endOffset":296539,"count":21},{"startOffset":296446,"endOffset":296476,"count":0}],"isBlockCoverage":true},{"functionName":"defineImport","ranges":[{"startOffset":296543,"endOffset":296994,"count":29},{"startOffset":296613,"endOffset":296816,"count":8},{"startOffset":296816,"endOffset":296903,"count":21},{"startOffset":296903,"endOffset":296915,"count":0},{"startOffset":296915,"endOffset":296993,"count":21}],"isBlockCoverage":true},{"functionName":"createSyntaxError","ranges":[{"startOffset":297730,"endOffset":298066,"count":0}],"isBlockCoverage":false},{"functionName":"assertNotDefaultExport","ranges":[{"startOffset":298069,"endOffset":298525,"count":13},{"startOffset":298240,"endOffset":298250,"count":0},{"startOffset":298292,"endOffset":298319,"count":0},{"startOffset":298365,"endOffset":298397,"count":0},{"startOffset":298421,"endOffset":298467,"count":0},{"startOffset":298475,"endOffset":298521,"count":0}],"isBlockCoverage":true},{"functionName":"assertNotNamedExport","ranges":[{"startOffset":298528,"endOffset":298838,"count":0}],"isBlockCoverage":false},{"functionName":"getVariableDeclaration","ranges":[{"startOffset":298841,"endOffset":299264,"count":13},{"startOffset":299006,"endOffset":299016,"count":0},{"startOffset":299074,"endOffset":299107,"count":0},{"startOffset":299126,"endOffset":299135,"count":0},{"startOffset":299150,"endOffset":299229,"count":0},{"startOffset":299237,"endOffset":299260,"count":0}],"isBlockCoverage":true},{"functionName":"onIdentifier","ranges":[{"startOffset":299288,"endOffset":299940,"count":441},{"startOffset":299406,"endOffset":299413,"count":371},{"startOffset":299413,"endOffset":299449,"count":70},{"startOffset":299449,"endOffset":299505,"count":0},{"startOffset":299505,"endOffset":299934,"count":70},{"startOffset":299538,"endOffset":299780,"count":0}],"isBlockCoverage":true},{"functionName":"onCallExpression","ranges":[{"startOffset":299946,"endOffset":301655,"count":475},{"startOffset":300036,"endOffset":300071,"count":266},{"startOffset":300072,"endOffset":300149,"count":161},{"startOffset":300109,"endOffset":300148,"count":69},{"startOffset":300150,"endOffset":300187,"count":92},{"startOffset":300189,"endOffset":301649,"count":92},{"startOffset":300279,"endOffset":300305,"count":79},{"startOffset":300307,"endOffset":300838,"count":13},{"startOffset":300640,"endOffset":300793,"count":0},{"startOffset":300877,"endOffset":301641,"count":0}],"isBlockCoverage":true},{"functionName":"getNodeName","ranges":[{"startOffset":301664,"endOffset":301937,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeCall","ranges":[{"startOffset":301940,"endOffset":302395,"count":0}],"isBlockCoverage":false},{"functionName":"createError","ranges":[{"startOffset":302398,"endOffset":302775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":303234,"endOffset":303433,"count":13},{"startOffset":303420,"endOffset":303426,"count":0}],"isBlockCoverage":true},{"functionName":"MocksPlugin","ranges":[{"startOffset":303735,"endOffset":303903,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":303822,"endOffset":303896,"count":95}],"isBlockCoverage":true},{"functionName":"resolveOptimizerConfig","ranges":[{"startOffset":303905,"endOffset":306136,"count":2},{"startOffset":304147,"endOffset":304175,"count":0},{"startOffset":304176,"endOffset":304217,"count":0},{"startOffset":304234,"endOffset":304298,"count":0},{"startOffset":304304,"endOffset":304416,"count":0},{"startOffset":304521,"endOffset":304529,"count":0},{"startOffset":304761,"endOffset":305891,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305372,"endOffset":305437,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":305581,"endOffset":305608,"count":0}],"isBlockCoverage":false},{"functionName":"deleteDefineConfig","ranges":[{"startOffset":306137,"endOffset":307123,"count":1},{"startOffset":306226,"endOffset":306403,"count":0},{"startOffset":306443,"endOffset":307122,"count":0}],"isBlockCoverage":true},{"functionName":"hijackVitePluginInject","ranges":[{"startOffset":307124,"endOffset":307511,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":307221,"endOffset":307259,"count":30}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":307379,"endOffset":307504,"count":95}],"isBlockCoverage":true},{"functionName":"resolveFsAllow","ranges":[{"startOffset":307512,"endOffset":307732,"count":1},{"startOffset":307594,"endOffset":307648,"count":0}],"isBlockCoverage":true},{"functionName":"createBrowserServer","ranges":[{"startOffset":307734,"endOffset":309624,"count":0}],"isBlockCoverage":false},{"functionName":"getBrowserProvider","ranges":[{"startOffset":309690,"endOffset":310528,"count":0}],"isBlockCoverage":false},{"functionName":"generateCssFilenameHash","ranges":[{"startOffset":310530,"endOffset":310649,"count":0}],"isBlockCoverage":false},{"functionName":"generateScopedClassName","ranges":[{"startOffset":310650,"endOffset":310887,"count":0}],"isBlockCoverage":false},{"functionName":"isCSS","ranges":[{"startOffset":311100,"endOffset":311151,"count":190}],"isBlockCoverage":true},{"functionName":"isCSSModule","ranges":[{"startOffset":311152,"endOffset":311211,"count":0}],"isBlockCoverage":false},{"functionName":"isInline","ranges":[{"startOffset":311212,"endOffset":311268,"count":0}],"isBlockCoverage":false},{"functionName":"getCSSModuleProxyReturn","ranges":[{"startOffset":311269,"endOffset":311463,"count":0}],"isBlockCoverage":false},{"functionName":"CSSEnablerPlugin","ranges":[{"startOffset":311464,"endOffset":312764,"count":1}],"isBlockCoverage":true},{"functionName":"shouldProcessCSS","ranges":[{"startOffset":311524,"endOffset":311790,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":311871,"endOffset":312008,"count":95},{"startOffset":311934,"endOffset":312000,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":312088,"endOffset":312751,"count":95},{"startOffset":312146,"endOffset":312169,"count":0},{"startOffset":312188,"endOffset":312233,"count":0},{"startOffset":312235,"endOffset":312750,"count":0}],"isBlockCoverage":true},{"functionName":"SsrReplacerPlugin","ranges":[{"startOffset":312766,"endOffset":313629,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":312865,"endOffset":313622,"count":95},{"startOffset":312954,"endOffset":313616,"count":0}],"isBlockCoverage":true},{"functionName":"VitestResolver","ranges":[{"startOffset":313631,"endOffset":313960,"count":1}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":313730,"endOffset":313953,"count":1497},{"startOffset":313778,"endOffset":313806,"count":1473},{"startOffset":313808,"endOffset":313947,"count":97}],"isBlockCoverage":true},{"functionName":"VitestOptimizer","ranges":[{"startOffset":313962,"endOffset":314874,"count":1}],"isBlockCoverage":true},{"functionName":"handler","ranges":[{"startOffset":314083,"endOffset":314861,"count":1},{"startOffset":314180,"endOffset":314185,"count":0},{"startOffset":314285,"endOffset":314299,"count":0},{"startOffset":314318,"endOffset":314326,"count":0},{"startOffset":314464,"endOffset":314478,"count":0},{"startOffset":314497,"endOffset":314505,"count":0},{"startOffset":314537,"endOffset":314545,"count":0},{"startOffset":314763,"endOffset":314787,"count":0}],"isBlockCoverage":true},{"functionName":"NormalizeURLPlugin","ranges":[{"startOffset":314991,"endOffset":315892,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":315093,"endOffset":315885,"count":95},{"startOffset":315159,"endOffset":315167,"count":0},{"startOffset":315207,"endOffset":315235,"count":0},{"startOffset":315236,"endOffset":315272,"count":0},{"startOffset":315289,"endOffset":315884,"count":0}],"isBlockCoverage":true},{"functionName":"WorkspaceVitestPlugin","ranges":[{"startOffset":315894,"endOffset":319394,"count":0}],"isBlockCoverage":false},{"functionName":"createViteServer","ranges":[{"startOffset":319396,"endOffset":319761,"count":1}],"isBlockCoverage":true},{"functionName":"console.error","ranges":[{"startOffset":319493,"endOffset":319629,"count":0}],"isBlockCoverage":false},{"functionName":"loadGlobalSetupFiles","ranges":[{"startOffset":319763,"endOffset":319963,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":319915,"endOffset":319958,"count":0}],"isBlockCoverage":false},{"functionName":"loadGlobalSetupFile","ranges":[{"startOffset":319964,"endOffset":320591,"count":0}],"isBlockCoverage":false},{"functionName":"initializeProject","ranges":[{"startOffset":320593,"endOffset":321513,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":321537,"endOffset":333585,"count":1}],"isBlockCoverage":true},{"functionName":"WorkspaceProject","ranges":[{"startOffset":321541,"endOffset":321648,"count":1}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":321902,"endOffset":321952,"count":234}],"isBlockCoverage":true},{"functionName":"isCore","ranges":[{"startOffset":321955,"endOffset":322025,"count":24}],"isBlockCoverage":true},{"functionName":"provide","ranges":[{"startOffset":322038,"endOffset":322269,"count":0}],"isBlockCoverage":false},{"functionName":"getProvidedContext","ranges":[{"startOffset":322273,"endOffset":322461,"count":24},{"startOffset":322347,"endOffset":322460,"count":0}],"isBlockCoverage":true},{"functionName":"initializeGlobalSetup","ranges":[{"startOffset":322464,"endOffset":323346,"count":1},{"startOffset":322542,"endOffset":322549,"count":0},{"startOffset":322707,"endOffset":323159,"count":0},{"startOffset":323166,"endOffset":323342,"count":0}],"isBlockCoverage":true},{"functionName":"teardownGlobalSetup","ranges":[{"startOffset":323349,"endOffset":323819,"count":1},{"startOffset":323426,"endOffset":323433,"count":0},{"startOffset":323503,"endOffset":323815,"count":0}],"isBlockCoverage":true},{"functionName":"get logger","ranges":[{"startOffset":323822,"endOffset":323868,"count":0}],"isBlockCoverage":false},{"functionName":"getModulesByFilepath","ranges":[{"startOffset":323959,"endOffset":324194,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleById","ranges":[{"startOffset":324197,"endOffset":324363,"count":26},{"startOffset":324282,"endOffset":324358,"count":17},{"startOffset":324323,"endOffset":324357,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceMapModuleById","ranges":[{"startOffset":324366,"endOffset":324647,"count":0}],"isBlockCoverage":false},{"functionName":"getBrowserSourceMapModuleById","ranges":[{"startOffset":324650,"endOffset":324871,"count":26},{"startOffset":324766,"endOffset":324800,"count":0},{"startOffset":324819,"endOffset":324839,"count":0},{"startOffset":324858,"endOffset":324866,"count":0}],"isBlockCoverage":true},{"functionName":"get reporters","ranges":[{"startOffset":324874,"endOffset":324926,"count":0}],"isBlockCoverage":false},{"functionName":"globTestFiles","ranges":[{"startOffset":324929,"endOffset":325480,"count":1},{"startOffset":325212,"endOffset":325229,"count":0},{"startOffset":325230,"endOffset":325234,"count":0},{"startOffset":325322,"endOffset":325381,"count":0}],"isBlockCoverage":true},{"functionName":"globAllTestFiles","ranges":[{"startOffset":325483,"endOffset":326149,"count":1},{"startOffset":325580,"endOffset":325606,"count":0},{"startOffset":325713,"endOffset":325735,"count":0},{"startOffset":325737,"endOffset":326087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":325844,"endOffset":326078,"count":0}],"isBlockCoverage":false},{"functionName":"isTestFile","ranges":[{"startOffset":326152,"endOffset":326238,"count":0}],"isBlockCoverage":false},{"functionName":"globFiles","ranges":[{"startOffset":326241,"endOffset":326470,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":326436,"endOffset":326464,"count":24}],"isBlockCoverage":true},{"functionName":"isTargetFile","ranges":[{"startOffset":326473,"endOffset":327003,"count":0}],"isBlockCoverage":false},{"functionName":"isInSourceTestFile","ranges":[{"startOffset":327006,"endOffset":327084,"count":0}],"isBlockCoverage":false},{"functionName":"filterFiles","ranges":[{"startOffset":327087,"endOffset":327741,"count":1},{"startOffset":327149,"endOffset":327180,"count":0},{"startOffset":327188,"endOffset":327238,"count":0},{"startOffset":327263,"endOffset":327715,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":327210,"endOffset":327236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":327295,"endOffset":327707,"count":0}],"isBlockCoverage":false},{"functionName":"initBrowserServer","ranges":[{"startOffset":327744,"endOffset":327972,"count":1},{"startOffset":327841,"endOffset":327889,"count":0},{"startOffset":327890,"endOffset":327902,"count":0},{"startOffset":327904,"endOffset":327971,"count":0}],"isBlockCoverage":true},{"functionName":"createBasicProject","ranges":[{"startOffset":327982,"endOffset":328250,"count":1}],"isBlockCoverage":true},{"functionName":"createCoreProject","ranges":[{"startOffset":328260,"endOffset":328443,"count":1}],"isBlockCoverage":true},{"functionName":"setServer","ranges":[{"startOffset":328446,"endOffset":329125,"count":0}],"isBlockCoverage":false},{"functionName":"isBrowserEnabled","ranges":[{"startOffset":329128,"endOffset":329194,"count":2}],"isBlockCoverage":true},{"functionName":"getSerializableConfig","ranges":[{"startOffset":329197,"endOffset":332156,"count":1},{"startOffset":329373,"endOffset":329381,"count":0},{"startOffset":329506,"endOffset":329514,"count":0},{"startOffset":329536,"endOffset":329544,"count":0},{"startOffset":329564,"endOffset":329572,"count":0},{"startOffset":329719,"endOffset":329727,"count":0},{"startOffset":329757,"endOffset":329765,"count":0},{"startOffset":329836,"endOffset":329844,"count":0},{"startOffset":329865,"endOffset":329873,"count":0},{"startOffset":329947,"endOffset":329955,"count":0},{"startOffset":329985,"endOffset":329993,"count":0},{"startOffset":330072,"endOffset":330080,"count":0},{"startOffset":330101,"endOffset":330109,"count":0},{"startOffset":330213,"endOffset":330221,"count":0},{"startOffset":330253,"endOffset":330261,"count":0},{"startOffset":330334,"endOffset":330342,"count":0},{"startOffset":330365,"endOffset":330373,"count":0},{"startOffset":330449,"endOffset":330457,"count":0},{"startOffset":330489,"endOffset":330497,"count":0},{"startOffset":330576,"endOffset":330584,"count":0},{"startOffset":330607,"endOffset":330615,"count":0},{"startOffset":330721,"endOffset":330729,"count":0},{"startOffset":330772,"endOffset":330789,"count":0},{"startOffset":330844,"endOffset":330852,"count":0},{"startOffset":330886,"endOffset":330903,"count":0},{"startOffset":331081,"endOffset":331089,"count":0},{"startOffset":331115,"endOffset":331123,"count":0},{"startOffset":331138,"endOffset":331145,"count":0},{"startOffset":331222,"endOffset":331230,"count":0},{"startOffset":331256,"endOffset":331264,"count":0},{"startOffset":331279,"endOffset":331286,"count":0},{"startOffset":331438,"endOffset":331479,"count":0},{"startOffset":332053,"endOffset":332061,"count":0},{"startOffset":332145,"endOffset":332150,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":332159,"endOffset":332535,"count":1},{"startOffset":332337,"endOffset":332348,"count":0},{"startOffset":332395,"endOffset":332407,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":332466,"endOffset":332491,"count":1}],"isBlockCoverage":true},{"functionName":"clearTmpDir","ranges":[{"startOffset":332538,"endOffset":332656,"count":1},{"startOffset":332639,"endOffset":332652,"count":0}],"isBlockCoverage":true},{"functionName":"initBrowserProvider","ranges":[{"startOffset":332659,"endOffset":333583,"count":1},{"startOffset":332736,"endOffset":333232,"count":0},{"startOffset":333240,"endOffset":333582,"count":0}],"isBlockCoverage":true},{"functionName":"ensureInstalled","ranges":[{"startOffset":333688,"endOffset":334906,"count":1},{"startOffset":333784,"endOffset":333796,"count":0},{"startOffset":333827,"endOffset":334026,"count":0},{"startOffset":334112,"endOffset":334168,"count":0},{"startOffset":334321,"endOffset":334905,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334384,"endOffset":334413,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":334953,"endOffset":363260,"count":1}],"isBlockCoverage":true},{"functionName":"Vitest","ranges":[{"startOffset":334957,"endOffset":335170,"count":1}],"isBlockCoverage":true},{"functionName":"setServer","ranges":[{"startOffset":335883,"endOffset":338738,"count":1},{"startOffset":335996,"endOffset":336004,"count":0},{"startOffset":336131,"endOffset":336141,"count":0},{"startOffset":336160,"endOffset":336173,"count":0},{"startOffset":336651,"endOffset":336674,"count":0},{"startOffset":337068,"endOffset":337719,"count":0},{"startOffset":337771,"endOffset":337885,"count":0},{"startOffset":338065,"endOffset":338078,"count":0},{"startOffset":338383,"endOffset":338511,"count":0},{"startOffset":338554,"endOffset":338624,"count":0},{"startOffset":338668,"endOffset":338734,"count":0}],"isBlockCoverage":true},{"functionName":"fetchModule","ranges":[{"startOffset":336884,"endOffset":336946,"count":1}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":336954,"endOffset":337032,"count":1}],"isBlockCoverage":true},{"functionName":"server.restart","ranges":[{"startOffset":337137,"endOffset":337340,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":337376,"endOffset":337711,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":338123,"endOffset":338135,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":338319,"endOffset":338352,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":338437,"endOffset":338496,"count":0}],"isBlockCoverage":false},{"functionName":"createCoreProject","ranges":[{"startOffset":338741,"endOffset":338890,"count":1}],"isBlockCoverage":true},{"functionName":"getCoreWorkspaceProject","ranges":[{"startOffset":338893,"endOffset":338962,"count":53}],"isBlockCoverage":true},{"functionName":"getProjectByTaskId","ranges":[{"startOffset":338965,"endOffset":339299,"count":28},{"startOffset":339117,"endOffset":339125,"count":0},{"startOffset":339147,"endOffset":339155,"count":1},{"startOffset":339156,"endOffset":339172,"count":27},{"startOffset":339275,"endOffset":339294,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":339205,"endOffset":339239,"count":28}],"isBlockCoverage":true},{"functionName":"getWorkspaceConfigPath","ranges":[{"startOffset":339302,"endOffset":339799,"count":1},{"startOffset":339372,"endOffset":339401,"count":0},{"startOffset":339495,"endOffset":339513,"count":0},{"startOffset":339746,"endOffset":339798,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":339627,"endOffset":339695,"count":14}],"isBlockCoverage":true},{"functionName":"resolveWorkspace","ranges":[{"startOffset":339802,"endOffset":344428,"count":1},{"startOffset":339984,"endOffset":340140,"count":0},{"startOffset":340148,"endOffset":343922,"count":0},{"startOffset":343930,"endOffset":344427,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":341186,"endOffset":341551,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":341557,"endOffset":341869,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":341935,"endOffset":342186,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":342262,"endOffset":342514,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":342887,"endOffset":342995,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":343714,"endOffset":343868,"count":0}],"isBlockCoverage":false},{"functionName":"initCoverageProvider","ranges":[{"startOffset":344431,"endOffset":344805,"count":1},{"startOffset":344510,"endOffset":344517,"count":0}],"isBlockCoverage":true},{"functionName":"initBrowserProviders","ranges":[{"startOffset":344808,"endOffset":344917,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":344880,"endOffset":344910,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":344920,"endOffset":345883,"count":1},{"startOffset":345084,"endOffset":345092,"count":0},{"startOffset":345358,"endOffset":345670,"count":0},{"startOffset":345843,"endOffset":345879,"count":0}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":345886,"endOffset":346297,"count":0}],"isBlockCoverage":false},{"functionName":"getTestDependencies","ranges":[{"startOffset":346300,"endOffset":347309,"count":0}],"isBlockCoverage":false},{"functionName":"filterTestsBySource","ranges":[{"startOffset":347312,"endOffset":348578,"count":1},{"startOffset":347375,"endOffset":347398,"count":0},{"startOffset":347400,"endOffset":347871,"count":0},{"startOffset":347950,"endOffset":348089,"count":0},{"startOffset":348097,"endOffset":348156,"count":0},{"startOffset":348164,"endOffset":348577,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":348233,"endOffset":348346,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":348456,"endOffset":348504,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectsByTestFile","ranges":[{"startOffset":348581,"endOffset":348772,"count":0}],"isBlockCoverage":false},{"functionName":"initializeGlobalSetup","ranges":[{"startOffset":348775,"endOffset":349092,"count":1},{"startOffset":348975,"endOffset":349001,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":348851,"endOffset":348873,"count":24}],"isBlockCoverage":true},{"functionName":"initializeDistPath","ranges":[{"startOffset":349095,"endOffset":349372,"count":1},{"startOffset":349153,"endOffset":349160,"count":0},{"startOffset":349313,"endOffset":349322,"count":0}],"isBlockCoverage":true},{"functionName":"runFiles","ranges":[{"startOffset":349375,"endOffset":350920,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":349481,"endOffset":349499,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":349719,"endOffset":350495,"count":1},{"startOffset":349983,"endOffset":350019,"count":0},{"startOffset":350029,"endOffset":350096,"count":0},{"startOffset":350218,"endOffset":350294,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":350507,"endOffset":350876,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":350570,"endOffset":350582,"count":24}],"isBlockCoverage":true},{"functionName":"cancelCurrentRun","ranges":[{"startOffset":350923,"endOffset":351083,"count":0}],"isBlockCoverage":false},{"functionName":"rerunFiles","ranges":[{"startOffset":351086,"endOffset":351568,"count":0}],"isBlockCoverage":false},{"functionName":"changeProjectName","ranges":[{"startOffset":351571,"endOffset":351942,"count":0}],"isBlockCoverage":false},{"functionName":"changeNamePattern","ranges":[{"startOffset":351945,"endOffset":352598,"count":0}],"isBlockCoverage":false},{"functionName":"changeFilenamePattern","ranges":[{"startOffset":352601,"endOffset":352854,"count":0}],"isBlockCoverage":false},{"functionName":"rerunFailed","ranges":[{"startOffset":352857,"endOffset":352958,"count":0}],"isBlockCoverage":false},{"functionName":"updateSnapshot","ranges":[{"startOffset":352961,"endOffset":353445,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleRerun","ranges":[{"startOffset":353463,"endOffset":354908,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleProjects","ranges":[{"startOffset":354911,"endOffset":355057,"count":0}],"isBlockCoverage":false},{"functionName":"watchTests","ranges":[{"startOffset":355162,"endOffset":355266,"count":0}],"isBlockCoverage":false},{"functionName":"registerWatcher","ranges":[{"startOffset":355299,"endOffset":357750,"count":0}],"isBlockCoverage":false},{"functionName":"handleFileChanged","ranges":[{"startOffset":357849,"endOffset":359187,"count":0}],"isBlockCoverage":false},{"functionName":"reportCoverage","ranges":[{"startOffset":359190,"endOffset":359591,"count":1},{"startOffset":359328,"endOffset":359587,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":359594,"endOffset":360900,"count":2},{"startOffset":359640,"endOffset":360864,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":359671,"endOffset":360854,"count":1},{"startOffset":359815,"endOffset":359864,"count":0},{"startOffset":360163,"endOffset":360250,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":360032,"endOffset":360078,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":360054,"endOffset":360077,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":360221,"endOffset":360247,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":360306,"endOffset":360491,"count":1},{"startOffset":360394,"endOffset":360402,"count":0},{"startOffset":360423,"endOffset":360431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":360555,"endOffset":360567,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":360625,"endOffset":360844,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":360665,"endOffset":360695,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":360705,"endOffset":360792,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":360963,"endOffset":362093,"count":1},{"startOffset":362074,"endOffset":362089,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":361006,"endOffset":361989,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":362096,"endOffset":362294,"count":187}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":362167,"endOffset":362287,"count":187},{"startOffset":362226,"endOffset":362234,"count":0}],"isBlockCoverage":true},{"functionName":"getTestFilepaths","ranges":[{"startOffset":362297,"endOffset":362407,"count":0}],"isBlockCoverage":false},{"functionName":"globTestFiles","ranges":[{"startOffset":362410,"endOffset":362867,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":362508,"endOffset":362842,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":362607,"endOffset":362834,"count":24}],"isBlockCoverage":true},{"functionName":"shouldKeepServer","ranges":[{"startOffset":362924,"endOffset":363023,"count":2},{"startOffset":362998,"endOffset":363006,"count":0}],"isBlockCoverage":true},{"functionName":"onServerRestart","ranges":[{"startOffset":363026,"endOffset":363090,"count":1}],"isBlockCoverage":true},{"functionName":"onAfterSetServer","ranges":[{"startOffset":363093,"endOffset":363151,"count":1}],"isBlockCoverage":true},{"functionName":"onCancel","ranges":[{"startOffset":363154,"endOffset":363210,"count":25}],"isBlockCoverage":true},{"functionName":"onClose","ranges":[{"startOffset":363213,"endOffset":363258,"count":1}],"isBlockCoverage":true},{"functionName":"VitestPlugin","ranges":[{"startOffset":363262,"endOffset":369887,"count":1},{"startOffset":369743,"endOffset":369762,"count":0}],"isBlockCoverage":true},{"functionName":"getRoot","ranges":[{"startOffset":363395,"endOffset":363510,"count":1},{"startOffset":363462,"endOffset":363471,"count":0}],"isBlockCoverage":true},{"functionName":"UIPlugin","ranges":[{"startOffset":363514,"endOffset":363672,"count":0}],"isBlockCoverage":false},{"functionName":"options","ranges":[{"startOffset":363740,"endOffset":363796,"count":1}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":363804,"endOffset":368144,"count":1},{"startOffset":363942,"endOffset":364000,"count":0},{"startOffset":364127,"endOffset":364132,"count":0},{"startOffset":364368,"endOffset":364386,"count":0},{"startOffset":364398,"endOffset":364441,"count":0},{"startOffset":364515,"endOffset":364523,"count":0},{"startOffset":364600,"endOffset":364607,"count":0},{"startOffset":365974,"endOffset":365986,"count":0},{"startOffset":366005,"endOffset":366017,"count":0},{"startOffset":366095,"endOffset":366107,"count":0},{"startOffset":366126,"endOffset":366138,"count":0},{"startOffset":366175,"endOffset":366183,"count":0},{"startOffset":366314,"endOffset":366326,"count":0},{"startOffset":366345,"endOffset":366357,"count":0},{"startOffset":366435,"endOffset":366447,"count":0},{"startOffset":366466,"endOffset":366478,"count":0},{"startOffset":366515,"endOffset":366523,"count":0},{"startOffset":366643,"endOffset":366658,"count":0},{"startOffset":366745,"endOffset":366754,"count":0},{"startOffset":366773,"endOffset":366784,"count":0},{"startOffset":366817,"endOffset":366877,"count":0},{"startOffset":366955,"endOffset":366970,"count":0},{"startOffset":367042,"endOffset":367063,"count":0},{"startOffset":367114,"endOffset":367132,"count":0},{"startOffset":367133,"endOffset":367189,"count":0},{"startOffset":367345,"endOffset":367383,"count":0},{"startOffset":367385,"endOffset":367497,"count":0},{"startOffset":367608,"endOffset":367616,"count":0},{"startOffset":367648,"endOffset":367670,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":367149,"endOffset":367188,"count":0}],"isBlockCoverage":false},{"functionName":"config.css.modules.generateScopedName","ranges":[{"startOffset":367920,"endOffset":368090,"count":0}],"isBlockCoverage":false},{"functionName":"configResolved","ranges":[{"startOffset":368152,"endOffset":369000,"count":1},{"startOffset":368258,"endOffset":368263,"count":0},{"startOffset":368319,"endOffset":368345,"count":0},{"startOffset":368395,"endOffset":368423,"count":0},{"startOffset":368709,"endOffset":368714,"count":0},{"startOffset":368776,"endOffset":368780,"count":0},{"startOffset":368826,"endOffset":368878,"count":2}],"isBlockCoverage":true},{"functionName":"configureServer","ranges":[{"startOffset":369008,"endOffset":369637,"count":1},{"startOffset":369066,"endOffset":369104,"count":0},{"startOffset":369106,"endOffset":369229,"count":0},{"startOffset":369360,"endOffset":369435,"count":0},{"startOffset":369446,"endOffset":369561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":369145,"endOffset":369217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":369390,"endOffset":369421,"count":0}],"isBlockCoverage":false},{"functionName":"createVitest","ranges":[{"startOffset":369889,"endOffset":370700,"count":1},{"startOffset":370132,"endOffset":370139,"count":0},{"startOffset":370157,"endOffset":370188,"count":0},{"startOffset":370638,"endOffset":370646,"count":0},{"startOffset":370662,"endOffset":370684,"count":0}],"isBlockCoverage":true},{"functionName":"requireKleur","ranges":[{"startOffset":370757,"endOffset":373441,"count":11},{"startOffset":370807,"endOffset":370820,"count":10},{"startOffset":370820,"endOffset":370974,"count":1},{"startOffset":370975,"endOffset":370997,"count":1}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":371671,"endOffset":371943,"count":4},{"startOffset":371850,"endOffset":371910,"count":0}],"isBlockCoverage":true},{"functionName":"chain","ranges":[{"startOffset":371946,"endOffset":372929,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":372932,"endOffset":373411,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":373088,"endOffset":373407,"count":4},{"startOffset":373152,"endOffset":373312,"count":0},{"startOffset":373338,"endOffset":373360,"count":0},{"startOffset":373394,"endOffset":373402,"count":0}],"isBlockCoverage":true},{"functionName":"requireAction$1","ranges":[{"startOffset":373483,"endOffset":374862,"count":0}],"isBlockCoverage":false},{"functionName":"requireStrip$1","ranges":[{"startOffset":374902,"endOffset":375362,"count":0}],"isBlockCoverage":false},{"functionName":"requireSrc","ranges":[{"startOffset":375394,"endOffset":376875,"count":11},{"startOffset":375440,"endOffset":375451,"count":10},{"startOffset":375451,"endOffset":376874,"count":1}],"isBlockCoverage":true},{"functionName":"to","ranges":[{"startOffset":375565,"endOffset":375659,"count":0}],"isBlockCoverage":false},{"functionName":"move","ranges":[{"startOffset":375664,"endOffset":375884,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":375893,"endOffset":375925,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":375936,"endOffset":375968,"count":0}],"isBlockCoverage":false},{"functionName":"forward","ranges":[{"startOffset":375982,"endOffset":376014,"count":0}],"isBlockCoverage":false},{"functionName":"backward","ranges":[{"startOffset":376029,"endOffset":376061,"count":0}],"isBlockCoverage":false},{"functionName":"nextLine","ranges":[{"startOffset":376076,"endOffset":376114,"count":0}],"isBlockCoverage":false},{"functionName":"prevLine","ranges":[{"startOffset":376129,"endOffset":376167,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":376307,"endOffset":376345,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":376356,"endOffset":376394,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":376447,"endOffset":376486,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":376497,"endOffset":376535,"count":0}],"isBlockCoverage":false},{"functionName":"lines","ranges":[{"startOffset":376610,"endOffset":376815,"count":0}],"isBlockCoverage":false},{"functionName":"requireClear$1","ranges":[{"startOffset":376915,"endOffset":379386,"count":0}],"isBlockCoverage":false},{"functionName":"requireFigures$1","ranges":[{"startOffset":379432,"endOffset":380150,"count":0}],"isBlockCoverage":false},{"functionName":"requireStyle$1","ranges":[{"startOffset":380190,"endOffset":381461,"count":0}],"isBlockCoverage":false},{"functionName":"requireLines$1","ranges":[{"startOffset":381501,"endOffset":381928,"count":0}],"isBlockCoverage":false},{"functionName":"requireWrap$1","ranges":[{"startOffset":381966,"endOffset":382784,"count":0}],"isBlockCoverage":false},{"functionName":"requireEntriesToDisplay$1","ranges":[{"startOffset":382846,"endOffset":383751,"count":0}],"isBlockCoverage":false},{"functionName":"requireUtil$1","ranges":[{"startOffset":383789,"endOffset":384163,"count":0}],"isBlockCoverage":false},{"functionName":"requirePrompt$1","ranges":[{"startOffset":384205,"endOffset":386278,"count":0}],"isBlockCoverage":false},{"functionName":"requireText$1","ranges":[{"startOffset":386316,"endOffset":392963,"count":0}],"isBlockCoverage":false},{"functionName":"requireSelect$1","ranges":[{"startOffset":393005,"endOffset":398357,"count":0}],"isBlockCoverage":false},{"functionName":"requireToggle$1","ranges":[{"startOffset":398399,"endOffset":401259,"count":0}],"isBlockCoverage":false},{"functionName":"requireDatepart$1","ranges":[{"startOffset":401305,"endOffset":402144,"count":0}],"isBlockCoverage":false},{"functionName":"requireMeridiem$1","ranges":[{"startOffset":402190,"endOffset":402737,"count":0}],"isBlockCoverage":false},{"functionName":"requireDay$1","ranges":[{"startOffset":402773,"endOffset":403676,"count":0}],"isBlockCoverage":false},{"functionName":"requireHours$1","ranges":[{"startOffset":403716,"endOffset":404379,"count":0}],"isBlockCoverage":false},{"functionName":"requireMilliseconds$1","ranges":[{"startOffset":404433,"endOffset":405126,"count":0}],"isBlockCoverage":false},{"functionName":"requireMinutes$1","ranges":[{"startOffset":405170,"endOffset":405792,"count":0}],"isBlockCoverage":false},{"functionName":"requireMonth$1","ranges":[{"startOffset":405832,"endOffset":406593,"count":0}],"isBlockCoverage":false},{"functionName":"requireSeconds$1","ranges":[{"startOffset":406637,"endOffset":407259,"count":0}],"isBlockCoverage":false},{"functionName":"requireYear$1","ranges":[{"startOffset":407297,"endOffset":407913,"count":0}],"isBlockCoverage":false},{"functionName":"requireDateparts$1","ranges":[{"startOffset":407961,"endOffset":408395,"count":0}],"isBlockCoverage":false},{"functionName":"requireDate$1","ranges":[{"startOffset":408433,"endOffset":415567,"count":0}],"isBlockCoverage":false},{"functionName":"requireNumber$1","ranges":[{"startOffset":415609,"endOffset":422560,"count":0}],"isBlockCoverage":false},{"functionName":"requireMultiselect$1","ranges":[{"startOffset":422612,"endOffset":430405,"count":0}],"isBlockCoverage":false},{"functionName":"requireAutocomplete$1","ranges":[{"startOffset":430459,"endOffset":439560,"count":0}],"isBlockCoverage":false},{"functionName":"requireAutocompleteMultiselect$1","ranges":[{"startOffset":439636,"endOffset":445311,"count":0}],"isBlockCoverage":false},{"functionName":"requireConfirm$1","ranges":[{"startOffset":445355,"endOffset":447945,"count":0}],"isBlockCoverage":false},{"functionName":"requireElements$1","ranges":[{"startOffset":447991,"endOffset":448513,"count":0}],"isBlockCoverage":false},{"functionName":"requirePrompts$1","ranges":[{"startOffset":448542,"endOffset":457885,"count":0}],"isBlockCoverage":false},{"functionName":"requireDist","ranges":[{"startOffset":457919,"endOffset":465416,"count":0}],"isBlockCoverage":false},{"functionName":"requireAction","ranges":[{"startOffset":465475,"endOffset":466853,"count":1},{"startOffset":465527,"endOffset":465541,"count":0}],"isBlockCoverage":true},{"functionName":"action","ranges":[{"startOffset":465577,"endOffset":466834,"count":0}],"isBlockCoverage":false},{"functionName":"requireStrip","ranges":[{"startOffset":466889,"endOffset":467353,"count":3},{"startOffset":466939,"endOffset":466952,"count":2},{"startOffset":466952,"endOffset":467352,"count":1}],"isBlockCoverage":true},{"functionName":"strip","ranges":[{"startOffset":466986,"endOffset":467335,"count":0}],"isBlockCoverage":false},{"functionName":"requireClear","ranges":[{"startOffset":467389,"endOffset":467961,"count":1},{"startOffset":467439,"endOffset":467452,"count":0}],"isBlockCoverage":true},{"functionName":"width","ranges":[{"startOffset":467565,"endOffset":467594,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":467671,"endOffset":467943,"count":0}],"isBlockCoverage":false},{"functionName":"requireFigures","ranges":[{"startOffset":468003,"endOffset":468728,"count":2},{"startOffset":468057,"endOffset":468674,"count":1},{"startOffset":468675,"endOffset":468681,"count":0}],"isBlockCoverage":true},{"functionName":"requireStyle","ranges":[{"startOffset":468764,"endOffset":469978,"count":1},{"startOffset":468814,"endOffset":468827,"count":0}],"isBlockCoverage":true},{"functionName":"render","ranges":[{"startOffset":469006,"endOffset":469039,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":469073,"endOffset":469107,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":469145,"endOffset":469156,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":469192,"endOffset":469211,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":469235,"endOffset":469273,"count":0}],"isBlockCoverage":false},{"functionName":"symbol","ranges":[{"startOffset":469489,"endOffset":469610,"count":0}],"isBlockCoverage":false},{"functionName":"delimiter","ranges":[{"startOffset":469679,"endOffset":469756,"count":0}],"isBlockCoverage":false},{"functionName":"item","ranges":[{"startOffset":469773,"endOffset":469877,"count":0}],"isBlockCoverage":false},{"functionName":"requireLines","ranges":[{"startOffset":470014,"endOffset":470435,"count":1},{"startOffset":470064,"endOffset":470077,"count":0}],"isBlockCoverage":true},{"functionName":"lines","ranges":[{"startOffset":470205,"endOffset":470417,"count":0}],"isBlockCoverage":false},{"functionName":"requireWrap","ranges":[{"startOffset":470469,"endOffset":471360,"count":1},{"startOffset":470517,"endOffset":470529,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":470773,"endOffset":471343,"count":0}],"isBlockCoverage":false},{"functionName":"requireEntriesToDisplay","ranges":[{"startOffset":471418,"endOffset":472301,"count":1},{"startOffset":471490,"endOffset":471514,"count":0}],"isBlockCoverage":true},{"functionName":"entriesToDisplay","ranges":[{"startOffset":471975,"endOffset":472272,"count":0}],"isBlockCoverage":false},{"functionName":"requireUtil","ranges":[{"startOffset":472335,"endOffset":472681,"count":10},{"startOffset":472383,"endOffset":472395,"count":9},{"startOffset":472395,"endOffset":472680,"count":1}],"isBlockCoverage":true},{"functionName":"requirePrompt","ranges":[{"startOffset":472721,"endOffset":474669,"count":8},{"startOffset":472773,"endOffset":472789,"count":7},{"startOffset":472789,"endOffset":474668,"count":1}],"isBlockCoverage":true},{"functionName":"Prompt","ranges":[{"startOffset":473211,"endOffset":474340,"count":0}],"isBlockCoverage":false},{"functionName":"fire","ranges":[{"startOffset":474345,"endOffset":474480,"count":0}],"isBlockCoverage":false},{"functionName":"bell","ranges":[{"startOffset":474485,"endOffset":474525,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":474530,"endOffset":474625,"count":0}],"isBlockCoverage":false},{"functionName":"requireText","ranges":[{"startOffset":474703,"endOffset":480298,"count":1},{"startOffset":474751,"endOffset":474763,"count":0}],"isBlockCoverage":true},{"functionName":"TextPrompt","ranges":[{"startOffset":475463,"endOffset":475944,"count":0}],"isBlockCoverage":false},{"functionName":"set value","ranges":[{"startOffset":475949,"endOffset":476246,"count":0}],"isBlockCoverage":false},{"functionName":"get value","ranges":[{"startOffset":476251,"endOffset":476294,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":476299,"endOffset":476444,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":476449,"endOffset":476481,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":476486,"endOffset":476716,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":476721,"endOffset":476918,"count":0}],"isBlockCoverage":false},{"functionName":"submit","ranges":[{"startOffset":476923,"endOffset":477332,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":477337,"endOffset":477509,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":477514,"endOffset":477632,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":477637,"endOffset":477880,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":477885,"endOffset":478265,"count":0}],"isBlockCoverage":false},{"functionName":"deleteForward","ranges":[{"startOffset":478270,"endOffset":478670,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":478675,"endOffset":478731,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":478736,"endOffset":478807,"count":0}],"isBlockCoverage":false},{"functionName":"left","ranges":[{"startOffset":478812,"endOffset":478938,"count":0}],"isBlockCoverage":false},{"functionName":"right","ranges":[{"startOffset":478943,"endOffset":479099,"count":0}],"isBlockCoverage":false},{"functionName":"isCursorAtStart","ranges":[{"startOffset":479104,"endOffset":479202,"count":0}],"isBlockCoverage":false},{"functionName":"isCursorAtEnd","ranges":[{"startOffset":479207,"endOffset":479344,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":479349,"endOffset":480258,"count":0}],"isBlockCoverage":false},{"functionName":"requireSelect","ranges":[{"startOffset":480336,"endOffset":485384,"count":1},{"startOffset":480388,"endOffset":480402,"count":0}],"isBlockCoverage":true},{"functionName":"SelectPrompt","ranges":[{"startOffset":481139,"endOffset":481957,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":481962,"endOffset":482063,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":482068,"endOffset":482145,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":482150,"endOffset":482182,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":482187,"endOffset":482323,"count":0}],"isBlockCoverage":false},{"functionName":"submit","ranges":[{"startOffset":482328,"endOffset":482558,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":482563,"endOffset":482622,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":482627,"endOffset":482707,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":482712,"endOffset":482884,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":482889,"endOffset":483063,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":483068,"endOffset":483164,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":483169,"endOffset":483227,"count":0}],"isBlockCoverage":false},{"functionName":"get selection","ranges":[{"startOffset":483232,"endOffset":483293,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":483298,"endOffset":485338,"count":0}],"isBlockCoverage":false},{"functionName":"requireToggle","ranges":[{"startOffset":485422,"endOffset":488198,"count":1},{"startOffset":485474,"endOffset":485488,"count":0}],"isBlockCoverage":true},{"functionName":"TogglePrompt","ranges":[{"startOffset":486125,"endOffset":486376,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":486381,"endOffset":486470,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":486475,"endOffset":486507,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":486512,"endOffset":486648,"count":0}],"isBlockCoverage":false},{"functionName":"submit","ranges":[{"startOffset":486653,"endOffset":486802,"count":0}],"isBlockCoverage":false},{"functionName":"deactivate","ranges":[{"startOffset":486807,"endOffset":486922,"count":0}],"isBlockCoverage":false},{"functionName":"activate","ranges":[{"startOffset":486927,"endOffset":487038,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":487043,"endOffset":487082,"count":0}],"isBlockCoverage":false},{"functionName":"left","ranges":[{"startOffset":487086,"endOffset":487123,"count":0}],"isBlockCoverage":false},{"functionName":"right","ranges":[{"startOffset":487127,"endOffset":487163,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":487167,"endOffset":487204,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":487208,"endOffset":487241,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":487246,"endOffset":487328,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":487333,"endOffset":487567,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":487572,"endOffset":488152,"count":0}],"isBlockCoverage":false},{"functionName":"requireDatepart","ranges":[{"startOffset":488240,"endOffset":489041,"count":9},{"startOffset":488296,"endOffset":488312,"count":8},{"startOffset":488312,"endOffset":489040,"count":1}],"isBlockCoverage":true},{"functionName":"DatePart","ranges":[{"startOffset":488361,"endOffset":488542,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":488547,"endOffset":488554,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":488559,"endOffset":488568,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":488573,"endOffset":488726,"count":0}],"isBlockCoverage":false},{"functionName":"setTo","ranges":[{"startOffset":488731,"endOffset":488744,"count":0}],"isBlockCoverage":false},{"functionName":"prev","ranges":[{"startOffset":488749,"endOffset":488942,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":488947,"endOffset":488995,"count":0}],"isBlockCoverage":false},{"functionName":"requireMeridiem","ranges":[{"startOffset":489083,"endOffset":489613,"count":1},{"startOffset":489139,"endOffset":489155,"count":0}],"isBlockCoverage":true},{"functionName":"Meridiem","ranges":[{"startOffset":489259,"endOffset":489304,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":489309,"endOffset":489379,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":489384,"endOffset":489413,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":489418,"endOffset":489567,"count":0}],"isBlockCoverage":false},{"functionName":"requireDay","ranges":[{"startOffset":489645,"endOffset":490605,"count":1},{"startOffset":489691,"endOffset":489702,"count":0}],"isBlockCoverage":true},{"functionName":"pos","ranges":[{"startOffset":489776,"endOffset":489891,"count":0}],"isBlockCoverage":false},{"functionName":"Day","ranges":[{"startOffset":489927,"endOffset":489972,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":489977,"endOffset":490037,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":490042,"endOffset":490104,"count":0}],"isBlockCoverage":false},{"functionName":"setTo","ranges":[{"startOffset":490109,"endOffset":490176,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":490181,"endOffset":490574,"count":0}],"isBlockCoverage":false},{"functionName":"requireHours","ranges":[{"startOffset":490641,"endOffset":491296,"count":1},{"startOffset":490691,"endOffset":490704,"count":0}],"isBlockCoverage":true},{"functionName":"Hours","ranges":[{"startOffset":490802,"endOffset":490847,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":490852,"endOffset":490914,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":490919,"endOffset":490983,"count":0}],"isBlockCoverage":false},{"functionName":"setTo","ranges":[{"startOffset":490988,"endOffset":491056,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":491061,"endOffset":491259,"count":0}],"isBlockCoverage":false},{"functionName":"requireMilliseconds","ranges":[{"startOffset":491346,"endOffset":492072,"count":1},{"startOffset":491410,"endOffset":491430,"count":0}],"isBlockCoverage":true},{"functionName":"Milliseconds","ranges":[{"startOffset":491542,"endOffset":491587,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":491592,"endOffset":491668,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":491673,"endOffset":491751,"count":0}],"isBlockCoverage":false},{"functionName":"setTo","ranges":[{"startOffset":491756,"endOffset":491849,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":491854,"endOffset":492014,"count":0}],"isBlockCoverage":false},{"functionName":"requireMinutes","ranges":[{"startOffset":492112,"endOffset":492717,"count":1},{"startOffset":492166,"endOffset":492181,"count":0}],"isBlockCoverage":true},{"functionName":"Minutes","ranges":[{"startOffset":492283,"endOffset":492328,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":492333,"endOffset":492399,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":492404,"endOffset":492472,"count":0}],"isBlockCoverage":false},{"functionName":"setTo","ranges":[{"startOffset":492477,"endOffset":492547,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":492552,"endOffset":492674,"count":0}],"isBlockCoverage":false},{"functionName":"requireMonth","ranges":[{"startOffset":492753,"endOffset":493539,"count":1},{"startOffset":492803,"endOffset":492816,"count":0}],"isBlockCoverage":true},{"functionName":"Month","ranges":[{"startOffset":492914,"endOffset":492959,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":492964,"endOffset":493026,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":493031,"endOffset":493095,"count":0}],"isBlockCoverage":false},{"functionName":"setTo","ranges":[{"startOffset":493100,"endOffset":493202,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":493207,"endOffset":493502,"count":0}],"isBlockCoverage":false},{"functionName":"requireSeconds","ranges":[{"startOffset":493579,"endOffset":494184,"count":1},{"startOffset":493633,"endOffset":493648,"count":0}],"isBlockCoverage":true},{"functionName":"Seconds","ranges":[{"startOffset":493750,"endOffset":493795,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":493800,"endOffset":493866,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":493871,"endOffset":493939,"count":0}],"isBlockCoverage":false},{"functionName":"setTo","ranges":[{"startOffset":493944,"endOffset":494014,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":494019,"endOffset":494141,"count":0}],"isBlockCoverage":false},{"functionName":"requireYear","ranges":[{"startOffset":494218,"endOffset":494817,"count":1},{"startOffset":494266,"endOffset":494278,"count":0}],"isBlockCoverage":true},{"functionName":"Year","ranges":[{"startOffset":494374,"endOffset":494419,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":494424,"endOffset":494492,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":494497,"endOffset":494567,"count":0}],"isBlockCoverage":false},{"functionName":"setTo","ranges":[{"startOffset":494572,"endOffset":494633,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":494638,"endOffset":494783,"count":0}],"isBlockCoverage":false},{"functionName":"requireDateparts","ranges":[{"startOffset":494861,"endOffset":495266,"count":1},{"startOffset":494919,"endOffset":494936,"count":0}],"isBlockCoverage":true},{"functionName":"requireDate","ranges":[{"startOffset":495300,"endOffset":501207,"count":1},{"startOffset":495348,"endOffset":495360,"count":0}],"isBlockCoverage":true},{"functionName":"1","ranges":[{"startOffset":495812,"endOffset":495854,"count":0}],"isBlockCoverage":false},{"functionName":"2","ranges":[{"startOffset":495862,"endOffset":495885,"count":0}],"isBlockCoverage":false},{"functionName":"3","ranges":[{"startOffset":495908,"endOffset":495933,"count":0}],"isBlockCoverage":false},{"functionName":"4","ranges":[{"startOffset":495950,"endOffset":495974,"count":0}],"isBlockCoverage":false},{"functionName":"5","ranges":[{"startOffset":495990,"endOffset":496018,"count":0}],"isBlockCoverage":false},{"functionName":"6","ranges":[{"startOffset":496053,"endOffset":496078,"count":0}],"isBlockCoverage":false},{"functionName":"7","ranges":[{"startOffset":496095,"endOffset":496122,"count":0}],"isBlockCoverage":false},{"functionName":"8","ranges":[{"startOffset":496141,"endOffset":496168,"count":0}],"isBlockCoverage":false},{"functionName":"9","ranges":[{"startOffset":496187,"endOffset":496219,"count":0}],"isBlockCoverage":false},{"functionName":"DatePrompt","ranges":[{"startOffset":497216,"endOffset":497681,"count":0}],"isBlockCoverage":false},{"functionName":"get value","ranges":[{"startOffset":497686,"endOffset":497726,"count":0}],"isBlockCoverage":false},{"functionName":"get date","ranges":[{"startOffset":497731,"endOffset":497772,"count":0}],"isBlockCoverage":false},{"functionName":"set date","ranges":[{"startOffset":497777,"endOffset":497849,"count":0}],"isBlockCoverage":false},{"functionName":"set mask","ranges":[{"startOffset":497854,"endOffset":498543,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":498548,"endOffset":498630,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":498635,"endOffset":498759,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":498764,"endOffset":498796,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":498801,"endOffset":498962,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":498967,"endOffset":499164,"count":0}],"isBlockCoverage":false},{"functionName":"submit","ranges":[{"startOffset":499169,"endOffset":499466,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":499471,"endOffset":499559,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":499564,"endOffset":499656,"count":0}],"isBlockCoverage":false},{"functionName":"left","ranges":[{"startOffset":499661,"endOffset":499833,"count":0}],"isBlockCoverage":false},{"functionName":"right","ranges":[{"startOffset":499838,"endOffset":500011,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":500016,"endOffset":500225,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":500230,"endOffset":500369,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":500374,"endOffset":501167,"count":0}],"isBlockCoverage":false},{"functionName":"requireNumber","ranges":[{"startOffset":501245,"endOffset":507177,"count":1},{"startOffset":501297,"endOffset":501311,"count":0}],"isBlockCoverage":true},{"functionName":"isDef","ranges":[{"startOffset":501541,"endOffset":501565,"count":0}],"isBlockCoverage":false},{"functionName":"round","ranges":[{"startOffset":501582,"endOffset":501698,"count":0}],"isBlockCoverage":false},{"functionName":"NumberPrompt","ranges":[{"startOffset":502529,"endOffset":503159,"count":0}],"isBlockCoverage":false},{"functionName":"set value","ranges":[{"startOffset":503164,"endOffset":503531,"count":0}],"isBlockCoverage":false},{"functionName":"get value","ranges":[{"startOffset":503536,"endOffset":503579,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":503584,"endOffset":503653,"count":0}],"isBlockCoverage":false},{"functionName":"valid","ranges":[{"startOffset":503658,"endOffset":503742,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":503747,"endOffset":503843,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":503848,"endOffset":503880,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":503885,"endOffset":504118,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":504123,"endOffset":504320,"count":0}],"isBlockCoverage":false},{"functionName":"submit","ranges":[{"startOffset":504325,"endOffset":504719,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":504724,"endOffset":504980,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":504985,"endOffset":505243,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":505248,"endOffset":505566,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":505571,"endOffset":505654,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":505659,"endOffset":506142,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":506147,"endOffset":507131,"count":0}],"isBlockCoverage":false},{"functionName":"requireMultiselect","ranges":[{"startOffset":507225,"endOffset":514778,"count":2},{"startOffset":507287,"endOffset":514777,"count":1}],"isBlockCoverage":true},{"functionName":"MultiselectPrompt","ranges":[{"startOffset":508165,"endOffset":509115,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":509120,"endOffset":509233,"count":0}],"isBlockCoverage":false},{"functionName":"selected","ranges":[{"startOffset":509238,"endOffset":509303,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":509308,"endOffset":509340,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":509345,"endOffset":509481,"count":0}],"isBlockCoverage":false},{"functionName":"submit","ranges":[{"startOffset":509486,"endOffset":509856,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":509861,"endOffset":509917,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":509922,"endOffset":509997,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":510001,"endOffset":510092,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":510097,"endOffset":510245,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":510250,"endOffset":510400,"count":0}],"isBlockCoverage":false},{"functionName":"left","ranges":[{"startOffset":510405,"endOffset":510485,"count":0}],"isBlockCoverage":false},{"functionName":"right","ranges":[{"startOffset":510490,"endOffset":510661,"count":0}],"isBlockCoverage":false},{"functionName":"handleSpaceToggle","ranges":[{"startOffset":510666,"endOffset":510995,"count":0}],"isBlockCoverage":false},{"functionName":"toggleAll","ranges":[{"startOffset":511000,"endOffset":511292,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":511297,"endOffset":511470,"count":0}],"isBlockCoverage":false},{"functionName":"renderInstructions","ranges":[{"startOffset":511475,"endOffset":512005,"count":0}],"isBlockCoverage":false},{"functionName":"renderOption","ranges":[{"startOffset":512010,"endOffset":512801,"count":0}],"isBlockCoverage":false},{"functionName":"paginateOptions","ranges":[{"startOffset":512848,"endOffset":513541,"count":0}],"isBlockCoverage":false},{"functionName":"renderOptions","ranges":[{"startOffset":513587,"endOffset":513707,"count":0}],"isBlockCoverage":false},{"functionName":"renderDoneOrInstructions","ranges":[{"startOffset":513712,"endOffset":514084,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":514089,"endOffset":514717,"count":0}],"isBlockCoverage":false},{"functionName":"requireAutocomplete","ranges":[{"startOffset":514828,"endOffset":522918,"count":1},{"startOffset":514892,"endOffset":514912,"count":0}],"isBlockCoverage":true},{"functionName":"getVal","ranges":[{"startOffset":515140,"endOffset":515202,"count":0}],"isBlockCoverage":false},{"functionName":"getTitle","ranges":[{"startOffset":515222,"endOffset":515284,"count":0}],"isBlockCoverage":false},{"functionName":"getIndex","ranges":[{"startOffset":515304,"endOffset":515461,"count":0}],"isBlockCoverage":false},{"functionName":"AutocompletePrompt","ranges":[{"startOffset":516391,"endOffset":517266,"count":0}],"isBlockCoverage":false},{"functionName":"set fallback","ranges":[{"startOffset":517271,"endOffset":517366,"count":0}],"isBlockCoverage":false},{"functionName":"get fallback","ranges":[{"startOffset":517371,"endOffset":517635,"count":0}],"isBlockCoverage":false},{"functionName":"moveSelect","ranges":[{"startOffset":517640,"endOffset":517831,"count":0}],"isBlockCoverage":false},{"functionName":"complete","ranges":[{"startOffset":517836,"endOffset":518305,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":518310,"endOffset":518492,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":518497,"endOffset":518766,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":518771,"endOffset":518933,"count":0}],"isBlockCoverage":false},{"functionName":"submit","ranges":[{"startOffset":518938,"endOffset":519101,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":519106,"endOffset":519336,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":519341,"endOffset":519618,"count":0}],"isBlockCoverage":false},{"functionName":"deleteForward","ranges":[{"startOffset":519623,"endOffset":519901,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":519906,"endOffset":519965,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":519970,"endOffset":520054,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":520059,"endOffset":520235,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":520240,"endOffset":520418,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":520423,"endOffset":520585,"count":0}],"isBlockCoverage":false},{"functionName":"nextPage","ranges":[{"startOffset":520590,"endOffset":520714,"count":0}],"isBlockCoverage":false},{"functionName":"prevPage","ranges":[{"startOffset":520719,"endOffset":520817,"count":0}],"isBlockCoverage":false},{"functionName":"left","ranges":[{"startOffset":520822,"endOffset":520936,"count":0}],"isBlockCoverage":false},{"functionName":"right","ranges":[{"startOffset":520941,"endOffset":521086,"count":0}],"isBlockCoverage":false},{"functionName":"renderOption","ranges":[{"startOffset":521091,"endOffset":521730,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":521735,"endOffset":522854,"count":0}],"isBlockCoverage":false},{"functionName":"requireAutocompleteMultiselect","ranges":[{"startOffset":522990,"endOffset":528631,"count":1},{"startOffset":523076,"endOffset":523107,"count":0}],"isBlockCoverage":true},{"functionName":"AutocompleteMultiselectPrompt","ranges":[{"startOffset":523916,"endOffset":524128,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":524133,"endOffset":524218,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":524222,"endOffset":524323,"count":0}],"isBlockCoverage":false},{"functionName":"up","ranges":[{"startOffset":524328,"endOffset":524486,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":524491,"endOffset":524651,"count":0}],"isBlockCoverage":false},{"functionName":"left","ranges":[{"startOffset":524656,"endOffset":524746,"count":0}],"isBlockCoverage":false},{"functionName":"right","ranges":[{"startOffset":524751,"endOffset":524932,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":524937,"endOffset":525111,"count":0}],"isBlockCoverage":false},{"functionName":"updateFilteredOptions","ranges":[{"startOffset":525116,"endOffset":525919,"count":0}],"isBlockCoverage":false},{"functionName":"handleSpaceToggle","ranges":[{"startOffset":525924,"endOffset":526263,"count":0}],"isBlockCoverage":false},{"functionName":"handleInputChange","ranges":[{"startOffset":526268,"endOffset":526374,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":526379,"endOffset":526505,"count":0}],"isBlockCoverage":false},{"functionName":"renderInstructions","ranges":[{"startOffset":526510,"endOffset":526958,"count":0}],"isBlockCoverage":false},{"functionName":"renderCurrentInput","ranges":[{"startOffset":526963,"endOffset":527109,"count":0}],"isBlockCoverage":false},{"functionName":"renderOption","ranges":[{"startOffset":527114,"endOffset":527444,"count":0}],"isBlockCoverage":false},{"functionName":"renderDoneOrInstructions","ranges":[{"startOffset":527449,"endOffset":527889,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":527894,"endOffset":528534,"count":0}],"isBlockCoverage":false},{"functionName":"requireConfirm","ranges":[{"startOffset":528671,"endOffset":531179,"count":1},{"startOffset":528725,"endOffset":528740,"count":0}],"isBlockCoverage":true},{"functionName":"ConfirmPrompt","ranges":[{"startOffset":529534,"endOffset":529871,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":529876,"endOffset":529965,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":529970,"endOffset":530002,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":530007,"endOffset":530143,"count":0}],"isBlockCoverage":false},{"functionName":"submit","ranges":[{"startOffset":530148,"endOffset":530336,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":530341,"endOffset":530579,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":530584,"endOffset":531130,"count":0}],"isBlockCoverage":false},{"functionName":"requireElements","ranges":[{"startOffset":531221,"endOffset":531713,"count":1},{"startOffset":531277,"endOffset":531293,"count":0}],"isBlockCoverage":true},{"functionName":"requirePrompts","ranges":[{"startOffset":531740,"endOffset":541063,"count":1},{"startOffset":531794,"endOffset":531811,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":531839,"endOffset":541028,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":531928,"endOffset":531934,"count":0}],"isBlockCoverage":false},{"functionName":"toPrompt","ranges":[{"startOffset":531939,"endOffset":532370,"count":0}],"isBlockCoverage":false},{"functionName":"$.text","ranges":[{"startOffset":532953,"endOffset":532989,"count":0}],"isBlockCoverage":false},{"functionName":"$.password","ranges":[{"startOffset":533505,"endOffset":533572,"count":0}],"isBlockCoverage":false},{"functionName":"$.invisible","ranges":[{"startOffset":534098,"endOffset":534166,"count":0}],"isBlockCoverage":false},{"functionName":"$.number","ranges":[{"startOffset":535047,"endOffset":535085,"count":0}],"isBlockCoverage":false},{"functionName":"$.date","ranges":[{"startOffset":535962,"endOffset":535998,"count":0}],"isBlockCoverage":false},{"functionName":"$.confirm","ranges":[{"startOffset":536430,"endOffset":536469,"count":0}],"isBlockCoverage":false},{"functionName":"$.list","ranges":[{"startOffset":537096,"endOffset":537255,"count":0}],"isBlockCoverage":false},{"functionName":"$.toggle","ranges":[{"startOffset":537818,"endOffset":537856,"count":0}],"isBlockCoverage":false},{"functionName":"$.select","ranges":[{"startOffset":538426,"endOffset":538464,"count":0}],"isBlockCoverage":false},{"functionName":"$.multiselect","ranges":[{"startOffset":539131,"endOffset":539398,"count":0}],"isBlockCoverage":false},{"functionName":"$.autocompleteMultiselect","ranges":[{"startOffset":539431,"endOffset":539710,"count":0}],"isBlockCoverage":false},{"functionName":"byTitle","ranges":[{"startOffset":539731,"endOffset":539871,"count":0}],"isBlockCoverage":false},{"functionName":"$.autocomplete","ranges":[{"startOffset":540867,"endOffset":541023,"count":0}],"isBlockCoverage":false},{"functionName":"requireLib","ranges":[{"startOffset":541095,"endOffset":544292,"count":1},{"startOffset":541141,"endOffset":541152,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":541307,"endOffset":541315,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":541660,"endOffset":543808,"count":0}],"isBlockCoverage":false},{"functionName":"getInjectedAnswer","ranges":[{"startOffset":543811,"endOffset":544027,"count":0}],"isBlockCoverage":false},{"functionName":"inject","ranges":[{"startOffset":544030,"endOffset":544123,"count":0}],"isBlockCoverage":false},{"functionName":"override","ranges":[{"startOffset":544126,"endOffset":544207,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeLT","ranges":[{"startOffset":544294,"endOffset":544575,"count":1},{"startOffset":544347,"endOffset":544352,"count":0},{"startOffset":544515,"endOffset":544553,"count":0},{"startOffset":544557,"endOffset":544574,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":544909,"endOffset":550117,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":550466,"endOffset":550481,"count":8}],"isBlockCoverage":true},{"functionName":"printShortcutsHelp","ranges":[{"startOffset":550492,"endOffset":550703,"count":0}],"isBlockCoverage":false},{"functionName":"registerConsoleShortcuts","ranges":[{"startOffset":550704,"endOffset":554500,"count":0}],"isBlockCoverage":false},{"functionName":"startVitest","ranges":[{"startOffset":554502,"endOffset":556747,"count":1},{"startOffset":554876,"endOffset":554910,"count":0},{"startOffset":554916,"endOffset":554947,"count":0},{"startOffset":555004,"endOffset":555013,"count":0},{"startOffset":555034,"endOffset":555090,"count":0},{"startOffset":555276,"endOffset":555283,"count":0},{"startOffset":555452,"endOffset":555511,"count":0},{"startOffset":555619,"endOffset":555740,"count":0},{"startOffset":555789,"endOffset":555810,"count":0},{"startOffset":555879,"endOffset":555901,"count":0},{"startOffset":555985,"endOffset":556045,"count":0},{"startOffset":556379,"endOffset":556396,"count":0},{"startOffset":556445,"endOffset":556614,"count":0},{"startOffset":556649,"endOffset":556660,"count":0},{"startOffset":556693,"endOffset":556709,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":556068,"endOffset":556207,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":556233,"endOffset":556331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"node:worker_threads","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":932,"count":1}],"isBlockCoverage":false}]},{"scriptId":"214","url":"node:internal/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16948,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2606,"endOffset":2633,"count":1}],"isBlockCoverage":true},{"functionName":"process.chdir","ranges":[{"startOffset":3063,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironmentData","ranges":[{"startOffset":3153,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentData","ranges":[{"startOffset":3309,"endOffset":3382,"count":0}],"isBlockCoverage":false},{"functionName":"assignEnvironmentData","ranges":[{"startOffset":3386,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":3584,"endOffset":9479,"count":31},{"startOffset":4008,"endOffset":4123,"count":0},{"startOffset":4169,"endOffset":4238,"count":0},{"startOffset":4262,"endOffset":4536,"count":0},{"startOffset":4562,"endOffset":4594,"count":0},{"startOffset":4596,"endOffset":4709,"count":0},{"startOffset":4768,"endOffset":4848,"count":0},{"startOffset":4888,"endOffset":5025,"count":0},{"startOffset":5061,"endOffset":5135,"count":0},{"startOffset":5231,"endOffset":5293,"count":0},{"startOffset":5565,"endOffset":5831,"count":0},{"startOffset":5877,"endOffset":5987,"count":0},{"startOffset":6239,"endOffset":6245,"count":0},{"startOffset":6453,"endOffset":6460,"count":0},{"startOffset":6594,"endOffset":6680,"count":0},{"startOffset":6724,"endOffset":6860,"count":0},{"startOffset":7321,"endOffset":7375,"count":0},{"startOffset":8163,"endOffset":8270,"count":0},{"startOffset":8699,"endOffset":8727,"count":0},{"startOffset":9394,"endOffset":9474,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5495,"endOffset":5547,"count":4340}],"isBlockCoverage":true},{"functionName":"Worker.<computed>.onexit","ranges":[{"startOffset":6889,"endOffset":6991,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7070,"endOffset":7102,"count":38}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8374,"endOffset":8469,"count":62}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8422,"endOffset":8460,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9311,"endOffset":9345,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9485,"endOffset":10176,"count":31},{"startOffset":9914,"endOffset":10109,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10182,"endOffset":10280,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10286,"endOffset":10459,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10465,"endOffset":11384,"count":38},{"startOffset":10525,"endOffset":10628,"count":31},{"startOffset":10636,"endOffset":10729,"count":0},{"startOffset":10737,"endOffset":10823,"count":0},{"startOffset":10831,"endOffset":11123,"count":7},{"startOffset":11131,"endOffset":11305,"count":0},{"startOffset":11312,"endOffset":11383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11015,"endOffset":11095,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11390,"endOffset":11874,"count":31}],"isBlockCoverage":true},{"functionName":"postMessage","ranges":[{"startOffset":11880,"endOffset":12029,"count":31},{"startOffset":11940,"endOffset":11947,"count":0}],"isBlockCoverage":true},{"functionName":"terminate","ranges":[{"startOffset":12035,"endOffset":12893,"count":31},{"startOffset":12191,"endOffset":12508,"count":0},{"startOffset":12544,"endOffset":12568,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12461,"endOffset":12499,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12830,"endOffset":12886,"count":31}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":12899,"endOffset":13010,"count":62},{"startOffset":12940,"endOffset":12947,"count":0}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":13016,"endOffset":13133,"count":31},{"startOffset":13059,"endOffset":13066,"count":0}],"isBlockCoverage":true},{"functionName":"get threadId","ranges":[{"startOffset":13139,"endOffset":13242,"count":248},{"startOffset":13189,"endOffset":13199,"count":62},{"startOffset":13199,"endOffset":13241,"count":186}],"isBlockCoverage":true},{"functionName":"get stdin","ranges":[{"startOffset":13248,"endOffset":13308,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":13314,"endOffset":13376,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":13382,"endOffset":13444,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":13450,"endOffset":13590,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":13596,"endOffset":14116,"count":0}],"isBlockCoverage":false},{"functionName":"InternalWorker","ranges":[{"startOffset":14317,"endOffset":14398,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageSync","ranges":[{"startOffset":14404,"endOffset":14484,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":14491,"endOffset":14823,"count":62}],"isBlockCoverage":true},{"functionName":"parseResourceLimits","ranges":[{"startOffset":14900,"endOffset":15528,"count":31},{"startOffset":15040,"endOffset":15055,"count":0},{"startOffset":15068,"endOffset":15527,"count":0}],"isBlockCoverage":true},{"functionName":"makeResourceLimits","ranges":[{"startOffset":15532,"endOffset":15826,"count":0}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":15830,"endOffset":16655,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1587,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":163,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":469,"endOffset":1501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14369,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageEvent","ranges":[{"startOffset":2505,"endOffset":2686,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":4018,"endOffset":4103,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4278,"endOffset":4603,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":4749,"endOffset":4896,"count":265}],"isBlockCoverage":true},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":5211,"endOffset":5252,"count":265}],"isBlockCoverage":true},{"functionName":"onclose","ranges":[{"startOffset":5329,"endOffset":5404,"count":265}],"isBlockCoverage":true},{"functionName":"MessagePort.close","ranges":[{"startOffset":5594,"endOffset":5733,"count":110},{"startOffset":5647,"endOffset":5670,"count":0}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":5872,"endOffset":6515,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":6525,"endOffset":7924,"count":296}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6892,"endOffset":6989,"count":138},{"startOffset":6938,"endOffset":6984,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7029,"endOffset":7129,"count":138},{"startOffset":7075,"endOffset":7124,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7233,"endOffset":7381,"count":210},{"startOffset":7294,"endOffset":7316,"count":148}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7494,"endOffset":7644,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":7652,"endOffset":7798,"count":179}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":7804,"endOffset":7921,"count":31}],"isBlockCoverage":true},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":7978,"endOffset":8339,"count":62}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8162,"endOffset":8332,"count":62},{"startOffset":8203,"endOffset":8230,"count":0},{"startOffset":8232,"endOffset":8325,"count":0}],"isBlockCoverage":true},{"functionName":"_read","ranges":[{"startOffset":8345,"endOffset":8662,"count":69},{"startOffset":8416,"endOffset":8538,"count":0}],"isBlockCoverage":true},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":8717,"endOffset":8871,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":8877,"endOffset":9263,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":9269,"endOffset":9456,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9462,"endOffset":9715,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":9722,"endOffset":10000,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":10004,"endOffset":10188,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageEvent","ranges":[{"startOffset":10192,"endOffset":10289,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":10293,"endOffset":10381,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":10474,"endOffset":11000,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11006,"endOffset":11434,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":11475,"endOffset":11608,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":11650,"endOffset":12059,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":12134,"endOffset":12574,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":12866,"endOffset":13039,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":13333,"endOffset":13510,"count":0}],"isBlockCoverage":false},{"functionName":"markAsUncloneable","ranges":[{"startOffset":13803,"endOffset":13991,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"node:internal/worker/messaging","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6908,"count":1}],"isBlockCoverage":false},{"functionName":"handleMessageFromThread","ranges":[{"startOffset":1617,"endOffset":2684,"count":62},{"startOffset":1693,"endOffset":2225,"count":31},{"startOffset":2231,"endOffset":2388,"count":31},{"startOffset":2394,"endOffset":2676,"count":0}],"isBlockCoverage":true},{"functionName":"handleMessageFromMainThread","ranges":[{"startOffset":2688,"endOffset":2916,"count":0}],"isBlockCoverage":false},{"functionName":"sendMessageToWorker","ranges":[{"startOffset":2920,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageFromWorker","ranges":[{"startOffset":3749,"endOffset":4323,"count":0}],"isBlockCoverage":false},{"functionName":"createMainThreadPort","ranges":[{"startOffset":4327,"endOffset":4896,"count":31},{"startOffset":4767,"endOffset":4857,"count":0}],"isBlockCoverage":true},{"functionName":"destroyMainThreadPort","ranges":[{"startOffset":4900,"endOffset":5205,"count":31},{"startOffset":5134,"endOffset":5202,"count":0}],"isBlockCoverage":true},{"functionName":"setupMainThreadPort","ranges":[{"startOffset":5209,"endOffset":5408,"count":0}],"isBlockCoverage":false},{"functionName":"postMessageToThread","ranges":[{"startOffset":5412,"endOffset":6781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"node:internal/error_serdes","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5899,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":1083,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":2223,"endOffset":2675,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":2679,"endOffset":2795,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2825,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":3020,"endOffset":4352,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":4356,"endOffset":4581,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":4603,"endOffset":5839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"node:zlib","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29666,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3518,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":4165,"endOffset":4503,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4507,"endOffset":4595,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4599,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4946,"endOffset":5505,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5509,"endOffset":5833,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":6076,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8418,"endOffset":8457,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8911,"endOffset":8959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9108,"endOffset":9162,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":9356,"endOffset":9451,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":9601,"endOffset":9675,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._final","ranges":[{"startOffset":9745,"endOffset":9783,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":10400,"endOffset":10477,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":10932,"endOffset":11349,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":11473,"endOffset":11558,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":11593,"endOffset":11656,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":11693,"endOffset":12240,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":12280,"endOffset":12515,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":12520,"endOffset":14814,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":14818,"endOffset":15426,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":15430,"endOffset":18373,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":18429,"endOffset":18587,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":18793,"endOffset":21178,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":21536,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":21838,"endOffset":22266,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":22314,"endOffset":22453,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":22553,"endOffset":22692,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":22792,"endOffset":22919,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":23013,"endOffset":23148,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":23246,"endOffset":23456,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":23562,"endOffset":23713,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":23819,"endOffset":23950,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":24046,"endOffset":24448,"count":18},{"startOffset":24106,"endOffset":24447,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":24120,"endOffset":24223,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":24240,"endOffset":24444,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24526,"endOffset":24597,"count":107},{"startOffset":24585,"endOffset":24592,"count":9},{"startOffset":24593,"endOffset":24596,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":24824,"endOffset":25870,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":25968,"endOffset":26136,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":26254,"endOffset":26428,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":26552,"endOffset":26747,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":26678,"endOffset":26737,"count":0}],"isBlockCoverage":false},{"functionName":"crc32","ranges":[{"startOffset":26751,"endOffset":27025,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27260,"endOffset":27296,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27301,"endOffset":27342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"220","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8796,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3216,"endOffset":3321,"count":2}],"isBlockCoverage":true},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3348,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3627,"endOffset":3711,"count":247}],"isBlockCoverage":true},{"functionName":"createCipheriv","ranges":[{"startOffset":3715,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3823,"endOffset":3931,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3935,"endOffset":4093,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4097,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4185,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4247,"endOffset":4331,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4335,"endOffset":4419,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4423,"endOffset":4511,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5773,"endOffset":5860,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5864,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":6162,"endOffset":6255,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6337,"endOffset":6601,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6606,"endOffset":6803,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6857,"endOffset":7731,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6959,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7478,"endOffset":7721,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8143,"endOffset":8183,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8303,"endOffset":8350,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8484,"endOffset":8505,"count":1}],"isBlockCoverage":true}]},{"scriptId":"221","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16859,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1328,"endOffset":1704,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":1708,"endOffset":2183,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":2187,"endOffset":2748,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2752,"endOffset":3452,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":3456,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":5109,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7421,"endOffset":8322,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8328,"endOffset":8493,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8732,"endOffset":9366,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9745,"endOffset":10053,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":10057,"endOffset":10806,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10810,"endOffset":11121,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":11125,"endOffset":11369,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11373,"endOffset":11703,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11707,"endOffset":12992,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12996,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13476,"endOffset":13742,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":14024,"endOffset":14068,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":14149,"endOffset":14588,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14592,"endOffset":14897,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14901,"endOffset":15826,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15830,"endOffset":16658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"222","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3149,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":503,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1198,"endOffset":1620,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1624,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2152,"endOffset":3074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17002,"count":1}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":2033,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"getHashCache","ranges":[{"startOffset":2240,"endOffset":2518,"count":494},{"startOffset":2299,"endOffset":2493,"count":1},{"startOffset":2370,"endOffset":2488,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2446,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedHashId","ranges":[{"startOffset":2522,"endOffset":2653,"count":247},{"startOffset":2636,"endOffset":2640,"count":1},{"startOffset":2641,"endOffset":2649,"count":246}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2689,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2767,"endOffset":2809,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2844,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2892,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3362,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6979,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":7926,"endOffset":8145,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":8378,"endOffset":10886,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":10890,"endOffset":11032,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":11036,"endOffset":11190,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":11194,"endOffset":11348,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":11352,"endOffset":11496,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":11500,"endOffset":11854,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":11858,"endOffset":12060,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12107,"endOffset":12413,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":12419,"endOffset":12658,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":12662,"endOffset":12942,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":13487,"endOffset":13778,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":13782,"endOffset":14027,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":14031,"endOffset":14201,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":14205,"endOffset":14424,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":14428,"endOffset":14651,"count":0}],"isBlockCoverage":false},{"functionName":"getDigestSizeInBytes","ranges":[{"startOffset":14655,"endOffset":14845,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":14997,"endOffset":15992,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":15996,"endOffset":16388,"count":0}],"isBlockCoverage":false}]},{"scriptId":"224","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2586,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1958,"endOffset":2189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"225","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3466,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":665,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1358,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1780,"endOffset":3412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"226","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3569,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":866,"endOffset":1439,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1445,"endOffset":1897,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1901,"endOffset":2386,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2390,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2785,"endOffset":3500,"count":0}],"isBlockCoverage":false}]},{"scriptId":"227","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28502,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2501,"endOffset":9879,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2614,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3181,"endOffset":3230,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3245,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3398,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3937,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":4005,"endOffset":4087,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":4095,"endOffset":4453,"count":0}],"isBlockCoverage":false},{"functionName":"toCryptoKey","ranges":[{"startOffset":4461,"endOffset":5941,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":6080,"endOffset":6358,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":6471,"endOffset":6533,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":6541,"endOffset":6696,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":6704,"endOffset":7094,"count":0}],"isBlockCoverage":false},{"functionName":"toCryptoKey","ranges":[{"startOffset":7102,"endOffset":8691,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":8759,"endOffset":8819,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":8827,"endOffset":9127,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":9196,"endOffset":9257,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":9265,"endOffset":9794,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":9885,"endOffset":10280,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":10284,"endOffset":11158,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":11162,"endOffset":11286,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":11290,"endOffset":12007,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":12011,"endOffset":12152,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":12156,"endOffset":13555,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":13759,"endOffset":13897,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":14102,"endOffset":14220,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":14224,"endOffset":14821,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":14825,"endOffset":15346,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":15350,"endOffset":18007,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":18011,"endOffset":19596,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":19600,"endOffset":19690,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":19694,"endOffset":19791,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":19795,"endOffset":20514,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":20518,"endOffset":20727,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":20731,"endOffset":21079,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":21083,"endOffset":21435,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":21439,"endOffset":21523,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":21955,"endOffset":22017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22023,"endOffset":22387,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":22393,"endOffset":22532,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":22538,"endOffset":22681,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":22687,"endOffset":22826,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":22832,"endOffset":22979,"count":0}],"isBlockCoverage":false},{"functionName":"defineCryptoKeyProperties","ranges":[{"startOffset":23454,"endOffset":24397,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":24701,"endOffset":25080,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25086,"endOffset":25462,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25468,"endOffset":25617,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":25751,"endOffset":25837,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":25841,"endOffset":28000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"228","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11121,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1248,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1324,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1488,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2297,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2420,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2817,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":4112,"endOffset":9576,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9611,"endOffset":10167,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":10171,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10386,"endOffset":10872,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10876,"endOffset":11013,"count":0}],"isBlockCoverage":false}]},{"scriptId":"229","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10275,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1301,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3165,"endOffset":3501,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3619,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3858,"endOffset":4122,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4228,"endOffset":4340,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4458,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4704,"endOffset":4820,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4941,"endOffset":5059,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5104,"endOffset":5250,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5297,"endOffset":5445,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5452,"endOffset":5612,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5930,"endOffset":6056,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6091,"endOffset":6246,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6269,"endOffset":6541,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6546,"endOffset":6685,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6689,"endOffset":7022,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7100,"endOffset":8194,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8317,"endOffset":10160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"230","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10115,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1297,"endOffset":2062,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1366,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2574,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2954,"endOffset":3196,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3200,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3634,"endOffset":3979,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4229,"endOffset":4361,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4509,"endOffset":4628,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4659,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4836,"endOffset":5368,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5400,"endOffset":5653,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5694,"endOffset":5845,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5880,"endOffset":6045,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6052,"endOffset":6269,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6299,"endOffset":6648,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6903,"endOffset":7118,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7122,"endOffset":7725,"count":3},{"startOffset":7524,"endOffset":7599,"count":1},{"startOffset":7599,"endOffset":7663,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8137,"endOffset":8275,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":8691,"endOffset":8913,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9081,"endOffset":9967,"count":0}],"isBlockCoverage":false}]},{"scriptId":"231","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1443,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":416,"endOffset":480,"count":247}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":616,"endOffset":796,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":654,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":800,"endOffset":1029,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":838,"endOffset":1025,"count":0}],"isBlockCoverage":false}]},{"scriptId":"232","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7243,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":922,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1317,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1441,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1769,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1850,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1937,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2304,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2584,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3225,"endOffset":4495,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4499,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":5010,"endOffset":5612,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5617,"endOffset":7161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6172,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1165,"endOffset":1909,"count":247},{"startOffset":1226,"endOffset":1262,"count":0},{"startOffset":1416,"endOffset":1435,"count":0},{"startOffset":1436,"endOffset":1463,"count":0},{"startOffset":1511,"endOffset":1558,"count":0},{"startOffset":1693,"endOffset":1697,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":2045,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":2252,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2389,"endOffset":2472,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2501,"endOffset":2980,"count":247},{"startOffset":2597,"endOffset":2635,"count":0},{"startOffset":2716,"endOffset":2865,"count":0},{"startOffset":2919,"endOffset":2961,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":3011,"endOffset":3341,"count":247},{"startOffset":3107,"endOffset":3145,"count":0}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":3346,"endOffset":3758,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3946,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4554,"endOffset":5043,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":5047,"endOffset":6101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10867,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1220,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1309,"endOffset":2581,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2615,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2785,"endOffset":10609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1599,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":401,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":528,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":663,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1161,"endOffset":1258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30612,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1215,"endOffset":1842,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1846,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":1963,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":4547,"endOffset":6159,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":6163,"endOffset":6807,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":6811,"endOffset":9061,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":9065,"endOffset":10080,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":10084,"endOffset":11108,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":11112,"endOffset":12082,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":12086,"endOffset":13672,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":13676,"endOffset":14562,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":14566,"endOffset":17367,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":17464,"endOffset":19048,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":19147,"endOffset":21185,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":21189,"endOffset":22326,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":22330,"endOffset":22976,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":22980,"endOffset":23761,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":23765,"endOffset":25212,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":25216,"endOffset":25963,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":25967,"endOffset":26714,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":26876,"endOffset":26938,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26975,"endOffset":26988,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":27030,"endOffset":27092,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":27098,"endOffset":27201,"count":1},{"startOffset":27139,"endOffset":27176,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27238,"endOffset":27251,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":27269,"endOffset":27610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"node:https","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11360,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1937,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":2097,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":3780,"endOffset":3902,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":3946,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4325,"endOffset":4419,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":4445,"endOffset":5591,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":5955,"endOffset":6361,"count":1},{"startOffset":6019,"endOffset":6045,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":6747,"endOffset":8555,"count":0}],"isBlockCoverage":false},{"functionName":"_getSession","ranges":[{"startOffset":8590,"endOffset":8659,"count":0}],"isBlockCoverage":false},{"functionName":"_cacheSession","ranges":[{"startOffset":8696,"endOffset":9289,"count":0}],"isBlockCoverage":false},{"functionName":"_evictSession","ranges":[{"startOffset":9326,"endOffset":9563,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":9766,"endOffset":10313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11148,"endOffset":11258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"238","url":"node:tls","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10941,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3140,"endOffset":3204,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3238,"endOffset":3334,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3463,"endOffset":3618,"count":1}],"isBlockCoverage":true},{"functionName":"convertProtocols","ranges":[{"startOffset":3733,"endOffset":4350,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4385,"endOffset":4922,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":4927,"endOffset":4989,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":5101,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":5185,"endOffset":5280,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":5284,"endOffset":7222,"count":0}],"isBlockCoverage":false},{"functionName":"splitEscapedAltNames","ranges":[{"startOffset":7596,"endOffset":8709,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":8743,"endOffset":10483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"239","url":"node:_tls_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4972,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1779,"endOffset":2079,"count":0}],"isBlockCoverage":false},{"functionName":"SecureContext","ranges":[{"startOffset":2165,"endOffset":3024,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureContext","ranges":[{"startOffset":3028,"endOffset":3519,"count":0}],"isBlockCoverage":false},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":3763,"endOffset":4873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"node:internal/tls/secure-context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9926,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEcdhCurve","ranges":[{"startOffset":772,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCiphers","ranges":[{"startOffset":1031,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"addCACerts","ranges":[{"startOffset":1272,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"setCerts","ranges":[{"startOffset":1445,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":1614,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":1911,"endOffset":2158,"count":0}],"isBlockCoverage":false},{"functionName":"processCiphers","ranges":[{"startOffset":2162,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"configSecureContext","ranges":[{"startOffset":3270,"endOffset":9874,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"node:_tls_wrap","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55302,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1904,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":4020,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakestart","ranges":[{"startOffset":4211,"endOffset":5023,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":5027,"endOffset":5333,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":5339,"endOffset":6580,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":6586,"endOffset":7263,"count":0}],"isBlockCoverage":false},{"functionName":"callALPNCallback","ranges":[{"startOffset":7269,"endOffset":8342,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":8346,"endOffset":9715,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":9719,"endOffset":9922,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":9926,"endOffset":10170,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsession","ranges":[{"startOffset":10174,"endOffset":11041,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":11045,"endOffset":11725,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":11729,"endOffset":12463,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":12467,"endOffset":12561,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":12565,"endOffset":12684,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":12688,"endOffset":13789,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":13937,"endOffset":14493,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket","ranges":[{"startOffset":14577,"endOffset":17790,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":18248,"endOffset":18428,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":18291,"endOffset":18424,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":18601,"endOffset":19483,"count":0}],"isBlockCoverage":false},{"functionName":"disableRenegotiation","ranges":[{"startOffset":19531,"endOffset":19606,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":19800,"endOffset":21187,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":21235,"endOffset":21832,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":21975,"endOffset":22228,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":22232,"endOffset":22383,"count":0}],"isBlockCoverage":false},{"functionName":"destroySSL","ranges":[{"startOffset":22387,"endOffset":22440,"count":0}],"isBlockCoverage":false},{"functionName":"_destroySSL","ranges":[{"startOffset":22478,"endOffset":22780,"count":0}],"isBlockCoverage":false},{"functionName":"keylogNewListener","ranges":[{"startOffset":22785,"endOffset":23106,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":23110,"endOffset":23424,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._init","ranges":[{"startOffset":23567,"endOffset":28375,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":28414,"endOffset":29709,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":29757,"endOffset":30089,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":30135,"endOffset":30260,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":30302,"endOffset":30373,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":30414,"endOffset":30504,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":30541,"endOffset":30654,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":30697,"endOffset":30859,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":30898,"endOffset":31984,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._start","ranges":[{"startOffset":32018,"endOffset":32536,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":32577,"endOffset":32753,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":32791,"endOffset":32933,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":32979,"endOffset":33150,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":33192,"endOffset":33406,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerX509Certificate","ranges":[{"startOffset":33456,"endOffset":33599,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getX509Certificate","ranges":[{"startOffset":33645,"endOffset":33776,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setKeyCert","ranges":[{"startOffset":33814,"endOffset":34090,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":34130,"endOffset":34334,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":34179,"endOffset":34330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34550,"endOffset":34630,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":34677,"endOffset":35190,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":35194,"endOffset":35436,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":35440,"endOffset":35529,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":35533,"endOffset":35901,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":35905,"endOffset":36817,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":39650,"endOffset":41457,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":41616,"endOffset":41702,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":41745,"endOffset":44733,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":44774,"endOffset":44862,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":44903,"endOffset":44982,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":45022,"endOffset":45104,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":45144,"endOffset":45345,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45392,"endOffset":47467,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":47593,"endOffset":48009,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":48060,"endOffset":48326,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":48331,"endOffset":48634,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":48884,"endOffset":49629,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectSecure","ranges":[{"startOffset":49633,"endOffset":51908,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectEnd","ranges":[{"startOffset":51912,"endOffset":52487,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":52556,"endOffset":55299,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"node:internal/js_stream_socket","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8857,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":348,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":834,"endOffset":897,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":901,"endOffset":966,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":970,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":1037,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":1112,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1964,"endOffset":3747,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3891,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3948,"endOffset":4012,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":4018,"endOffset":4078,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":4084,"endOffset":4142,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":4148,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":5501,"endOffset":5800,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5806,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":7362,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":7824,"endOffset":8658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8664,"endOffset":8732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8738,"endOffset":8816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"node:internal/tls/secure-pair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2078,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":415,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":514,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":651,"endOffset":862,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":868,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":997,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":1239,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1878,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":1990,"endOffset":2075,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17432,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1421,"endOffset":1448,"count":0}],"isBlockCoverage":false},{"functionName":"ReusedHandle","ranges":[{"startOffset":2526,"endOffset":2608,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2615,"endOffset":2799,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":2803,"endOffset":6078,"count":2},{"startOffset":2867,"endOffset":2893,"count":0},{"startOffset":3444,"endOffset":3452,"count":0},{"startOffset":3633,"endOffset":3642,"count":0},{"startOffset":3844,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3987,"endOffset":5957,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6190,"endOffset":6729,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":6909,"endOffset":7427,"count":0}],"isBlockCoverage":false},{"functionName":"addRequest","ranges":[{"startOffset":7461,"endOffset":9544,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":9580,"endOffset":10613,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeServerName","ranges":[{"startOffset":10618,"endOffset":10783,"count":0}],"isBlockCoverage":false},{"functionName":"calculateServerName","ranges":[{"startOffset":10787,"endOffset":11568,"count":0}],"isBlockCoverage":false},{"functionName":"installListeners","ranges":[{"startOffset":11572,"endOffset":13064,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":13099,"endOffset":14868,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":14907,"endOffset":16051,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":16086,"endOffset":16259,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":16290,"endOffset":16651,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":16656,"endOffset":16904,"count":0}],"isBlockCoverage":false},{"functionName":"asyncResetHandle","ranges":[{"startOffset":16908,"endOffset":17311,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39962,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2828,"endOffset":2855,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":7350,"endOffset":7432,"count":0}],"isBlockCoverage":false},{"functionName":"ServerResponse","ranges":[{"startOffset":7439,"endOffset":8306,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":8477,"endOffset":9142,"count":0}],"isBlockCoverage":false},{"functionName":"onServerResponseClose","ranges":[{"startOffset":9248,"endOffset":10260,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":10304,"endOffset":10568,"count":0}],"isBlockCoverage":false},{"functionName":"detachSocket","ranges":[{"startOffset":10613,"endOffset":10800,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":10846,"endOffset":10967,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":11015,"endOffset":11115,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":11163,"endOffset":11699,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":11747,"endOffset":11814,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":11868,"endOffset":14833,"count":0}],"isBlockCoverage":false},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":14949,"endOffset":17821,"count":1},{"startOffset":15218,"endOffset":15269,"count":0},{"startOffset":15415,"endOffset":15481,"count":0},{"startOffset":15620,"endOffset":15728,"count":0},{"startOffset":15879,"endOffset":15987,"count":0},{"startOffset":16219,"endOffset":16313,"count":0},{"startOffset":16409,"endOffset":16525,"count":0},{"startOffset":16716,"endOffset":16876,"count":0},{"startOffset":17049,"endOffset":17174,"count":0},{"startOffset":17330,"endOffset":17412,"count":0},{"startOffset":17594,"endOffset":17759,"count":0}],"isBlockCoverage":true},{"functionName":"setupConnectionsTracking","ranges":[{"startOffset":17825,"endOffset":18412,"count":1},{"startOffset":18024,"endOffset":18086,"count":0}],"isBlockCoverage":true},{"functionName":"httpServerPreClose","ranges":[{"startOffset":18416,"endOffset":18546,"count":1}],"isBlockCoverage":true},{"functionName":"Server","ranges":[{"startOffset":18550,"endOffset":19781,"count":1},{"startOffset":18628,"endOffset":18672,"count":0},{"startOffset":18780,"endOffset":18895,"count":0}],"isBlockCoverage":true},{"functionName":"Server.close","ranges":[{"startOffset":19916,"endOffset":20038,"count":1}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":20082,"endOffset":20147,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeAllConnections","ranges":[{"startOffset":20191,"endOffset":20407,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeIdleConnections","ranges":[{"startOffset":20452,"endOffset":20790,"count":1},{"startOffset":20493,"endOffset":20512,"count":0},{"startOffset":20622,"endOffset":20787,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":20825,"endOffset":20959,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":21010,"endOffset":21599,"count":0}],"isBlockCoverage":false},{"functionName":"checkConnections","ranges":[{"startOffset":21604,"endOffset":21963,"count":1},{"startOffset":21667,"endOffset":21695,"count":0},{"startOffset":21697,"endOffset":21716,"count":0},{"startOffset":21854,"endOffset":21960,"count":0}],"isBlockCoverage":true},{"functionName":"connectionListener","ranges":[{"startOffset":21967,"endOffset":22116,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":22120,"endOffset":25619,"count":0}],"isBlockCoverage":false},{"functionName":"socketSetEncoding","ranges":[{"startOffset":25623,"endOffset":25697,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":25701,"endOffset":25820,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnDrain","ranges":[{"startOffset":25824,"endOffset":26294,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnTimeout","ranges":[{"startOffset":26298,"endOffset":26666,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":26670,"endOffset":26823,"count":0}],"isBlockCoverage":false},{"functionName":"abortIncoming","ranges":[{"startOffset":26827,"endOffset":27020,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":27024,"endOffset":27562,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":27566,"endOffset":27801,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":27805,"endOffset":27982,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":27986,"endOffset":28493,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":28497,"endOffset":28647,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":28664,"endOffset":28672,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":29244,"endOffset":30348,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":30352,"endOffset":32003,"count":0}],"isBlockCoverage":false},{"functionName":"clearIncoming","ranges":[{"startOffset":32007,"endOffset":32343,"count":0}],"isBlockCoverage":false},{"functionName":"resOnFinish","ranges":[{"startOffset":32347,"endOffset":33878,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":33882,"endOffset":34021,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncoming","ranges":[{"startOffset":34192,"endOffset":38012,"count":0}],"isBlockCoverage":false},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":38016,"endOffset":38202,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketResume","ranges":[{"startOffset":38206,"endOffset":38744,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketPause","ranges":[{"startOffset":38748,"endOffset":38879,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":38883,"endOffset":39143,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":39147,"endOffset":39717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"246","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8415,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2344,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2817,"endOffset":4344,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnBody","ranges":[{"startOffset":4348,"endOffset":4678,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4682,"endOffset":5189,"count":0}],"isBlockCoverage":false},{"functionName":"parsersCb","ranges":[{"startOffset":5241,"endOffset":5540,"count":0}],"isBlockCoverage":false},{"functionName":"closeParserInstance","ranges":[{"startOffset":5546,"endOffset":5602,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":5934,"endOffset":6581,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6801,"endOffset":6869,"count":0}],"isBlockCoverage":false},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7140,"endOffset":7218,"count":0}],"isBlockCoverage":false},{"functionName":"cleanParser","ranges":[{"startOffset":7222,"endOffset":7617,"count":0}],"isBlockCoverage":false},{"functionName":"prepareError","ranges":[{"startOffset":7621,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7852,"endOffset":8043,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":83,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":212,"endOffset":335,"count":0}],"isBlockCoverage":false},{"functionName":"free","ranges":[{"startOffset":341,"endOffset":471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"248","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15203,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1603,"endOffset":1709,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":1713,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1848,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3090,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3142,"endOffset":3186,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3285,"endOffset":3594,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3604,"endOffset":3651,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3758,"endOffset":4107,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4117,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4272,"endOffset":4587,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4597,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4753,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5118,"endOffset":5174,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":5223,"endOffset":5366,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5855,"endOffset":6243,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":6491,"endOffset":7310,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":7377,"endOffset":7845,"count":0}],"isBlockCoverage":false},{"functionName":"matchKnownFields","ranges":[{"startOffset":8580,"endOffset":12555,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLine","ranges":[{"startOffset":13177,"endOffset":14225,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLineDistinct","ranges":[{"startOffset":14305,"endOffset":14491,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":14619,"endOffset":14868,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":14873,"endOffset":15128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37376,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2703,"endOffset":2730,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":3184,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"isCookieField","ranges":[{"startOffset":3442,"endOffset":3530,"count":0}],"isBlockCoverage":false},{"functionName":"isContentDispositionField","ranges":[{"startOffset":3534,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3652,"endOffset":5287,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5491,"endOffset":5531,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5624,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5765,"endOffset":5917,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6022,"endOffset":6053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6154,"endOffset":6271,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6379,"endOffset":6479,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6580,"endOffset":6619,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6742,"endOffset":6790,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6887,"endOffset":7372,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7538,"endOffset":7582,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7592,"endOffset":7636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7734,"endOffset":7778,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7788,"endOffset":7940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8067,"endOffset":8539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8640,"endOffset":9104,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":9227,"endOffset":9749,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":9787,"endOffset":9878,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":9918,"endOffset":10707,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":10751,"endOffset":11063,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":11312,"endOffset":11645,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":11759,"endOffset":12733,"count":0}],"isBlockCoverage":false},{"functionName":"_writeRaw","ranges":[{"startOffset":12788,"endOffset":13659,"count":0}],"isBlockCoverage":false},{"functionName":"_storeHeader","ranges":[{"startOffset":13721,"endOffset":18757,"count":0}],"isBlockCoverage":false},{"functionName":"processHeader","ranges":[{"startOffset":18761,"endOffset":19907,"count":0}],"isBlockCoverage":false},{"functionName":"storeHeader","ranges":[{"startOffset":19911,"endOffset":20115,"count":0}],"isBlockCoverage":false},{"functionName":"matchHeader","ranges":[{"startOffset":20119,"endOffset":21012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21059,"endOffset":21246,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21296,"endOffset":21616,"count":0}],"isBlockCoverage":false},{"functionName":"parseUniqueHeadersOption","ranges":[{"startOffset":21622,"endOffset":21890,"count":1},{"startOffset":21722,"endOffset":21889,"count":0}],"isBlockCoverage":true},{"functionName":"setHeader","ranges":[{"startOffset":21932,"endOffset":22292,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":22336,"endOffset":23382,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":23428,"endOffset":24178,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":24223,"endOffset":24433,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":24550,"endOffset":24655,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":24779,"endOffset":25193,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":25299,"endOffset":25723,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":25768,"endOffset":25916,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":25964,"endOffset":26542,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":26593,"endOffset":26686,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26828,"endOffset":26865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26970,"endOffset":27006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27115,"endOffset":27199,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":27282,"endOffset":27545,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":27550,"endOffset":27919,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":27923,"endOffset":28077,"count":0}],"isBlockCoverage":false},{"functionName":"strictContentLength","ranges":[{"startOffset":28081,"endOffset":28324,"count":0}],"isBlockCoverage":false},{"functionName":"write_","ranges":[{"startOffset":28328,"endOffset":30821,"count":0}],"isBlockCoverage":false},{"functionName":"connectionCorkNT","ranges":[{"startOffset":30827,"endOffset":30881,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":30925,"endOffset":32374,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":32379,"endOffset":32477,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":32513,"endOffset":34588,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":34767,"endOffset":34843,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":35659,"endOffset":36097,"count":0}],"isBlockCoverage":false},{"functionName":"_flushOutput","ranges":[{"startOffset":36143,"endOffset":36736,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":36784,"endOffset":36922,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":36960,"endOffset":37105,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":37166,"endOffset":37213,"count":0}],"isBlockCoverage":false}]},{"scriptId":"250","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1218,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":307,"endOffset":377,"count":0}],"isBlockCoverage":false},{"functionName":"cache","ranges":[{"startOffset":381,"endOffset":518,"count":0}],"isBlockCoverage":false},{"functionName":"resetCache","ranges":[{"startOffset":522,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"getNextTraceEventId","ranges":[{"startOffset":602,"endOffset":663,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceHTTPEnabled","ranges":[{"startOffset":729,"endOffset":793,"count":0}],"isBlockCoverage":false},{"functionName":"traceBegin","ranges":[{"startOffset":845,"endOffset":935,"count":0}],"isBlockCoverage":false},{"functionName":"traceEnd","ranges":[{"startOffset":939,"endOffset":1027,"count":0}],"isBlockCoverage":false}]},{"scriptId":"251","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29246,"count":1}],"isBlockCoverage":false},{"functionName":"emitErrorEvent","ranges":[{"startOffset":2936,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3279,"endOffset":3306,"count":0}],"isBlockCoverage":false},{"functionName":"validateHost","ranges":[{"startOffset":3561,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3900,"endOffset":3973,"count":0}],"isBlockCoverage":false},{"functionName":"ClientRequest","ranges":[{"startOffset":3980,"endOffset":11611,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":11779,"endOffset":12509,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":12556,"endOffset":12774,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":12811,"endOffset":12956,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":12995,"endOffset":13286,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":13291,"endOffset":13343,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":13347,"endOffset":13513,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":13517,"endOffset":14737,"count":0}],"isBlockCoverage":false},{"functionName":"socketErrorListener","ranges":[{"startOffset":14741,"endOffset":15406,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":15410,"endOffset":15918,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":15922,"endOffset":18318,"count":0}],"isBlockCoverage":false},{"functionName":"statusIsInformational","ranges":[{"startOffset":18322,"endOffset":18563,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":18578,"endOffset":21690,"count":0}],"isBlockCoverage":false},{"functionName":"responseKeepAlive","ranges":[{"startOffset":21705,"endOffset":22803,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":22807,"endOffset":23996,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnTimeout","ranges":[{"startOffset":24000,"endOffset":24157,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnFinish","ranges":[{"startOffset":24303,"endOffset":24428,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":24432,"endOffset":24562,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":24566,"endOffset":25751,"count":0}],"isBlockCoverage":false},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":25755,"endOffset":25868,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":25872,"endOffset":26277,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":26316,"endOffset":26491,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketNT","ranges":[{"startOffset":26496,"endOffset":27330,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":27394,"endOffset":28171,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":28212,"endOffset":28593,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":28598,"endOffset":28792,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":28833,"endOffset":28916,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":28971,"endOffset":29098,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":29142,"endOffset":29199,"count":0}],"isBlockCoverage":false}]},{"scriptId":"252","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6620,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2187,"endOffset":2281,"count":1}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":4464,"endOffset":4550,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4724,"endOffset":4830,"count":0}],"isBlockCoverage":false},{"functionName":"lazyUndici","ranges":[{"startOffset":5010,"endOffset":5097,"count":3}],"isBlockCoverage":true},{"functionName":"setMaxIdleHTTPParsers","ranges":[{"startOffset":5395,"endOffset":5489,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5621,"endOffset":5837,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5968,"endOffset":6015,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6020,"endOffset":6073,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6202,"endOffset":6250,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6380,"endOffset":6429,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6561,"endOffset":6612,"count":1}],"isBlockCoverage":true}]},{"scriptId":"253","url":"node:internal/deps/undici/undici","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611227,"count":1}],"isBlockCoverage":false},{"functionName":"__name","ranges":[{"startOffset":121,"endOffset":196,"count":320}],"isBlockCoverage":true},{"functionName":"__commonJS","ranges":[{"startOffset":216,"endOffset":357,"count":56}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":229,"endOffset":357,"count":193},{"startOffset":266,"endOffset":340,"count":55}],"isBlockCoverage":true},{"functionName":"lib/core/errors.js","ranges":[{"startOffset":422,"endOffset":9840,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":526,"endOffset":729,"count":1}],"isBlockCoverage":true},{"functionName":"UndiciError","ranges":[{"startOffset":598,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":788,"endOffset":1083,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectTimeoutError","ranges":[{"startOffset":868,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":1142,"endOffset":1437,"count":1}],"isBlockCoverage":true},{"functionName":"HeadersTimeoutError","ranges":[{"startOffset":1222,"endOffset":1430,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":1497,"endOffset":1796,"count":1}],"isBlockCoverage":true},{"functionName":"HeadersOverflowError","ranges":[{"startOffset":1578,"endOffset":1789,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":1852,"endOffset":2135,"count":1}],"isBlockCoverage":true},{"functionName":"BodyTimeoutError","ranges":[{"startOffset":1929,"endOffset":2128,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":2198,"endOffset":2672,"count":1}],"isBlockCoverage":true},{"functionName":"ResponseStatusCodeError","ranges":[{"startOffset":2282,"endOffset":2665,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":2732,"endOffset":3026,"count":1}],"isBlockCoverage":true},{"functionName":"InvalidArgumentError","ranges":[{"startOffset":2813,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":3089,"endOffset":3402,"count":1}],"isBlockCoverage":true},{"functionName":"InvalidReturnValueError","ranges":[{"startOffset":3173,"endOffset":3395,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":3452,"endOffset":3685,"count":1}],"isBlockCoverage":true},{"functionName":"AbortError","ranges":[{"startOffset":3523,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":3743,"endOffset":4015,"count":1}],"isBlockCoverage":true},{"functionName":"RequestAbortedError","ranges":[{"startOffset":3823,"endOffset":4008,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":4073,"endOffset":4353,"count":1}],"isBlockCoverage":true},{"functionName":"InformationalError","ranges":[{"startOffset":4152,"endOffset":4346,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":4426,"endOffset":4796,"count":1}],"isBlockCoverage":true},{"functionName":"RequestContentLengthMismatchError","ranges":[{"startOffset":4520,"endOffset":4789,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":4870,"endOffset":5243,"count":1}],"isBlockCoverage":true},{"functionName":"ResponseContentLengthMismatchError","ranges":[{"startOffset":4965,"endOffset":5236,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":5303,"endOffset":5596,"count":1}],"isBlockCoverage":true},{"functionName":"ClientDestroyedError","ranges":[{"startOffset":5384,"endOffset":5589,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":5653,"endOffset":5934,"count":1}],"isBlockCoverage":true},{"functionName":"ClientClosedError","ranges":[{"startOffset":5731,"endOffset":5927,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":5985,"endOffset":6285,"count":1}],"isBlockCoverage":true},{"functionName":"SocketError","ranges":[{"startOffset":6057,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":6342,"endOffset":6629,"count":1}],"isBlockCoverage":true},{"functionName":"NotSupportedError","ranges":[{"startOffset":6420,"endOffset":6622,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":6701,"endOffset":7040,"count":1}],"isBlockCoverage":true},{"functionName":"BalancedPoolMissingUpstreamError","ranges":[{"startOffset":6794,"endOffset":7033,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7089,"endOffset":7386,"count":1}],"isBlockCoverage":true},{"functionName":"HTTPParserError","ranges":[{"startOffset":7165,"endOffset":7379,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7454,"endOffset":7786,"count":1}],"isBlockCoverage":true},{"functionName":"ResponseExceededMaxSizeError","ranges":[{"startOffset":7543,"endOffset":7779,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7843,"endOffset":8244,"count":1}],"isBlockCoverage":true},{"functionName":"RequestRetryError","ranges":[{"startOffset":7921,"endOffset":8237,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":8297,"endOffset":8684,"count":1}],"isBlockCoverage":true},{"functionName":"ResponseError","ranges":[{"startOffset":8371,"endOffset":8677,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":8750,"endOffset":9134,"count":1}],"isBlockCoverage":true},{"functionName":"SecureProxyConnectionError","ranges":[{"startOffset":8837,"endOffset":9127,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/symbols.js","ranges":[{"startOffset":9911,"endOffset":12842,"count":1}],"isBlockCoverage":true},{"functionName":"lib/dispatcher/dispatcher.js","ranges":[{"startOffset":12925,"endOffset":14722,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":13093,"endOffset":14110,"count":1}],"isBlockCoverage":true},{"functionName":"dispatch","ranges":[{"startOffset":13164,"endOffset":13230,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13238,"endOffset":13301,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":13309,"endOffset":13374,"count":0}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":13382,"endOffset":14103,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":14167,"endOffset":14681,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14167,"endOffset":14681,"count":0}],"isBlockCoverage":true},{"functionName":"lib/dispatcher/dispatcher-base.js","ranges":[{"startOffset":14815,"endOffset":20296,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":15357,"endOffset":20251,"count":1}],"isBlockCoverage":true},{"functionName":"DispatcherBase","ranges":[{"startOffset":15432,"endOffset":15608,"count":1}],"isBlockCoverage":true},{"functionName":"get destroyed","ranges":[{"startOffset":15616,"endOffset":15676,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":15684,"endOffset":15738,"count":0}],"isBlockCoverage":false},{"functionName":"get interceptors","ranges":[{"startOffset":15746,"endOffset":15812,"count":0}],"isBlockCoverage":false},{"functionName":"set interceptors","ranges":[{"startOffset":15820,"endOffset":16243,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":16251,"endOffset":17454,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":17462,"endOffset":18886,"count":0}],"isBlockCoverage":false},{"functionName":"DispatcherBase","ranges":[{"startOffset":18894,"endOffset":19410,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":19418,"endOffset":20244,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher/fixed-queue.js","ranges":[{"startOffset":20381,"endOffset":21941,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":20541,"endOffset":21278,"count":1}],"isBlockCoverage":true},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":20621,"endOffset":20760,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":20768,"endOffset":20830,"count":0}],"isBlockCoverage":false},{"functionName":"isFull","ranges":[{"startOffset":20838,"endOffset":20913,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":20921,"endOffset":21021,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":21029,"endOffset":21271,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":21320,"endOffset":21935,"count":1}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":21391,"endOffset":21475,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":21483,"endOffset":21540,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":21548,"endOffset":21713,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":21721,"endOffset":21928,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher/pool-stats.js","ranges":[{"startOffset":22024,"endOffset":22814,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":22224,"endOffset":22774,"count":1}],"isBlockCoverage":true},{"functionName":"PoolStats","ranges":[{"startOffset":22294,"endOffset":22351,"count":0}],"isBlockCoverage":false},{"functionName":"get connected","ranges":[{"startOffset":22359,"endOffset":22426,"count":0}],"isBlockCoverage":false},{"functionName":"get free","ranges":[{"startOffset":22434,"endOffset":22491,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":22499,"endOffset":22562,"count":0}],"isBlockCoverage":false},{"functionName":"get queued","ranges":[{"startOffset":22570,"endOffset":22631,"count":0}],"isBlockCoverage":false},{"functionName":"get running","ranges":[{"startOffset":22639,"endOffset":22702,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":22710,"endOffset":22767,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher/pool-base.js","ranges":[{"startOffset":22895,"endOffset":28265,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":23825,"endOffset":28110,"count":1}],"isBlockCoverage":true},{"functionName":"PoolBase","ranges":[{"startOffset":23894,"endOffset":25322,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":25330,"endOffset":25388,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":25396,"endOffset":25503,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":25511,"endOffset":25636,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":25644,"endOffset":25829,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":25837,"endOffset":26010,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":26018,"endOffset":26191,"count":0}],"isBlockCoverage":false},{"functionName":"get stats","ranges":[{"startOffset":26199,"endOffset":26251,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":26259,"endOffset":26528,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":26536,"endOffset":26816,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":26824,"endOffset":27256,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":27264,"endOffset":27724,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":27732,"endOffset":28103,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/constants.js","ranges":[{"startOffset":28340,"endOffset":31341,"count":1},{"startOffset":30978,"endOffset":31178,"count":95}],"isBlockCoverage":true},{"functionName":"lib/core/tree.js","ranges":[{"startOffset":31406,"endOffset":35376,"count":1},{"startOffset":35190,"endOffset":35300,"count":95}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":31603,"endOffset":34479,"count":939}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":31603,"endOffset":34479,"count":1}],"isBlockCoverage":true},{"functionName":"_TstNode","ranges":[{"startOffset":32047,"endOffset":32514,"count":939},{"startOffset":32134,"endOffset":32193,"count":0},{"startOffset":32276,"endOffset":32348,"count":0},{"startOffset":32386,"endOffset":32456,"count":844},{"startOffset":32456,"endOffset":32505,"count":95}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":32603,"endOffset":33747,"count":94},{"startOffset":32684,"endOffset":32743,"count":0},{"startOffset":32816,"endOffset":33738,"count":1342},{"startOffset":32892,"endOffset":32968,"count":0},{"startOffset":33004,"endOffset":33318,"count":448},{"startOffset":33043,"endOffset":33116,"count":0},{"startOffset":33148,"endOffset":33199,"count":443},{"startOffset":33199,"endOffset":33305,"count":5},{"startOffset":33318,"endOffset":33727,"count":894},{"startOffset":33346,"endOffset":33551,"count":889},{"startOffset":33385,"endOffset":33434,"count":801},{"startOffset":33434,"endOffset":33538,"count":88},{"startOffset":33551,"endOffset":33727,"count":5},{"startOffset":33582,"endOffset":33628,"count":4},{"startOffset":33628,"endOffset":33727,"count":1}],"isBlockCoverage":true},{"functionName":"search","ranges":[{"startOffset":33846,"endOffset":34472,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":34516,"endOffset":35088,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":34516,"endOffset":35088,"count":1}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":34734,"endOffset":34916,"count":95},{"startOffset":34788,"endOffset":34851,"count":1},{"startOffset":34851,"endOffset":34907,"count":94}],"isBlockCoverage":true},{"functionName":"lookup","ranges":[{"startOffset":35004,"endOffset":35081,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/util.js","ranges":[{"startOffset":35441,"endOffset":55688,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36175,"endOffset":36191,"count":3}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":36229,"endOffset":36565,"count":1}],"isBlockCoverage":true},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":36307,"endOffset":36398,"count":0}],"isBlockCoverage":false},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":36406,"endOffset":36558,"count":0}],"isBlockCoverage":false},{"functionName":"wrapRequestBody","ranges":[{"startOffset":36572,"endOffset":37314,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":37369,"endOffset":37392,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":37423,"endOffset":37566,"count":0}],"isBlockCoverage":false},{"functionName":"isBlobLike","ranges":[{"startOffset":37607,"endOffset":38097,"count":0}],"isBlockCoverage":false},{"functionName":"buildURL","ranges":[{"startOffset":38142,"endOffset":38485,"count":0}],"isBlockCoverage":false},{"functionName":"isValidPort","ranges":[{"startOffset":38526,"endOffset":38672,"count":0}],"isBlockCoverage":false},{"functionName":"isHttpOrHttpsPrefixed","ranges":[{"startOffset":38719,"endOffset":38936,"count":0}],"isBlockCoverage":false},{"functionName":"parseURL","ranges":[{"startOffset":39003,"endOffset":41465,"count":0}],"isBlockCoverage":false},{"functionName":"parseOrigin","ranges":[{"startOffset":41506,"endOffset":41713,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":41760,"endOffset":42067,"count":0}],"isBlockCoverage":false},{"functionName":"getServerName","ranges":[{"startOffset":42114,"endOffset":42378,"count":0}],"isBlockCoverage":false},{"functionName":"deepClone","ranges":[{"startOffset":42429,"endOffset":42508,"count":1}],"isBlockCoverage":true},{"functionName":"isAsyncIterable","ranges":[{"startOffset":42551,"endOffset":42671,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":42726,"endOffset":42889,"count":0}],"isBlockCoverage":false},{"functionName":"bodyLength","ranges":[{"startOffset":42934,"endOffset":43416,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":43461,"endOffset":43588,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":43635,"endOffset":44188,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeepAliveTimeout","ranges":[{"startOffset":44278,"endOffset":44436,"count":0}],"isBlockCoverage":false},{"functionName":"headerNameToString","ranges":[{"startOffset":44503,"endOffset":44709,"count":0}],"isBlockCoverage":false},{"functionName":"bufferToLowerCasedHeaderName","ranges":[{"startOffset":44770,"endOffset":44899,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaders","ranges":[{"startOffset":44980,"endOffset":45924,"count":0}],"isBlockCoverage":false},{"functionName":"parseRawHeaders","ranges":[{"startOffset":45973,"endOffset":47069,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":47124,"endOffset":47229,"count":0}],"isBlockCoverage":false},{"functionName":"validateHandler","ranges":[{"startOffset":47270,"endOffset":48508,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":48563,"endOffset":48671,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":48718,"endOffset":48801,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":48844,"endOffset":48929,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketInfo","ranges":[{"startOffset":48974,"endOffset":49366,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamFrom","ranges":[{"startOffset":49417,"endOffset":50319,"count":0}],"isBlockCoverage":false},{"functionName":"isFormDataLike","ranges":[{"startOffset":50380,"endOffset":50742,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortListener","ranges":[{"startOffset":50795,"endOffset":51145,"count":0}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":51362,"endOffset":51481,"count":0}],"isBlockCoverage":false},{"functionName":"isUSVString","ranges":[{"startOffset":51528,"endOffset":51651,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenCharCode","ranges":[{"startOffset":51698,"endOffset":52153,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHTTPToken","ranges":[{"startOffset":52208,"endOffset":52501,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHeaderValue","ranges":[{"startOffset":52612,"endOffset":52709,"count":0}],"isBlockCoverage":false},{"functionName":"parseRangeHeader","ranges":[{"startOffset":52770,"endOffset":53139,"count":0}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":53196,"endOffset":53386,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":53433,"endOffset":53622,"count":0}],"isBlockCoverage":false},{"functionName":"errorRequest","ranges":[{"startOffset":53683,"endOffset":53883,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/diagnostics.js","ranges":[{"startOffset":55767,"endOffset":62371,"count":1},{"startOffset":57272,"endOffset":59707,"count":0},{"startOffset":59744,"endOffset":62317,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57429,"endOffset":57703,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":57777,"endOffset":58050,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58127,"endOffset":58458,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58534,"endOffset":58705,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58778,"endOffset":59076,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59150,"endOffset":59325,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59396,"endOffset":59671,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59937,"endOffset":60240,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60316,"endOffset":60618,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60697,"endOffset":61061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61139,"endOffset":61320,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61401,"endOffset":61580,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61653,"endOffset":61869,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61949,"endOffset":62036,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":62108,"endOffset":62172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":62244,"endOffset":62308,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/request.js","ranges":[{"startOffset":62442,"endOffset":74470,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":63153,"endOffset":71578,"count":1}],"isBlockCoverage":true},{"functionName":"Request","ranges":[{"startOffset":63221,"endOffset":68624,"count":0}],"isBlockCoverage":false},{"functionName":"onBodySent","ranges":[{"startOffset":68632,"endOffset":68854,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestSent","ranges":[{"startOffset":68862,"endOffset":69200,"count":0}],"isBlockCoverage":false},{"functionName":"onConnect","ranges":[{"startOffset":69208,"endOffset":69469,"count":0}],"isBlockCoverage":false},{"functionName":"onResponseStarted","ranges":[{"startOffset":69477,"endOffset":69561,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaders","ranges":[{"startOffset":69569,"endOffset":70022,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":70030,"endOffset":70272,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":70280,"endOffset":70466,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":70474,"endOffset":70859,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":70867,"endOffset":71173,"count":0}],"isBlockCoverage":false},{"functionName":"onFinally","ranges":[{"startOffset":71181,"endOffset":71467,"count":0}],"isBlockCoverage":false},{"functionName":"addHeader","ranges":[{"startOffset":71475,"endOffset":71571,"count":0}],"isBlockCoverage":false},{"functionName":"processHeader","ranges":[{"startOffset":71585,"endOffset":74388,"count":0}],"isBlockCoverage":false},{"functionName":"lib/util/timers.js","ranges":[{"startOffset":74539,"endOffset":81828,"count":1}],"isBlockCoverage":true},{"functionName":"onTick","ranges":[{"startOffset":74896,"endOffset":75766,"count":0}],"isBlockCoverage":false},{"functionName":"refreshTimeout","ranges":[{"startOffset":75803,"endOffset":76103,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":76178,"endOffset":78656,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":76178,"endOffset":78656,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":79229,"endOffset":79385,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":79594,"endOffset":79753,"count":0}],"isBlockCoverage":false},{"functionName":"setFastTimeout","ranges":[{"startOffset":80294,"endOffset":80394,"count":0}],"isBlockCoverage":false},{"functionName":"clearFastTimeout","ranges":[{"startOffset":80596,"endOffset":80658,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":80804,"endOffset":80845,"count":0}],"isBlockCoverage":false},{"functionName":"tick","ranges":[{"startOffset":81176,"endOffset":81287,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":81488,"endOffset":81631,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/connect.js","ranges":[{"startOffset":81899,"endOffset":88908,"count":1},{"startOffset":82347,"endOffset":82374,"count":0},{"startOffset":82377,"endOffset":83465,"count":0},{"startOffset":87917,"endOffset":88325,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":82187,"endOffset":82211,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":82424,"endOffset":83457,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":83520,"endOffset":84260,"count":1}],"isBlockCoverage":true},{"functionName":"SimpleSessionCache","ranges":[{"startOffset":83607,"endOffset":83765,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":83775,"endOffset":83857,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":83867,"endOffset":84251,"count":0}],"isBlockCoverage":false},{"functionName":"buildConnector","ranges":[{"startOffset":84274,"endOffset":87324,"count":0}],"isBlockCoverage":false},{"functionName":"process.platform.s1","ranges":[{"startOffset":87434,"endOffset":87916,"count":0}],"isBlockCoverage":false},{"functionName":"setupConnectTimeout","ranges":[{"startOffset":87919,"endOffset":88325,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectTimeout","ranges":[{"startOffset":88332,"endOffset":88813,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/utils.js","ranges":[{"startOffset":88977,"endOffset":89460,"count":1}],"isBlockCoverage":true},{"functionName":"enumToMap","ranges":[{"startOffset":89138,"endOffset":89381,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89219,"endOffset":89353,"count":92},{"startOffset":89303,"endOffset":89344,"count":46}],"isBlockCoverage":true},{"functionName":"lib/llhttp/constants.js","ranges":[{"startOffset":89538,"endOffset":101316,"count":1},{"startOffset":97848,"endOffset":97965,"count":26},{"startOffset":99397,"endOffset":99439,"count":128},{"startOffset":99919,"endOffset":100000,"count":224},{"startOffset":99943,"endOffset":99993,"count":223}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":90342,"endOffset":92018,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92091,"endOffset":92255,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92326,"endOffset":92914,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92996,"endOffset":93247,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93347,"endOffset":95828,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":97372,"endOffset":97491,"count":46},{"startOffset":97410,"endOffset":97484,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":97517,"endOffset":97701,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100069,"endOffset":100084,"count":224}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100194,"endOffset":100946,"count":1}],"isBlockCoverage":true},{"functionName":"lib/llhttp/llhttp-wasm.js","ranges":[{"startOffset":101397,"endOffset":166395,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/llhttp_simd-wasm.js","ranges":[{"startOffset":166486,"endOffset":231529,"count":1}],"isBlockCoverage":true},{"functionName":"lib/web/fetch/constants.js","ranges":[{"startOffset":231610,"endOffset":235357,"count":1}],"isBlockCoverage":true},{"functionName":"lib/web/fetch/global.js","ranges":[{"startOffset":235431,"endOffset":236529,"count":1}],"isBlockCoverage":true},{"functionName":"getGlobalOrigin","ranges":[{"startOffset":235563,"endOffset":235638,"count":0}],"isBlockCoverage":false},{"functionName":"setGlobalOrigin","ranges":[{"startOffset":235693,"endOffset":236395,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/fetch/data-url.js","ranges":[{"startOffset":236607,"endOffset":249863,"count":1}],"isBlockCoverage":true},{"functionName":"dataURLProcessor","ranges":[{"startOffset":237046,"endOffset":238399,"count":0}],"isBlockCoverage":false},{"functionName":"URLSerializer","ranges":[{"startOffset":238456,"endOffset":238877,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePoints","ranges":[{"startOffset":238928,"endOffset":239221,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePointsFast","ranges":[{"startOffset":239302,"endOffset":239672,"count":0}],"isBlockCoverage":false},{"functionName":"stringPercentDecode","ranges":[{"startOffset":239761,"endOffset":239885,"count":0}],"isBlockCoverage":false},{"functionName":"isHexCharByte","ranges":[{"startOffset":239948,"endOffset":240082,"count":0}],"isBlockCoverage":false},{"functionName":"hexByteToNumber","ranges":[{"startOffset":240133,"endOffset":240280,"count":0}],"isBlockCoverage":false},{"functionName":"percentDecode","ranges":[{"startOffset":240335,"endOffset":240946,"count":0}],"isBlockCoverage":false},{"functionName":"parseMIMEType","ranges":[{"startOffset":240997,"endOffset":243854,"count":0}],"isBlockCoverage":false},{"functionName":"forgivingBase64","ranges":[{"startOffset":243905,"endOffset":244621,"count":0}],"isBlockCoverage":false},{"functionName":"collectAnHTTPQuotedString","ranges":[{"startOffset":244676,"endOffset":245693,"count":0}],"isBlockCoverage":false},{"functionName":"serializeAMimeType","ranges":[{"startOffset":245768,"endOffset":246332,"count":0}],"isBlockCoverage":false},{"functionName":"isHTTPWhiteSpace","ranges":[{"startOffset":246393,"endOffset":246504,"count":0}],"isBlockCoverage":false},{"functionName":"removeHTTPWhitespace","ranges":[{"startOffset":246561,"endOffset":246706,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIWhitespace","ranges":[{"startOffset":246771,"endOffset":246898,"count":0}],"isBlockCoverage":false},{"functionName":"removeASCIIWhitespace","ranges":[{"startOffset":246957,"endOffset":247104,"count":0}],"isBlockCoverage":false},{"functionName":"removeChars","ranges":[{"startOffset":247171,"endOffset":247615,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicDecode","ranges":[{"startOffset":247662,"endOffset":248148,"count":0}],"isBlockCoverage":false},{"functionName":"minimizeSupportedMimeType","ranges":[{"startOffset":248205,"endOffset":249383,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/fetch/webidl.js","ranges":[{"startOffset":249937,"endOffset":264698,"count":1}],"isBlockCoverage":true},{"functionName":"webidl.errors.exception","ranges":[{"startOffset":250228,"endOffset":250324,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.conversionFailed","ranges":[{"startOffset":250364,"endOffset":250669,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.invalidArgument","ranges":[{"startOffset":250708,"endOffset":250888,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.brandCheck","ranges":[{"startOffset":250915,"endOffset":251386,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.argumentLengthCheck","ranges":[{"startOffset":251422,"endOffset":251691,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.illegalConstructor","ranges":[{"startOffset":251726,"endOffset":251865,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.Type","ranges":[{"startOffset":251891,"endOffset":252428,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.ConvertToInt","ranges":[{"startOffset":252462,"endOffset":254402,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.IntegerPart","ranges":[{"startOffset":254435,"endOffset":254567,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.Stringify","ranges":[{"startOffset":254598,"endOffset":254911,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.sequenceConverter","ranges":[{"startOffset":254945,"endOffset":255867,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":254981,"endOffset":255859,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.recordConverter","ranges":[{"startOffset":255899,"endOffset":257068,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":255954,"endOffset":257060,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.interfaceConverter","ranges":[{"startOffset":257103,"endOffset":257466,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":257131,"endOffset":257458,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.dictionaryConverter","ranges":[{"startOffset":257502,"endOffset":259094,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":257539,"endOffset":259086,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.nullableConverter","ranges":[{"startOffset":259128,"endOffset":259314,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":259164,"endOffset":259306,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DOMString","ranges":[{"startOffset":259351,"endOffset":259722,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.ByteString","ranges":[{"startOffset":259760,"endOffset":260206,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.boolean","ranges":[{"startOffset":260289,"endOffset":260355,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.any","ranges":[{"startOffset":260386,"endOffset":260423,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.long long","ranges":[{"startOffset":260463,"endOffset":260604,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long long","ranges":[{"startOffset":260653,"endOffset":260796,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long","ranges":[{"startOffset":260840,"endOffset":260983,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned short","ranges":[{"startOffset":261028,"endOffset":261175,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.ArrayBuffer","ranges":[{"startOffset":261214,"endOffset":261963,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.TypedArray","ranges":[{"startOffset":262001,"endOffset":262788,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DataView","ranges":[{"startOffset":262824,"endOffset":263532,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BufferSource","ranges":[{"startOffset":263572,"endOffset":264220,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/fetch/util.js","ranges":[{"startOffset":264769,"endOffset":298726,"count":1},{"startOffset":265790,"endOffset":265804,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":265733,"endOffset":265780,"count":52}],"isBlockCoverage":true},{"functionName":"responseURL","ranges":[{"startOffset":265810,"endOffset":265996,"count":0}],"isBlockCoverage":false},{"functionName":"responseLocationURL","ranges":[{"startOffset":266043,"endOffset":266626,"count":0}],"isBlockCoverage":false},{"functionName":"isValidEncodedURL","ranges":[{"startOffset":266689,"endOffset":266952,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeBinaryStringToUtf8","ranges":[{"startOffset":267011,"endOffset":267124,"count":0}],"isBlockCoverage":false},{"functionName":"requestCurrentURL","ranges":[{"startOffset":267203,"endOffset":267306,"count":0}],"isBlockCoverage":false},{"functionName":"requestBadPort","ranges":[{"startOffset":267365,"endOffset":267583,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorLike","ranges":[{"startOffset":267636,"endOffset":267803,"count":0}],"isBlockCoverage":false},{"functionName":"isValidReasonPhrase","ranges":[{"startOffset":267850,"endOffset":268176,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHeaderValue","ranges":[{"startOffset":268286,"endOffset":268625,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestReferrerPolicyOnRedirect","ranges":[{"startOffset":268686,"endOffset":269284,"count":0}],"isBlockCoverage":false},{"functionName":"crossOriginResourcePolicyCheck","ranges":[{"startOffset":269377,"endOffset":269452,"count":0}],"isBlockCoverage":false},{"functionName":"corsCheck","ranges":[{"startOffset":269537,"endOffset":269591,"count":0}],"isBlockCoverage":false},{"functionName":"TAOCheck","ranges":[{"startOffset":269634,"endOffset":269687,"count":0}],"isBlockCoverage":false},{"functionName":"appendFetchMetadata","ranges":[{"startOffset":269728,"endOffset":269906,"count":0}],"isBlockCoverage":false},{"functionName":"appendRequestOriginHeader","ranges":[{"startOffset":269969,"endOffset":271141,"count":0}],"isBlockCoverage":false},{"functionName":"coarsenTime","ranges":[{"startOffset":271216,"endOffset":271312,"count":0}],"isBlockCoverage":false},{"functionName":"clampAndCoarsenConnectionTimingInfo","ranges":[{"startOffset":271359,"endOffset":272653,"count":0}],"isBlockCoverage":false},{"functionName":"coarsenedSharedCurrentTime","ranges":[{"startOffset":272748,"endOffset":272901,"count":0}],"isBlockCoverage":false},{"functionName":"createOpaqueTimingInfo","ranges":[{"startOffset":272978,"endOffset":273468,"count":0}],"isBlockCoverage":false},{"functionName":"makePolicyContainer","ranges":[{"startOffset":273537,"endOffset":273661,"count":1}],"isBlockCoverage":true},{"functionName":"clonePolicyContainer","ranges":[{"startOffset":273724,"endOffset":273861,"count":0}],"isBlockCoverage":false},{"functionName":"determineRequestsReferrer","ranges":[{"startOffset":273926,"endOffset":275863,"count":0}],"isBlockCoverage":false},{"functionName":"stripURLForReferrer","ranges":[{"startOffset":275938,"endOffset":276372,"count":0}],"isBlockCoverage":false},{"functionName":"isURLPotentiallyTrustworthy","ranges":[{"startOffset":276435,"endOffset":277511,"count":0}],"isBlockCoverage":false},{"functionName":"bytesMatch","ranges":[{"startOffset":277590,"endOffset":278663,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetadata","ranges":[{"startOffset":278841,"endOffset":279483,"count":0}],"isBlockCoverage":false},{"functionName":"getStrongestMetadata","ranges":[{"startOffset":279534,"endOffset":280083,"count":0}],"isBlockCoverage":false},{"functionName":"filterMetadataListByAlgorithm","ranges":[{"startOffset":280148,"endOffset":280557,"count":0}],"isBlockCoverage":false},{"functionName":"compareBase64Mixed","ranges":[{"startOffset":280640,"endOffset":281124,"count":0}],"isBlockCoverage":false},{"functionName":"tryUpgradeRequestToAPotentiallyTrustworthyURL","ranges":[{"startOffset":281185,"endOffset":281257,"count":0}],"isBlockCoverage":false},{"functionName":"sameOrigin","ranges":[{"startOffset":281372,"endOffset":281638,"count":0}],"isBlockCoverage":false},{"functionName":"createDeferredPromise","ranges":[{"startOffset":281683,"endOffset":281926,"count":0}],"isBlockCoverage":false},{"functionName":"isAborted","ranges":[{"startOffset":281993,"endOffset":282091,"count":0}],"isBlockCoverage":false},{"functionName":"isCancelled","ranges":[{"startOffset":282134,"endOffset":282283,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeMethod","ranges":[{"startOffset":282330,"endOffset":282446,"count":0}],"isBlockCoverage":false},{"functionName":"serializeJavascriptValueToJSONString","ranges":[{"startOffset":282501,"endOffset":282777,"count":0}],"isBlockCoverage":false},{"functionName":"createIterator","ranges":[{"startOffset":282974,"endOffset":285305,"count":2}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":283089,"endOffset":284733,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":283089,"endOffset":284733,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":285208,"endOffset":285297,"count":0}],"isBlockCoverage":false},{"functionName":"iteratorMixin","ranges":[{"startOffset":285358,"endOffset":287475,"count":2}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":285710,"endOffset":285833,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":286002,"endOffset":286129,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":286301,"endOffset":286433,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":286606,"endOffset":287170,"count":0}],"isBlockCoverage":false},{"functionName":"fullyReadBody","ranges":[{"startOffset":287526,"endOffset":287949,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLike","ranges":[{"startOffset":288000,"endOffset":288181,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":288246,"endOffset":288578,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicEncode","ranges":[{"startOffset":288702,"endOffset":288827,"count":0}],"isBlockCoverage":false},{"functionName":"readAllBytes","ranges":[{"startOffset":288884,"endOffset":289334,"count":0}],"isBlockCoverage":false},{"functionName":"urlIsLocal","ranges":[{"startOffset":289383,"endOffset":289573,"count":0}],"isBlockCoverage":false},{"functionName":"urlHasHttpsScheme","ranges":[{"startOffset":289618,"endOffset":289834,"count":0}],"isBlockCoverage":false},{"functionName":"urlIsHttpHttpsScheme","ranges":[{"startOffset":289893,"endOffset":290069,"count":0}],"isBlockCoverage":false},{"functionName":"simpleRangeHeaderValue","ranges":[{"startOffset":290134,"endOffset":292197,"count":0}],"isBlockCoverage":false},{"functionName":"buildContentRange","ranges":[{"startOffset":292266,"endOffset":292627,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":292730,"endOffset":293765,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":292730,"endOffset":293765,"count":0}],"isBlockCoverage":true},{"functionName":"createInflate","ranges":[{"startOffset":293772,"endOffset":293862,"count":0}],"isBlockCoverage":false},{"functionName":"extractMimeType","ranges":[{"startOffset":293913,"endOffset":294900,"count":0}],"isBlockCoverage":false},{"functionName":"gettingDecodingSplitting","ranges":[{"startOffset":294955,"endOffset":296008,"count":0}],"isBlockCoverage":false},{"functionName":"getDecodeSplit","ranges":[{"startOffset":296081,"endOffset":296275,"count":0}],"isBlockCoverage":false},{"functionName":"utf8DecodeBytes","ranges":[{"startOffset":296370,"endOffset":296667,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":296764,"endOffset":297037,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":296764,"endOffset":297037,"count":1}],"isBlockCoverage":true},{"functionName":"get baseUrl","ranges":[{"startOffset":296854,"endOffset":296913,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":296921,"endOffset":296982,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":297082,"endOffset":297228,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":297082,"endOffset":297228,"count":1}],"isBlockCoverage":true},{"functionName":"lib/web/fetch/symbols.js","ranges":[{"startOffset":298803,"endOffset":299078,"count":1}],"isBlockCoverage":true},{"functionName":"lib/web/fetch/file.js","ranges":[{"startOffset":299148,"endOffset":301215,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":299387,"endOffset":300841,"count":1}],"isBlockCoverage":true},{"functionName":"_FileLike","ranges":[{"startOffset":299456,"endOffset":299755,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":299763,"endOffset":299889,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":299897,"endOffset":300033,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":300041,"endOffset":300165,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":300173,"endOffset":300295,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":300303,"endOffset":300413,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":300421,"endOffset":300531,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":300539,"endOffset":300640,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":300648,"endOffset":300765,"count":0}],"isBlockCoverage":false},{"functionName":"FileLike","ranges":[{"startOffset":300773,"endOffset":300834,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLike","ranges":[{"startOffset":300912,"endOffset":301122,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/fetch/formdata.js","ranges":[{"startOffset":301293,"endOffset":307340,"count":1},{"startOffset":301734,"endOffset":301747,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":301785,"endOffset":306182,"count":1}],"isBlockCoverage":true},{"functionName":"_FormData","ranges":[{"startOffset":301854,"endOffset":302134,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":302142,"endOffset":302977,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":302985,"endOffset":303299,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":303307,"endOffset":303718,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":303726,"endOffset":304060,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":304068,"endOffset":304378,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":304386,"endOffset":305534,"count":0}],"isBlockCoverage":false},{"functionName":"FormData","ranges":[{"startOffset":305542,"endOffset":306175,"count":0}],"isBlockCoverage":false},{"functionName":"makeEntry","ranges":[{"startOffset":306619,"endOffset":307250,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/fetch/formdata-parser.js","ranges":[{"startOffset":307432,"endOffset":317032,"count":1},{"startOffset":307918,"endOffset":307929,"count":0}],"isBlockCoverage":true},{"functionName":"isAsciiString","ranges":[{"startOffset":308127,"endOffset":308329,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoundary","ranges":[{"startOffset":308380,"endOffset":308815,"count":0}],"isBlockCoverage":false},{"functionName":"multipartFormDataParser","ranges":[{"startOffset":308872,"endOffset":311680,"count":0}],"isBlockCoverage":false},{"functionName":"parseMultipartFormDataHeaders","ranges":[{"startOffset":311751,"endOffset":315085,"count":0}],"isBlockCoverage":false},{"functionName":"parseMultipartFormDataName","ranges":[{"startOffset":315168,"endOffset":315686,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfBytes","ranges":[{"startOffset":315763,"endOffset":316038,"count":0}],"isBlockCoverage":false},{"functionName":"removeChars","ranges":[{"startOffset":316109,"endOffset":316534,"count":0}],"isBlockCoverage":false},{"functionName":"bufferStartsWith","ranges":[{"startOffset":316581,"endOffset":316887,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/fetch/body.js","ranges":[{"startOffset":317102,"endOffset":328762,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":317942,"endOffset":317966,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":318212,"endOffset":318458,"count":0}],"isBlockCoverage":false},{"functionName":"extractBody","ranges":[{"startOffset":318473,"endOffset":323590,"count":0}],"isBlockCoverage":false},{"functionName":"safelyExtractBody","ranges":[{"startOffset":323637,"endOffset":323942,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBody","ranges":[{"startOffset":324001,"endOffset":324336,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":324379,"endOffset":324532,"count":0}],"isBlockCoverage":false},{"functionName":"bodyMixinMethods","ranges":[{"startOffset":324585,"endOffset":326762,"count":2}],"isBlockCoverage":true},{"functionName":"blob","ranges":[{"startOffset":324657,"endOffset":325033,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":325044,"endOffset":325194,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":325205,"endOffset":325288,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":325299,"endOffset":325385,"count":0}],"isBlockCoverage":false},{"functionName":"formData","ranges":[{"startOffset":325396,"endOffset":326574,"count":0}],"isBlockCoverage":false},{"functionName":"bytes","ranges":[{"startOffset":326585,"endOffset":326722,"count":0}],"isBlockCoverage":false},{"functionName":"mixinBody","ranges":[{"startOffset":326819,"endOffset":326929,"count":2}],"isBlockCoverage":true},{"functionName":"consumeBody","ranges":[{"startOffset":326972,"endOffset":327857,"count":0}],"isBlockCoverage":false},{"functionName":"bodyUnusable","ranges":[{"startOffset":327904,"endOffset":328068,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSONFromBytes","ranges":[{"startOffset":328117,"endOffset":328210,"count":0}],"isBlockCoverage":false},{"functionName":"bodyMimeType","ranges":[{"startOffset":328271,"endOffset":328524,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher/client-h1.js","ranges":[{"startOffset":328843,"endOffset":366349,"count":1}],"isBlockCoverage":true},{"functionName":"lazyllhttp","ranges":[{"startOffset":330325,"endOffset":332664,"count":1},{"startOffset":330412,"endOffset":330435,"count":0},{"startOffset":330554,"endOffset":330657,"count":0}],"isBlockCoverage":true},{"functionName":"wasm_on_url","ranges":[{"startOffset":330791,"endOffset":330844,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_status","ranges":[{"startOffset":330873,"endOffset":331131,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_message_begin","ranges":[{"startOffset":331167,"endOffset":331291,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_header_field","ranges":[{"startOffset":331326,"endOffset":331589,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_header_value","ranges":[{"startOffset":331624,"endOffset":331887,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_headers_complete","ranges":[{"startOffset":331926,"endOffset":332145,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_body","ranges":[{"startOffset":332172,"endOffset":332428,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_message_complete","ranges":[{"startOffset":332467,"endOffset":332594,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":333161,"endOffset":346379,"count":1}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":333228,"endOffset":334152,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":334160,"endOffset":334967,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":334975,"endOffset":335492,"count":0}],"isBlockCoverage":false},{"functionName":"readMore","ranges":[{"startOffset":335500,"endOffset":335719,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":335727,"endOffset":337560,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":337568,"endOffset":337922,"count":0}],"isBlockCoverage":false},{"functionName":"onStatus","ranges":[{"startOffset":337930,"endOffset":337997,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageBegin","ranges":[{"startOffset":338005,"endOffset":338298,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaderField","ranges":[{"startOffset":338306,"endOffset":338592,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaderValue","ranges":[{"startOffset":338600,"endOffset":339424,"count":0}],"isBlockCoverage":false},{"functionName":"trackHeader","ranges":[{"startOffset":339432,"endOffset":339626,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":339634,"endOffset":340829,"count":0}],"isBlockCoverage":false},{"functionName":"onHeadersComplete","ranges":[{"startOffset":340837,"endOffset":343783,"count":0}],"isBlockCoverage":false},{"functionName":"onBody","ranges":[{"startOffset":343791,"endOffset":344581,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageComplete","ranges":[{"startOffset":344589,"endOffset":346372,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":346386,"endOffset":347135,"count":0}],"isBlockCoverage":false},{"functionName":"connectH1","ranges":[{"startOffset":347190,"endOffset":351060,"count":0}],"isBlockCoverage":false},{"functionName":"resumeH1","ranges":[{"startOffset":351103,"endOffset":352154,"count":0}],"isBlockCoverage":false},{"functionName":"shouldSendContentLength","ranges":[{"startOffset":352195,"endOffset":352367,"count":0}],"isBlockCoverage":false},{"functionName":"writeH1","ranges":[{"startOffset":352438,"endOffset":356967,"count":0}],"isBlockCoverage":false},{"functionName":"writeStream","ranges":[{"startOffset":357006,"endOffset":359484,"count":0}],"isBlockCoverage":false},{"functionName":"writeBuffer","ranges":[{"startOffset":359531,"endOffset":360513,"count":0}],"isBlockCoverage":false},{"functionName":"writeBlob","ranges":[{"startOffset":360560,"endOffset":361362,"count":0}],"isBlockCoverage":false},{"functionName":"writeIterable","ranges":[{"startOffset":361405,"endOffset":362684,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":362759,"endOffset":366309,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncWriter","ranges":[{"startOffset":362831,"endOffset":363241,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":363249,"endOffset":364832,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":364840,"endOffset":366046,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":366054,"endOffset":366302,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher/client-h2.js","ranges":[{"startOffset":366430,"endOffset":383430,"count":1},{"startOffset":367251,"endOffset":367299,"count":0}],"isBlockCoverage":true},{"functionName":"parseH2Headers","ranges":[{"startOffset":367579,"endOffset":367992,"count":0}],"isBlockCoverage":false},{"functionName":"connectH2","ranges":[{"startOffset":368045,"endOffset":371069,"count":0}],"isBlockCoverage":false},{"functionName":"onHttp2SessionError","ranges":[{"startOffset":371112,"endOffset":371287,"count":0}],"isBlockCoverage":false},{"functionName":"onHttp2FrameError","ranges":[{"startOffset":371350,"endOffset":371617,"count":0}],"isBlockCoverage":false},{"functionName":"onHttp2SessionEnd","ranges":[{"startOffset":371676,"endOffset":371872,"count":0}],"isBlockCoverage":false},{"functionName":"onHTTP2GoAway","ranges":[{"startOffset":371931,"endOffset":372200,"count":0}],"isBlockCoverage":false},{"functionName":"shouldSendContentLength","ranges":[{"startOffset":372251,"endOffset":372423,"count":0}],"isBlockCoverage":false},{"functionName":"writeH2","ranges":[{"startOffset":372494,"endOffset":379617,"count":0}],"isBlockCoverage":false},{"functionName":"writeBuffer","ranges":[{"startOffset":379656,"endOffset":380285,"count":0}],"isBlockCoverage":false},{"functionName":"writeStream","ranges":[{"startOffset":380332,"endOffset":381136,"count":0}],"isBlockCoverage":false},{"functionName":"writeBlob","ranges":[{"startOffset":381183,"endOffset":381932,"count":0}],"isBlockCoverage":false},{"functionName":"writeIterable","ranges":[{"startOffset":381975,"endOffset":383346,"count":0}],"isBlockCoverage":false},{"functionName":"lib/handler/redirect-handler.js","ranges":[{"startOffset":383522,"endOffset":389993,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":383941,"endOffset":384277,"count":1}],"isBlockCoverage":true},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":384019,"endOffset":384110,"count":0}],"isBlockCoverage":false},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":384118,"endOffset":384270,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":384312,"endOffset":388131,"count":1}],"isBlockCoverage":true},{"functionName":"RedirectHandler","ranges":[{"startOffset":384388,"endOffset":385878,"count":0}],"isBlockCoverage":false},{"functionName":"onConnect","ranges":[{"startOffset":385886,"endOffset":386009,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":386017,"endOffset":386128,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":386136,"endOffset":386199,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaders","ranges":[{"startOffset":386207,"endOffset":387607,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":387615,"endOffset":387744,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":387752,"endOffset":387994,"count":0}],"isBlockCoverage":false},{"functionName":"onBodySent","ranges":[{"startOffset":388002,"endOffset":388124,"count":0}],"isBlockCoverage":false},{"functionName":"parseLocation","ranges":[{"startOffset":388138,"endOffset":388487,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRemoveHeader","ranges":[{"startOffset":388538,"endOffset":389115,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRequestHeaders","ranges":[{"startOffset":389176,"endOffset":389891,"count":0}],"isBlockCoverage":false},{"functionName":"lib/interceptor/redirect-interceptor.js","ranges":[{"startOffset":390097,"endOffset":390955,"count":1}],"isBlockCoverage":true},{"functionName":"createRedirectInterceptor","ranges":[{"startOffset":390239,"endOffset":390831,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":390335,"endOffset":390823,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher/client.js","ranges":[{"startOffset":391030,"endOffset":409714,"count":1}],"isBlockCoverage":true},{"functionName":"getPipelining","ranges":[{"startOffset":392600,"endOffset":392722,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":392815,"endOffset":402893,"count":1}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":393022,"endOffset":400329,"count":0}],"isBlockCoverage":false},{"functionName":"get pipelining","ranges":[{"startOffset":400337,"endOffset":400399,"count":0}],"isBlockCoverage":false},{"functionName":"set pipelining","ranges":[{"startOffset":400407,"endOffset":400505,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":400513,"endOffset":400597,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":400605,"endOffset":400687,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":400695,"endOffset":400776,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":400784,"endOffset":400906,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":400914,"endOffset":401084,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":401141,"endOffset":401225,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":401233,"endOffset":401847,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":401855,"endOffset":402074,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":402082,"endOffset":402886,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":402969,"endOffset":403443,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":403482,"endOffset":407113,"count":0}],"isBlockCoverage":false},{"functionName":"emitDrain","ranges":[{"startOffset":407152,"endOffset":407271,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":407314,"endOffset":407698,"count":0}],"isBlockCoverage":false},{"functionName":"_resume","ranges":[{"startOffset":407735,"endOffset":409645,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher/pool.js","ranges":[{"startOffset":409785,"endOffset":412682,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":410348,"endOffset":410434,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":410521,"endOffset":412647,"count":1}],"isBlockCoverage":true},{"functionName":"Pool","ranges":[{"startOffset":410586,"endOffset":412227,"count":0}],"isBlockCoverage":false},{"functionName":"Pool","ranges":[{"startOffset":412235,"endOffset":412640,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher/agent.js","ranges":[{"startOffset":412755,"endOffset":417056,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":413522,"endOffset":413666,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":413760,"endOffset":417020,"count":1}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":413826,"endOffset":415570,"count":1},{"startOffset":413979,"endOffset":414065,"count":0},{"startOffset":414095,"endOffset":414127,"count":0},{"startOffset":414128,"endOffset":414158,"count":0},{"startOffset":414160,"endOffset":414258,"count":0},{"startOffset":414331,"endOffset":414431,"count":0},{"startOffset":414453,"endOffset":414485,"count":0},{"startOffset":414487,"endOffset":414536,"count":0},{"startOffset":414588,"endOffset":414595,"count":0},{"startOffset":414596,"endOffset":414640,"count":0},{"startOffset":414641,"endOffset":414669,"count":0},{"startOffset":414849,"endOffset":414878,"count":0}],"isBlockCoverage":true},{"functionName":"Agent.<computed>","ranges":[{"startOffset":415054,"endOffset":415146,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":415176,"endOffset":415270,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":415303,"endOffset":415410,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":415448,"endOffset":415560,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":415578,"endOffset":415752,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":415760,"endOffset":416475,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":416483,"endOffset":416736,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":416744,"endOffset":417013,"count":0}],"isBlockCoverage":false},{"functionName":"lib/global.js","ranges":[{"startOffset":417121,"endOffset":418149,"count":1}],"isBlockCoverage":true},{"functionName":"setGlobalDispatcher2","ranges":[{"startOffset":417434,"endOffset":417806,"count":1},{"startOffset":417532,"endOffset":417622,"count":0}],"isBlockCoverage":true},{"functionName":"getGlobalDispatcher2","ranges":[{"startOffset":417870,"endOffset":417954,"count":1}],"isBlockCoverage":true},{"functionName":"lib/dispatcher/proxy-agent.js","ranges":[{"startOffset":418234,"endOffset":424584,"count":1}],"isBlockCoverage":true},{"functionName":"defaultProtocolPort","ranges":[{"startOffset":419003,"endOffset":419098,"count":0}],"isBlockCoverage":false},{"functionName":"defaultFactory","ranges":[{"startOffset":419161,"endOffset":419245,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":419344,"endOffset":423822,"count":1}],"isBlockCoverage":true},{"functionName":"ProxyAgent","ranges":[{"startOffset":419415,"endOffset":422768,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":422776,"endOffset":423211,"count":0}],"isBlockCoverage":false},{"functionName":"#getUrl","ranges":[{"startOffset":423355,"endOffset":423589,"count":0}],"isBlockCoverage":false},{"functionName":"ProxyAgent","ranges":[{"startOffset":423597,"endOffset":423699,"count":0}],"isBlockCoverage":false},{"functionName":"ProxyAgent","ranges":[{"startOffset":423707,"endOffset":423815,"count":0}],"isBlockCoverage":false},{"functionName":"buildHeaders","ranges":[{"startOffset":423829,"endOffset":424118,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfProxyAuthIsSent","ranges":[{"startOffset":424167,"endOffset":424481,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher/env-http-proxy-agent.js","ranges":[{"startOffset":424687,"endOffset":429554,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":425205,"endOffset":429505,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":425205,"endOffset":429505,"count":0}],"isBlockCoverage":true},{"functionName":"lib/web/fetch/headers.js","ranges":[{"startOffset":429630,"endOffset":445754,"count":1}],"isBlockCoverage":true},{"functionName":"isHTTPWhiteSpaceCharCode","ranges":[{"startOffset":430134,"endOffset":430253,"count":0}],"isBlockCoverage":false},{"functionName":"headerValueNormalize","ranges":[{"startOffset":430326,"endOffset":430730,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":430795,"endOffset":431755,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":431788,"endOffset":432452,"count":0}],"isBlockCoverage":false},{"functionName":"compareHeaderName","ranges":[{"startOffset":432501,"endOffset":432578,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":432674,"endOffset":438414,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":432674,"endOffset":438414,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":438450,"endOffset":443852,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":438450,"endOffset":443852,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.converters.HeadersInit","ranges":[{"startOffset":444707,"endOffset":445527,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/fetch/response.js","ranges":[{"startOffset":445832,"endOffset":460555,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":446996,"endOffset":452383,"count":1}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":447114,"endOffset":447248,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":447322,"endOffset":447879,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":447974,"endOffset":448860,"count":0}],"isBlockCoverage":false},{"functionName":"_Response","ranges":[{"startOffset":448922,"endOffset":449641,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":449698,"endOffset":449799,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":449884,"endOffset":450158,"count":0}],"isBlockCoverage":false},{"functionName":"get redirected","ranges":[{"startOffset":450234,"endOffset":450355,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":450400,"endOffset":450505,"count":0}],"isBlockCoverage":false},{"functionName":"get ok","ranges":[{"startOffset":450574,"endOffset":450712,"count":0}],"isBlockCoverage":false},{"functionName":"get statusText","ranges":[{"startOffset":450765,"endOffset":450878,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":450935,"endOffset":451036,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":451044,"endOffset":451179,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":451187,"endOffset":451340,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":451387,"endOffset":451794,"count":0}],"isBlockCoverage":false},{"functionName":"Response","ranges":[{"startOffset":451802,"endOffset":452376,"count":0}],"isBlockCoverage":false},{"functionName":"cloneResponse","ranges":[{"startOffset":453087,"endOffset":453508,"count":0}],"isBlockCoverage":false},{"functionName":"makeResponse","ranges":[{"startOffset":453559,"endOffset":454055,"count":0}],"isBlockCoverage":false},{"functionName":"makeNetworkError","ranges":[{"startOffset":454104,"endOffset":454411,"count":0}],"isBlockCoverage":false},{"functionName":"isNetworkError","ranges":[{"startOffset":454468,"endOffset":454685,"count":0}],"isBlockCoverage":false},{"functionName":"makeFilteredResponse","ranges":[{"startOffset":454738,"endOffset":455145,"count":0}],"isBlockCoverage":false},{"functionName":"filterResponse","ranges":[{"startOffset":455210,"endOffset":456121,"count":0}],"isBlockCoverage":false},{"functionName":"makeAppropriateNetworkError","ranges":[{"startOffset":456174,"endOffset":456529,"count":0}],"isBlockCoverage":false},{"functionName":"initializeResponse","ranges":[{"startOffset":456608,"endOffset":457905,"count":0}],"isBlockCoverage":false},{"functionName":"fromInnerResponse","ranges":[{"startOffset":457966,"endOffset":458473,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.XMLHttpRequestBodyInit","ranges":[{"startOffset":458856,"endOffset":459552,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BodyInit","ranges":[{"startOffset":459588,"endOffset":459893,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":460075,"endOffset":460084,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":460205,"endOffset":460213,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/fetch/dispatcher-weakref.js","ranges":[{"startOffset":460653,"endOffset":461956,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":460814,"endOffset":461074,"count":1}],"isBlockCoverage":true},{"functionName":"CompatWeakRef","ranges":[{"startOffset":460888,"endOffset":460946,"count":0}],"isBlockCoverage":false},{"functionName":"deref","ranges":[{"startOffset":460954,"endOffset":461067,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":461109,"endOffset":461570,"count":1}],"isBlockCoverage":true},{"functionName":"CompatFinalizer","ranges":[{"startOffset":461185,"endOffset":461255,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":461263,"endOffset":461529,"count":0}],"isBlockCoverage":false},{"functionName":"unregister","ranges":[{"startOffset":461537,"endOffset":461563,"count":0}],"isBlockCoverage":false},{"functionName":"module2.exports","ranges":[{"startOffset":461595,"endOffset":461950,"count":1},{"startOffset":461686,"endOffset":461894,"count":0}],"isBlockCoverage":true},{"functionName":"lib/web/fetch/request.js","ranges":[{"startOffset":462033,"endOffset":489669,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":463403,"endOffset":463485,"count":0}],"isBlockCoverage":false},{"functionName":"buildAbort","ranges":[{"startOffset":463558,"endOffset":464389,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":464500,"endOffset":483016,"count":1}],"isBlockCoverage":true},{"functionName":"_Request","ranges":[{"startOffset":464621,"endOffset":476407,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":476483,"endOffset":476587,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":476645,"endOffset":476758,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":477002,"endOffset":477102,"count":0}],"isBlockCoverage":false},{"functionName":"get destination","ranges":[{"startOffset":477211,"endOffset":477325,"count":0}],"isBlockCoverage":false},{"functionName":"get referrer","ranges":[{"startOffset":477683,"endOffset":477987,"count":0}],"isBlockCoverage":false},{"functionName":"get referrerPolicy","ranges":[{"startOffset":478155,"endOffset":478275,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":478462,"endOffset":478562,"count":0}],"isBlockCoverage":false},{"functionName":"get credentials","ranges":[{"startOffset":478788,"endOffset":478858,"count":0}],"isBlockCoverage":false},{"functionName":"get cache","ranges":[{"startOffset":479043,"endOffset":479145,"count":0}],"isBlockCoverage":false},{"functionName":"get redirect","ranges":[{"startOffset":479380,"endOffset":479488,"count":0}],"isBlockCoverage":false},{"functionName":"get integrity","ranges":[{"startOffset":479706,"endOffset":479816,"count":0}],"isBlockCoverage":false},{"functionName":"get keepalive","ranges":[{"startOffset":479944,"endOffset":480054,"count":0}],"isBlockCoverage":false},{"functionName":"get isReloadNavigation","ranges":[{"startOffset":480162,"endOffset":480288,"count":0}],"isBlockCoverage":false},{"functionName":"get isHistoryNavigation","ranges":[{"startOffset":480430,"endOffset":480558,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":480752,"endOffset":480850,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":480858,"endOffset":480992,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":481000,"endOffset":481152,"count":0}],"isBlockCoverage":false},{"functionName":"get duplex","ranges":[{"startOffset":481160,"endOffset":481251,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":481297,"endOffset":482140,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":482148,"endOffset":483009,"count":0}],"isBlockCoverage":false},{"functionName":"makeRequest","ranges":[{"startOffset":483048,"endOffset":485092,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRequest","ranges":[{"startOffset":485139,"endOffset":485379,"count":0}],"isBlockCoverage":false},{"functionName":"fromInnerRequest","ranges":[{"startOffset":485428,"endOffset":485805,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.RequestInfo","ranges":[{"startOffset":486901,"endOffset":487222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":489057,"endOffset":489215,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/fetch/index.js","ranges":[{"startOffset":489741,"endOffset":533563,"count":1},{"startOffset":491981,"endOffset":491991,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":492054,"endOffset":492982,"count":1}],"isBlockCoverage":true},{"functionName":"Fetch","ranges":[{"startOffset":492120,"endOffset":492305,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":492313,"endOffset":492533,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":492605,"endOffset":492975,"count":0}],"isBlockCoverage":false},{"functionName":"handleFetchDone","ranges":[{"startOffset":492989,"endOffset":493083,"count":0}],"isBlockCoverage":false},{"functionName":"fetch2","ranges":[{"startOffset":493138,"endOffset":495133,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeAndReportTiming","ranges":[{"startOffset":495169,"endOffset":496099,"count":0}],"isBlockCoverage":false},{"functionName":"abortFetch","ranges":[{"startOffset":496232,"endOffset":496980,"count":0}],"isBlockCoverage":false},{"functionName":"fetching","ranges":[{"startOffset":497025,"endOffset":499360,"count":0}],"isBlockCoverage":false},{"functionName":"mainFetch","ranges":[{"startOffset":499401,"endOffset":503794,"count":0}],"isBlockCoverage":false},{"functionName":"schemeFetch","ranges":[{"startOffset":503837,"endOffset":508138,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResponse","ranges":[{"startOffset":508185,"endOffset":508419,"count":0}],"isBlockCoverage":false},{"functionName":"fetchFinale","ranges":[{"startOffset":508476,"endOffset":510999,"count":0}],"isBlockCoverage":false},{"functionName":"httpFetch","ranges":[{"startOffset":511046,"endOffset":512738,"count":0}],"isBlockCoverage":false},{"functionName":"httpRedirectFetch","ranges":[{"startOffset":512781,"endOffset":515534,"count":0}],"isBlockCoverage":false},{"functionName":"httpNetworkOrCacheFetch","ranges":[{"startOffset":515593,"endOffset":521067,"count":0}],"isBlockCoverage":false},{"functionName":"httpNetworkFetch","ranges":[{"startOffset":521138,"endOffset":533390,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/websocket/events.js","ranges":[{"startOffset":533641,"endOffset":542246,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":533965,"endOffset":536228,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":533965,"endOffset":536228,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":536413,"endOffset":537241,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":536413,"endOffset":537241,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":537298,"endOffset":538365,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":537298,"endOffset":538365,"count":0}],"isBlockCoverage":true},{"functionName":"defaultValue","ranges":[{"startOffset":539696,"endOffset":539707,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":539825,"endOffset":539836,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":539952,"endOffset":539963,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":540170,"endOffset":540180,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":540296,"endOffset":540304,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":540425,"endOffset":540433,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":540707,"endOffset":540717,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":540847,"endOffset":540865,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":541079,"endOffset":541090,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":541212,"endOffset":541219,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":541335,"endOffset":541343,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":541558,"endOffset":541566,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":541684,"endOffset":541692,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":541815,"endOffset":541822,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":541944,"endOffset":541951,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/websocket/constants.js","ranges":[{"startOffset":542331,"endOffset":543465,"count":1}],"isBlockCoverage":true},{"functionName":"lib/web/websocket/symbols.js","ranges":[{"startOffset":543546,"endOffset":543989,"count":1}],"isBlockCoverage":true},{"functionName":"lib/web/websocket/util.js","ranges":[{"startOffset":544064,"endOffset":550547,"count":1},{"startOffset":549878,"endOffset":549886,"count":0},{"startOffset":549959,"endOffset":550121,"count":0}],"isBlockCoverage":true},{"functionName":"isConnecting","ranges":[{"startOffset":544531,"endOffset":544618,"count":0}],"isBlockCoverage":false},{"functionName":"isEstablished","ranges":[{"startOffset":544667,"endOffset":544749,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":544800,"endOffset":544881,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":544924,"endOffset":545003,"count":0}],"isBlockCoverage":false},{"functionName":"fireEvent","ranges":[{"startOffset":545044,"endOffset":545245,"count":0}],"isBlockCoverage":false},{"functionName":"websocketMessageReceived","ranges":[{"startOffset":545288,"endOffset":546026,"count":0}],"isBlockCoverage":false},{"functionName":"toArrayBuffer","ranges":[{"startOffset":546099,"endOffset":546332,"count":0}],"isBlockCoverage":false},{"functionName":"isValidSubprotocol","ranges":[{"startOffset":546383,"endOffset":547230,"count":0}],"isBlockCoverage":false},{"functionName":"isValidStatusCode","ranges":[{"startOffset":547291,"endOffset":547558,"count":0}],"isBlockCoverage":false},{"functionName":"failWebsocketConnection","ranges":[{"startOffset":547617,"endOffset":548061,"count":0}],"isBlockCoverage":false},{"functionName":"isControlFrame","ranges":[{"startOffset":548132,"endOffset":548266,"count":0}],"isBlockCoverage":false},{"functionName":"isContinuationFrame","ranges":[{"startOffset":548319,"endOffset":548411,"count":0}],"isBlockCoverage":false},{"functionName":"isTextBinaryFrame","ranges":[{"startOffset":548474,"endOffset":548585,"count":0}],"isBlockCoverage":false},{"functionName":"isValidOpcode","ranges":[{"startOffset":548644,"endOffset":548781,"count":0}],"isBlockCoverage":false},{"functionName":"parseExtensions","ranges":[{"startOffset":548832,"endOffset":549377,"count":0}],"isBlockCoverage":false},{"functionName":"isValidClientWindowBits","ranges":[{"startOffset":549432,"endOffset":549675,"count":0}],"isBlockCoverage":false},{"functionName":"utf8Decode","ranges":[{"startOffset":549961,"endOffset":550121,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/websocket/frame.js","ranges":[{"startOffset":550623,"endOffset":553164,"count":1},{"startOffset":550906,"endOffset":551271,"count":0}],"isBlockCoverage":true},{"functionName":"randomFillSync","ranges":[{"startOffset":551029,"endOffset":551235,"count":0}],"isBlockCoverage":false},{"functionName":"generateMask","ranges":[{"startOffset":551277,"endOffset":551556,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":551636,"endOffset":553099,"count":1}],"isBlockCoverage":true},{"functionName":"WebsocketFrameSend","ranges":[{"startOffset":551778,"endOffset":551838,"count":0}],"isBlockCoverage":false},{"functionName":"createFrame","ranges":[{"startOffset":551846,"endOffset":553092,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/websocket/connection.js","ranges":[{"startOffset":553250,"endOffset":560874,"count":1},{"startOffset":554098,"endOffset":554112,"count":0}],"isBlockCoverage":true},{"functionName":"establishWebSocketConnection","ranges":[{"startOffset":554118,"endOffset":557946,"count":0}],"isBlockCoverage":false},{"functionName":"closeWebSocketConnection","ranges":[{"startOffset":558027,"endOffset":559227,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketData","ranges":[{"startOffset":559300,"endOffset":559418,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":559467,"endOffset":560436,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketError","ranges":[{"startOffset":560487,"endOffset":560722,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/websocket/permessage-deflate.js","ranges":[{"startOffset":560976,"endOffset":563057,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":561348,"endOffset":563005,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":561348,"endOffset":563005,"count":0}],"isBlockCoverage":true},{"functionName":"lib/web/websocket/receiver.js","ranges":[{"startOffset":563139,"endOffset":575015,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":564001,"endOffset":574958,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":564001,"endOffset":574958,"count":0}],"isBlockCoverage":true},{"functionName":"lib/web/websocket/sender.js","ranges":[{"startOffset":575093,"endOffset":577588,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":575388,"endOffset":576921,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":575388,"endOffset":576921,"count":0}],"isBlockCoverage":true},{"functionName":"createFrame","ranges":[{"startOffset":576928,"endOffset":577100,"count":0}],"isBlockCoverage":false},{"functionName":"toBuffer","ranges":[{"startOffset":577147,"endOffset":577510,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/websocket/websocket.js","ranges":[{"startOffset":577672,"endOffset":591676,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":578818,"endOffset":588095,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":578818,"endOffset":588095,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.converters.DOMString or sequence<DOMString>","ranges":[{"startOffset":589613,"endOffset":589856,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":590060,"endOffset":590078,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":590192,"endOffset":590220,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DOMString or sequence<DOMString> or WebSocketInit","ranges":[{"startOffset":590437,"endOffset":590679,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.WebSocketSendData","ranges":[{"startOffset":590724,"endOffset":591079,"count":0}],"isBlockCoverage":false},{"functionName":"onParserDrain","ranges":[{"startOffset":591086,"endOffset":591162,"count":0}],"isBlockCoverage":false},{"functionName":"onParserError","ranges":[{"startOffset":591213,"endOffset":591576,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/eventsource/util.js","ranges":[{"startOffset":591753,"endOffset":592536,"count":1}],"isBlockCoverage":true},{"functionName":"isValidLastEventId","ranges":[{"startOffset":591828,"endOffset":591913,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIINumber","ranges":[{"startOffset":591974,"endOffset":592235,"count":0}],"isBlockCoverage":false},{"functionName":"delay","ranges":[{"startOffset":592286,"endOffset":592407,"count":0}],"isBlockCoverage":false},{"functionName":"lib/web/eventsource/eventsource-stream.js","ranges":[{"startOffset":592640,"endOffset":599446,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":593002,"endOffset":599382,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":593002,"endOffset":599382,"count":0}],"isBlockCoverage":true},{"functionName":"lib/web/eventsource/eventsource.js","ranges":[{"startOffset":599536,"endOffset":609810,"count":1}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":600463,"endOffset":608378,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":600463,"endOffset":608378,"count":0}],"isBlockCoverage":true},{"functionName":"defaultValue","ranges":[{"startOffset":609579,"endOffset":609590,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":610052,"endOffset":610259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23769,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2228,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":2987,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3277,"endOffset":4296,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":4556,"endOffset":4619,"count":818}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":4889,"endOffset":5275,"count":1},{"startOffset":4962,"endOffset":5023,"count":0},{"startOffset":5088,"endOffset":5139,"count":0},{"startOffset":5141,"endOffset":5272,"count":0}],"isBlockCoverage":true},{"functionName":"notEqual","ranges":[{"startOffset":5504,"endOffset":5894,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":6103,"endOffset":6482,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":6697,"endOffset":7084,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":7338,"endOffset":7741,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":8001,"endOffset":8412,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":8626,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":9173,"endOffset":9507,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":9534,"endOffset":9929,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":9936,"endOffset":10681,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":10685,"endOffset":14172,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":14176,"endOffset":14324,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":14328,"endOffset":14700,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":14704,"endOffset":15441,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":15445,"endOffset":17104,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":17108,"endOffset":17744,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":17748,"endOffset":18413,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":18579,"endOffset":18675,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":18862,"endOffset":18976,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":19146,"endOffset":19242,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":19416,"endOffset":19530,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":19665,"endOffset":21507,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":21512,"endOffset":22628,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":22833,"endOffset":22927,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":23144,"endOffset":23252,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":23452,"endOffset":23523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"255","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17809,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1498,"endOffset":1720,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1724,"endOffset":2351,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":2355,"endOffset":2453,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2457,"endOffset":11444,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11448,"endOffset":11760,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11804,"endOffset":16801,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16807,"endOffset":16884,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16890,"endOffset":17768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1236,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":35,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":274,"endOffset":541,"count":185},{"startOffset":347,"endOffset":408,"count":0},{"startOffset":528,"endOffset":534,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":546,"endOffset":1200,"count":1},{"startOffset":717,"endOffset":721,"count":0},{"startOffset":778,"endOffset":782,"count":0},{"startOffset":839,"endOffset":843,"count":0},{"startOffset":901,"endOffset":905,"count":0},{"startOffset":960,"endOffset":964,"count":0},{"startOffset":1020,"endOffset":1024,"count":0},{"startOffset":1078,"endOffset":1082,"count":0},{"startOffset":1138,"endOffset":1142,"count":0}],"isBlockCoverage":true}]},{"scriptId":"257","url":"node:internal/assert/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9869,"count":1}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":1555,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":1608,"endOffset":2573,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":2577,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":4261,"endOffset":5716,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":5720,"endOffset":9201,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":9205,"endOffset":9829,"count":818},{"startOffset":9267,"endOffset":9826,"count":0}],"isBlockCoverage":true}]},{"scriptId":"258","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3605,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":514,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1586,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"259","url":"node:http2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":false}]},{"scriptId":"260","url":"node:internal/http2/core","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112907,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4855,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"debugStream","ranges":[{"startOffset":4925,"endOffset":5133,"count":0}],"isBlockCoverage":false},{"functionName":"debugStreamObj","ranges":[{"startOffset":5137,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"debugSession","ranges":[{"startOffset":5339,"endOffset":5481,"count":0}],"isBlockCoverage":false},{"functionName":"debugSessionObj","ranges":[{"startOffset":5485,"endOffset":5592,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":8904,"endOffset":8977,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionHeaders","ranges":[{"startOffset":9286,"endOffset":12072,"count":0}],"isBlockCoverage":false},{"functionName":"tryClose","ranges":[{"startOffset":12076,"endOffset":12263,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":12439,"endOffset":12749,"count":0}],"isBlockCoverage":false},{"functionName":"submitRstStream","ranges":[{"startOffset":12865,"endOffset":12979,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerAdded","ranges":[{"startOffset":13142,"endOffset":13740,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerRemoved","ranges":[{"startOffset":13744,"endOffset":14511,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerAdded","ranges":[{"startOffset":14628,"endOffset":14955,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerRemoved","ranges":[{"startOffset":14959,"endOffset":15288,"count":0}],"isBlockCoverage":false},{"functionName":"onPing","ranges":[{"startOffset":15292,"endOffset":15505,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamClose","ranges":[{"startOffset":15900,"endOffset":17030,"count":0}],"isBlockCoverage":false},{"functionName":"onSettings","ranges":[{"startOffset":17126,"endOffset":17406,"count":0}],"isBlockCoverage":false},{"functionName":"onPriority","ranges":[{"startOffset":17604,"endOffset":18065,"count":0}],"isBlockCoverage":false},{"functionName":"onFrameError","ranges":[{"startOffset":18181,"endOffset":18619,"count":0}],"isBlockCoverage":false},{"functionName":"onAltSvc","ranges":[{"startOffset":18623,"endOffset":18935,"count":0}],"isBlockCoverage":false},{"functionName":"initOriginSet","ranges":[{"startOffset":18939,"endOffset":19581,"count":0}],"isBlockCoverage":false},{"functionName":"onOrigin","ranges":[{"startOffset":19585,"endOffset":20005,"count":0}],"isBlockCoverage":false},{"functionName":"onGoawayData","ranges":[{"startOffset":20416,"endOffset":21393,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnConnect","ranges":[{"startOffset":21600,"endOffset":23714,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24087,"endOffset":24772,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionInternalError","ranges":[{"startOffset":24873,"endOffset":25048,"count":0}],"isBlockCoverage":false},{"functionName":"settingsCallback","ranges":[{"startOffset":25052,"endOffset":25533,"count":0}],"isBlockCoverage":false},{"functionName":"submitSettings","ranges":[{"startOffset":25597,"endOffset":25929,"count":0}],"isBlockCoverage":false},{"functionName":"submitPriority","ranges":[{"startOffset":26097,"endOffset":26534,"count":0}],"isBlockCoverage":false},{"functionName":"submitGoaway","ranges":[{"startOffset":26775,"endOffset":26998,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27034,"endOffset":27766,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":27771,"endOffset":27958,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27963,"endOffset":28631,"count":0}],"isBlockCoverage":false},{"functionName":"pingCallback","ranges":[{"startOffset":29052,"endOffset":29259,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29879,"endOffset":32136,"count":0}],"isBlockCoverage":false},{"functionName":"trackAssignmentsTypedArray","ranges":[{"startOffset":32277,"endOffset":33003,"count":0}],"isBlockCoverage":false},{"functionName":"setupHandle","ranges":[{"startOffset":33295,"endOffset":35746,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":35864,"endOffset":35969,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupSession","ranges":[{"startOffset":35973,"endOffset":36427,"count":0}],"isBlockCoverage":false},{"functionName":"finishSessionClose","ranges":[{"startOffset":36431,"endOffset":37409,"count":0}],"isBlockCoverage":false},{"functionName":"closeSession","ranges":[{"startOffset":37413,"endOffset":38437,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Session","ranges":[{"startOffset":40628,"endOffset":43447,"count":0}],"isBlockCoverage":false},{"functionName":"get encrypted","ranges":[{"startOffset":43578,"endOffset":43630,"count":0}],"isBlockCoverage":false},{"functionName":"get alpnProtocol","ranges":[{"startOffset":43815,"endOffset":43873,"count":0}],"isBlockCoverage":false},{"functionName":"get originSet","ranges":[{"startOffset":44247,"endOffset":44382,"count":0}],"isBlockCoverage":false},{"functionName":"get connecting","ranges":[{"startOffset":44462,"endOffset":44547,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":44614,"endOffset":44692,"count":0}],"isBlockCoverage":false},{"functionName":"get destroyed","ranges":[{"startOffset":44761,"endOffset":44845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44884,"endOffset":44998,"count":0}],"isBlockCoverage":false},{"functionName":"setNextStreamID","ranges":[{"startOffset":45219,"endOffset":45501,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalWindowSize","ranges":[{"startOffset":45679,"endOffset":45993,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":46197,"endOffset":46816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46822,"endOffset":47193,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":47238,"endOffset":47430,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":47459,"endOffset":47501,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayCode","ranges":[{"startOffset":47581,"endOffset":47661,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayLastStreamID","ranges":[{"startOffset":47744,"endOffset":47825,"count":0}],"isBlockCoverage":false},{"functionName":"get pendingSettingsAck","ranges":[{"startOffset":47904,"endOffset":47976,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":48037,"endOffset":48147,"count":0}],"isBlockCoverage":false},{"functionName":"get localSettings","ranges":[{"startOffset":48296,"endOffset":48568,"count":0}],"isBlockCoverage":false},{"functionName":"get remoteSettings","ranges":[{"startOffset":48634,"endOffset":49107,"count":0}],"isBlockCoverage":false},{"functionName":"settings","ranges":[{"startOffset":49175,"endOffset":49706,"count":0}],"isBlockCoverage":false},{"functionName":"goaway","ranges":[{"startOffset":49966,"endOffset":50473,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":50581,"endOffset":51013,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":51600,"endOffset":51906,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51912,"endOffset":52162,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52306,"endOffset":52643,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":52649,"endOffset":52698,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":52704,"endOffset":52777,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":52783,"endOffset":52860,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Session","ranges":[{"startOffset":53085,"endOffset":53615,"count":0}],"isBlockCoverage":false},{"functionName":"get server","ranges":[{"startOffset":53621,"endOffset":53667,"count":0}],"isBlockCoverage":false},{"functionName":"altsvc","ranges":[{"startOffset":53922,"endOffset":55802,"count":0}],"isBlockCoverage":false},{"functionName":"origin","ranges":[{"startOffset":55850,"endOffset":56627,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Session","ranges":[{"startOffset":56942,"endOffset":57070,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":57184,"endOffset":60848,"count":0}],"isBlockCoverage":false},{"functionName":"trackWriteState","ranges":[{"startOffset":60855,"endOffset":61073,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnResume","ranges":[{"startOffset":61077,"endOffset":61163,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnPause","ranges":[{"startOffset":61167,"endOffset":61268,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":61272,"endOffset":61506,"count":0}],"isBlockCoverage":false},{"functionName":"shutdownWritable","ranges":[{"startOffset":61510,"endOffset":62074,"count":0}],"isBlockCoverage":false},{"functionName":"finishSendTrailers","ranges":[{"startOffset":62078,"endOffset":62555,"count":0}],"isBlockCoverage":false},{"functionName":"closeStream","ranges":[{"startOffset":62643,"endOffset":63591,"count":0}],"isBlockCoverage":false},{"functionName":"finishCloseStream","ranges":[{"startOffset":63595,"endOffset":63973,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Stream","ranges":[{"startOffset":64134,"endOffset":65295,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65301,"endOffset":65486,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65492,"endOffset":65934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65940,"endOffset":66321,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferSize","ranges":[{"startOffset":66327,"endOffset":66545,"count":0}],"isBlockCoverage":false},{"functionName":"get endAfterHeaders","ranges":[{"startOffset":66551,"endOffset":66621,"count":0}],"isBlockCoverage":false},{"functionName":"get sentHeaders","ranges":[{"startOffset":66627,"endOffset":66683,"count":0}],"isBlockCoverage":false},{"functionName":"get sentTrailers","ranges":[{"startOffset":66689,"endOffset":66747,"count":0}],"isBlockCoverage":false},{"functionName":"get sentInfoHeaders","ranges":[{"startOffset":66753,"endOffset":66813,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":66819,"endOffset":66876,"count":0}],"isBlockCoverage":false},{"functionName":"get id","ranges":[{"startOffset":66975,"endOffset":67013,"count":0}],"isBlockCoverage":false},{"functionName":"get session","ranges":[{"startOffset":67070,"endOffset":67118,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":67124,"endOffset":67183,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":67235,"endOffset":67323,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":67383,"endOffset":67462,"count":0}],"isBlockCoverage":false},{"functionName":"get headRequest","ranges":[{"startOffset":67510,"endOffset":67598,"count":0}],"isBlockCoverage":false},{"functionName":"get rstCode","ranges":[{"startOffset":67668,"endOffset":67722,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":67772,"endOffset":67927,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67933,"endOffset":68068,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68074,"endOffset":68245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68251,"endOffset":70726,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":70732,"endOffset":70818,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":70824,"endOffset":70894,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":70900,"endOffset":71126,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":71132,"endOffset":71473,"count":0}],"isBlockCoverage":false},{"functionName":"priority","ranges":[{"startOffset":71479,"endOffset":71996,"count":0}],"isBlockCoverage":false},{"functionName":"sendTrailers","ranges":[{"startOffset":72002,"endOffset":72720,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":72726,"endOffset":72803,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":73598,"endOffset":73927,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":74151,"endOffset":76668,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":76789,"endOffset":77832,"count":0}],"isBlockCoverage":false},{"functionName":"callTimeout","ranges":[{"startOffset":77839,"endOffset":78734,"count":0}],"isBlockCoverage":false},{"functionName":"callStreamClose","ranges":[{"startOffset":78738,"endOffset":78794,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaders","ranges":[{"startOffset":78798,"endOffset":80351,"count":0}],"isBlockCoverage":false},{"functionName":"onFileUnpipe","ranges":[{"startOffset":80357,"endOffset":80543,"count":0}],"isBlockCoverage":false},{"functionName":"onPipedFileHandleRead","ranges":[{"startOffset":80665,"endOffset":80842,"count":0}],"isBlockCoverage":false},{"functionName":"processRespondWithFD","ranges":[{"startOffset":80846,"endOffset":81683,"count":0}],"isBlockCoverage":false},{"functionName":"startFilePipe","ranges":[{"startOffset":81687,"endOffset":82146,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFD","ranges":[{"startOffset":82150,"endOffset":83609,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFileFD","ranges":[{"startOffset":83613,"endOffset":85691,"count":0}],"isBlockCoverage":false},{"functionName":"afterOpen","ranges":[{"startOffset":85695,"endOffset":86140,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Stream","ranges":[{"startOffset":86193,"endOffset":86436,"count":0}],"isBlockCoverage":false},{"functionName":"get pushAllowed","ranges":[{"startOffset":86493,"endOffset":86705,"count":0}],"isBlockCoverage":false},{"functionName":"pushStream","ranges":[{"startOffset":86819,"endOffset":89076,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":89128,"endOffset":90642,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFD","ranges":[{"startOffset":91043,"endOffset":93091,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFile","ranges":[{"startOffset":93574,"endOffset":95196,"count":0}],"isBlockCoverage":false},{"functionName":"additionalHeaders","ranges":[{"startOffset":95710,"endOffset":96775,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Stream","ranges":[{"startOffset":96911,"endOffset":97149,"count":0}],"isBlockCoverage":false},{"functionName":"handleHeaderContinue","ranges":[{"startOffset":97156,"endOffset":97289,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":97681,"endOffset":98147,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnStream","ranges":[{"startOffset":98245,"endOffset":98417,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnPriority","ranges":[{"startOffset":98421,"endOffset":98595,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnError","ranges":[{"startOffset":98599,"endOffset":98724,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnTimeout","ranges":[{"startOffset":98858,"endOffset":99119,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":99123,"endOffset":101527,"count":0}],"isBlockCoverage":false},{"functionName":"initializeOptions","ranges":[{"startOffset":101531,"endOffset":103105,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTLSOptions","ranges":[{"startOffset":103109,"endOffset":103434,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorSecureServerSession","ranges":[{"startOffset":103438,"endOffset":103564,"count":0}],"isBlockCoverage":false},{"functionName":"Http2SecureServer","ranges":[{"startOffset":103615,"endOffset":104296,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":104302,"endOffset":104507,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":104513,"endOffset":104696,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":104702,"endOffset":104866,"count":0}],"isBlockCoverage":false},{"functionName":"closeIdleConnections","ranges":[{"startOffset":104872,"endOffset":105036,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server","ranges":[{"startOffset":105084,"endOffset":105400,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":105406,"endOffset":105611,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":105617,"endOffset":105800,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":105806,"endOffset":105888,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server.<computed>","ranges":[{"startOffset":105956,"endOffset":106902,"count":0}],"isBlockCoverage":false},{"functionName":"setupCompat","ranges":[{"startOffset":106907,"endOffset":107187,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":107191,"endOffset":107654,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":107658,"endOffset":109496,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":109607,"endOffset":109883,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureServer","ranges":[{"startOffset":109893,"endOffset":109994,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":109998,"endOffset":110185,"count":0}],"isBlockCoverage":false},{"functionName":"getPackedSettings","ranges":[{"startOffset":110355,"endOffset":110544,"count":0}],"isBlockCoverage":false},{"functionName":"getUnpackedSettings","ranges":[{"startOffset":110548,"endOffset":112172,"count":0}],"isBlockCoverage":false},{"functionName":"performServerHandshake","ranges":[{"startOffset":112176,"endOffset":112337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"261","url":"node:internal/http2/compat","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24584,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2198,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"isPseudoHeader","ranges":[{"startOffset":2732,"endOffset":3071,"count":0}],"isBlockCoverage":false},{"functionName":"statusMessageWarn","ranges":[{"startOffset":3075,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"isConnectionHeaderAllowed","ranges":[{"startOffset":3323,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"connectionHeaderMessageWarn","ranges":[{"startOffset":3457,"endOffset":3806,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamData","ranges":[{"startOffset":3810,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":3955,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamEnd","ranges":[{"startOffset":4189,"endOffset":4360,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamError","ranges":[{"startOffset":4364,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestPause","ranges":[{"startOffset":4548,"endOffset":4604,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestResume","ranges":[{"startOffset":4608,"endOffset":4666,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamDrain","ranges":[{"startOffset":4670,"endOffset":4796,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedRequest","ranges":[{"startOffset":4800,"endOffset":5007,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedResponse","ranges":[{"startOffset":5011,"endOffset":5071,"count":0}],"isBlockCoverage":false},{"functionName":"resumeStream","ranges":[{"startOffset":5075,"endOffset":5129,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5165,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5325,"endOffset":6399,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":6404,"endOffset":6577,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6582,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseRequest","ranges":[{"startOffset":7416,"endOffset":7885,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTimeout","ranges":[{"startOffset":7889,"endOffset":8024,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerRequest","ranges":[{"startOffset":8075,"endOffset":9113,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":9119,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"get complete","ranges":[{"startOffset":9173,"endOffset":9330,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":9336,"endOffset":9382,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":9388,"endOffset":9436,"count":0}],"isBlockCoverage":false},{"functionName":"get rawHeaders","ranges":[{"startOffset":9442,"endOffset":9496,"count":0}],"isBlockCoverage":false},{"functionName":"get trailers","ranges":[{"startOffset":9502,"endOffset":9552,"count":0}],"isBlockCoverage":false},{"functionName":"get rawTrailers","ranges":[{"startOffset":9558,"endOffset":9614,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMajor","ranges":[{"startOffset":9620,"endOffset":9664,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMinor","ranges":[{"startOffset":9670,"endOffset":9714,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersion","ranges":[{"startOffset":9720,"endOffset":9763,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":9769,"endOffset":10002,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":10008,"endOffset":10056,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":10062,"endOffset":10320,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":10326,"endOffset":10394,"count":0}],"isBlockCoverage":false},{"functionName":"set method","ranges":[{"startOffset":10400,"endOffset":10606,"count":0}],"isBlockCoverage":false},{"functionName":"get authority","ranges":[{"startOffset":10612,"endOffset":10676,"count":0}],"isBlockCoverage":false},{"functionName":"get scheme","ranges":[{"startOffset":10682,"endOffset":10750,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":10756,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"set url","ranges":[{"startOffset":10825,"endOffset":10890,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":10896,"endOffset":11029,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailersReady","ranges":[{"startOffset":11036,"endOffset":11123,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseResponse","ranges":[{"startOffset":11127,"endOffset":11533,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerResponse","ranges":[{"startOffset":11583,"endOffset":12315,"count":0}],"isBlockCoverage":false},{"functionName":"get _header","ranges":[{"startOffset":12517,"endOffset":12567,"count":0}],"isBlockCoverage":false},{"functionName":"get writableEnded","ranges":[{"startOffset":12573,"endOffset":12658,"count":0}],"isBlockCoverage":false},{"functionName":"get finished","ranges":[{"startOffset":12664,"endOffset":12744,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":12750,"endOffset":13166,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":13172,"endOffset":13220,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":13226,"endOffset":13272,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":13278,"endOffset":13341,"count":0}],"isBlockCoverage":false},{"functionName":"get sendDate","ranges":[{"startOffset":13347,"endOffset":13403,"count":0}],"isBlockCoverage":false},{"functionName":"set sendDate","ranges":[{"startOffset":13409,"endOffset":13478,"count":0}],"isBlockCoverage":false},{"functionName":"get statusCode","ranges":[{"startOffset":13484,"endOffset":13544,"count":0}],"isBlockCoverage":false},{"functionName":"get writableCorked","ranges":[{"startOffset":13550,"endOffset":13619,"count":0}],"isBlockCoverage":false},{"functionName":"get writableHighWaterMark","ranges":[{"startOffset":13625,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"get writableFinished","ranges":[{"startOffset":13714,"endOffset":13787,"count":0}],"isBlockCoverage":false},{"functionName":"get writableLength","ranges":[{"startOffset":13793,"endOffset":13862,"count":0}],"isBlockCoverage":false},{"functionName":"set statusCode","ranges":[{"startOffset":13868,"endOffset":14122,"count":0}],"isBlockCoverage":false},{"functionName":"setTrailer","ranges":[{"startOffset":14128,"endOffset":14305,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":14311,"endOffset":14513,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":14519,"endOffset":14649,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":14655,"endOffset":14718,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":14724,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":14842,"endOffset":14986,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":14992,"endOffset":15300,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":15306,"endOffset":15487,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15493,"endOffset":15889,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":15895,"endOffset":16082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16088,"endOffset":17003,"count":0}],"isBlockCoverage":false},{"functionName":"get statusMessage","ranges":[{"startOffset":17009,"endOffset":17079,"count":0}],"isBlockCoverage":false},{"functionName":"set statusMessage","ranges":[{"startOffset":17085,"endOffset":17140,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":17146,"endOffset":17295,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":17301,"endOffset":19478,"count":0}],"isBlockCoverage":false},{"functionName":"cork","ranges":[{"startOffset":19484,"endOffset":19524,"count":0}],"isBlockCoverage":false},{"functionName":"uncork","ranges":[{"startOffset":19530,"endOffset":19574,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19580,"endOffset":20274,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":20280,"endOffset":21329,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":21335,"endOffset":21473,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":21479,"endOffset":21606,"count":0}],"isBlockCoverage":false},{"functionName":"createPushResponse","ranges":[{"startOffset":21612,"endOffset":22035,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22041,"endOffset":22358,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":22401,"endOffset":22642,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":22648,"endOffset":23305,"count":0}],"isBlockCoverage":false},{"functionName":"onServerStream","ranges":[{"startOffset":23312,"endOffset":24490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"262","url":"node:internal/http2/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28297,"count":1}],"isBlockCoverage":false},{"functionName":"updateOptionsBuffer","ranges":[{"startOffset":7246,"endOffset":9961,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomSettingsToObj","ranges":[{"startOffset":9965,"endOffset":10280,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultSettings","ranges":[{"startOffset":10284,"endOffset":12143,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":12260,"endOffset":13112,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettingsBuffer","ranges":[{"startOffset":13116,"endOffset":18428,"count":0}],"isBlockCoverage":false},{"functionName":"remoteCustomSettingsToBuffer","ranges":[{"startOffset":18432,"endOffset":19139,"count":0}],"isBlockCoverage":false},{"functionName":"getSessionState","ranges":[{"startOffset":19143,"endOffset":20025,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamState","ranges":[{"startOffset":20029,"endOffset":20475,"count":0}],"isBlockCoverage":false},{"functionName":"isIllegalConnectionSpecificHeader","ranges":[{"startOffset":20479,"endOffset":20905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20957,"endOffset":21067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21129,"endOffset":21227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21288,"endOffset":21351,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHeaders","ranges":[{"startOffset":21518,"endOffset":23573,"count":0}],"isBlockCoverage":false},{"functionName":"NghttpError","ranges":[{"startOffset":23614,"endOffset":23873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23879,"endOffset":23924,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":23930,"endOffset":24007,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24053,"endOffset":24301,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24345,"endOffset":24556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24608,"endOffset":24878,"count":0}],"isBlockCoverage":false},{"functionName":"toHeaderObject","ranges":[{"startOffset":24887,"endOffset":26984,"count":0}],"isBlockCoverage":false},{"functionName":"isPayloadMeaningless","ranges":[{"startOffset":26988,"endOffset":27071,"count":0}],"isBlockCoverage":false},{"functionName":"sessionName","ranges":[{"startOffset":27075,"endOffset":27287,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthority","ranges":[{"startOffset":27291,"endOffset":27749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"263","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1115,"count":1}],"isBlockCoverage":false}]},{"scriptId":"264","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8490,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":956,"endOffset":1176,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1182,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1316,"endOffset":1455,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1461,"endOffset":1627,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1633,"endOffset":1772,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1778,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1943,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":2100,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2253,"endOffset":2405,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2411,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2603,"endOffset":2785,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2791,"endOffset":2970,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2976,"endOffset":3151,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":3157,"endOffset":3359,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3365,"endOffset":3558,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3564,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3731,"endOffset":3894,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3900,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":4045,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":4202,"endOffset":4353,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4359,"endOffset":4619,"count":0}],"isBlockCoverage":false},{"functionName":"get deliveryType","ranges":[{"startOffset":4625,"endOffset":4759,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStatus","ranges":[{"startOffset":4765,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4909,"endOffset":5959,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6934,"endOffset":7710,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":7782,"endOffset":8409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6702,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1186,"endOffset":1652,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1708,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2468,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2582,"endOffset":2773,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3037,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3352,"endOffset":3463,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3469,"endOffset":3660,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3873,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4088,"endOffset":4234,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4238,"endOffset":5870,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5874,"endOffset":6321,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6325,"endOffset":6589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3841,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":780,"endOffset":3032,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1479,"endOffset":1577,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1700,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1923,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2147,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2369,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2599,"endOffset":2719,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3038,"endOffset":3288,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3294,"endOffset":3694,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6637,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1342,"endOffset":1404,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1410,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1723,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1967,"endOffset":2182,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2188,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2417,"endOffset":2548,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2554,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2900,"endOffset":3164,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3170,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3403,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3700,"endOffset":3799,"count":242}],"isBlockCoverage":true},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3805,"endOffset":4129,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":4135,"endOffset":4264,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4270,"endOffset":4505,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":6168,"endOffset":6342,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6226,"endOffset":6320,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6390,"endOffset":6533,"count":0}],"isBlockCoverage":false}]},{"scriptId":"268","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":646,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":1041,"endOffset":2357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"269","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8862,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":944,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1089,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1236,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1723,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1911,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":2111,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2295,"endOffset":2434,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2491,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2675,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2871,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":3057,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3249,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3453,"endOffset":3586,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3663,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":4097,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4535,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4799,"endOffset":5006,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":5048,"endOffset":5168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5174,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5341,"endOffset":5403,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5409,"endOffset":5676,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5732,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5979,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6306,"endOffset":6461,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6522,"endOffset":6801,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6807,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6984,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram","ranges":[{"startOffset":7053,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram.<computed>","ranges":[{"startOffset":7316,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram","ranges":[{"startOffset":7330,"endOffset":7655,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram.<computed>","ranges":[{"startOffset":7711,"endOffset":7720,"count":0}],"isBlockCoverage":false},{"functionName":"createRecordableHistogram","ranges":[{"startOffset":7725,"endOffset":7821,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7974,"endOffset":8676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"270","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1840,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":665,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":773,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1036,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1358,"endOffset":1795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"node:util/types","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":67,"count":1}],"isBlockCoverage":false}]},{"scriptId":"272","url":"node:internal/webstreams/readablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99352,"count":1}],"isBlockCoverage":false},{"functionName":"lazyReadableReleasedError","ranges":[{"startOffset":3262,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"lazyReadableReleasingError","ranges":[{"startOffset":3625,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":4035,"endOffset":4127,"count":6}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5637,"endOffset":17864,"count":0}],"isBlockCoverage":false},{"functionName":"InternalTransferredReadableStream","ranges":[{"startOffset":18483,"endOffset":18766,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream","ranges":[{"startOffset":18940,"endOffset":19102,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream.<computed>","ranges":[{"startOffset":19158,"endOffset":19166,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":19203,"endOffset":21337,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableStreamBYOBRequest","ranges":[{"startOffset":21608,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamAsyncIteratorReadRequest","ranges":[{"startOffset":21864,"endOffset":21987,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21993,"endOffset":22110,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22116,"endOffset":22314,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22320,"endOffset":22495,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultReadRequest","ranges":[{"startOffset":22532,"endOffset":22597,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22603,"endOffset":22678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22684,"endOffset":22764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22770,"endOffset":22827,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":22833,"endOffset":22879,"count":0}],"isBlockCoverage":false},{"functionName":"ReadIntoRequest","ranges":[{"startOffset":22913,"endOffset":22978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22984,"endOffset":23059,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23065,"endOffset":23139,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23145,"endOffset":23202,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":23208,"endOffset":23254,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23295,"endOffset":25549,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":25879,"endOffset":29694,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":30025,"endOffset":31337,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":31680,"endOffset":35055,"count":0}],"isBlockCoverage":false},{"functionName":"InternalReadableStream","ranges":[{"startOffset":35394,"endOffset":35912,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableStream","ranges":[{"startOffset":36064,"endOffset":36380,"count":0}],"isBlockCoverage":false},{"functionName":"InternalReadableByteStream","ranges":[{"startOffset":36384,"endOffset":36872,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableByteStream","ranges":[{"startOffset":37032,"endOffset":37304,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableStreamState","ranges":[{"startOffset":37752,"endOffset":38087,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFromIterable","ranges":[{"startOffset":38091,"endOffset":39730,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamPipeTo","ranges":[{"startOffset":39734,"endOffset":45403,"count":0}],"isBlockCoverage":false},{"functionName":"PipeToReadableStreamReadRequest","ranges":[{"startOffset":45450,"endOffset":45573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45579,"endOffset":45769,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45775,"endOffset":45825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45831,"endOffset":45886,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamTee","ranges":[{"startOffset":45893,"endOffset":46126,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultTee","ranges":[{"startOffset":46130,"endOffset":49014,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamTee","ranges":[{"startOffset":49018,"endOffset":57149,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerConvertPullIntoDescriptor","ranges":[{"startOffset":57153,"endOffset":57756,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLocked","ranges":[{"startOffset":57760,"endOffset":57851,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamCancel","ranges":[{"startOffset":57855,"endOffset":58530,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":58534,"endOffset":59036,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamError","ranges":[{"startOffset":59040,"endOffset":59945,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamHasDefaultReader","ranges":[{"startOffset":59949,"endOffset":60201,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamGetNumReadRequests","ranges":[{"startOffset":60205,"endOffset":60371,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamHasBYOBReader","ranges":[{"startOffset":60375,"endOffset":60621,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamGetNumReadIntoRequests","ranges":[{"startOffset":60625,"endOffset":60796,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFulfillReadRequest","ranges":[{"startOffset":60800,"endOffset":61409,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFulfillReadIntoRequest","ranges":[{"startOffset":61413,"endOffset":61806,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAddReadRequest","ranges":[{"startOffset":61810,"endOffset":62052,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAddReadIntoRequest","ranges":[{"startOffset":62056,"endOffset":62321,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericCancel","ranges":[{"startOffset":62325,"endOffset":62516,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericInitialize","ranges":[{"startOffset":62520,"endOffset":63208,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderRelease","ranges":[{"startOffset":63212,"endOffset":63418,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderErrorReadRequests","ranges":[{"startOffset":63422,"endOffset":63647,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderRelease","ranges":[{"startOffset":63651,"endOffset":63855,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderErrorReadIntoRequests","ranges":[{"startOffset":63859,"endOffset":64097,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericRelease","ranges":[{"startOffset":64101,"endOffset":64778,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderRead","ranges":[{"startOffset":64782,"endOffset":65214,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":65218,"endOffset":65671,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamBYOBReader","ranges":[{"startOffset":65675,"endOffset":66128,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultReader","ranges":[{"startOffset":66132,"endOffset":66400,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerClose","ranges":[{"startOffset":66404,"endOffset":66760,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerEnqueue","ranges":[{"startOffset":66764,"endOffset":67534,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerHasBackpressure","ranges":[{"startOffset":67538,"endOffset":67680,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCanCloseOrEnqueue","ranges":[{"startOffset":67684,"endOffset":67904,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":67908,"endOffset":68235,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerShouldCallPull","ranges":[{"startOffset":68239,"endOffset":68751,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCallPullIfNeeded","ranges":[{"startOffset":68755,"endOffset":69468,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":69472,"endOffset":69693,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerError","ranges":[{"startOffset":69697,"endOffset":70003,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCancelSteps","ranges":[{"startOffset":70007,"endOffset":70253,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerPullSteps","ranges":[{"startOffset":70257,"endOffset":70891,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultController","ranges":[{"startOffset":70895,"endOffset":71917,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultControllerFromSource","ranges":[{"startOffset":71921,"endOffset":72713,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClose","ranges":[{"startOffset":72717,"endOffset":73495,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCommitPullIntoDescriptor","ranges":[{"startOffset":73499,"endOffset":74117,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerInvalidateBYOBRequest","ranges":[{"startOffset":74121,"endOffset":74420,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearAlgorithms","ranges":[{"startOffset":74424,"endOffset":74593,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearPendingPullIntos","ranges":[{"startOffset":74597,"endOffset":74783,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerGetDesiredSize","ranges":[{"startOffset":74787,"endOffset":75104,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShouldCallPull","ranges":[{"startOffset":75108,"endOffset":75779,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerHandleQueueDrain","ranges":[{"startOffset":75783,"endOffset":76213,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullInto","ranges":[{"startOffset":76217,"endOffset":78492,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInternal","ranges":[{"startOffset":78496,"endOffset":79343,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespond","ranges":[{"startOffset":79347,"endOffset":80160,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInClosedState","ranges":[{"startOffset":80164,"endOffset":80724,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillHeadPullIntoDescriptor","ranges":[{"startOffset":80728,"endOffset":81040,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueue","ranges":[{"startOffset":81044,"endOffset":83457,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueClonedChunkToQueue","ranges":[{"startOffset":83461,"endOffset":83958,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueChunkToQueue","ranges":[{"startOffset":83962,"endOffset":84255,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueDetachedPullIntoToQueue","ranges":[{"startOffset":84259,"endOffset":84709,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillPullIntoDescriptorFromQueue","ranges":[{"startOffset":84713,"endOffset":86720,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ranges":[{"startOffset":86724,"endOffset":87338,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInReadableState","ranges":[{"startOffset":87342,"endOffset":88808,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondWithNewView","ranges":[{"startOffset":88812,"endOffset":90249,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShiftPendingPullInto","ranges":[{"startOffset":90253,"endOffset":90447,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCallPullIfNeeded","ranges":[{"startOffset":90451,"endOffset":91152,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerError","ranges":[{"startOffset":91156,"endOffset":91522,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCancelSteps","ranges":[{"startOffset":91526,"endOffset":91832,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillReadRequestFromQueue","ranges":[{"startOffset":91836,"endOffset":92331,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessReadRequestsUsingQueue","ranges":[{"startOffset":92335,"endOffset":92835,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullSteps","ranges":[{"startOffset":92839,"endOffset":94012,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamController","ranges":[{"startOffset":94016,"endOffset":95149,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamControllerFromSource","ranges":[{"startOffset":95153,"endOffset":96153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"273","url":"node:internal/webstreams/writablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39762,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWritableReleasedError","ranges":[{"startOffset":1857,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":2353,"endOffset":2445,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3431,"endOffset":7403,"count":0}],"isBlockCoverage":false},{"functionName":"InternalTransferredWritableStream","ranges":[{"startOffset":7674,"endOffset":7957,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream","ranges":[{"startOffset":8131,"endOffset":8293,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream.<computed>","ranges":[{"startOffset":8349,"endOffset":8357,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8396,"endOffset":12068,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12504,"endOffset":13619,"count":0}],"isBlockCoverage":false},{"functionName":"InternalWritableStream","ranges":[{"startOffset":13858,"endOffset":14402,"count":0}],"isBlockCoverage":false},{"functionName":"createWritableStream","ranges":[{"startOffset":14554,"endOffset":14884,"count":0}],"isBlockCoverage":false},{"functionName":"createWritableStreamState","ranges":[{"startOffset":15133,"endOffset":16233,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStreamLocked","ranges":[{"startOffset":16237,"endOffset":16328,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultWriter","ranges":[{"startOffset":16332,"endOffset":18164,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamAbort","ranges":[{"startOffset":18168,"endOffset":18990,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamClose","ranges":[{"startOffset":18994,"endOffset":19687,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamUpdateBackpressure","ranges":[{"startOffset":19691,"endOffset":20184,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamStartErroring","ranges":[{"startOffset":20188,"endOffset":20782,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamRejectCloseAndClosedPromiseIfNeeded","ranges":[{"startOffset":20786,"endOffset":21563,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamMarkFirstWriteRequestInFlight","ranges":[{"startOffset":21567,"endOffset":21880,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamMarkCloseRequestInFlight","ranges":[{"startOffset":21884,"endOffset":22261,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamHasOperationMarkedInFlight","ranges":[{"startOffset":22265,"endOffset":22561,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWriteWithError","ranges":[{"startOffset":22565,"endOffset":23033,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWrite","ranges":[{"startOffset":23037,"endOffset":23337,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightCloseWithError","ranges":[{"startOffset":23341,"endOffset":24174,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightClose","ranges":[{"startOffset":24178,"endOffset":25262,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishErroring","ranges":[{"startOffset":25266,"endOffset":26661,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDealWithRejection","ranges":[{"startOffset":26665,"endOffset":26945,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamCloseQueuedOrInFlight","ranges":[{"startOffset":26949,"endOffset":27174,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamAddWriteRequest","ranges":[{"startOffset":27178,"endOffset":27544,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterWrite","ranges":[{"startOffset":27548,"endOffset":28563,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterRelease","ranges":[{"startOffset":28567,"endOffset":29056,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterGetDesiredSize","ranges":[{"startOffset":29060,"endOffset":29423,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterEnsureReadyPromiseRejected","ranges":[{"startOffset":29427,"endOffset":29807,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterEnsureClosedPromiseRejected","ranges":[{"startOffset":29811,"endOffset":30192,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterCloseWithErrorPropagation","ranges":[{"startOffset":30196,"endOffset":30698,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterClose","ranges":[{"startOffset":30702,"endOffset":30875,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterAbort","ranges":[{"startOffset":30879,"endOffset":31068,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerWrite","ranges":[{"startOffset":31072,"endOffset":31674,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerProcessWrite","ranges":[{"startOffset":31678,"endOffset":32693,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerProcessClose","ranges":[{"startOffset":32697,"endOffset":33243,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":33247,"endOffset":33439,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetChunkSize","ranges":[{"startOffset":33443,"endOffset":33748,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerErrorIfNeeded","ranges":[{"startOffset":33752,"endOffset":33986,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerError","ranges":[{"startOffset":33990,"endOffset":34268,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerClose","ranges":[{"startOffset":34272,"endOffset":34458,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":34462,"endOffset":34733,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetBackpressure","ranges":[{"startOffset":34737,"endOffset":34883,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerAdvanceQueueIfNeeded","ranges":[{"startOffset":34887,"endOffset":35497,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultControllerFromSink","ranges":[{"startOffset":35501,"endOffset":36431,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultController","ranges":[{"startOffset":36435,"endOffset":37799,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"node:internal/blocklist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4058,"count":1}],"isBlockCoverage":false},{"functionName":"BlockList","ranges":[{"startOffset":783,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":936,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"addAddress","ranges":[{"startOffset":1208,"endOffset":1539,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":1545,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"addSubnet","ranges":[{"startOffset":2251,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2820,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"get rules","ranges":[{"startOffset":3306,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3368,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3537,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"InternalBlockList","ranges":[{"startOffset":3676,"endOffset":3840,"count":0}],"isBlockCoverage":false}]},{"scriptId":"275","url":"node:internal/socketaddress","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3567,"count":1}],"isBlockCoverage":false},{"functionName":"isSocketAddress","ranges":[{"startOffset":765,"endOffset":838,"count":0}],"isBlockCoverage":false},{"functionName":"SocketAddress","ranges":[{"startOffset":844,"endOffset":1878,"count":0}],"isBlockCoverage":false},{"functionName":"get address","ranges":[{"startOffset":1884,"endOffset":1939,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":1945,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"get family","ranges":[{"startOffset":2000,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"get flowlabel","ranges":[{"startOffset":2089,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2206,"endOffset":2455,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2461,"endOffset":2632,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2638,"endOffset":2852,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2858,"endOffset":3011,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSocketAddress","ranges":[{"startOffset":3051,"endOffset":3310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"276","url":"node:v8","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13654,"count":1}],"isBlockCoverage":false},{"functionName":"writeHeapSnapshot","ranges":[{"startOffset":2263,"endOffset":2505,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":2748,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"setFlagsFromString","ranges":[{"startOffset":4437,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapStatistics","ranges":[{"startOffset":5010,"endOffset":5976,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSpaceStatistics","ranges":[{"startOffset":6218,"endOffset":6792,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapCodeStatistics","ranges":[{"startOffset":7042,"endOffset":7462,"count":0}],"isBlockCoverage":false},{"functionName":"setHeapSnapshotNearHeapLimit","ranges":[{"startOffset":7519,"endOffset":7834,"count":0}],"isBlockCoverage":false},{"functionName":"readRawBytes","ranges":[{"startOffset":8117,"endOffset":8440,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferViewTypeToIndex","ranges":[{"startOffset":8445,"endOffset":9193,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferViewIndexToType","ranges":[{"startOffset":9197,"endOffset":9792,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultSerializer","ranges":[{"startOffset":9844,"endOffset":9936,"count":0}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":10114,"endOffset":11169,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":11369,"endOffset":12237,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":12370,"endOffset":12519,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":12703,"endOffset":12832,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12853,"endOffset":13171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"277","url":"node:internal/heap_utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2522,"count":1}],"isBlockCoverage":false},{"functionName":"getHeapSnapshotOptions","ranges":[{"startOffset":739,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"HeapSnapshotStream","ranges":[{"startOffset":1184,"endOffset":1343,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":1349,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1427,"endOffset":1612,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1618,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"queryObjects","ranges":[{"startOffset":1732,"endOffset":2427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"node:internal/promise_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3200,"count":1}],"isBlockCoverage":false},{"functionName":"initAll","ranges":[{"startOffset":499,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"makeRunHook","ranges":[{"startOffset":1019,"endOffset":1575,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1058,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"maybeFastPath","ranges":[{"startOffset":1719,"endOffset":1806,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1810,"endOffset":2108,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":2112,"endOffset":2278,"count":0}],"isBlockCoverage":false},{"functionName":"makeUseHook","ranges":[{"startOffset":2282,"endOffset":2530,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2350,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"createHook","ranges":[{"startOffset":2696,"endOffset":3107,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":76,"count":1}],"isBlockCoverage":false}]},{"scriptId":"280","url":"node:module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":719,"count":1}],"isBlockCoverage":false}]},{"scriptId":"281","url":"node:internal/source_map/source_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12558,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":4143,"endOffset":4222,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4265,"endOffset":4345,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4388,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4510,"endOffset":4576,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4741,"endOffset":10431,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":10492,"endOffset":10563,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":10659,"endOffset":11618,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":11691,"endOffset":12013,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":12216,"endOffset":12502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"node:readline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13331,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":2691,"endOffset":3456,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":3787,"endOffset":4608,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":4660,"endOffset":5458,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":6015,"endOffset":6141,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6341,"endOffset":6387,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6438,"endOffset":6480,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6538,"endOffset":6587,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6642,"endOffset":6688,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6744,"endOffset":6791,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6847,"endOffset":6894,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6951,"endOffset":6999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7055,"endOffset":7102,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7155,"endOffset":7199,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7253,"endOffset":7298,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7353,"endOffset":7399,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7455,"endOffset":7502,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7561,"endOffset":7611,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7671,"endOffset":7722,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7781,"endOffset":7831,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7891,"endOffset":7942,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7991,"endOffset":8031,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8087,"endOffset":8134,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8190,"endOffset":8237,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8295,"endOffset":8344,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8399,"endOffset":8445,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8498,"endOffset":8542,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8688,"endOffset":8732,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8739,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8843,"endOffset":8891,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8898,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9004,"endOffset":9050,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9057,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9163,"endOffset":9211,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9218,"endOffset":9272,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9321,"endOffset":9364,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9371,"endOffset":9420,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9479,"endOffset":9532,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9539,"endOffset":9598,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9652,"endOffset":9700,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9707,"endOffset":9761,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9815,"endOffset":9863,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9870,"endOffset":9924,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._tabComplete","ranges":[{"startOffset":10532,"endOffset":11028,"count":0}],"isBlockCoverage":false},{"functionName":"_ttyWriteDumb","ranges":[{"startOffset":12111,"endOffset":13171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"node:internal/readline/emitKeypressEvents","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2762,"count":1}],"isBlockCoverage":false},{"functionName":"emitKeypressEvents","ranges":[{"startOffset":677,"endOffset":2720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"node:readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1728,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":560,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":666,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":1527,"endOffset":1653,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"node:internal/readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3656,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":492,"endOffset":3615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/_commonjsHelpers.jjO7Zipk.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":398,"count":1},{"startOffset":68,"endOffset":191,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultExportFromCjs","ranges":[{"startOffset":194,"endOffset":334,"count":8},{"startOffset":259,"endOffset":312,"count":0},{"startOffset":313,"endOffset":327,"count":0}],"isBlockCoverage":true}]},{"scriptId":"288","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/index.GVFv9dZ0.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16414,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":243,"endOffset":276,"count":129}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":282,"endOffset":592,"count":125},{"startOffset":427,"endOffset":547,"count":0}],"isBlockCoverage":true},{"functionName":"setupVM","ranges":[{"startOffset":709,"endOffset":2731,"count":0}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":2735,"endOffset":2892,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowKeys","ranges":[{"startOffset":7437,"endOffset":7782,"count":0}],"isBlockCoverage":false},{"functionName":"isClassLikeName","ranges":[{"startOffset":7783,"endOffset":7861,"count":0}],"isBlockCoverage":false},{"functionName":"populateGlobal","ranges":[{"startOffset":7862,"endOffset":9129,"count":0}],"isBlockCoverage":false},{"functionName":"catchWindowErrors","ranges":[{"startOffset":9131,"endOffset":10005,"count":0}],"isBlockCoverage":false},{"functionName":"setupVM","ranges":[{"startOffset":10063,"endOffset":11763,"count":0}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":11767,"endOffset":13146,"count":0}],"isBlockCoverage":false},{"functionName":"teardownWindow","ranges":[{"startOffset":13151,"endOffset":13326,"count":0}],"isBlockCoverage":false},{"functionName":"setupVM","ranges":[{"startOffset":13388,"endOffset":14054,"count":0}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":14058,"endOffset":14867,"count":0}],"isBlockCoverage":false},{"functionName":"setupVM","ranges":[{"startOffset":14935,"endOffset":15283,"count":0}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":15287,"endOffset":15898,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvPackageName","ranges":[{"startOffset":16105,"endOffset":16337,"count":1},{"startOffset":16177,"endOffset":16279,"count":0},{"startOffset":16285,"endOffset":16336,"count":0}],"isBlockCoverage":true}]},{"scriptId":"289","url":"node:console","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1226,"count":1}],"isBlockCoverage":false}]},{"scriptId":"290","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite/dist/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7481,"count":1}],"isBlockCoverage":true},{"functionName":"isCSSRequest","ranges":[{"startOffset":1839,"endOffset":1878,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1908,"endOffset":2046,"count":0}],"isBlockCoverage":true},{"functionName":"splitVendorChunk","ranges":[{"startOffset":2047,"endOffset":2333,"count":0}],"isBlockCoverage":false},{"functionName":"staticImportedByEntry","ranges":[{"startOffset":2334,"endOffset":2943,"count":0}],"isBlockCoverage":false},{"functionName":"splitVendorChunkPlugin","ranges":[{"startOffset":2944,"endOffset":4684,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHMRBroadcasterClient","ranges":[{"startOffset":4723,"endOffset":4786,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":4789,"endOffset":5186,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5214,"endOffset":6124,"count":0}],"isBlockCoverage":true},{"functionName":"createHMROptions","ranges":[{"startOffset":6126,"endOffset":6380,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveFile","ranges":[{"startOffset":6411,"endOffset":6505,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSourceMapOptions","ranges":[{"startOffset":6509,"endOffset":7013,"count":0}],"isBlockCoverage":false},{"functionName":"createViteRuntime","ranges":[{"startOffset":7014,"endOffset":7373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"node:dns","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9727,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":2806,"endOffset":3162,"count":0}],"isBlockCoverage":false},{"functionName":"onlookupall","ranges":[{"startOffset":3168,"endOffset":3698,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":3808,"endOffset":6954,"count":0}],"isBlockCoverage":false},{"functionName":"onlookupservice","ranges":[{"startOffset":7106,"endOffset":7464,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":7470,"endOffset":8301,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":8460,"endOffset":8765,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9580,"endOffset":9713,"count":1}],"isBlockCoverage":true}]},{"scriptId":"292","url":"node:internal/dns/callback_resolver","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2889,"count":1}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":661,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":1136,"endOffset":2092,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":1172,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2361,"endOffset":2848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"node:internal/dns/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10915,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":1623,"endOffset":2017,"count":2},{"startOffset":1671,"endOffset":1761,"count":0},{"startOffset":1909,"endOffset":1930,"count":0},{"startOffset":1932,"endOffset":2014,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupall","ranges":[{"startOffset":2021,"endOffset":2557,"count":0}],"isBlockCoverage":false},{"functionName":"createLookupPromise","ranges":[{"startOffset":3359,"endOffset":4719,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3452,"endOffset":4714,"count":2},{"startOffset":3495,"endOffset":3639,"count":0},{"startOffset":3717,"endOffset":3849,"count":0},{"startOffset":3979,"endOffset":3992,"count":0},{"startOffset":4135,"endOffset":4180,"count":0},{"startOffset":4216,"endOffset":4261,"count":0},{"startOffset":4347,"endOffset":4418,"count":0},{"startOffset":4448,"endOffset":4709,"count":0}],"isBlockCoverage":true},{"functionName":"lookup","ranges":[{"startOffset":5437,"endOffset":6789,"count":2},{"startOffset":5703,"endOffset":5786,"count":0},{"startOffset":5818,"endOffset":5848,"count":1},{"startOffset":5850,"endOffset":5936,"count":0},{"startOffset":5960,"endOffset":5967,"count":1},{"startOffset":5977,"endOffset":6105,"count":0},{"startOffset":6122,"endOffset":6130,"count":1},{"startOffset":6140,"endOffset":6251,"count":0},{"startOffset":6268,"endOffset":6273,"count":1},{"startOffset":6283,"endOffset":6369,"count":0},{"startOffset":6386,"endOffset":6396,"count":1},{"startOffset":6406,"endOffset":6539,"count":1},{"startOffset":6518,"endOffset":6531,"count":0},{"startOffset":6556,"endOffset":6563,"count":1},{"startOffset":6573,"endOffset":6708,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupservice","ranges":[{"startOffset":6795,"endOffset":7157,"count":0}],"isBlockCoverage":false},{"functionName":"createLookupServicePromise","ranges":[{"startOffset":7161,"endOffset":7833,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":7837,"endOffset":8131,"count":0}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":8137,"endOffset":8598,"count":0}],"isBlockCoverage":false},{"functionName":"createResolverPromise","ranges":[{"startOffset":8602,"endOffset":9318,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":9322,"endOffset":9634,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":9358,"endOffset":9531,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":9638,"endOffset":10006,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":10144,"endOffset":10356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"294","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/coverage.E7sG1b3r.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2280,"count":1}],"isBlockCoverage":true},{"functionName":"resolveCoverageProviderModule","ranges":[{"startOffset":102,"endOffset":1075,"count":1},{"startOffset":190,"endOffset":198,"count":0},{"startOffset":244,"endOffset":256,"count":0},{"startOffset":318,"endOffset":344,"count":0},{"startOffset":474,"endOffset":569,"count":0},{"startOffset":600,"endOffset":1074,"count":0}],"isBlockCoverage":true},{"functionName":"getCoverageProvider","ranges":[{"startOffset":1076,"endOffset":1288,"count":1},{"startOffset":1271,"endOffset":1287,"count":0}],"isBlockCoverage":true},{"functionName":"startCoverageInsideWorker","ranges":[{"startOffset":1289,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"takeCoverageInsideWorker","ranges":[{"startOffset":1568,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"stopCoverageInsideWorker","ranges":[{"startOffset":1845,"endOffset":2121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"295","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/index.xL8XjTLv.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":100749,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":153,"endOffset":2698,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":196,"endOffset":401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":465,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":596,"endOffset":807,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":897,"endOffset":1179,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1295,"endOffset":1471,"count":8},{"startOffset":1335,"endOffset":1348,"count":5},{"startOffset":1348,"endOffset":1401,"count":3},{"startOffset":1401,"endOffset":1451,"count":0},{"startOffset":1451,"endOffset":1470,"count":3}],"isBlockCoverage":true},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1556,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1992,"endOffset":2136,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":2203,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2419,"endOffset":2694,"count":56}],"isBlockCoverage":true},{"functionName":"flat","ranges":[{"startOffset":2472,"endOffset":2657,"count":136},{"startOffset":2523,"endOffset":2632,"count":192},{"startOffset":2576,"endOffset":2587,"count":80},{"startOffset":2588,"endOffset":2624,"count":112}],"isBlockCoverage":true},{"functionName":"stringify$4","ranges":[{"startOffset":2756,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber$2","ranges":[{"startOffset":3562,"endOffset":3787,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange$1","ranges":[{"startOffset":4004,"endOffset":5950,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":5953,"endOffset":6300,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":6302,"endOffset":6783,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":6905,"endOffset":7569,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":7571,"endOffset":8369,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":8371,"endOffset":8831,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":8857,"endOffset":8970,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":8972,"endOffset":9035,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":9037,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":9119,"endOffset":9215,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":9217,"endOffset":9308,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":9310,"endOffset":9478,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":9480,"endOffset":9574,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":9576,"endOffset":9636,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":9638,"endOffset":10048,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange$1.clearCache","ranges":[{"startOffset":10123,"endOffset":10156,"count":0}],"isBlockCoverage":false},{"functionName":"isObject$1","ranges":[{"startOffset":10469,"endOffset":10538,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":10559,"endOffset":10643,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":10667,"endOffset":10762,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":10782,"endOffset":10811,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":10828,"endOffset":11021,"count":0}],"isBlockCoverage":false},{"functionName":"stringify$3","ranges":[{"startOffset":11044,"endOffset":11192,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":11207,"endOffset":11501,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":11521,"endOffset":11758,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":11780,"endOffset":12414,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":12433,"endOffset":12686,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":12705,"endOffset":12964,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":12986,"endOffset":13082,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":13106,"endOffset":13216,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":13239,"endOffset":13384,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":13407,"endOffset":14892,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":14915,"endOffset":15696,"count":0}],"isBlockCoverage":false},{"functionName":"fill$2","ranges":[{"startOffset":15714,"endOffset":16511,"count":0}],"isBlockCoverage":false},{"functionName":"compile$1","ranges":[{"startOffset":16609,"endOffset":17899,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":18028,"endOffset":18699,"count":53},{"startOffset":18173,"endOffset":18186,"count":0},{"startOffset":18208,"endOffset":18289,"count":0},{"startOffset":18317,"endOffset":18663,"count":73},{"startOffset":18348,"endOffset":18447,"count":0},{"startOffset":18484,"endOffset":18653,"count":91},{"startOffset":18515,"endOffset":18541,"count":0},{"startOffset":18543,"endOffset":18560,"count":0},{"startOffset":18600,"endOffset":18628,"count":21},{"startOffset":18629,"endOffset":18643,"count":70}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18258,"endOffset":18275,"count":0}],"isBlockCoverage":false},{"functionName":"expand$1","ranges":[{"startOffset":18719,"endOffset":20655,"count":3},{"startOffset":18800,"endOffset":18820,"count":0}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":18836,"endOffset":20614,"count":8},{"startOffset":18981,"endOffset":18992,"count":3},{"startOffset":18994,"endOffset":19040,"count":0},{"startOffset":19079,"endOffset":19159,"count":0},{"startOffset":19191,"endOffset":19215,"count":3},{"startOffset":19216,"endOffset":19242,"count":3},{"startOffset":19244,"endOffset":19304,"count":0},{"startOffset":19345,"endOffset":19811,"count":0},{"startOffset":19944,"endOffset":19968,"count":7},{"startOffset":19969,"endOffset":19984,"count":2},{"startOffset":19986,"endOffset":20048,"count":2},{"startOffset":20098,"endOffset":20591,"count":64},{"startOffset":20167,"endOffset":20191,"count":18},{"startOffset":20193,"endOffset":20281,"count":18},{"startOffset":20216,"endOffset":20231,"count":0},{"startOffset":20281,"endOffset":20317,"count":46},{"startOffset":20317,"endOffset":20393,"count":3},{"startOffset":20393,"endOffset":20417,"count":43},{"startOffset":20417,"endOffset":20441,"count":32},{"startOffset":20443,"endOffset":20524,"count":29},{"startOffset":20524,"endOffset":20549,"count":14},{"startOffset":20549,"endOffset":20585,"count":5}],"isBlockCoverage":true},{"functionName":"parse$3","ranges":[{"startOffset":23006,"endOffset":29299,"count":3},{"startOffset":23066,"endOffset":23117,"count":0},{"startOffset":23140,"endOffset":23145,"count":0},{"startOffset":23194,"endOffset":23234,"count":0},{"startOffset":23277,"endOffset":23376,"count":0},{"startOffset":24043,"endOffset":28555,"count":164},{"startOffset":24226,"endOffset":24249,"count":0},{"startOffset":24323,"endOffset":24432,"count":0},{"startOffset":24541,"endOffset":24615,"count":0},{"startOffset":24712,"endOffset":25245,"count":1},{"startOffset":24777,"endOffset":24798,"count":3},{"startOffset":24800,"endOffset":25185,"count":3},{"startOffset":24875,"endOffset":24928,"count":0},{"startOffset":24967,"endOffset":25028,"count":0},{"startOffset":25080,"endOffset":25177,"count":1},{"startOffset":25245,"endOffset":25326,"count":163},{"startOffset":25326,"endOffset":25461,"count":2},{"startOffset":25461,"endOffset":25507,"count":161},{"startOffset":25507,"endOffset":25734,"count":2},{"startOffset":25543,"endOffset":25609,"count":0},{"startOffset":25734,"endOffset":25840,"count":159},{"startOffset":25841,"endOffset":25867,"count":159},{"startOffset":25869,"endOffset":26347,"count":0},{"startOffset":26347,"endOffset":26438,"count":159},{"startOffset":26438,"endOffset":26836,"count":3},{"startOffset":26836,"endOffset":26929,"count":156},{"startOffset":26929,"endOffset":27218,"count":3},{"startOffset":26965,"endOffset":27031,"count":0},{"startOffset":27218,"endOffset":27286,"count":153},{"startOffset":27286,"endOffset":27298,"count":18},{"startOffset":27300,"endOffset":27563,"count":18},{"startOffset":27330,"endOffset":27480,"count":0},{"startOffset":27563,"endOffset":27627,"count":135},{"startOffset":27627,"endOffset":27639,"count":5},{"startOffset":27640,"endOffset":27661,"count":0},{"startOffset":27663,"endOffset":28486,"count":0},{"startOffset":28486,"endOffset":28555,"count":135},{"startOffset":28673,"endOffset":29227,"count":0}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":23625,"endOffset":23645,"count":167}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":23662,"endOffset":23989,"count":175},{"startOffset":23701,"endOffset":23723,"count":140},{"startOffset":23725,"endOffset":23758,"count":0},{"startOffset":23797,"endOffset":23820,"count":140},{"startOffset":23822,"endOffset":23875,"count":111},{"startOffset":23875,"endOffset":23988,"count":64}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28701,"endOffset":28947,"count":0}],"isBlockCoverage":false},{"functionName":"braces$1","ranges":[{"startOffset":29802,"endOffset":30293,"count":3},{"startOffset":29877,"endOffset":30094,"count":0}],"isBlockCoverage":true},{"functionName":"braces$1.parse","ranges":[{"startOffset":30624,"endOffset":30672,"count":3}],"isBlockCoverage":true},{"functionName":"braces$1.stringify","ranges":[{"startOffset":31064,"endOffset":31230,"count":0}],"isBlockCoverage":false},{"functionName":"braces$1.compile","ranges":[{"startOffset":31680,"endOffset":31825,"count":0}],"isBlockCoverage":false},{"functionName":"braces$1.expand","ranges":[{"startOffset":32418,"endOffset":32820,"count":3},{"startOffset":32644,"endOffset":32686,"count":0}],"isBlockCoverage":true},{"functionName":"braces$1.create","ranges":[{"startOffset":33399,"endOffset":33604,"count":3},{"startOffset":33466,"endOffset":33491,"count":0},{"startOffset":33529,"endOffset":33563,"count":0}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":37665,"endOffset":38004,"count":34}],"isBlockCoverage":true},{"functionName":"globChars","ranges":[{"startOffset":38045,"endOffset":38124,"count":70},{"startOffset":38106,"endOffset":38119,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38130,"endOffset":40053,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":38363,"endOffset":38432,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":38459,"endOffset":38495,"count":4}],"isBlockCoverage":true},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":38520,"endOffset":38573,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":38598,"endOffset":38652,"count":4}],"isBlockCoverage":true},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":38680,"endOffset":38720,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":38752,"endOffset":38868,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":38902,"endOffset":39097,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":39121,"endOffset":39275,"count":70},{"startOffset":39190,"endOffset":39225,"count":0},{"startOffset":39251,"endOffset":39271,"count":0}],"isBlockCoverage":true},{"functionName":"exports.escapeLast","ranges":[{"startOffset":39300,"endOffset":39550,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":39577,"endOffset":39741,"count":70},{"startOffset":39657,"endOffset":39720,"count":0}],"isBlockCoverage":true},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":39766,"endOffset":40049,"count":0}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":40697,"endOffset":40778,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":40795,"endOffset":40895,"count":0}],"isBlockCoverage":false},{"functionName":"scan$1","ranges":[{"startOffset":41546,"endOffset":49201,"count":2},{"startOffset":41591,"endOffset":41596,"count":0},{"startOffset":41674,"endOffset":41700,"count":0},{"startOffset":42386,"endOffset":47033,"count":28},{"startOffset":42463,"endOffset":42638,"count":0},{"startOffset":42705,"endOffset":43923,"count":0},{"startOffset":43962,"endOffset":44264,"count":2},{"startOffset":44110,"endOffset":44163,"count":0},{"startOffset":44165,"endOffset":44264,"count":0},{"startOffset":44264,"endOffset":45272,"count":26},{"startOffset":44414,"endOffset":44444,"count":20},{"startOffset":44453,"endOffset":44486,"count":16},{"startOffset":44522,"endOffset":44557,"count":10},{"startOffset":44559,"endOffset":45266,"count":4},{"startOffset":44711,"endOffset":44729,"count":0},{"startOffset":44731,"endOffset":44775,"count":0},{"startOffset":44843,"endOffset":44864,"count":16},{"startOffset":44866,"endOffset":45213,"count":16},{"startOffset":44914,"endOffset":45039,"count":0},{"startOffset":45090,"endOffset":45201,"count":4},{"startOffset":45243,"endOffset":45266,"count":0},{"startOffset":45272,"endOffset":45306,"count":22},{"startOffset":45306,"endOffset":45516,"count":6},{"startOffset":45342,"endOffset":45379,"count":2},{"startOffset":45497,"endOffset":45516,"count":0},{"startOffset":45516,"endOffset":45555,"count":16},{"startOffset":45555,"endOffset":45693,"count":0},{"startOffset":45693,"endOffset":45738,"count":16},{"startOffset":45738,"endOffset":46215,"count":2},{"startOffset":45768,"endOffset":45789,"count":6},{"startOffset":45791,"endOffset":46136,"count":6},{"startOffset":45835,"endOffset":45937,"count":0},{"startOffset":45987,"endOffset":46128,"count":2},{"startOffset":46195,"endOffset":46215,"count":0},{"startOffset":46215,"endOffset":46281,"count":14},{"startOffset":46282,"endOffset":46300,"count":0},{"startOffset":46302,"endOffset":46378,"count":0},{"startOffset":46378,"endOffset":46443,"count":14},{"startOffset":46445,"endOffset":46899,"count":0},{"startOffset":46899,"endOffset":47029,"count":14},{"startOffset":47009,"endOffset":47029,"count":0},{"startOffset":47062,"endOffset":47110,"count":0},{"startOffset":47184,"endOffset":47275,"count":0},{"startOffset":47325,"endOffset":47399,"count":0},{"startOffset":47462,"endOffset":47489,"count":0},{"startOffset":47502,"endOffset":47516,"count":0},{"startOffset":47517,"endOffset":47532,"count":0},{"startOffset":47533,"endOffset":47548,"count":0},{"startOffset":47550,"endOffset":47654,"count":0},{"startOffset":47686,"endOffset":47838,"count":0},{"startOffset":48049,"endOffset":48171,"count":0},{"startOffset":48199,"endOffset":48222,"count":0},{"startOffset":48325,"endOffset":48340,"count":0},{"startOffset":48442,"endOffset":48705,"count":0},{"startOffset":48958,"endOffset":49117,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":42205,"endOffset":42226,"count":22}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":42243,"endOffset":42274,"count":10}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":42294,"endOffset":42358,"count":50}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":49482,"endOffset":49837,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":49910,"endOffset":50016,"count":0}],"isBlockCoverage":false},{"functionName":"parse$1","ranges":[{"startOffset":50149,"endOffset":74441,"count":34},{"startOffset":50204,"endOffset":50255,"count":0},{"startOffset":50378,"endOffset":50416,"count":0},{"startOffset":50475,"endOffset":50571,"count":0},{"startOffset":50699,"endOffset":50703,"count":0},{"startOffset":51319,"endOffset":51327,"count":0},{"startOffset":51367,"endOffset":51381,"count":0},{"startOffset":51415,"endOffset":51431,"count":0},{"startOffset":51461,"endOffset":51490,"count":0},{"startOffset":56116,"endOffset":57341,"count":0},{"startOffset":57422,"endOffset":73312,"count":276},{"startOffset":57476,"endOffset":57499,"count":0},{"startOffset":57568,"endOffset":58384,"count":0},{"startOffset":58530,"endOffset":58593,"count":12},{"startOffset":58548,"endOffset":58569,"count":4},{"startOffset":58570,"endOffset":58592,"count":4},{"startOffset":58595,"endOffset":59727,"count":8},{"startOffset":58646,"endOffset":59314,"count":0},{"startOffset":59341,"endOffset":59358,"count":0},{"startOffset":59378,"endOffset":59395,"count":0},{"startOffset":59398,"endOffset":59437,"count":0},{"startOffset":59463,"endOffset":59509,"count":0},{"startOffset":59511,"endOffset":59550,"count":0},{"startOffset":59599,"endOffset":59620,"count":0},{"startOffset":59622,"endOffset":59652,"count":0},{"startOffset":59727,"endOffset":59870,"count":268},{"startOffset":59870,"endOffset":59886,"count":0},{"startOffset":59888,"endOffset":60005,"count":0},{"startOffset":60005,"endOffset":60068,"count":268},{"startOffset":60068,"endOffset":60225,"count":0},{"startOffset":60225,"endOffset":60286,"count":268},{"startOffset":60286,"endOffset":60374,"count":0},{"startOffset":60374,"endOffset":60399,"count":268},{"startOffset":60399,"endOffset":60834,"count":8},{"startOffset":60430,"endOffset":60461,"count":0},{"startOffset":60463,"endOffset":60532,"count":0},{"startOffset":60710,"endOffset":60773,"count":0},{"startOffset":60774,"endOffset":60781,"count":0},{"startOffset":60834,"endOffset":60899,"count":260},{"startOffset":60899,"endOffset":61258,"count":4},{"startOffset":60966,"endOffset":61149,"count":0},{"startOffset":61258,"endOffset":61283,"count":256},{"startOffset":61283,"endOffset":62742,"count":4},{"startOffset":61384,"endOffset":61472,"count":0},{"startOffset":61506,"endOffset":61711,"count":0},{"startOffset":61842,"endOffset":61869,"count":0},{"startOffset":61871,"endOffset":61909,"count":0},{"startOffset":62158,"endOffset":62185,"count":0},{"startOffset":62476,"endOffset":62566,"count":0},{"startOffset":62742,"endOffset":62797,"count":252},{"startOffset":62797,"endOffset":62821,"count":0},{"startOffset":62823,"endOffset":63090,"count":0},{"startOffset":63090,"endOffset":63115,"count":252},{"startOffset":63115,"endOffset":64245,"count":0},{"startOffset":64245,"endOffset":64300,"count":252},{"startOffset":64300,"endOffset":64453,"count":4},{"startOffset":64453,"endOffset":64509,"count":248},{"startOffset":64509,"endOffset":64770,"count":0},{"startOffset":64770,"endOffset":64827,"count":248},{"startOffset":64827,"endOffset":65437,"count":16},{"startOffset":65118,"endOffset":65152,"count":0},{"startOffset":65154,"endOffset":65353,"count":0},{"startOffset":65437,"endOffset":65491,"count":232},{"startOffset":65491,"endOffset":66057,"count":46},{"startOffset":65520,"endOffset":65542,"count":0},{"startOffset":65544,"endOffset":65793,"count":0},{"startOffset":65890,"endOffset":65977,"count":36},{"startOffset":65977,"endOffset":66057,"count":10},{"startOffset":66057,"endOffset":66121,"count":186},{"startOffset":66121,"endOffset":67060,"count":8},{"startOffset":66321,"endOffset":66362,"count":0},{"startOffset":66364,"endOffset":66893,"count":0},{"startOffset":66895,"endOffset":67060,"count":0},{"startOffset":67060,"endOffset":67121,"count":178},{"startOffset":67121,"endOffset":67421,"count":0},{"startOffset":67421,"endOffset":67475,"count":178},{"startOffset":67475,"endOffset":68025,"count":0},{"startOffset":68025,"endOffset":68085,"count":178},{"startOffset":68085,"endOffset":68310,"count":0},{"startOffset":68310,"endOffset":68370,"count":178},{"startOffset":68370,"endOffset":68671,"count":64},{"startOffset":68414,"endOffset":68453,"count":0},{"startOffset":68535,"endOffset":68611,"count":48},{"startOffset":68671,"endOffset":68767,"count":114},{"startOffset":68769,"endOffset":68976,"count":0},{"startOffset":68976,"endOffset":69061,"count":114},{"startOffset":69063,"endOffset":69120,"count":0},{"startOffset":69120,"endOffset":69152,"count":114},{"startOffset":69152,"endOffset":72351,"count":48},{"startOffset":69190,"endOffset":69241,"count":0},{"startOffset":69352,"endOffset":69375,"count":32},{"startOffset":69408,"endOffset":69465,"count":16},{"startOffset":69497,"endOffset":69542,"count":0},{"startOffset":69544,"endOffset":69622,"count":0},{"startOffset":69663,"endOffset":69716,"count":0},{"startOffset":69758,"endOffset":69810,"count":0},{"startOffset":69831,"endOffset":69856,"count":0},{"startOffset":69857,"endOffset":69868,"count":0},{"startOffset":69869,"endOffset":69882,"count":0},{"startOffset":69884,"endOffset":69962,"count":0},{"startOffset":70039,"endOffset":70216,"count":0},{"startOffset":70249,"endOffset":70257,"count":32},{"startOffset":70259,"endOffset":70476,"count":0},{"startOffset":70511,"endOffset":70539,"count":16},{"startOffset":70540,"endOffset":70553,"count":16},{"startOffset":70554,"endOffset":70562,"count":16},{"startOffset":70564,"endOffset":70964,"count":16},{"startOffset":70787,"endOffset":70792,"count":0},{"startOffset":70964,"endOffset":70999,"count":32},{"startOffset":70999,"endOffset":71027,"count":0},{"startOffset":71028,"endOffset":71046,"count":0},{"startOffset":71048,"endOffset":71581,"count":0},{"startOffset":71581,"endOffset":71632,"count":32},{"startOffset":71634,"endOffset":71964,"count":32},{"startOffset":71964,"endOffset":72351,"count":0},{"startOffset":72351,"endOffset":72439,"count":66},{"startOffset":72439,"endOffset":72620,"count":0},{"startOffset":72620,"endOffset":72688,"count":66},{"startOffset":72689,"endOffset":72711,"count":0},{"startOffset":72713,"endOffset":72783,"count":0},{"startOffset":72783,"endOffset":72821,"count":66},{"startOffset":72821,"endOffset":72845,"count":32},{"startOffset":72846,"endOffset":72868,"count":14},{"startOffset":72870,"endOffset":73290,"count":52},{"startOffset":72903,"endOffset":72988,"count":0},{"startOffset":73104,"endOffset":73180,"count":0},{"startOffset":73208,"endOffset":73284,"count":4},{"startOffset":73290,"endOffset":73312,"count":66},{"startOffset":73343,"endOffset":73523,"count":0},{"startOffset":73552,"endOffset":73730,"count":0},{"startOffset":73759,"endOffset":73937,"count":0},{"startOffset":73998,"endOffset":74024,"count":20},{"startOffset":74027,"endOffset":74107,"count":14},{"startOffset":74201,"endOffset":74422,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":51182,"endOffset":51286,"count":48},{"startOffset":51260,"endOffset":51273,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":52096,"endOffset":52125,"count":358}],"isBlockCoverage":true},{"functionName":"state.peek","ranges":[{"startOffset":52155,"endOffset":52188,"count":68}],"isBlockCoverage":true},{"functionName":"state.advance","ranges":[{"startOffset":52224,"endOffset":52256,"count":316},{"startOffset":52251,"endOffset":52256,"count":0}],"isBlockCoverage":true},{"functionName":"remaining","ranges":[{"startOffset":52278,"endOffset":52312,"count":182}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":52332,"endOffset":52415,"count":330}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":52435,"endOffset":52546,"count":282},{"startOffset":52487,"endOffset":52501,"count":198},{"startOffset":52502,"endOffset":52515,"count":84}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":52566,"endOffset":52842,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":52865,"endOffset":52919,"count":12}],"isBlockCoverage":true},{"functionName":"decrement","ranges":[{"startOffset":52942,"endOffset":52991,"count":12}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":53316,"endOffset":54243,"count":270},{"startOffset":53359,"endOffset":53851,"count":32},{"startOffset":53400,"endOffset":53449,"count":0},{"startOffset":53516,"endOffset":53564,"count":0},{"startOffset":53599,"endOffset":53622,"count":0},{"startOffset":53623,"endOffset":53634,"count":0},{"startOffset":53635,"endOffset":53648,"count":0},{"startOffset":53650,"endOffset":53845,"count":0},{"startOffset":53877,"endOffset":53900,"count":16},{"startOffset":53902,"endOffset":53965,"count":16},{"startOffset":53985,"endOffset":53998,"count":14},{"startOffset":54050,"endOffset":54072,"count":104},{"startOffset":54074,"endOffset":54179,"count":58},{"startOffset":54140,"endOffset":54145,"count":18},{"startOffset":54179,"endOffset":54242,"count":212}],"isBlockCoverage":true},{"functionName":"extglobOpen","ranges":[{"startOffset":54268,"endOffset":54699,"count":8},{"startOffset":54483,"endOffset":54488,"count":0},{"startOffset":54585,"endOffset":54595,"count":0}],"isBlockCoverage":true},{"functionName":"extglobClose","ranges":[{"startOffset":54725,"endOffset":56014,"count":8},{"startOffset":54781,"endOffset":54786,"count":0},{"startOffset":54842,"endOffset":55925,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56208,"endOffset":56879,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":57050,"endOffset":57130,"count":0}],"isBlockCoverage":false},{"functionName":"parse$1.fastpaths","ranges":[{"startOffset":74666,"endOffset":76969,"count":36},{"startOffset":74768,"endOffset":74806,"count":0},{"startOffset":74866,"endOffset":74962,"count":0},{"startOffset":75330,"endOffset":75338,"count":0},{"startOffset":75384,"endOffset":75392,"count":0},{"startOffset":75425,"endOffset":75429,"count":0},{"startOffset":75518,"endOffset":75525,"count":0},{"startOffset":75555,"endOffset":75584,"count":0},{"startOffset":76877,"endOffset":76907,"count":2},{"startOffset":76909,"endOffset":76949,"count":2}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":75605,"endOffset":75756,"count":2},{"startOffset":75649,"endOffset":75661,"count":0},{"startOffset":75730,"endOffset":75743,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":75776,"endOffset":76776,"count":36},{"startOffset":75810,"endOffset":75864,"count":0},{"startOffset":75872,"endOffset":75933,"count":0},{"startOffset":75941,"endOffset":76018,"count":0},{"startOffset":76026,"endOffset":76116,"count":0},{"startOffset":76124,"endOffset":76173,"count":2},{"startOffset":76181,"endOffset":76287,"count":0},{"startOffset":76295,"endOffset":76424,"count":0},{"startOffset":76432,"endOffset":76542,"count":0},{"startOffset":76550,"endOffset":76766,"count":34},{"startOffset":76638,"endOffset":76766,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":77129,"endOffset":77189,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$2","ranges":[{"startOffset":77945,"endOffset":79775,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$2.test","ranges":[{"startOffset":80325,"endOffset":81130,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$2.matchBase","ranges":[{"startOffset":81547,"endOffset":81738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$2.isMatch","ranges":[{"startOffset":82376,"endOffset":82439,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$2.parse","ranges":[{"startOffset":82851,"endOffset":83021,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$2.scan","ranges":[{"startOffset":83658,"endOffset":83698,"count":2}],"isBlockCoverage":true},{"functionName":"picomatch$2.compileRe","ranges":[{"startOffset":84191,"endOffset":84703,"count":36},{"startOffset":84285,"endOffset":84315,"count":0},{"startOffset":84340,"endOffset":84345,"count":0},{"startOffset":84379,"endOffset":84383,"count":0},{"startOffset":84422,"endOffset":84426,"count":0},{"startOffset":84531,"endOffset":84570,"count":0},{"startOffset":84654,"endOffset":84684,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch$2.makeRe","ranges":[{"startOffset":85578,"endOffset":86086,"count":36},{"startOffset":85691,"endOffset":85752,"count":0},{"startOffset":85966,"endOffset":86007,"count":34}],"isBlockCoverage":true},{"functionName":"picomatch$2.toRegex","ranges":[{"startOffset":86550,"endOffset":86778,"count":36},{"startOffset":86606,"endOffset":86611,"count":0},{"startOffset":86670,"endOffset":86675,"count":0},{"startOffset":86688,"endOffset":86776,"count":0}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":87091,"endOffset":87124,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch","ranges":[{"startOffset":87688,"endOffset":89033,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matcher","ranges":[{"startOffset":89685,"endOffset":89734,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.isMatch","ranges":[{"startOffset":90344,"endOffset":90405,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.not","ranges":[{"startOffset":91107,"endOffset":91544,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.contains","ranges":[{"startOffset":92271,"endOffset":92832,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchKeys","ranges":[{"startOffset":93610,"endOffset":93884,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.some","ranges":[{"startOffset":94669,"endOffset":94923,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.every","ranges":[{"startOffset":95794,"endOffset":96050,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.all","ranges":[{"startOffset":96851,"endOffset":97059,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.capture","ranges":[{"startOffset":97773,"endOffset":98069,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.makeRe","ranges":[{"startOffset":98521,"endOffset":98559,"count":36}],"isBlockCoverage":true},{"functionName":"micromatch.scan","ranges":[{"startOffset":98908,"endOffset":98944,"count":2}],"isBlockCoverage":true},{"functionName":"micromatch.parse","ranges":[{"startOffset":99336,"endOffset":99556,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braces","ranges":[{"startOffset":100123,"endOffset":100360,"count":6},{"startOffset":100182,"endOffset":100223,"count":0},{"startOffset":100296,"endOffset":100359,"count":3}],"isBlockCoverage":true},{"functionName":"micromatch.braceExpand","ranges":[{"startOffset":100414,"endOffset":100583,"count":0}],"isBlockCoverage":false}]},{"scriptId":"296","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/runner/dist/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":324,"count":1}],"isBlockCoverage":true}]},{"scriptId":"297","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/env.AtSIuHFg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":273,"count":1},{"startOffset":131,"endOffset":139,"count":0}],"isBlockCoverage":true}]},{"scriptId":"298","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-node/dist/client.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14579,"count":1}],"isBlockCoverage":true},{"functionName":"injectQuery","ranges":[{"startOffset":681,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"createHotContext","ranges":[{"startOffset":713,"endOffset":959,"count":0}],"isBlockCoverage":false},{"functionName":"updateStyle","ranges":[{"startOffset":976,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"removeStyle","ranges":[{"startOffset":1004,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":1191,"endOffset":1256,"count":1}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":1307,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"setByModuleId","ranges":[{"startOffset":1514,"endOffset":1589,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1592,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"getByModuleId","ranges":[{"startOffset":1681,"endOffset":1997,"count":2},{"startOffset":1747,"endOffset":1782,"count":1},{"startOffset":1844,"endOffset":1977,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2000,"endOffset":2076,"count":1}],"isBlockCoverage":true},{"functionName":"deleteByModuleId","ranges":[{"startOffset":2079,"endOffset":2150,"count":1}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":2153,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateModule","ranges":[{"startOffset":2238,"endOffset":2508,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateDepTree","ranges":[{"startOffset":2605,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateSubDepTree","ranges":[{"startOffset":3126,"endOffset":3654,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMap","ranges":[{"startOffset":3741,"endOffset":3977,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4001,"endOffset":13568,"count":1}],"isBlockCoverage":true},{"functionName":"ViteNodeRunner","ranges":[{"startOffset":4005,"endOffset":4289,"count":1},{"startOffset":4085,"endOffset":4101,"count":0},{"startOffset":4276,"endOffset":4283,"count":0}],"isBlockCoverage":true},{"functionName":"executeFile","ranges":[{"startOffset":4427,"endOffset":4555,"count":0}],"isBlockCoverage":false},{"functionName":"executeId","ranges":[{"startOffset":4558,"endOffset":4688,"count":1}],"isBlockCoverage":true},{"functionName":"cachedRequest","ranges":[{"startOffset":4710,"endOffset":5699,"count":1},{"startOffset":4919,"endOffset":4943,"count":0},{"startOffset":5149,"endOffset":5207,"count":0},{"startOffset":5254,"endOffset":5372,"count":0},{"startOffset":5414,"endOffset":5439,"count":0},{"startOffset":5664,"endOffset":5689,"count":0}],"isBlockCoverage":true},{"functionName":"getStack","ranges":[{"startOffset":4965,"endOffset":5049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5123,"endOffset":5146,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5278,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"shouldResolveId","ranges":[{"startOffset":5702,"endOffset":5822,"count":1}],"isBlockCoverage":true},{"functionName":"_resolveUrl","ranges":[{"startOffset":5825,"endOffset":7116,"count":1},{"startOffset":5976,"endOffset":5994,"count":0},{"startOffset":6101,"endOffset":6120,"count":0},{"startOffset":6224,"endOffset":6232,"count":0},{"startOffset":6267,"endOffset":6285,"count":0},{"startOffset":6304,"endOffset":6319,"count":0},{"startOffset":6321,"endOffset":6983,"count":0},{"startOffset":7069,"endOffset":7074,"count":0}],"isBlockCoverage":true},{"functionName":"resolveUrl","ranges":[{"startOffset":7119,"endOffset":7400,"count":1}],"isBlockCoverage":true},{"functionName":"dependencyRequest","ranges":[{"startOffset":7422,"endOffset":7534,"count":0}],"isBlockCoverage":false},{"functionName":"directRequest","ranges":[{"startOffset":7556,"endOffset":11623,"count":1},{"startOffset":8187,"endOffset":8211,"count":0},{"startOffset":8470,"endOffset":11622,"count":0}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":7777,"endOffset":8074,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9330,"endOffset":9514,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":9538,"endOffset":9561,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9574,"endOffset":10241,"count":0}],"isBlockCoverage":false},{"functionName":"set exports","ranges":[{"startOffset":10339,"endOffset":10469,"count":0}],"isBlockCoverage":false},{"functionName":"get exports","ranges":[{"startOffset":10477,"endOffset":10527,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10679,"endOffset":10878,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10893,"endOffset":10945,"count":0}],"isBlockCoverage":false},{"functionName":"__vite_ssr_exportAll__","ranges":[{"startOffset":11184,"endOffset":11216,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11522,"endOffset":11549,"count":0}],"isBlockCoverage":false},{"functionName":"getContextPrimitives","ranges":[{"startOffset":11626,"endOffset":11694,"count":0}],"isBlockCoverage":false},{"functionName":"runModule","ranges":[{"startOffset":11697,"endOffset":12105,"count":0}],"isBlockCoverage":false},{"functionName":"prepareContext","ranges":[{"startOffset":12108,"endOffset":12157,"count":0}],"isBlockCoverage":false},{"functionName":"shouldInterop","ranges":[{"startOffset":12283,"endOffset":12435,"count":1},{"startOffset":12363,"endOffset":12376,"count":0}],"isBlockCoverage":true},{"functionName":"importExternalModule","ranges":[{"startOffset":12438,"endOffset":12495,"count":1}],"isBlockCoverage":true},{"functionName":"interopedImport","ranges":[{"startOffset":12546,"endOffset":13566,"count":1},{"startOffset":12699,"endOffset":12721,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12822,"endOffset":12996,"count":5},{"startOffset":12882,"endOffset":12903,"count":1},{"startOffset":12903,"endOffset":12987,"count":4},{"startOffset":12956,"endOffset":12964,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":13004,"endOffset":13175,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":13183,"endOffset":13554,"count":0}],"isBlockCoverage":false},{"functionName":"interopModule","ranges":[{"startOffset":13569,"endOffset":13977,"count":1},{"startOffset":13623,"endOffset":13702,"count":0},{"startOffset":13756,"endOffset":13761,"count":0},{"startOffset":13831,"endOffset":13942,"count":0}],"isBlockCoverage":true},{"functionName":"defineExport","ranges":[{"startOffset":13978,"endOffset":14131,"count":0}],"isBlockCoverage":false},{"functionName":"exportAll","ranges":[{"startOffset":14132,"endOffset":14511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":238,"count":1}],"isBlockCoverage":true}]},{"scriptId":"300","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/snapshot/dist/manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":93,"endOffset":795,"count":1}],"isBlockCoverage":true},{"functionName":"SnapshotManager","ranges":[{"startOffset":97,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":215,"endOffset":275,"count":2}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":278,"endOffset":340,"count":23}],"isBlockCoverage":true},{"functionName":"resolvePath","ranges":[{"startOffset":343,"endOffset":671,"count":24}],"isBlockCoverage":true},{"functionName":"resolver","ranges":[{"startOffset":425,"endOffset":595,"count":24}],"isBlockCoverage":true},{"functionName":"resolveRawPath","ranges":[{"startOffset":674,"endOffset":793,"count":0}],"isBlockCoverage":false},{"functionName":"emptySummary","ranges":[{"startOffset":796,"endOffset":1176,"count":2}],"isBlockCoverage":true},{"functionName":"addSnapshotResult","ranges":[{"startOffset":1177,"endOffset":1885,"count":23},{"startOffset":1247,"endOffset":1268,"count":0},{"startOffset":1299,"endOffset":1322,"count":0},{"startOffset":1351,"endOffset":1376,"count":0},{"startOffset":1403,"endOffset":1426,"count":0},{"startOffset":1601,"endOffset":1719,"count":0}],"isBlockCoverage":true}]},{"scriptId":"301","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-node/dist/server.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16317,"count":1}],"isBlockCoverage":true},{"functionName":"guessCJSversion","ranges":[{"startOffset":1295,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"isValidNodeImport","ranges":[{"startOffset":1886,"endOffset":2387,"count":20},{"startOffset":2003,"endOffset":2015,"count":0},{"startOffset":2047,"endOffset":2060,"count":0},{"startOffset":2196,"endOffset":2208,"count":2},{"startOffset":2208,"endOffset":2268,"count":18},{"startOffset":2268,"endOffset":2281,"count":0},{"startOffset":2281,"endOffset":2386,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2339,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"shouldExternalize","ranges":[{"startOffset":2448,"endOffset":2629,"count":118}],"isBlockCoverage":true},{"functionName":"_shouldExternalize","ranges":[{"startOffset":2630,"endOffset":3736,"count":118},{"startOffset":2708,"endOffset":2718,"count":2},{"startOffset":2718,"endOffset":2777,"count":116},{"startOffset":2783,"endOffset":2793,"count":0},{"startOffset":2793,"endOffset":2852,"count":116},{"startOffset":2852,"endOffset":2860,"count":0},{"startOffset":2861,"endOffset":2879,"count":116},{"startOffset":2881,"endOffset":2913,"count":116},{"startOffset":2919,"endOffset":2929,"count":0},{"startOffset":2929,"endOffset":2975,"count":116},{"startOffset":2975,"endOffset":2983,"count":0},{"startOffset":2984,"endOffset":3011,"count":116},{"startOffset":3013,"endOffset":3034,"count":0},{"startOffset":3105,"endOffset":3113,"count":0},{"startOffset":3114,"endOffset":3130,"count":116},{"startOffset":3137,"endOffset":3150,"count":0},{"startOffset":3150,"endOffset":3220,"count":116},{"startOffset":3220,"endOffset":3228,"count":0},{"startOffset":3229,"endOffset":3247,"count":116},{"startOffset":3254,"endOffset":3264,"count":0},{"startOffset":3264,"endOffset":3377,"count":116},{"startOffset":3377,"endOffset":3428,"count":21},{"startOffset":3397,"endOffset":3405,"count":0},{"startOffset":3446,"endOffset":3473,"count":0},{"startOffset":3474,"endOffset":3478,"count":116},{"startOffset":3553,"endOffset":3566,"count":93},{"startOffset":3566,"endOffset":3639,"count":23},{"startOffset":3639,"endOffset":3649,"count":1},{"startOffset":3649,"endOffset":3672,"count":22},{"startOffset":3672,"endOffset":3718,"count":20},{"startOffset":3718,"endOffset":3735,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3314,"endOffset":3339,"count":116}],"isBlockCoverage":true},{"functionName":"matchExternalizePattern","ranges":[{"startOffset":3737,"endOffset":4130,"count":371},{"startOffset":3833,"endOffset":3846,"count":116},{"startOffset":3846,"endOffset":3876,"count":255},{"startOffset":3876,"endOffset":3888,"count":0},{"startOffset":3888,"endOffset":3918,"count":255},{"startOffset":3918,"endOffset":4112,"count":788},{"startOffset":3952,"endOffset":4051,"count":116},{"startOffset":4033,"endOffset":4045,"count":0},{"startOffset":4051,"endOffset":4108,"count":672},{"startOffset":4090,"endOffset":4102,"count":94},{"startOffset":4112,"endOffset":4129,"count":161}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3987,"endOffset":4022,"count":116}],"isBlockCoverage":true},{"functionName":"patchWindowsImportPath","ranges":[{"startOffset":4131,"endOffset":4324,"count":116},{"startOffset":4203,"endOffset":4235,"count":0},{"startOffset":4298,"endOffset":4322,"count":0}],"isBlockCoverage":true},{"functionName":"hashCode","ranges":[{"startOffset":4326,"endOffset":4457,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4473,"endOffset":6509,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6594,"endOffset":16252,"count":1}],"isBlockCoverage":true},{"functionName":"ViteNodeServer","ranges":[{"startOffset":6598,"endOffset":8385,"count":1},{"startOffset":6767,"endOffset":6789,"count":0},{"startOffset":6962,"endOffset":7029,"count":0},{"startOffset":7106,"endOffset":7125,"count":0},{"startOffset":7335,"endOffset":7540,"count":0},{"startOffset":7570,"endOffset":7634,"count":0},{"startOffset":7677,"endOffset":7707,"count":0},{"startOffset":7899,"endOffset":7920,"count":0},{"startOffset":7961,"endOffset":8025,"count":0},{"startOffset":8327,"endOffset":8381,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7245,"endOffset":7275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8098,"endOffset":8250,"count":1},{"startOffset":8149,"endOffset":8165,"count":0},{"startOffset":8204,"endOffset":8215,"count":0}],"isBlockCoverage":true},{"functionName":"shouldExternalize","ranges":[{"startOffset":8929,"endOffset":9032,"count":118}],"isBlockCoverage":true},{"functionName":"getTotalDuration","ranges":[{"startOffset":9035,"endOffset":9265,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9241,"endOffset":9256,"count":118}],"isBlockCoverage":true},{"functionName":"ensureExists","ranges":[{"startOffset":9268,"endOffset":9615,"count":0}],"isBlockCoverage":false},{"functionName":"resolveId","ranges":[{"startOffset":9618,"endOffset":9994,"count":661},{"startOffset":9682,"endOffset":9749,"count":587},{"startOffset":9757,"endOffset":9811,"count":0},{"startOffset":9843,"endOffset":9900,"count":2},{"startOffset":9856,"endOffset":9890,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceMap","ranges":[{"startOffset":9997,"endOffset":10423,"count":0}],"isBlockCoverage":false},{"functionName":"assertMode","ranges":[{"startOffset":10426,"endOffset":10561,"count":745}],"isBlockCoverage":true},{"functionName":"fetchModule","ranges":[{"startOffset":10564,"endOffset":10801,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10707,"endOffset":10795,"count":1},{"startOffset":10785,"endOffset":10788,"count":0}],"isBlockCoverage":true},{"functionName":"fetchResult","ranges":[{"startOffset":10804,"endOffset":11168,"count":745},{"startOffset":10991,"endOffset":11127,"count":574}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11066,"endOffset":11118,"count":574}],"isBlockCoverage":true},{"functionName":"transformRequest","ranges":[{"startOffset":11171,"endOffset":11570,"count":0}],"isBlockCoverage":false},{"functionName":"transformModule","ranges":[{"startOffset":11573,"endOffset":12038,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformMode","ranges":[{"startOffset":12041,"endOffset":12532,"count":1},{"startOffset":12196,"endOffset":12204,"count":0},{"startOffset":12223,"endOffset":12262,"count":0},{"startOffset":12270,"endOffset":12283,"count":0},{"startOffset":12349,"endOffset":12357,"count":0},{"startOffset":12376,"endOffset":12415,"count":0},{"startOffset":12423,"endOffset":12436,"count":0},{"startOffset":12510,"endOffset":12531,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12233,"endOffset":12261,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12386,"endOffset":12414,"count":0}],"isBlockCoverage":false},{"functionName":"getChangedModule","ranges":[{"startOffset":12535,"endOffset":13151,"count":574},{"startOffset":12695,"endOffset":12709,"count":324},{"startOffset":12709,"endOffset":12797,"count":250},{"startOffset":12797,"endOffset":12814,"count":0},{"startOffset":12822,"endOffset":12834,"count":250},{"startOffset":12834,"endOffset":13150,"count":0}],"isBlockCoverage":true},{"functionName":"_fetchModule","ranges":[{"startOffset":13154,"endOffset":14997,"count":574},{"startOffset":13280,"endOffset":13288,"count":0},{"startOffset":13347,"endOffset":13686,"count":0},{"startOffset":13917,"endOffset":13994,"count":324},{"startOffset":13995,"endOffset":13998,"count":250},{"startOffset":14014,"endOffset":14066,"count":456},{"startOffset":14034,"endOffset":14065,"count":0},{"startOffset":14074,"endOffset":14094,"count":456},{"startOffset":14094,"endOffset":14227,"count":118},{"startOffset":14227,"endOffset":14351,"count":23},{"startOffset":14305,"endOffset":14344,"count":0},{"startOffset":14351,"endOffset":14609,"count":95},{"startOffset":14550,"endOffset":14558,"count":0},{"startOffset":14584,"endOffset":14592,"count":0},{"startOffset":14609,"endOffset":14765,"count":118},{"startOffset":14852,"endOffset":14856,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13500,"endOffset":13609,"count":0}],"isBlockCoverage":false},{"functionName":"processTransformResult","ranges":[{"startOffset":15000,"endOffset":15265,"count":95},{"startOffset":15184,"endOffset":15192,"count":1},{"startOffset":15193,"endOffset":15203,"count":94},{"startOffset":15205,"endOffset":15216,"count":1}],"isBlockCoverage":true},{"functionName":"_transformRequest","ranges":[{"startOffset":15268,"endOffset":16250,"count":95},{"startOffset":15443,"endOffset":15466,"count":0},{"startOffset":15468,"endOffset":15604,"count":0},{"startOffset":15638,"endOffset":15796,"count":0},{"startOffset":16131,"endOffset":16147,"count":0},{"startOffset":16155,"endOffset":16227,"count":0}],"isBlockCoverage":true}]},{"scriptId":"302","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/utils/dist/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32137,"count":1},{"startOffset":3127,"endOffset":3209,"count":64}],"isBlockCoverage":true},{"functionName":"normalizeWindowsPath","ranges":[{"startOffset":57,"endOffset":201,"count":116},{"startOffset":140,"endOffset":163,"count":84},{"startOffset":163,"endOffset":200,"count":32}],"isBlockCoverage":true},{"functionName":"cwd","ranges":[{"startOffset":277,"endOffset":399,"count":6},{"startOffset":383,"endOffset":398,"count":0}],"isBlockCoverage":true},{"functionName":"resolve$2","ranges":[{"startOffset":418,"endOffset":1086,"count":116},{"startOffset":632,"endOffset":652,"count":232},{"startOffset":663,"endOffset":872,"count":122},{"startOffset":693,"endOffset":712,"count":116},{"startOffset":713,"endOffset":720,"count":6},{"startOffset":758,"endOffset":781,"count":0},{"startOffset":993,"endOffset":1029,"count":0},{"startOffset":1078,"endOffset":1083,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":474,"endOffset":518,"count":116}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":1088,"endOffset":2781,"count":116},{"startOffset":1292,"endOffset":2765,"count":12632},{"startOffset":1323,"endOffset":1356,"count":12516},{"startOffset":1356,"endOffset":1431,"count":116},{"startOffset":1400,"endOffset":1431,"count":0},{"startOffset":1431,"endOffset":1454,"count":12516},{"startOffset":1454,"endOffset":2671,"count":1354},{"startOffset":1490,"endOffset":1503,"count":1276},{"startOffset":1505,"endOffset":1506,"count":78},{"startOffset":1506,"endOffset":2624,"count":1276},{"startOffset":1528,"endOffset":2394,"count":0},{"startOffset":2430,"endOffset":2498,"count":1160},{"startOffset":2498,"endOffset":2565,"count":116},{"startOffset":2671,"endOffset":2761,"count":11162},{"startOffset":2694,"endOffset":2708,"count":134},{"startOffset":2710,"endOffset":2731,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":2801,"endOffset":2850,"count":238}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":3210,"endOffset":4597,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":4598,"endOffset":4728,"count":0}],"isBlockCoverage":false},{"functionName":"decodeInteger","ranges":[{"startOffset":4729,"endOffset":5177,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":5178,"endOffset":5310,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":5311,"endOffset":5367,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator$1","ranges":[{"startOffset":5368,"endOffset":5427,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6355,"endOffset":6742,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":6772,"endOffset":6841,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":6842,"endOffset":6916,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":6917,"endOffset":6985,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":6986,"endOffset":7053,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":7054,"endOffset":7117,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":7118,"endOffset":7315,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":7316,"endOffset":7543,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":7544,"endOffset":7762,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":7763,"endOffset":8651,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":8652,"endOffset":8967,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":8968,"endOffset":9378,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":9543,"endOffset":11939,"count":0}],"isBlockCoverage":false},{"functionName":"resolve$1","ranges":[{"startOffset":12008,"endOffset":14397,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":14399,"endOffset":14801,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":14875,"endOffset":15019,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":15198,"endOffset":15774,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":15775,"endOffset":15972,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":15973,"endOffset":16156,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":16157,"endOffset":16278,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":16279,"endOffset":16346,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":16919,"endOffset":17341,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":17342,"endOffset":17541,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":17542,"endOffset":17728,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":17729,"endOffset":17845,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":18035,"endOffset":18751,"count":0}],"isBlockCoverage":false},{"functionName":"buildBySources","ranges":[{"startOffset":18882,"endOffset":20190,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":20191,"endOffset":20345,"count":0}],"isBlockCoverage":false},{"functionName":"buildNullArray","ranges":[{"startOffset":20779,"endOffset":20840,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":21603,"endOffset":22665,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22669,"endOffset":25297,"count":1}],"isBlockCoverage":true},{"functionName":"decodedMappings","ranges":[{"startOffset":22699,"endOffset":22787,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":22815,"endOffset":23895,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPositionFor","ranges":[{"startOffset":23924,"endOffset":24070,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPosition","ranges":[{"startOffset":24076,"endOffset":25295,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":25302,"endOffset":25394,"count":0}],"isBlockCoverage":false},{"functionName":"GMapping","ranges":[{"startOffset":25395,"endOffset":25459,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":25460,"endOffset":25863,"count":0}],"isBlockCoverage":false},{"functionName":"sliceGeneratedPositions","ranges":[{"startOffset":25864,"endOffset":27421,"count":0}],"isBlockCoverage":false},{"functionName":"extractLocation","ranges":[{"startOffset":27866,"endOffset":28435,"count":116},{"startOffset":27936,"endOffset":27953,"count":0},{"startOffset":28083,"endOffset":28100,"count":0},{"startOffset":28182,"endOffset":28247,"count":0},{"startOffset":28279,"endOffset":28377,"count":0},{"startOffset":28402,"endOffset":28411,"count":0},{"startOffset":28422,"endOffset":28431,"count":0}],"isBlockCoverage":true},{"functionName":"parseSingleFFOrSafariStack","ranges":[{"startOffset":28436,"endOffset":29225,"count":15},{"startOffset":28564,"endOffset":28729,"count":0},{"startOffset":28735,"endOffset":28899,"count":0},{"startOffset":28900,"endOffset":28912,"count":0},{"startOffset":28913,"endOffset":28921,"count":0},{"startOffset":29030,"endOffset":29044,"count":0},{"startOffset":29045,"endOffset":29061,"count":0},{"startOffset":29067,"endOffset":29136,"count":0}],"isBlockCoverage":true},{"functionName":"parseSingleStack","ranges":[{"startOffset":29226,"endOffset":29409,"count":0}],"isBlockCoverage":false},{"functionName":"parseSingleV8Stack","ranges":[{"startOffset":29410,"endOffset":30519,"count":230},{"startOffset":29516,"endOffset":29528,"count":114},{"startOffset":29528,"endOffset":29564,"count":116},{"startOffset":29564,"endOffset":29648,"count":0},{"startOffset":29648,"endOffset":29830,"count":116},{"startOffset":29830,"endOffset":29870,"count":94},{"startOffset":29871,"endOffset":29886,"count":22},{"startOffset":29955,"endOffset":29968,"count":94},{"startOffset":29969,"endOffset":29984,"count":22},{"startOffset":30011,"endOffset":30027,"count":94},{"startOffset":30028,"endOffset":30033,"count":22},{"startOffset":30052,"endOffset":30092,"count":116},{"startOffset":30093,"endOffset":30101,"count":0},{"startOffset":30102,"endOffset":30107,"count":116},{"startOffset":30121,"endOffset":30135,"count":116},{"startOffset":30136,"endOffset":30152,"count":116},{"startOffset":30158,"endOffset":30170,"count":0},{"startOffset":30170,"endOffset":30210,"count":116},{"startOffset":30210,"endOffset":30235,"count":0},{"startOffset":30235,"endOffset":30274,"count":116},{"startOffset":30274,"endOffset":30295,"count":78},{"startOffset":30295,"endOffset":30340,"count":116},{"startOffset":30340,"endOffset":30398,"count":94},{"startOffset":30398,"endOffset":30518,"count":116}],"isBlockCoverage":true},{"functionName":"parseStacktrace","ranges":[{"startOffset":30520,"endOffset":31308,"count":28},{"startOffset":30683,"endOffset":30717,"count":15},{"startOffset":30718,"endOffset":30744,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30806,"endOffset":30871,"count":116}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30843,"endOffset":30870,"count":622}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30894,"endOffset":31304,"count":26},{"startOffset":30972,"endOffset":30980,"count":0},{"startOffset":31027,"endOffset":31053,"count":0},{"startOffset":31054,"endOffset":31069,"count":0},{"startOffset":31091,"endOffset":31238,"count":0},{"startOffset":31246,"endOffset":31303,"count":0}],"isBlockCoverage":true},{"functionName":"parseFFOrSafariStackTrace","ranges":[{"startOffset":31309,"endOffset":31449,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31384,"endOffset":31426,"count":15}],"isBlockCoverage":true},{"functionName":"parseV8Stacktrace","ranges":[{"startOffset":31450,"endOffset":31574,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31517,"endOffset":31551,"count":230}],"isBlockCoverage":true},{"functionName":"parseErrorStacktrace","ranges":[{"startOffset":31575,"endOffset":31966,"count":28},{"startOffset":31656,"endOffset":31666,"count":0},{"startOffset":31687,"endOffset":31703,"count":0},{"startOffset":31731,"endOffset":31744,"count":15},{"startOffset":31745,"endOffset":31750,"count":15},{"startOffset":31839,"endOffset":31916,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31872,"endOffset":31914,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/index.8bPxjt7g.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2866,"count":1}],"isBlockCoverage":true},{"functionName":"defaultSerialize","ranges":[{"startOffset":29,"endOffset":73,"count":3261}],"isBlockCoverage":true},{"functionName":"createBirpc","ranges":[{"startOffset":207,"endOffset":2616,"count":24}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":531,"endOffset":1600,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1623,"endOffset":2598,"count":1658},{"startOffset":1804,"endOffset":1841,"count":0},{"startOffset":1878,"endOffset":1956,"count":0},{"startOffset":2034,"endOffset":2076,"count":0},{"startOffset":2102,"endOffset":2275,"count":1603},{"startOffset":2122,"endOffset":2140,"count":0},{"startOffset":2152,"endOffset":2189,"count":0},{"startOffset":2281,"endOffset":2594,"count":0}],"isBlockCoverage":true},{"functionName":"nanoid","ranges":[{"startOffset":2705,"endOffset":2835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"304","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tinypool/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31502,"count":1},{"startOffset":2599,"endOffset":2953,"count":0},{"startOffset":2986,"endOffset":3090,"count":0},{"startOffset":3150,"endOffset":3394,"count":0},{"startOffset":31223,"endOffset":31233,"count":0}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":752,"endOffset":873,"count":1}],"isBlockCoverage":true},{"functionName":"get eventEmitter","ranges":[{"startOffset":876,"endOffset":932,"count":0}],"isBlockCoverage":false},{"functionName":"_EventEmitterAsyncResource","ranges":[{"startOffset":1029,"endOffset":1360,"count":1},{"startOffset":1103,"endOffset":1156,"count":0},{"startOffset":1191,"endOffset":1209,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":1363,"endOffset":1470,"count":8}],"isBlockCoverage":true},{"functionName":"emitDestroy","ranges":[{"startOffset":1473,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"asyncId","ranges":[{"startOffset":1533,"endOffset":1589,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":1592,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":1665,"endOffset":1723,"count":32}],"isBlockCoverage":true},{"functionName":"get EventEmitterAsyncResource","ranges":[{"startOffset":1733,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2367,"endOffset":2518,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3193,"endOffset":3361,"count":0}],"isBlockCoverage":false},{"functionName":"ThreadWorker","ranges":[{"startOffset":3576,"endOffset":3770,"count":31}],"isBlockCoverage":true},{"functionName":"initialize","ranges":[{"startOffset":3773,"endOffset":3935,"count":31}],"isBlockCoverage":true},{"functionName":"terminate","ranges":[{"startOffset":3938,"endOffset":3997,"count":31}],"isBlockCoverage":true},{"functionName":"postMessage","ranges":[{"startOffset":4000,"endOffset":4107,"count":31}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":4110,"endOffset":4179,"count":62}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":4182,"endOffset":4255,"count":14}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":4258,"endOffset":4329,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":4332,"endOffset":4373,"count":31}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":4376,"endOffset":4421,"count":31}],"isBlockCoverage":true},{"functionName":"setChannel","ranges":[{"startOffset":4424,"endOffset":4551,"count":0}],"isBlockCoverage":false},{"functionName":"ProcessWorker","ranges":[{"startOffset":4825,"endOffset":5313,"count":0}],"isBlockCoverage":false},{"functionName":"initialize","ranges":[{"startOffset":5316,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":5744,"endOffset":6054,"count":0}],"isBlockCoverage":false},{"functionName":"setChannel","ranges":[{"startOffset":6057,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6189,"endOffset":6279,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":6282,"endOffset":6731,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":6734,"endOffset":7143,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":7146,"endOffset":7220,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":7223,"endOffset":7295,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":7298,"endOffset":7340,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":7343,"endOffset":7448,"count":0}],"isBlockCoverage":false},{"functionName":"onabort","ranges":[{"startOffset":7492,"endOffset":7703,"count":0}],"isBlockCoverage":false},{"functionName":"AbortError","ranges":[{"startOffset":7745,"endOffset":7804,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":7807,"endOffset":7848,"count":0}],"isBlockCoverage":false},{"functionName":"CancelError","ranges":[{"startOffset":7894,"endOffset":7955,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":7958,"endOffset":8000,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTaskQueue","ranges":[{"startOffset":8035,"endOffset":8092,"count":2}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":8095,"endOffset":8141,"count":119}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":8144,"endOffset":8188,"count":17}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":8191,"endOffset":8234,"count":17}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":8237,"endOffset":8370,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":8373,"endOffset":8488,"count":0}],"isBlockCoverage":false},{"functionName":"DirectlyTransferable","ranges":[{"startOffset":8952,"endOffset":9055,"count":0}],"isBlockCoverage":false},{"functionName":"DirectlyTransferable","ranges":[{"startOffset":9058,"endOffset":9124,"count":0}],"isBlockCoverage":false},{"functionName":"DirectlyTransferable","ranges":[{"startOffset":9127,"endOffset":9186,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewTransferable","ranges":[{"startOffset":9269,"endOffset":9368,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewTransferable","ranges":[{"startOffset":9371,"endOffset":9443,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewTransferable","ranges":[{"startOffset":9446,"endOffset":9504,"count":0}],"isBlockCoverage":false},{"functionName":"maybeFileURLToPath","ranges":[{"startOffset":9554,"endOffset":9681,"count":25},{"startOffset":9632,"endOffset":9667,"count":0}],"isBlockCoverage":true},{"functionName":"TaskInfo","ranges":[{"startOffset":9730,"endOffset":10981,"count":24},{"startOffset":10603,"endOffset":10794,"count":0}],"isBlockCoverage":true},{"functionName":"TaskInfo.cancel","ranges":[{"startOffset":10504,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"releaseTask","ranges":[{"startOffset":10984,"endOffset":11068,"count":24}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":11071,"endOffset":11478,"count":24},{"startOffset":11200,"endOffset":11221,"count":0},{"startOffset":11223,"endOffset":11474,"count":0}],"isBlockCoverage":true},{"functionName":"TaskInfo","ranges":[{"startOffset":11481,"endOffset":11581,"count":0}],"isBlockCoverage":false},{"functionName":"AsynchronouslyCreatedResource","ranges":[{"startOffset":11631,"endOffset":11699,"count":31}],"isBlockCoverage":true},{"functionName":"markAsReady","ranges":[{"startOffset":11702,"endOffset":11896,"count":30},{"startOffset":11867,"endOffset":11892,"count":23}],"isBlockCoverage":true},{"functionName":"isReady","ranges":[{"startOffset":11899,"endOffset":11957,"count":30}],"isBlockCoverage":true},{"functionName":"onReady","ranges":[{"startOffset":11960,"endOffset":12087,"count":31},{"startOffset":12014,"endOffset":12047,"count":7},{"startOffset":12047,"endOffset":12086,"count":24}],"isBlockCoverage":true},{"functionName":"AsynchronouslyCreatedResourcePool","ranges":[{"startOffset":12141,"endOffset":12470,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":12473,"endOffset":12713,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12535,"endOffset":12707,"count":30}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":12716,"endOffset":12804,"count":31}],"isBlockCoverage":true},{"functionName":"findAvailable","ranges":[{"startOffset":12807,"endOffset":13137,"count":8},{"startOffset":12929,"endOffset":13111,"count":35},{"startOffset":13003,"endOffset":13015,"count":7},{"startOffset":13015,"endOffset":13044,"count":28},{"startOffset":13044,"endOffset":13105,"count":0},{"startOffset":13111,"endOffset":13136,"count":1}],"isBlockCoverage":true},{"functionName":"AsynchronouslyCreatedResourcePool","ranges":[{"startOffset":13140,"endOffset":13224,"count":7},{"startOffset":13192,"endOffset":13220,"count":6},{"startOffset":13220,"endOffset":13223,"count":0}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":13227,"endOffset":13301,"count":128}],"isBlockCoverage":true},{"functionName":"maybeAvailable","ranges":[{"startOffset":13304,"endOffset":13477,"count":30}],"isBlockCoverage":true},{"functionName":"onAvailable","ranges":[{"startOffset":13480,"endOffset":13541,"count":1}],"isBlockCoverage":true},{"functionName":"ThreadTermination","ranges":[{"startOffset":13581,"endOffset":13625,"count":0}],"isBlockCoverage":false},{"functionName":"FilenameNotProvided","ranges":[{"startOffset":13650,"endOffset":13724,"count":0}],"isBlockCoverage":false},{"functionName":"TaskQueueAtLimit","ranges":[{"startOffset":13746,"endOffset":13787,"count":0}],"isBlockCoverage":false},{"functionName":"NoTaskQueueAvailable","ranges":[{"startOffset":13813,"endOffset":13880,"count":0}],"isBlockCoverage":false},{"functionName":"WorkerInfo","ranges":[{"startOffset":13949,"endOffset":14847,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14612,"endOffset":14654,"count":24}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":14850,"endOffset":15463,"count":31},{"startOffset":15104,"endOffset":15110,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14936,"endOffset":14998,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15040,"endOffset":15093,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15145,"endOffset":15441,"count":31},{"startOffset":15328,"endOffset":15388,"count":0}],"isBlockCoverage":true},{"functionName":"clearIdleTimeout","ranges":[{"startOffset":15466,"endOffset":15602,"count":55},{"startOffset":15522,"endOffset":15598,"count":0}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":15605,"endOffset":15654,"count":24}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":15657,"endOffset":15710,"count":47}],"isBlockCoverage":true},{"functionName":"_handleResponse","ranges":[{"startOffset":15713,"endOffset":15877,"count":24}],"isBlockCoverage":true},{"functionName":"postTask","ranges":[{"startOffset":15880,"endOffset":16587,"count":24},{"startOffset":16146,"endOffset":16207,"count":0},{"startOffset":16275,"endOffset":16334,"count":0}],"isBlockCoverage":true},{"functionName":"processPendingMessages","ranges":[{"startOffset":16590,"endOffset":16969,"count":0}],"isBlockCoverage":false},{"functionName":"isRunningAbortableTask","ranges":[{"startOffset":16972,"endOffset":17134,"count":126},{"startOffset":17040,"endOffset":17053,"count":91},{"startOffset":17053,"endOffset":17133,"count":35}],"isBlockCoverage":true},{"functionName":"currentUsage","ranges":[{"startOffset":17137,"endOffset":17251,"count":126},{"startOffset":17199,"endOffset":17215,"count":0}],"isBlockCoverage":true},{"functionName":"ThreadPool","ranges":[{"startOffset":17282,"endOffset":18938,"count":1},{"startOffset":18003,"endOffset":18009,"count":0},{"startOffset":18422,"endOffset":18489,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18655,"endOffset":18678,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18808,"endOffset":18841,"count":30}],"isBlockCoverage":true},{"functionName":"_ensureEnoughWorkersForTaskQueue","ranges":[{"startOffset":18941,"endOffset":19116,"count":24},{"startOffset":19029,"endOffset":19075,"count":10},{"startOffset":19077,"endOffset":19112,"count":0}],"isBlockCoverage":true},{"functionName":"_ensureMaximumWorkers","ranges":[{"startOffset":19119,"endOffset":19240,"count":0}],"isBlockCoverage":false},{"functionName":"_ensureMinimumWorkers","ranges":[{"startOffset":19243,"endOffset":19364,"count":25},{"startOffset":19325,"endOffset":19360,"count":31}],"isBlockCoverage":true},{"functionName":"_addNewWorker","ranges":[{"startOffset":19367,"endOffset":22247,"count":31},{"startOffset":19754,"endOffset":19775,"count":0},{"startOffset":20885,"endOffset":20924,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19486,"endOffset":19645,"count":217},{"startOffset":19543,"endOffset":19555,"count":54},{"startOffset":19557,"endOffset":19639,"count":31}],"isBlockCoverage":true},{"functionName":"onMessage","ranges":[{"startOffset":20148,"endOffset":20695,"count":24},{"startOffset":20354,"endOffset":20412,"count":0},{"startOffset":20444,"endOffset":20589,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20811,"endOffset":20846,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21197,"endOffset":21542,"count":30},{"startOffset":21295,"endOffset":21336,"count":23},{"startOffset":21372,"endOffset":21419,"count":23},{"startOffset":21443,"endOffset":21541,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21568,"endOffset":22129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22174,"endOffset":22207,"count":31}],"isBlockCoverage":true},{"functionName":"_processPendingMessages","ranges":[{"startOffset":22250,"endOffset":22589,"count":24},{"startOffset":22366,"endOffset":22585,"count":0}],"isBlockCoverage":true},{"functionName":"_removeWorker","ranges":[{"startOffset":22592,"endOffset":22753,"count":31}],"isBlockCoverage":true},{"functionName":"_onWorkerAvailable","ranges":[{"startOffset":22756,"endOffset":23641,"count":30},{"startOffset":22825,"endOffset":22853,"count":13},{"startOffset":22855,"endOffset":22923,"count":17},{"startOffset":22925,"endOffset":23278,"count":17},{"startOffset":23031,"endOffset":23063,"count":0},{"startOffset":23065,"endOffset":23128,"count":0},{"startOffset":23278,"endOffset":23365,"count":13},{"startOffset":23367,"endOffset":23637,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23411,"endOffset":23595,"count":0}],"isBlockCoverage":false},{"functionName":"runTask","ranges":[{"startOffset":23644,"endOffset":26457,"count":24},{"startOffset":23870,"endOffset":23909,"count":0},{"startOffset":23948,"endOffset":24014,"count":0},{"startOffset":24730,"endOffset":25156,"count":0},{"startOffset":25190,"endOffset":25698,"count":16},{"startOffset":25316,"endOffset":25519,"count":0},{"startOffset":25584,"endOffset":25627,"count":0},{"startOffset":25698,"endOffset":25778,"count":8},{"startOffset":25778,"endOffset":25810,"count":7},{"startOffset":25811,"endOffset":25820,"count":0},{"startOffset":25822,"endOffset":25854,"count":0},{"startOffset":25854,"endOffset":25921,"count":8},{"startOffset":25921,"endOffset":25953,"count":7},{"startOffset":25955,"endOffset":26001,"count":1},{"startOffset":26003,"endOffset":26072,"count":0},{"startOffset":26072,"endOffset":26102,"count":8},{"startOffset":26102,"endOffset":26315,"count":1},{"startOffset":26141,"endOffset":26164,"count":0},{"startOffset":26166,"endOffset":26237,"count":0},{"startOffset":26315,"endOffset":26456,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24121,"endOffset":24183,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24256,"endOffset":24639,"count":24},{"startOffset":24323,"endOffset":24353,"count":0},{"startOffset":24593,"endOffset":24633,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24455,"endOffset":24489,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24496,"endOffset":24541,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24548,"endOffset":24569,"count":24}],"isBlockCoverage":true},{"functionName":"taskInfo.abortListener","ranges":[{"startOffset":24848,"endOffset":25102,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRecycleWorker","ranges":[{"startOffset":26460,"endOffset":26879,"count":48},{"startOffset":26537,"endOffset":26563,"count":0},{"startOffset":26651,"endOffset":26743,"count":0},{"startOffset":26744,"endOffset":26829,"count":0},{"startOffset":26831,"endOffset":26878,"count":0}],"isBlockCoverage":true},{"functionName":"pendingCapacity","ranges":[{"startOffset":26882,"endOffset":26988,"count":16}],"isBlockCoverage":true},{"functionName":"_maybeDrain","ranges":[{"startOffset":26991,"endOffset":27126,"count":24},{"startOffset":27041,"endOffset":27071,"count":8},{"startOffset":27073,"endOffset":27122,"count":8}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":27129,"endOffset":27695,"count":1},{"startOffset":27185,"endOffset":27300,"count":0},{"startOffset":27337,"endOffset":27452,"count":0},{"startOffset":27514,"endOffset":27656,"count":7}],"isBlockCoverage":true},{"functionName":"recycleWorkers","ranges":[{"startOffset":27698,"endOffset":28350,"count":0}],"isBlockCoverage":false},{"functionName":"Tinypool","ranges":[{"startOffset":28432,"endOffset":29187,"count":1},{"startOffset":28551,"endOffset":28641,"count":0},{"startOffset":28733,"endOffset":28823,"count":0},{"startOffset":29023,"endOffset":29121,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":29190,"endOffset":29467,"count":24}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":29470,"endOffset":29533,"count":1}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":29536,"endOffset":29601,"count":0}],"isBlockCoverage":false},{"functionName":"get threads","ranges":[{"startOffset":29604,"endOffset":29766,"count":0}],"isBlockCoverage":false},{"functionName":"get queueSize","ranges":[{"startOffset":29769,"endOffset":29904,"count":0}],"isBlockCoverage":false},{"functionName":"cancelPendingTasks","ranges":[{"startOffset":29907,"endOffset":30006,"count":0}],"isBlockCoverage":false},{"functionName":"recycleWorkers","ranges":[{"startOffset":30009,"endOffset":30110,"count":0}],"isBlockCoverage":false},{"functionName":"get completed","ranges":[{"startOffset":30113,"endOffset":30182,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":30185,"endOffset":30269,"count":0}],"isBlockCoverage":false},{"functionName":"get isWorkerThread","ranges":[{"startOffset":30279,"endOffset":30369,"count":0}],"isBlockCoverage":false},{"functionName":"get workerData","ranges":[{"startOffset":30379,"endOffset":30462,"count":0}],"isBlockCoverage":false},{"functionName":"get version","ranges":[{"startOffset":30472,"endOffset":30606,"count":0}],"isBlockCoverage":false},{"functionName":"move","ranges":[{"startOffset":30616,"endOffset":30970,"count":0}],"isBlockCoverage":false},{"functionName":"get transferableSymbol","ranges":[{"startOffset":30980,"endOffset":31036,"count":0}],"isBlockCoverage":false},{"functionName":"get valueSymbol","ranges":[{"startOffset":31046,"endOffset":31088,"count":0}],"isBlockCoverage":false},{"functionName":"get queueOptionsSymbol","ranges":[{"startOffset":31098,"endOffset":31154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"node:internal/async_local_storage/async_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2777,"count":1}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":322,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncLocalStorage","ranges":[{"startOffset":655,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":768,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"snapshot","ranges":[{"startOffset":832,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":921,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"_enable","ranges":[{"startOffset":1262,"endOffset":1414,"count":0}],"isBlockCoverage":false},{"functionName":"_propagate","ranges":[{"startOffset":1486,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"enterWith","ranges":[{"startOffset":1677,"endOffset":1813,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":1819,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":2341,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"getStore","ranges":[{"startOffset":2589,"endOffset":2733,"count":0}],"isBlockCoverage":false}]},{"scriptId":"306","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/index.Q04MCqDO.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196461,"count":1},{"startOffset":106238,"endOffset":106249,"count":0},{"startOffset":106315,"endOffset":106326,"count":0},{"startOffset":107248,"endOffset":107537,"count":0},{"startOffset":112997,"endOffset":113070,"count":0},{"startOffset":113274,"endOffset":113305,"count":0},{"startOffset":113363,"endOffset":113417,"count":0}],"isBlockCoverage":true},{"functionName":"getOutputFile","ranges":[{"startOffset":2054,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"wrapSerializableConfig","ranges":[{"startOffset":2278,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":2693,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":2727,"endOffset":2783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2947,"endOffset":2991,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":3010,"endOffset":3503,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":3512,"endOffset":3591,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":3592,"endOffset":3871,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":3879,"endOffset":4058,"count":0}],"isBlockCoverage":false},{"functionName":"v","ranges":[{"startOffset":4071,"endOffset":4515,"count":0}],"isBlockCoverage":false},{"functionName":"B","ranges":[{"startOffset":4518,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"x","ranges":[{"startOffset":4594,"endOffset":4774,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4627,"endOffset":4773,"count":0}],"isBlockCoverage":false},{"functionName":"Z","ranges":[{"startOffset":4853,"endOffset":4963,"count":0}],"isBlockCoverage":false},{"functionName":"W","ranges":[{"startOffset":4987,"endOffset":5032,"count":0}],"isBlockCoverage":false},{"functionName":"be","ranges":[{"startOffset":5033,"endOffset":8045,"count":0}],"isBlockCoverage":false},{"functionName":"J","ranges":[{"startOffset":8045,"endOffset":8080,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":8080,"endOffset":8116,"count":0}],"isBlockCoverage":false},{"functionName":"N","ranges":[{"startOffset":8116,"endOffset":8150,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8157,"endOffset":9568,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9588,"endOffset":9635,"count":1}],"isBlockCoverage":true},{"functionName":"Te","ranges":[{"startOffset":9648,"endOffset":10062,"count":0}],"isBlockCoverage":false},{"functionName":"we","ranges":[{"startOffset":10062,"endOffset":12507,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12514,"endOffset":12844,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12864,"endOffset":13490,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13523,"endOffset":14281,"count":1}],"isBlockCoverage":true},{"functionName":"ne","ranges":[{"startOffset":14305,"endOffset":14330,"count":0}],"isBlockCoverage":false},{"functionName":"Oe","ranges":[{"startOffset":14362,"endOffset":14417,"count":0}],"isBlockCoverage":false},{"functionName":"R","ranges":[{"startOffset":14420,"endOffset":14747,"count":0}],"isBlockCoverage":false},{"functionName":"Ae","ranges":[{"startOffset":14786,"endOffset":15757,"count":0}],"isBlockCoverage":false},{"functionName":"je","ranges":[{"startOffset":15761,"endOffset":16360,"count":0}],"isBlockCoverage":false},{"functionName":"te","ranges":[{"startOffset":16364,"endOffset":17496,"count":0}],"isBlockCoverage":false},{"functionName":"ie","ranges":[{"startOffset":17500,"endOffset":17522,"count":0}],"isBlockCoverage":false},{"functionName":"$e","ranges":[{"startOffset":17526,"endOffset":17653,"count":0}],"isBlockCoverage":false},{"functionName":"makeTscErrorInfo","ranges":[{"startOffset":17841,"endOffset":18901,"count":0}],"isBlockCoverage":false},{"functionName":"getTsconfig","ranges":[{"startOffset":18902,"endOffset":20017,"count":0}],"isBlockCoverage":false},{"functionName":"getRawErrsMapFromTsCompile","ranges":[{"startOffset":20018,"endOffset":20759,"count":0}],"isBlockCoverage":false},{"functionName":"createIndexMap","ranges":[{"startOffset":20761,"endOffset":21091,"count":0}],"isBlockCoverage":false},{"functionName":"collectTests","ranges":[{"startOffset":21093,"endOffset":24553,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":24590,"endOffset":24731,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":24750,"endOffset":32505,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":33236,"endOffset":47949,"count":1},{"startOffset":33329,"endOffset":33337,"count":0}],"isBlockCoverage":true},{"functionName":"BaseReporter","ranges":[{"startOffset":33557,"endOffset":33615,"count":1}],"isBlockCoverage":true},{"functionName":"get mode","ranges":[{"startOffset":33618,"endOffset":33667,"count":25}],"isBlockCoverage":true},{"functionName":"onInit","ranges":[{"startOffset":33670,"endOffset":33897,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33720,"endOffset":33825,"count":1},{"startOffset":33793,"endOffset":33801,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":33900,"endOffset":33973,"count":1}],"isBlockCoverage":true},{"functionName":"onFinished","ranges":[{"startOffset":33976,"endOffset":34280,"count":1},{"startOffset":34178,"endOffset":34276,"count":0}],"isBlockCoverage":true},{"functionName":"onTaskUpdate","ranges":[{"startOffset":34283,"endOffset":36205,"count":129},{"startOffset":34363,"endOffset":36204,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34716,"endOffset":34830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34870,"endOffset":34915,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36071,"endOffset":36175,"count":0}],"isBlockCoverage":false},{"functionName":"onWatcherStart","ranges":[{"startOffset":36208,"endOffset":37662,"count":0}],"isBlockCoverage":false},{"functionName":"resetLastRunLog","ranges":[{"startOffset":37665,"endOffset":37846,"count":0}],"isBlockCoverage":false},{"functionName":"onWatcherRerun","ranges":[{"startOffset":37849,"endOffset":39307,"count":0}],"isBlockCoverage":false},{"functionName":"onUserConsoleLog","ranges":[{"startOffset":39310,"endOffset":39764,"count":31},{"startOffset":39370,"endOffset":39377,"count":0},{"startOffset":39445,"endOffset":39453,"count":0},{"startOffset":39509,"endOffset":39542,"count":30},{"startOffset":39543,"endOffset":39605,"count":1},{"startOffset":39589,"endOffset":39605,"count":0},{"startOffset":39652,"endOffset":39682,"count":14},{"startOffset":39683,"endOffset":39712,"count":17}],"isBlockCoverage":true},{"functionName":"shouldLog","ranges":[{"startOffset":39767,"endOffset":40048,"count":62},{"startOffset":39839,"endOffset":39852,"count":0},{"startOffset":39936,"endOffset":39973,"count":0},{"startOffset":40010,"endOffset":40027,"count":0}],"isBlockCoverage":true},{"functionName":"onServerRestart","ranges":[{"startOffset":40051,"endOffset":40226,"count":0}],"isBlockCoverage":false},{"functionName":"reportSummary","ranges":[{"startOffset":40229,"endOffset":40462,"count":1},{"startOffset":40357,"endOffset":40398,"count":0}],"isBlockCoverage":true},{"functionName":"reportTestSummary","ranges":[{"startOffset":40465,"endOffset":43363,"count":1},{"startOffset":41719,"endOffset":41928,"count":0},{"startOffset":42119,"endOffset":42478,"count":0},{"startOffset":42508,"endOffset":42611,"count":0},{"startOffset":42712,"endOffset":42777,"count":0},{"startOffset":43207,"endOffset":43250,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40663,"endOffset":40722,"count":24},{"startOffset":40717,"endOffset":40721,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40763,"endOffset":40820,"count":24},{"startOffset":40815,"endOffset":40819,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40861,"endOffset":40990,"count":24},{"startOffset":40953,"endOffset":40961,"count":0},{"startOffset":40978,"endOffset":40982,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41048,"endOffset":41084,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41093,"endOffset":41108,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41155,"endOffset":41214,"count":24},{"startOffset":41209,"endOffset":41213,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41257,"endOffset":41316,"count":24},{"startOffset":41311,"endOffset":41315,"count":0}],"isBlockCoverage":true},{"functionName":"padTitle","ranges":[{"startOffset":41403,"endOffset":41441,"count":4}],"isBlockCoverage":true},{"functionName":"time","ranges":[{"startOffset":41460,"endOffset":41587,"count":7},{"startOffset":41504,"endOffset":41542,"count":5},{"startOffset":41542,"endOffset":41586,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41766,"endOffset":41842,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42081,"endOffset":42116,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42155,"endOffset":42348,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43039,"endOffset":43172,"count":1},{"startOffset":43134,"endOffset":43156,"count":0}],"isBlockCoverage":true},{"functionName":"printErrorsSummary","ranges":[{"startOffset":43366,"endOffset":44570,"count":1},{"startOffset":44470,"endOffset":44548,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43555,"endOffset":43645,"count":82},{"startOffset":43617,"endOffset":43625,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43685,"endOffset":43787,"count":156},{"startOffset":43748,"endOffset":43756,"count":0}],"isBlockCoverage":true},{"functionName":"errorDivider","ranges":[{"startOffset":43922,"endOffset":44013,"count":28}],"isBlockCoverage":true},{"functionName":"reportBenchmarkSummary","ranges":[{"startOffset":44573,"endOffset":45776,"count":0}],"isBlockCoverage":false},{"functionName":"printTaskErrors","ranges":[{"startOffset":45779,"endOffset":47498,"count":2},{"startOffset":45903,"endOffset":46760,"count":28},{"startOffset":45945,"endOffset":45953,"count":0},{"startOffset":45976,"endOffset":45984,"count":0},{"startOffset":46808,"endOffset":47494,"count":28},{"startOffset":46884,"endOffset":46892,"count":0},{"startOffset":46910,"endOffset":46915,"count":27},{"startOffset":46959,"endOffset":46967,"count":0},{"startOffset":47017,"endOffset":47025,"count":1},{"startOffset":47026,"endOffset":47042,"count":27},{"startOffset":47129,"endOffset":47189,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45998,"endOffset":46752,"count":28},{"startOffset":46052,"endOffset":46060,"count":0},{"startOffset":46079,"endOffset":46627,"count":13},{"startOffset":46662,"endOffset":46686,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46099,"endOffset":46626,"count":99},{"startOffset":46188,"endOffset":46196,"count":0},{"startOffset":46281,"endOffset":46341,"count":0},{"startOffset":46342,"endOffset":46360,"count":0},{"startOffset":46362,"endOffset":46419,"count":0},{"startOffset":46476,"endOffset":46484,"count":0},{"startOffset":46485,"endOffset":46502,"count":0},{"startOffset":46504,"endOffset":46562,"count":0}],"isBlockCoverage":true},{"functionName":"registerUnhandledRejection","ranges":[{"startOffset":47501,"endOffset":47947,"count":1}],"isBlockCoverage":true},{"functionName":"onUnhandledRejection","ranges":[{"startOffset":47565,"endOffset":47770,"count":0}],"isBlockCoverage":false},{"functionName":"_offUnhandledRejection","ranges":[{"startOffset":47866,"endOffset":47942,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":47992,"endOffset":48123,"count":0}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":48152,"endOffset":49715,"count":2241984},{"startOffset":48230,"endOffset":48250,"count":0},{"startOffset":48372,"endOffset":49712,"count":20677},{"startOffset":48619,"endOffset":48641,"count":0},{"startOffset":48642,"endOffset":48665,"count":0},{"startOffset":48768,"endOffset":48790,"count":0},{"startOffset":48861,"endOffset":48883,"count":0},{"startOffset":48939,"endOffset":48961,"count":0},{"startOffset":49011,"endOffset":49033,"count":0},{"startOffset":49095,"endOffset":49117,"count":0},{"startOffset":49165,"endOffset":49187,"count":0},{"startOffset":49267,"endOffset":49289,"count":0},{"startOffset":49352,"endOffset":49374,"count":0},{"startOffset":49402,"endOffset":49424,"count":0},{"startOffset":49474,"endOffset":49497,"count":0},{"startOffset":49563,"endOffset":49586,"count":0},{"startOffset":49685,"endOffset":49708,"count":0}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":49772,"endOffset":49822,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49788,"endOffset":49822,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":49845,"endOffset":49903,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49861,"endOffset":49903,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":49926,"endOffset":50014,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49942,"endOffset":50014,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":51482,"endOffset":54848,"count":1},{"startOffset":51595,"endOffset":51929,"count":3},{"startOffset":51655,"endOffset":51835,"count":45}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":52561,"endOffset":53057,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":53110,"endOffset":53631,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":53688,"endOffset":53739,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":53797,"endOffset":54554,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":54608,"endOffset":54689,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":54743,"endOffset":54796,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi$1","ranges":[{"startOffset":55009,"endOffset":55043,"count":0}],"isBlockCoverage":false},{"functionName":"checkAnsi","ranges":[{"startOffset":55064,"endOffset":56207,"count":988},{"startOffset":55186,"endOffset":55724,"count":55250},{"startOffset":55253,"endOffset":55305,"count":0},{"startOffset":55475,"endOffset":55545,"count":0},{"startOffset":55599,"endOffset":55721,"count":0},{"startOffset":55742,"endOffset":56179,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55769,"endOffset":55822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56082,"endOffset":56166,"count":0}],"isBlockCoverage":false},{"functionName":"sliceAnsi","ranges":[{"startOffset":56210,"endOffset":57479,"count":988},{"startOffset":56349,"endOffset":56354,"count":0},{"startOffset":56513,"endOffset":57460,"count":2241984},{"startOffset":56579,"endOffset":56845,"count":148824},{"startOffset":56694,"endOffset":56705,"count":0},{"startOffset":56845,"endOffset":56946,"count":2093160},{"startOffset":56870,"endOffset":56890,"count":561233},{"startOffset":56892,"endOffset":56946,"count":148824},{"startOffset":56970,"endOffset":56984,"count":1680751},{"startOffset":56986,"endOffset":57005,"count":1531927},{"startOffset":57092,"endOffset":57168,"count":0},{"startOffset":57192,"endOffset":57215,"count":626834},{"startOffset":57217,"endOffset":57246,"count":626834},{"startOffset":57246,"endOffset":57457,"count":1615150},{"startOffset":57274,"endOffset":57292,"count":988},{"startOffset":57293,"endOffset":57318,"count":988},{"startOffset":57320,"endOffset":57359,"count":988},{"startOffset":57359,"endOffset":57457,"count":1614162},{"startOffset":57391,"endOffset":57457,"count":0}],"isBlockCoverage":true},{"functionName":"isAmbiguous","ranges":[{"startOffset":57501,"endOffset":62117,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidth","ranges":[{"startOffset":62119,"endOffset":62232,"count":2121},{"startOffset":62183,"endOffset":62197,"count":0},{"startOffset":62215,"endOffset":62229,"count":0}],"isBlockCoverage":true},{"functionName":"isWide","ranges":[{"startOffset":62234,"endOffset":65807,"count":2121},{"startOffset":62275,"endOffset":62289,"count":0},{"startOffset":62379,"endOffset":62393,"count":0},{"startOffset":62519,"endOffset":62533,"count":0},{"startOffset":62965,"endOffset":62979,"count":0},{"startOffset":63015,"endOffset":63029,"count":0},{"startOffset":63155,"endOffset":63169,"count":0},{"startOffset":63187,"endOffset":63201,"count":0},{"startOffset":63219,"endOffset":63233,"count":0},{"startOffset":63251,"endOffset":63265,"count":0},{"startOffset":63283,"endOffset":63297,"count":0},{"startOffset":63315,"endOffset":63329,"count":0},{"startOffset":63347,"endOffset":63361,"count":0},{"startOffset":63379,"endOffset":63393,"count":0},{"startOffset":63411,"endOffset":63425,"count":0},{"startOffset":63443,"endOffset":63457,"count":0},{"startOffset":63475,"endOffset":63489,"count":0},{"startOffset":63507,"endOffset":63521,"count":0},{"startOffset":63539,"endOffset":63553,"count":0},{"startOffset":63571,"endOffset":63585,"count":0},{"startOffset":63603,"endOffset":63617,"count":0},{"startOffset":63635,"endOffset":63649,"count":0},{"startOffset":63667,"endOffset":63681,"count":0},{"startOffset":63699,"endOffset":63713,"count":0},{"startOffset":63731,"endOffset":63745,"count":0},{"startOffset":63763,"endOffset":63777,"count":0},{"startOffset":63795,"endOffset":63809,"count":0},{"startOffset":63827,"endOffset":63841,"count":0},{"startOffset":63860,"endOffset":63875,"count":0},{"startOffset":63932,"endOffset":63947,"count":0},{"startOffset":63966,"endOffset":63981,"count":0},{"startOffset":64000,"endOffset":64015,"count":0},{"startOffset":64034,"endOffset":64049,"count":0},{"startOffset":64068,"endOffset":64083,"count":0},{"startOffset":64140,"endOffset":64155,"count":0},{"startOffset":64193,"endOffset":64208,"count":0},{"startOffset":64246,"endOffset":64261,"count":0},{"startOffset":64280,"endOffset":64295,"count":0},{"startOffset":64371,"endOffset":64386,"count":0},{"startOffset":64405,"endOffset":64420,"count":0},{"startOffset":64439,"endOffset":64454,"count":0},{"startOffset":64473,"endOffset":64488,"count":0},{"startOffset":64545,"endOffset":64560,"count":0},{"startOffset":64579,"endOffset":64594,"count":0},{"startOffset":64613,"endOffset":64628,"count":0},{"startOffset":64647,"endOffset":64662,"count":0},{"startOffset":64681,"endOffset":64696,"count":0},{"startOffset":64715,"endOffset":64730,"count":0},{"startOffset":64749,"endOffset":64764,"count":0},{"startOffset":64783,"endOffset":64798,"count":0},{"startOffset":64836,"endOffset":64851,"count":0},{"startOffset":64889,"endOffset":64904,"count":0},{"startOffset":64923,"endOffset":64938,"count":0},{"startOffset":64957,"endOffset":64972,"count":0},{"startOffset":64991,"endOffset":65006,"count":0},{"startOffset":65101,"endOffset":65116,"count":0},{"startOffset":65135,"endOffset":65150,"count":0},{"startOffset":65188,"endOffset":65203,"count":0},{"startOffset":65222,"endOffset":65237,"count":0},{"startOffset":65256,"endOffset":65271,"count":0},{"startOffset":65328,"endOffset":65343,"count":0},{"startOffset":65362,"endOffset":65377,"count":0},{"startOffset":65415,"endOffset":65430,"count":0},{"startOffset":65449,"endOffset":65464,"count":0},{"startOffset":65483,"endOffset":65498,"count":0},{"startOffset":65517,"endOffset":65532,"count":0},{"startOffset":65551,"endOffset":65566,"count":0},{"startOffset":65585,"endOffset":65600,"count":0},{"startOffset":65619,"endOffset":65634,"count":0},{"startOffset":65653,"endOffset":65668,"count":0},{"startOffset":65687,"endOffset":65702,"count":0},{"startOffset":65721,"endOffset":65736,"count":0},{"startOffset":65755,"endOffset":65770,"count":0},{"startOffset":65789,"endOffset":65804,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":65809,"endOffset":65963,"count":2121},{"startOffset":65879,"endOffset":65961,"count":0}],"isBlockCoverage":true},{"functionName":"eastAsianWidth$1","ranges":[{"startOffset":65965,"endOffset":66195,"count":2121},{"startOffset":66135,"endOffset":66160,"count":0},{"startOffset":66165,"endOffset":66181,"count":0}],"isBlockCoverage":true},{"functionName":"emojiRegex$2","ranges":[{"startOffset":66216,"endOffset":79084,"count":2121}],"isBlockCoverage":true},{"functionName":"stringWidth$1","ranges":[{"startOffset":79087,"endOffset":79935,"count":45},{"startOffset":79190,"endOffset":79206,"count":3},{"startOffset":79206,"endOffset":79382,"count":42},{"startOffset":79382,"endOffset":79398,"count":0},{"startOffset":79398,"endOffset":79491,"count":42},{"startOffset":79491,"endOffset":79917,"count":2121},{"startOffset":79617,"endOffset":79637,"count":0},{"startOffset":79640,"endOffset":79658,"count":0},{"startOffset":79719,"endOffset":79741,"count":0},{"startOffset":79743,"endOffset":79761,"count":0},{"startOffset":79801,"endOffset":79834,"count":0},{"startOffset":79917,"endOffset":79934,"count":42}],"isBlockCoverage":true},{"functionName":"getIndexOfNearestSpace","ranges":[{"startOffset":79937,"endOffset":80323,"count":0}],"isBlockCoverage":false},{"functionName":"cliTruncate","ranges":[{"startOffset":80325,"endOffset":82506,"count":45},{"startOffset":80549,"endOffset":80633,"count":0},{"startOffset":80669,"endOffset":80758,"count":0},{"startOffset":80778,"endOffset":80795,"count":0},{"startOffset":80817,"endOffset":80851,"count":0},{"startOffset":80934,"endOffset":82505,"count":0}],"isBlockCoverage":true},{"functionName":"formatFilepath$1","ranges":[{"startOffset":82559,"endOffset":82919,"count":6333},{"startOffset":82759,"endOffset":82786,"count":0}],"isBlockCoverage":true},{"functionName":"formatNumber$1","ranges":[{"startOffset":82920,"endOffset":83113,"count":0}],"isBlockCoverage":false},{"functionName":"renderHookState","ranges":[{"startOffset":83114,"endOffset":83433,"count":138572},{"startOffset":83231,"endOffset":83239,"count":39628},{"startOffset":83240,"endOffset":83250,"count":98944},{"startOffset":83260,"endOffset":83268,"count":41004},{"startOffset":83269,"endOffset":83283,"count":97568},{"startOffset":83297,"endOffset":83315,"count":43157},{"startOffset":83321,"endOffset":83418,"count":2625},{"startOffset":83418,"endOffset":83432,"count":135947}],"isBlockCoverage":true},{"functionName":"renderBenchmarkItems$1","ranges":[{"startOffset":83434,"endOffset":83657,"count":0}],"isBlockCoverage":false},{"functionName":"renderBenchmark$1","ranges":[{"startOffset":83658,"endOffset":84619,"count":0}],"isBlockCoverage":false},{"functionName":"renderTree$1","ranges":[{"startOffset":84620,"endOffset":87858,"count":10019},{"startOffset":84809,"endOffset":87818,"count":34643},{"startOffset":84925,"endOffset":84949,"count":6333},{"startOffset":84950,"endOffset":84969,"count":6333},{"startOffset":84977,"endOffset":85023,"count":0},{"startOffset":85053,"endOffset":85109,"count":18931},{"startOffset":85084,"endOffset":85092,"count":9752},{"startOffset":85093,"endOffset":85108,"count":9179},{"startOffset":85110,"endOffset":85139,"count":0},{"startOffset":85147,"endOffset":85205,"count":0},{"startOffset":85237,"endOffset":85325,"count":15712},{"startOffset":85386,"endOffset":85429,"count":0},{"startOffset":85459,"endOffset":85516,"count":18931},{"startOffset":85490,"endOffset":85498,"count":9752},{"startOffset":85499,"endOffset":85515,"count":9179},{"startOffset":85517,"endOffset":85547,"count":0},{"startOffset":85555,"endOffset":85615,"count":0},{"startOffset":85652,"endOffset":85660,"count":9907},{"startOffset":85661,"endOffset":85674,"count":24736},{"startOffset":85685,"endOffset":85834,"count":18691},{"startOffset":85755,"endOffset":85828,"count":3286},{"startOffset":85860,"endOffset":85918,"count":0},{"startOffset":85926,"endOffset":86009,"count":0},{"startOffset":86063,"endOffset":86093,"count":6333},{"startOffset":86177,"endOffset":86185,"count":0},{"startOffset":86202,"endOffset":86234,"count":0},{"startOffset":86334,"endOffset":86342,"count":9907},{"startOffset":86343,"endOffset":86353,"count":24736},{"startOffset":86366,"endOffset":86398,"count":23240},{"startOffset":86400,"endOffset":86785,"count":0},{"startOffset":86953,"endOffset":86977,"count":15712},{"startOffset":86979,"endOffset":87504,"count":15367},{"startOffset":87019,"endOffset":87027,"count":154},{"startOffset":87028,"endOffset":87038,"count":15213},{"startOffset":87051,"endOffset":87112,"count":10589},{"startOffset":87082,"endOffset":87090,"count":154},{"startOffset":87091,"endOffset":87101,"count":10435},{"startOffset":87113,"endOffset":87137,"count":6344},{"startOffset":87139,"endOffset":87498,"count":9023},{"startOffset":87197,"endOffset":87391,"count":0},{"startOffset":87771,"endOffset":87800,"count":34527},{"startOffset":87808,"endOffset":87814,"count":818}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87249,"endOffset":87294,"count":0}],"isBlockCoverage":false},{"functionName":"createListRenderer","ranges":[{"startOffset":87859,"endOffset":89384,"count":1}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":87983,"endOffset":88700,"count":995},{"startOffset":88055,"endOffset":88421,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88098,"endOffset":88143,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":88716,"endOffset":88827,"count":1},{"startOffset":88751,"endOffset":88763,"count":0}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":88833,"endOffset":88898,"count":23}],"isBlockCoverage":true},{"functionName":"stop","ranges":[{"startOffset":88904,"endOffset":89337,"count":1},{"startOffset":89073,"endOffset":89239,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89118,"endOffset":89163,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":89343,"endOffset":89377,"count":31}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":89429,"endOffset":91590,"count":1}],"isBlockCoverage":true},{"functionName":"onPathsCollected","ranges":[{"startOffset":89493,"endOffset":89787,"count":1}],"isBlockCoverage":true},{"functionName":"onTestRemoved","ranges":[{"startOffset":89790,"endOffset":90237,"count":0}],"isBlockCoverage":false},{"functionName":"onCollected","ranges":[{"startOffset":90240,"endOffset":90754,"count":24},{"startOffset":90624,"endOffset":90696,"count":1},{"startOffset":90696,"endOffset":90744,"count":23}],"isBlockCoverage":true},{"functionName":"onFinished","ranges":[{"startOffset":90757,"endOffset":90963,"count":1}],"isBlockCoverage":true},{"functionName":"onWatcherStart","ranges":[{"startOffset":90966,"endOffset":91153,"count":0}],"isBlockCoverage":false},{"functionName":"stopListRender","ranges":[{"startOffset":91156,"endOffset":91287,"count":1},{"startOffset":91233,"endOffset":91241,"count":0}],"isBlockCoverage":true},{"functionName":"onWatcherRerun","ranges":[{"startOffset":91290,"endOffset":91413,"count":0}],"isBlockCoverage":false},{"functionName":"onUserConsoleLog","ranges":[{"startOffset":91416,"endOffset":91588,"count":31},{"startOffset":91488,"endOffset":91495,"count":0},{"startOffset":91529,"endOffset":91537,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":91764,"endOffset":91793,"count":0}],"isBlockCoverage":false},{"functionName":"getIcon","ranges":[{"startOffset":91797,"endOffset":92075,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":92076,"endOffset":93205,"count":0}],"isBlockCoverage":false},{"functionName":"createDotRenderer","ranges":[{"startOffset":93206,"endOffset":93917,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":93958,"endOffset":94993,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":95144,"endOffset":100487,"count":0}],"isBlockCoverage":true},{"functionName":"VerboseReporter","ranges":[{"startOffset":100539,"endOffset":100618,"count":0}],"isBlockCoverage":false},{"functionName":"onTaskUpdate","ranges":[{"startOffset":100621,"endOffset":101816,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":101841,"endOffset":102152,"count":0}],"isBlockCoverage":true},{"functionName":"yamlString","ranges":[{"startOffset":102154,"endOffset":102224,"count":0}],"isBlockCoverage":false},{"functionName":"tapString","ranges":[{"startOffset":102225,"endOffset":102330,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":102349,"endOffset":105083,"count":0}],"isBlockCoverage":true},{"functionName":"ansiEscapes.cursorTo","ranges":[{"startOffset":105290,"endOffset":105505,"count":0}],"isBlockCoverage":false},{"functionName":"ansiEscapes.cursorMove","ranges":[{"startOffset":105533,"endOffset":105900,"count":0}],"isBlockCoverage":false},{"functionName":"ansiEscapes.cursorUp","ranges":[{"startOffset":105926,"endOffset":105960,"count":6708}],"isBlockCoverage":true},{"functionName":"ansiEscapes.cursorDown","ranges":[{"startOffset":105987,"endOffset":106021,"count":0}],"isBlockCoverage":false},{"functionName":"ansiEscapes.cursorForward","ranges":[{"startOffset":106051,"endOffset":106085,"count":0}],"isBlockCoverage":false},{"functionName":"ansiEscapes.cursorBackward","ranges":[{"startOffset":106116,"endOffset":106150,"count":0}],"isBlockCoverage":false},{"functionName":"ansiEscapes.eraseLines","ranges":[{"startOffset":106580,"endOffset":106799,"count":706},{"startOffset":106642,"endOffset":106728,"count":7382},{"startOffset":106694,"endOffset":106718,"count":6708},{"startOffset":106719,"endOffset":106723,"count":674},{"startOffset":106742,"endOffset":106781,"count":674}],"isBlockCoverage":true},{"functionName":"ansiEscapes.link","ranges":[{"startOffset":107584,"endOffset":107709,"count":0}],"isBlockCoverage":false},{"functionName":"ansiEscapes.image","ranges":[{"startOffset":107732,"endOffset":108106,"count":0}],"isBlockCoverage":false},{"functionName":"setCwd","ranges":[{"startOffset":108140,"endOffset":108199,"count":0}],"isBlockCoverage":false},{"functionName":"annotation","ranges":[{"startOffset":108215,"endOffset":108908,"count":0}],"isBlockCoverage":false},{"functionName":"mimicFn$1","ranges":[{"startOffset":108995,"endOffset":109153,"count":1},{"startOffset":109054,"endOffset":109138,"count":2}],"isBlockCoverage":true},{"functionName":"onetime","ranges":[{"startOffset":109405,"endOffset":110071,"count":1},{"startOffset":109474,"endOffset":109524,"count":0}],"isBlockCoverage":true},{"functionName":"onetime","ranges":[{"startOffset":109662,"endOffset":109977,"count":995},{"startOffset":109758,"endOffset":109836,"count":1},{"startOffset":109836,"endOffset":109951,"count":994},{"startOffset":109870,"endOffset":109951,"count":0}],"isBlockCoverage":true},{"functionName":"onetime$2.exports.callCount","ranges":[{"startOffset":110219,"endOffset":110424,"count":0}],"isBlockCoverage":false},{"functionName":"requireSignals","ranges":[{"startOffset":110630,"endOffset":112203,"count":1},{"startOffset":110684,"endOffset":110709,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110737,"endOffset":112160,"count":1},{"startOffset":111724,"endOffset":111996,"count":0},{"startOffset":112034,"endOffset":112156,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":112509,"endOffset":112893,"count":4}],"isBlockCoverage":true},{"functionName":"signalExit$1.exports","ranges":[{"startOffset":113024,"endOffset":113067,"count":0}],"isBlockCoverage":false},{"functionName":"signalExit$1.exports","ranges":[{"startOffset":113938,"endOffset":114552,"count":1},{"startOffset":114033,"endOffset":114068,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":114048,"endOffset":114062,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":114312,"endOffset":114504,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":114570,"endOffset":114948,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":115004,"endOffset":115201,"count":2},{"startOffset":115103,"endOffset":115123,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":115285,"endOffset":116195,"count":5}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":115326,"endOffset":116190,"count":0}],"isBlockCoverage":false},{"functionName":"signalExit$1.exports.signals","ranges":[{"startOffset":116232,"endOffset":116268,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":116307,"endOffset":116936,"count":1},{"startOffset":116380,"endOffset":116400,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116699,"endOffset":116849,"count":5},{"startOffset":116802,"endOffset":116843,"count":0}],"isBlockCoverage":true},{"functionName":"processReallyExit","ranges":[{"startOffset":117057,"endOffset":117475,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":117542,"endOffset":118094,"count":27},{"startOffset":117597,"endOffset":117633,"count":1},{"startOffset":117635,"endOffset":118021,"count":1},{"startOffset":118021,"endOffset":118090,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":118252,"endOffset":118347,"count":1}],"isBlockCoverage":true},{"functionName":"signalExit.alwaysLast","ranges":[{"startOffset":118272,"endOffset":118323,"count":1}],"isBlockCoverage":true},{"functionName":"cliCursor.show","ranges":[{"startOffset":118414,"endOffset":118557,"count":1},{"startOffset":118483,"endOffset":118497,"count":0}],"isBlockCoverage":true},{"functionName":"cliCursor.hide","ranges":[{"startOffset":118577,"endOffset":118737,"count":995},{"startOffset":118646,"endOffset":118660,"count":0}],"isBlockCoverage":true},{"functionName":"cliCursor.toggle","ranges":[{"startOffset":118759,"endOffset":118939,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":118980,"endOffset":131297,"count":1}],"isBlockCoverage":true},{"functionName":"eaw.eastAsianWidth","ranges":[{"startOffset":119070,"endOffset":130063,"count":789929},{"startOffset":119163,"endOffset":119188,"count":0},{"startOffset":119236,"endOffset":119250,"count":0},{"startOffset":119252,"endOffset":119283,"count":0},{"startOffset":119285,"endOffset":119384,"count":0},{"startOffset":119446,"endOffset":119468,"count":0},{"startOffset":119501,"endOffset":119523,"count":0},{"startOffset":119526,"endOffset":119549,"count":0},{"startOffset":119610,"endOffset":119632,"count":0},{"startOffset":119665,"endOffset":119687,"count":0},{"startOffset":119720,"endOffset":119742,"count":0},{"startOffset":119775,"endOffset":119797,"count":0},{"startOffset":119830,"endOffset":119852,"count":0},{"startOffset":119885,"endOffset":119907,"count":0},{"startOffset":119910,"endOffset":119933,"count":0},{"startOffset":119962,"endOffset":119984,"count":8015},{"startOffset":120017,"endOffset":120039,"count":8015},{"startOffset":120072,"endOffset":120094,"count":8015},{"startOffset":120127,"endOffset":120149,"count":8015},{"startOffset":120182,"endOffset":120204,"count":0},{"startOffset":120237,"endOffset":120259,"count":0},{"startOffset":120292,"endOffset":120314,"count":0},{"startOffset":120347,"endOffset":120369,"count":0},{"startOffset":120402,"endOffset":120424,"count":0},{"startOffset":120457,"endOffset":120479,"count":0},{"startOffset":120512,"endOffset":120534,"count":0},{"startOffset":120567,"endOffset":120589,"count":0},{"startOffset":120622,"endOffset":120644,"count":0},{"startOffset":120677,"endOffset":120699,"count":0},{"startOffset":120732,"endOffset":120754,"count":0},{"startOffset":120787,"endOffset":120809,"count":0},{"startOffset":120842,"endOffset":120864,"count":0},{"startOffset":120897,"endOffset":120919,"count":0},{"startOffset":120952,"endOffset":120974,"count":0},{"startOffset":121007,"endOffset":121029,"count":0},{"startOffset":121062,"endOffset":121084,"count":0},{"startOffset":121117,"endOffset":121139,"count":0},{"startOffset":121172,"endOffset":121194,"count":0},{"startOffset":121227,"endOffset":121249,"count":0},{"startOffset":121282,"endOffset":121304,"count":0},{"startOffset":121337,"endOffset":121359,"count":0},{"startOffset":121392,"endOffset":121414,"count":0},{"startOffset":121447,"endOffset":121469,"count":0},{"startOffset":121502,"endOffset":121524,"count":0},{"startOffset":121557,"endOffset":121579,"count":0},{"startOffset":121613,"endOffset":121636,"count":0},{"startOffset":121670,"endOffset":121693,"count":0},{"startOffset":121727,"endOffset":121750,"count":0},{"startOffset":121784,"endOffset":121807,"count":0},{"startOffset":121841,"endOffset":121864,"count":0},{"startOffset":121898,"endOffset":121921,"count":0},{"startOffset":121955,"endOffset":121978,"count":0},{"startOffset":122012,"endOffset":122035,"count":0},{"startOffset":122038,"endOffset":122061,"count":0},{"startOffset":122114,"endOffset":122168,"count":28592},{"startOffset":122169,"endOffset":122223,"count":28592},{"startOffset":122224,"endOffset":122255,"count":28592},{"startOffset":122256,"endOffset":122287,"count":28592},{"startOffset":122288,"endOffset":122342,"count":28592},{"startOffset":122319,"endOffset":122341,"count":0},{"startOffset":122343,"endOffset":122397,"count":28592},{"startOffset":122374,"endOffset":122396,"count":0},{"startOffset":122399,"endOffset":122423,"count":761337},{"startOffset":122423,"endOffset":122484,"count":28592},{"startOffset":122485,"endOffset":122539,"count":28592},{"startOffset":122540,"endOffset":122571,"count":28592},{"startOffset":122572,"endOffset":122626,"count":28592},{"startOffset":122627,"endOffset":122681,"count":28592},{"startOffset":122682,"endOffset":122736,"count":28592},{"startOffset":122737,"endOffset":122791,"count":8427},{"startOffset":122792,"endOffset":122823,"count":8427},{"startOffset":122824,"endOffset":122855,"count":8427},{"startOffset":122856,"endOffset":122910,"count":8427},{"startOffset":122911,"endOffset":122965,"count":8048},{"startOffset":122966,"endOffset":122997,"count":8015},{"startOffset":122998,"endOffset":123052,"count":8015},{"startOffset":123053,"endOffset":123107,"count":8015},{"startOffset":123108,"endOffset":123139,"count":8015},{"startOffset":123140,"endOffset":123194,"count":8015},{"startOffset":123195,"endOffset":123249,"count":8015},{"startOffset":123250,"endOffset":123281,"count":8015},{"startOffset":123282,"endOffset":123313,"count":8015},{"startOffset":123314,"endOffset":123345,"count":8015},{"startOffset":123346,"endOffset":123377,"count":8015},{"startOffset":123378,"endOffset":123409,"count":8015},{"startOffset":123410,"endOffset":123441,"count":8015},{"startOffset":123442,"endOffset":123496,"count":8015},{"startOffset":123497,"endOffset":123528,"count":8015},{"startOffset":123529,"endOffset":123583,"count":8015},{"startOffset":123584,"endOffset":123615,"count":8015},{"startOffset":123616,"endOffset":123670,"count":8015},{"startOffset":123671,"endOffset":123702,"count":8015},{"startOffset":123703,"endOffset":123757,"count":8015},{"startOffset":123758,"endOffset":123789,"count":8015},{"startOffset":123790,"endOffset":123844,"count":8015},{"startOffset":123845,"endOffset":123899,"count":8015},{"startOffset":123900,"endOffset":123931,"count":8015},{"startOffset":123932,"endOffset":123963,"count":8015},{"startOffset":123964,"endOffset":123995,"count":8015},{"startOffset":123996,"endOffset":124027,"count":8015},{"startOffset":124028,"endOffset":124059,"count":8015},{"startOffset":124060,"endOffset":124091,"count":8015},{"startOffset":124092,"endOffset":124123,"count":8015},{"startOffset":124124,"endOffset":124155,"count":8015},{"startOffset":124156,"endOffset":124187,"count":8015},{"startOffset":124188,"endOffset":124219,"count":8015},{"startOffset":124220,"endOffset":124251,"count":8015},{"startOffset":124252,"endOffset":124283,"count":8015},{"startOffset":124284,"endOffset":124315,"count":8015},{"startOffset":124316,"endOffset":124370,"count":8015},{"startOffset":124371,"endOffset":124402,"count":8015},{"startOffset":124403,"endOffset":124434,"count":8015},{"startOffset":124435,"endOffset":124489,"count":8015},{"startOffset":124490,"endOffset":124521,"count":8015},{"startOffset":124522,"endOffset":124553,"count":8015},{"startOffset":124554,"endOffset":124608,"count":8015},{"startOffset":124609,"endOffset":124663,"count":8015},{"startOffset":124664,"endOffset":124718,"count":8015},{"startOffset":124719,"endOffset":124773,"count":8015},{"startOffset":124774,"endOffset":124828,"count":8015},{"startOffset":124829,"endOffset":124860,"count":8015},{"startOffset":124861,"endOffset":124915,"count":8015},{"startOffset":124916,"endOffset":124947,"count":8015},{"startOffset":124948,"endOffset":124979,"count":8015},{"startOffset":124980,"endOffset":125034,"count":8015},{"startOffset":125035,"endOffset":125089,"count":8015},{"startOffset":125090,"endOffset":125144,"count":8015},{"startOffset":125145,"endOffset":125199,"count":8015},{"startOffset":125200,"endOffset":125254,"count":8015},{"startOffset":125255,"endOffset":125286,"count":8015},{"startOffset":125287,"endOffset":125341,"count":8015},{"startOffset":125342,"endOffset":125373,"count":8015},{"startOffset":125374,"endOffset":125405,"count":8015},{"startOffset":125406,"endOffset":125437,"count":8015},{"startOffset":125438,"endOffset":125469,"count":8015},{"startOffset":125470,"endOffset":125501,"count":8015},{"startOffset":125502,"endOffset":125556,"count":8015},{"startOffset":125557,"endOffset":125588,"count":8015},{"startOffset":125589,"endOffset":125620,"count":8015},{"startOffset":125621,"endOffset":125652,"count":8015},{"startOffset":125653,"endOffset":125684,"count":8015},{"startOffset":125685,"endOffset":125716,"count":8015},{"startOffset":125717,"endOffset":125748,"count":8015},{"startOffset":125749,"endOffset":125803,"count":8015},{"startOffset":125804,"endOffset":125835,"count":8015},{"startOffset":125836,"endOffset":125867,"count":8015},{"startOffset":125868,"endOffset":125922,"count":8015},{"startOffset":125923,"endOffset":125977,"count":8015},{"startOffset":125978,"endOffset":126032,"count":8015},{"startOffset":126033,"endOffset":126087,"count":8015},{"startOffset":126088,"endOffset":126119,"count":8015},{"startOffset":126120,"endOffset":126174,"count":8015},{"startOffset":126175,"endOffset":126229,"count":8015},{"startOffset":126230,"endOffset":126261,"count":8015},{"startOffset":126262,"endOffset":126293,"count":8015},{"startOffset":126294,"endOffset":126325,"count":8015},{"startOffset":126326,"endOffset":126357,"count":8015},{"startOffset":126358,"endOffset":126412,"count":8015},{"startOffset":126413,"endOffset":126467,"count":8015},{"startOffset":126468,"endOffset":126499,"count":8015},{"startOffset":126500,"endOffset":126531,"count":8015},{"startOffset":126532,"endOffset":126563,"count":8015},{"startOffset":126564,"endOffset":126595,"count":8015},{"startOffset":126596,"endOffset":126627,"count":8015},{"startOffset":126628,"endOffset":126682,"count":8015},{"startOffset":126683,"endOffset":126714,"count":8015},{"startOffset":126715,"endOffset":126746,"count":8015},{"startOffset":126747,"endOffset":126801,"count":8015},{"startOffset":126802,"endOffset":126833,"count":8015},{"startOffset":126834,"endOffset":126888,"count":8015},{"startOffset":126889,"endOffset":126943,"count":8015},{"startOffset":126944,"endOffset":126975,"count":8015},{"startOffset":126976,"endOffset":127007,"count":8015},{"startOffset":127008,"endOffset":127039,"count":8015},{"startOffset":127040,"endOffset":127094,"count":8015},{"startOffset":127095,"endOffset":127149,"count":8015},{"startOffset":127150,"endOffset":127204,"count":8015},{"startOffset":127205,"endOffset":127259,"count":8015},{"startOffset":127260,"endOffset":127314,"count":8015},{"startOffset":127315,"endOffset":127369,"count":8015},{"startOffset":127370,"endOffset":127401,"count":8015},{"startOffset":127402,"endOffset":127433,"count":8015},{"startOffset":127434,"endOffset":127465,"count":8015},{"startOffset":127466,"endOffset":127497,"count":8015},{"startOffset":127498,"endOffset":127529,"count":8015},{"startOffset":127530,"endOffset":127584,"count":8015},{"startOffset":127585,"endOffset":127639,"count":8015},{"startOffset":127640,"endOffset":127694,"count":8015},{"startOffset":127695,"endOffset":127749,"count":8015},{"startOffset":127750,"endOffset":127804,"count":8015},{"startOffset":127805,"endOffset":127859,"count":8015},{"startOffset":127860,"endOffset":127914,"count":8015},{"startOffset":127915,"endOffset":127969,"count":8015},{"startOffset":127970,"endOffset":128024,"count":8015},{"startOffset":128025,"endOffset":128079,"count":8015},{"startOffset":128080,"endOffset":128134,"count":8015},{"startOffset":128135,"endOffset":128189,"count":8015},{"startOffset":128190,"endOffset":128221,"count":8015},{"startOffset":128222,"endOffset":128276,"count":8015},{"startOffset":128277,"endOffset":128331,"count":8015},{"startOffset":128332,"endOffset":128363,"count":8015},{"startOffset":128364,"endOffset":128418,"count":8015},{"startOffset":128419,"endOffset":128450,"count":8015},{"startOffset":128451,"endOffset":128505,"count":8015},{"startOffset":128506,"endOffset":128560,"count":8015},{"startOffset":128561,"endOffset":128592,"count":8015},{"startOffset":128593,"endOffset":128624,"count":8015},{"startOffset":128625,"endOffset":128656,"count":8015},{"startOffset":128657,"endOffset":128688,"count":8015},{"startOffset":128689,"endOffset":128743,"count":8015},{"startOffset":128744,"endOffset":128798,"count":8015},{"startOffset":128799,"endOffset":128853,"count":8015},{"startOffset":128854,"endOffset":128908,"count":8015},{"startOffset":128909,"endOffset":128940,"count":8015},{"startOffset":128941,"endOffset":128995,"count":8015},{"startOffset":128996,"endOffset":129050,"count":8015},{"startOffset":129051,"endOffset":129105,"count":8015},{"startOffset":129106,"endOffset":129160,"count":8015},{"startOffset":129161,"endOffset":129192,"count":8015},{"startOffset":129193,"endOffset":129247,"count":8015},{"startOffset":129248,"endOffset":129279,"count":8015},{"startOffset":129280,"endOffset":129311,"count":8015},{"startOffset":129312,"endOffset":129366,"count":8015},{"startOffset":129343,"endOffset":129365,"count":0},{"startOffset":129367,"endOffset":129421,"count":8015},{"startOffset":129398,"endOffset":129420,"count":0},{"startOffset":129422,"endOffset":129476,"count":8015},{"startOffset":129453,"endOffset":129475,"count":0},{"startOffset":129477,"endOffset":129531,"count":8015},{"startOffset":129508,"endOffset":129530,"count":0},{"startOffset":129532,"endOffset":129586,"count":8015},{"startOffset":129563,"endOffset":129585,"count":0},{"startOffset":129587,"endOffset":129618,"count":8015},{"startOffset":129619,"endOffset":129675,"count":8015},{"startOffset":129651,"endOffset":129674,"count":0},{"startOffset":129676,"endOffset":129732,"count":8015},{"startOffset":129708,"endOffset":129731,"count":0},{"startOffset":129733,"endOffset":129789,"count":8015},{"startOffset":129765,"endOffset":129788,"count":0},{"startOffset":129790,"endOffset":129846,"count":8015},{"startOffset":129822,"endOffset":129845,"count":0},{"startOffset":129847,"endOffset":129903,"count":8015},{"startOffset":129879,"endOffset":129902,"count":0},{"startOffset":129904,"endOffset":129960,"count":8015},{"startOffset":129936,"endOffset":129959,"count":0},{"startOffset":129961,"endOffset":130019,"count":8015},{"startOffset":129994,"endOffset":130018,"count":0},{"startOffset":130021,"endOffset":130044,"count":20577},{"startOffset":130044,"endOffset":130062,"count":8015}],"isBlockCoverage":true},{"functionName":"eaw.characterLength","ranges":[{"startOffset":130089,"endOffset":130258,"count":0}],"isBlockCoverage":false},{"functionName":"stringToArray","ranges":[{"startOffset":130310,"endOffset":130427,"count":0}],"isBlockCoverage":false},{"functionName":"eaw.length","ranges":[{"startOffset":130443,"endOffset":130646,"count":0}],"isBlockCoverage":false},{"functionName":"eaw.slice","ranges":[{"startOffset":130662,"endOffset":131293,"count":0}],"isBlockCoverage":false},{"functionName":"emojiRegex","ranges":[{"startOffset":131470,"endOffset":147171,"count":78600}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":147244,"endOffset":148174,"count":121602},{"startOffset":147345,"endOffset":147361,"count":43002},{"startOffset":147361,"endOffset":147477,"count":78600},{"startOffset":147477,"endOffset":147493,"count":0},{"startOffset":147493,"endOffset":147606,"count":78600},{"startOffset":147607,"endOffset":147610,"count":0},{"startOffset":147662,"endOffset":148156,"count":789929},{"startOffset":147788,"endOffset":147808,"count":28592},{"startOffset":147811,"endOffset":147829,"count":0},{"startOffset":147889,"endOffset":147910,"count":8015},{"startOffset":147912,"endOffset":147930,"count":0},{"startOffset":148010,"endOffset":148019,"count":0},{"startOffset":148023,"endOffset":148059,"count":0},{"startOffset":148063,"endOffset":148121,"count":20577},{"startOffset":148125,"endOffset":148149,"count":769352},{"startOffset":148156,"endOffset":148173,"count":78600}],"isBlockCoverage":true},{"functionName":"wrapAnsiCode","ranges":[{"startOffset":148427,"endOffset":148509,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":148537,"endOffset":148622,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":148752,"endOffset":148820,"count":7382}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":148784,"endOffset":148819,"count":60801}],"isBlockCoverage":true},{"functionName":"wrapWord","ranges":[{"startOffset":148930,"endOffset":150142,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":150241,"endOffset":150526,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":150761,"endOffset":153584,"count":7382},{"startOffset":150826,"endOffset":150849,"count":0},{"startOffset":150851,"endOffset":150868,"count":0},{"startOffset":151042,"endOffset":152463,"count":60801},{"startOffset":151074,"endOffset":151141,"count":0},{"startOffset":151217,"endOffset":151571,"count":53419},{"startOffset":151247,"endOffset":151304,"count":0},{"startOffset":151306,"endOffset":151460,"count":0},{"startOffset":151483,"endOffset":151508,"count":6708},{"startOffset":151710,"endOffset":152075,"count":0},{"startOffset":152120,"endOffset":152136,"count":0},{"startOffset":152137,"endOffset":152158,"count":0},{"startOffset":152160,"endOffset":152298,"count":0},{"startOffset":152343,"endOffset":152372,"count":0},{"startOffset":152374,"endOffset":152426,"count":0},{"startOffset":152494,"endOffset":152559,"count":0},{"startOffset":152646,"endOffset":153560,"count":399507},{"startOffset":152707,"endOffset":153131,"count":23536},{"startOffset":152858,"endOffset":152873,"count":0},{"startOffset":152995,"endOffset":153006,"count":6880},{"startOffset":153007,"endOffset":153013,"count":16656},{"startOffset":153019,"endOffset":153127,"count":0},{"startOffset":153222,"endOffset":153368,"count":0},{"startOffset":153398,"endOffset":153557,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":152514,"endOffset":152554,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi","ranges":[{"startOffset":153637,"endOffset":153823,"count":674}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":153769,"endOffset":153805,"count":7382}],"isBlockCoverage":true},{"functionName":"getWidth","ranges":[{"startOffset":153877,"endOffset":153969,"count":1031},{"startOffset":153932,"endOffset":153949,"count":0}],"isBlockCoverage":true},{"functionName":"fitToTerminalHeight","ranges":[{"startOffset":154000,"endOffset":154299,"count":995},{"startOffset":154056,"endOffset":154080,"count":0},{"startOffset":154185,"endOffset":154204,"count":7},{"startOffset":154204,"endOffset":154298,"count":988}],"isBlockCoverage":true},{"functionName":"createLogUpdate","ranges":[{"startOffset":154302,"endOffset":155362,"count":3}],"isBlockCoverage":true},{"functionName":"render","ranges":[{"startOffset":154474,"endOffset":155011,"count":995},{"startOffset":154700,"endOffset":154726,"count":321},{"startOffset":154728,"endOffset":154744,"count":321},{"startOffset":154744,"endOffset":155010,"count":674}],"isBlockCoverage":true},{"functionName":"render.clear","ranges":[{"startOffset":155030,"endOffset":155183,"count":32}],"isBlockCoverage":true},{"functionName":"render.done","ranges":[{"startOffset":155201,"endOffset":155342,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":155522,"endOffset":155625,"count":2}],"isBlockCoverage":true},{"functionName":"highlightCode","ranges":[{"startOffset":155629,"endOffset":155863,"count":8},{"startOffset":155747,"endOffset":155761,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":155885,"endOffset":157537,"count":1}],"isBlockCoverage":true},{"functionName":"BaseSequencer","ranges":[{"startOffset":155896,"endOffset":155938,"count":1}],"isBlockCoverage":true},{"functionName":"shard","ranges":[{"startOffset":155995,"endOffset":156656,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":156713,"endOffset":157535,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":156794,"endOffset":157529,"count":79},{"startOffset":157090,"endOffset":157100,"count":0},{"startOffset":157244,"endOffset":157302,"count":0},{"startOffset":157352,"endOffset":157394,"count":0},{"startOffset":157404,"endOffset":157456,"count":0},{"startOffset":157466,"endOffset":157528,"count":0}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":157587,"endOffset":157694,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":157867,"endOffset":164546,"count":1}],"isBlockCoverage":true},{"functionName":"Logger","ranges":[{"startOffset":157871,"endOffset":158214,"count":1}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":158307,"endOffset":158381,"count":11}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":158384,"endOffset":158462,"count":169}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":158465,"endOffset":158541,"count":0}],"isBlockCoverage":false},{"functionName":"clearFullScreen","ranges":[{"startOffset":158544,"endOffset":158737,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreen","ranges":[{"startOffset":158740,"endOffset":158956,"count":0}],"isBlockCoverage":false},{"functionName":"_clearScreen","ranges":[{"startOffset":158959,"endOffset":159179,"count":180},{"startOffset":159031,"endOffset":159178,"count":0}],"isBlockCoverage":true},{"functionName":"printError","ranges":[{"startOffset":159182,"endOffset":159491,"count":28},{"startOffset":159305,"endOffset":159342,"count":0},{"startOffset":159343,"endOffset":159366,"count":0}],"isBlockCoverage":true},{"functionName":"clearHighlightCache","ranges":[{"startOffset":159494,"endOffset":159629,"count":0}],"isBlockCoverage":false},{"functionName":"highlight","ranges":[{"startOffset":159632,"endOffset":159859,"count":9},{"startOffset":159708,"endOffset":159746,"count":1},{"startOffset":159746,"endOffset":159858,"count":8}],"isBlockCoverage":true},{"functionName":"printNoTestFound","ranges":[{"startOffset":159862,"endOffset":161540,"count":0}],"isBlockCoverage":false},{"functionName":"printBanner","ranges":[{"startOffset":161543,"endOffset":163517,"count":1},{"startOffset":161637,"endOffset":161660,"count":0},{"startOffset":161725,"endOffset":161742,"count":0},{"startOffset":161923,"endOffset":162008,"count":0},{"startOffset":162527,"endOffset":162746,"count":0},{"startOffset":162791,"endOffset":162799,"count":0},{"startOffset":162811,"endOffset":163216,"count":0},{"startOffset":163392,"endOffset":163486,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":162039,"endOffset":162496,"count":1},{"startOffset":162097,"endOffset":162178,"count":0},{"startOffset":162179,"endOffset":162193,"count":0},{"startOffset":162295,"endOffset":162303,"count":0},{"startOffset":162304,"endOffset":162327,"count":0},{"startOffset":162329,"endOffset":162389,"count":0}],"isBlockCoverage":true},{"functionName":"printUnhandledErrors","ranges":[{"startOffset":163520,"endOffset":164103,"count":0}],"isBlockCoverage":false},{"functionName":"printSourceTypeErrors","ranges":[{"startOffset":164106,"endOffset":164544,"count":0}],"isBlockCoverage":false},{"functionName":"captuerPrintError","ranges":[{"startOffset":164548,"endOffset":164963,"count":0}],"isBlockCoverage":false},{"functionName":"printError","ranges":[{"startOffset":164964,"endOffset":167960,"count":28},{"startOffset":165158,"endOffset":165253,"count":0},{"startOffset":165264,"endOffset":165395,"count":0},{"startOffset":165412,"endOffset":165463,"count":0},{"startOffset":165685,"endOffset":165723,"count":0},{"startOffset":165831,"endOffset":165848,"count":0},{"startOffset":166109,"endOffset":166143,"count":0},{"startOffset":166199,"endOffset":166231,"count":0},{"startOffset":166250,"endOffset":166286,"count":4},{"startOffset":166302,"endOffset":166344,"count":0},{"startOffset":166850,"endOffset":167018,"count":0},{"startOffset":167035,"endOffset":167352,"count":0},{"startOffset":167377,"endOffset":167642,"count":0},{"startOffset":167677,"endOffset":167687,"count":0},{"startOffset":167688,"endOffset":167708,"count":0},{"startOffset":167710,"endOffset":167865,"count":0},{"startOffset":167907,"endOffset":167920,"count":15},{"startOffset":167921,"endOffset":167926,"count":15}],"isBlockCoverage":true},{"functionName":"getSourceMap","ranges":[{"startOffset":165559,"endOffset":165612,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":165868,"endOffset":166038,"count":26},{"startOffset":165960,"endOffset":165985,"count":9},{"startOffset":165995,"endOffset":166032,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":166418,"endOffset":166689,"count":26},{"startOffset":166468,"endOffset":166478,"count":9},{"startOffset":166480,"endOffset":166683,"count":9},{"startOffset":166609,"endOffset":166621,"count":0}],"isBlockCoverage":true},{"functionName":"printErrorType","ranges":[{"startOffset":167961,"endOffset":168073,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorProperties","ranges":[{"startOffset":168460,"endOffset":168763,"count":28},{"startOffset":168591,"endOffset":168610,"count":8},{"startOffset":168610,"endOffset":168662,"count":20},{"startOffset":168662,"endOffset":168739,"count":113},{"startOffset":168709,"endOffset":168735,"count":33},{"startOffset":168739,"endOffset":168762,"count":20}],"isBlockCoverage":true},{"functionName":"handleImportOutsideModuleError","ranges":[{"startOffset":168867,"endOffset":169360,"count":28},{"startOffset":168984,"endOffset":169093,"count":0},{"startOffset":169114,"endOffset":169122,"count":0},{"startOffset":169123,"endOffset":169145,"count":0},{"startOffset":169151,"endOffset":169358,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":168946,"endOffset":168970,"count":56}],"isBlockCoverage":true},{"functionName":"printModuleWarningForPackage","ranges":[{"startOffset":169361,"endOffset":169994,"count":0}],"isBlockCoverage":false},{"functionName":"printModuleWarningForSourceCode","ranges":[{"startOffset":169995,"endOffset":170264,"count":0}],"isBlockCoverage":false},{"functionName":"displayDiff","ranges":[{"startOffset":170265,"endOffset":170348,"count":4}],"isBlockCoverage":true},{"functionName":"printErrorMessage","ranges":[{"startOffset":170349,"endOffset":170712,"count":28},{"startOffset":170424,"endOffset":170440,"count":15},{"startOffset":170441,"endOffset":170459,"count":15},{"startOffset":170483,"endOffset":170525,"count":0},{"startOffset":170560,"endOffset":170632,"count":0}],"isBlockCoverage":true},{"functionName":"printStack","ranges":[{"startOffset":170713,"endOffset":171452,"count":28},{"startOffset":170825,"endOffset":171140,"count":26},{"startOffset":170865,"endOffset":170873,"count":9},{"startOffset":170874,"endOffset":170882,"count":17},{"startOffset":171110,"endOffset":171118,"count":0},{"startOffset":171165,"endOffset":171180,"count":12},{"startOffset":171267,"endOffset":171450,"count":17}],"isBlockCoverage":true},{"functionName":"generateCodeFrame","ranges":[{"startOffset":171453,"endOffset":172994,"count":9},{"startOffset":171617,"endOffset":171622,"count":0},{"startOffset":171725,"endOffset":171728,"count":0},{"startOffset":171812,"endOffset":171820,"count":0},{"startOffset":171835,"endOffset":171840,"count":0},{"startOffset":171971,"endOffset":172897,"count":1141},{"startOffset":172032,"endOffset":172893,"count":9},{"startOffset":172100,"endOffset":172874,"count":45},{"startOffset":172152,"endOffset":172161,"count":0},{"startOffset":172262,"endOffset":172272,"count":0},{"startOffset":172393,"endOffset":172627,"count":9},{"startOffset":172507,"endOffset":172525,"count":0},{"startOffset":172627,"endOffset":172866,"count":36},{"startOffset":172644,"endOffset":172866,"count":18},{"startOffset":172673,"endOffset":172821,"count":0}],"isBlockCoverage":true},{"functionName":"lineNo","ranges":[{"startOffset":171844,"endOffset":171929,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":172930,"endOffset":172965,"count":54}],"isBlockCoverage":true},{"functionName":"flattenTasks$1","ranges":[{"startOffset":172996,"endOffset":173298,"count":0}],"isBlockCoverage":false},{"functionName":"removeInvalidXMLCharacters","ranges":[{"startOffset":173299,"endOffset":174375,"count":0}],"isBlockCoverage":false},{"functionName":"escapeXML","ranges":[{"startOffset":174376,"endOffset":174590,"count":0}],"isBlockCoverage":false},{"functionName":"executionTime","ranges":[{"startOffset":174591,"endOffset":174733,"count":0}],"isBlockCoverage":false},{"functionName":"getDuration","ranges":[{"startOffset":174734,"endOffset":174885,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":174906,"endOffset":181406,"count":0}],"isBlockCoverage":true},{"functionName":"flattenTasks","ranges":[{"startOffset":181408,"endOffset":181731,"count":0}],"isBlockCoverage":false},{"functionName":"onInit","ranges":[{"startOffset":181778,"endOffset":181818,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":181821,"endOffset":182018,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":182051,"endOffset":182293,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":182323,"endOffset":183734,"count":0}],"isBlockCoverage":true},{"functionName":"formatMessage","ranges":[{"startOffset":183735,"endOffset":184027,"count":0}],"isBlockCoverage":false},{"functionName":"escapeData","ranges":[{"startOffset":184028,"endOffset":184131,"count":0}],"isBlockCoverage":false},{"functionName":"escapeProperty","ranges":[{"startOffset":184132,"endOffset":184281,"count":0}],"isBlockCoverage":false},{"functionName":"formatFilepath","ranges":[{"startOffset":184332,"endOffset":184690,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":184691,"endOffset":184882,"count":0}],"isBlockCoverage":false},{"functionName":"renderBenchmarkItems","ranges":[{"startOffset":184987,"endOffset":185424,"count":0}],"isBlockCoverage":false},{"functionName":"computeColumnWidths","ranges":[{"startOffset":185425,"endOffset":185666,"count":0}],"isBlockCoverage":false},{"functionName":"padRow","ranges":[{"startOffset":185667,"endOffset":185806,"count":0}],"isBlockCoverage":false},{"functionName":"renderTableHead","ranges":[{"startOffset":185807,"endOffset":185918,"count":0}],"isBlockCoverage":false},{"functionName":"renderBenchmark","ranges":[{"startOffset":185919,"endOffset":186423,"count":0}],"isBlockCoverage":false},{"functionName":"renderTree","ranges":[{"startOffset":186424,"endOffset":190035,"count":0}],"isBlockCoverage":false},{"functionName":"createTableRenderer","ranges":[{"startOffset":190036,"endOffset":190682,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":190725,"endOffset":194493,"count":0}],"isBlockCoverage":true},{"functionName":"createFormattedBenchamrkReport","ranges":[{"startOffset":194494,"endOffset":195390,"count":0}],"isBlockCoverage":false},{"functionName":"flattenFormattedBenchamrkReport","ranges":[{"startOffset":195391,"endOffset":195627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"307","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/local-pkg/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9309,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":819,"endOffset":885,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":899,"endOffset":1573,"count":0}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":1575,"endOffset":3027,"count":0}],"isBlockCoverage":false},{"functionName":"EndError","ranges":[{"startOffset":3061,"endOffset":3117,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":3193,"endOffset":3241,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":3328,"endOffset":3471,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":3474,"endOffset":4103,"count":0}],"isBlockCoverage":false},{"functionName":"checkType","ranges":[{"startOffset":4176,"endOffset":4326,"count":0}],"isBlockCoverage":false},{"functionName":"matchType","ranges":[{"startOffset":4346,"endOffset":4388,"count":0}],"isBlockCoverage":false},{"functionName":"toPath$1","ranges":[{"startOffset":4408,"endOffset":4484,"count":0}],"isBlockCoverage":false},{"functionName":"locatePath","ranges":[{"startOffset":4487,"endOffset":4958,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":4975,"endOffset":5051,"count":0}],"isBlockCoverage":false},{"functionName":"findUpMultiple","ranges":[{"startOffset":5096,"endOffset":6162,"count":0}],"isBlockCoverage":false},{"functionName":"findUp","ranges":[{"startOffset":6164,"endOffset":6298,"count":0}],"isBlockCoverage":false},{"functionName":"_resolve","ranges":[{"startOffset":6300,"endOffset":6916,"count":1},{"startOffset":6458,"endOffset":6467,"count":0},{"startOffset":6497,"endOffset":6743,"count":0},{"startOffset":6893,"endOffset":6915,"count":0}],"isBlockCoverage":true},{"functionName":"resolveModule","ranges":[{"startOffset":6917,"endOffset":7042,"count":0}],"isBlockCoverage":false},{"functionName":"importModule","ranges":[{"startOffset":7043,"endOffset":7163,"count":0}],"isBlockCoverage":false},{"functionName":"isPackageExists","ranges":[{"startOffset":7164,"endOffset":7254,"count":1}],"isBlockCoverage":true},{"functionName":"getPackageJsonPath","ranges":[{"startOffset":7255,"endOffset":7414,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageInfo","ranges":[{"startOffset":7415,"endOffset":7789,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageInfoSync","ranges":[{"startOffset":7790,"endOffset":8151,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackage","ranges":[{"startOffset":8152,"endOffset":8459,"count":1},{"startOffset":8264,"endOffset":8457,"count":0}],"isBlockCoverage":true},{"functionName":"searchPackageJSON","ranges":[{"startOffset":8460,"endOffset":8784,"count":0}],"isBlockCoverage":false},{"functionName":"loadPackageJSON","ranges":[{"startOffset":8785,"endOffset":9004,"count":0}],"isBlockCoverage":false},{"functionName":"isPackageListed","ranges":[{"startOffset":9005,"endOffset":9180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"308","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/std-env/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3625,"count":1},{"startOffset":2165,"endOffset":2169,"count":0},{"startOffset":2487,"endOffset":2490,"count":0},{"startOffset":2508,"endOffset":2511,"count":0},{"startOffset":2550,"endOffset":2554,"count":0},{"startOffset":2572,"endOffset":2578,"count":0},{"startOffset":2605,"endOffset":2611,"count":0},{"startOffset":2632,"endOffset":2653,"count":0},{"startOffset":3188,"endOffset":3192,"count":0}],"isBlockCoverage":true},{"functionName":"i","ranges":[{"startOffset":30,"endOffset":144,"count":7},{"startOffset":56,"endOffset":144,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":160,"endOffset":189,"count":7},{"startOffset":182,"endOffset":188,"count":6}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":190,"endOffset":233,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":234,"endOffset":276,"count":0}],"isBlockCoverage":false},{"functionName":"deleteProperty","ranges":[{"startOffset":277,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"ownKeys","ranges":[{"startOffset":349,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":1786,"endOffset":2070,"count":1},{"startOffset":1843,"endOffset":1933,"count":52},{"startOffset":1856,"endOffset":1862,"count":19},{"startOffset":1893,"endOffset":1932,"count":0},{"startOffset":1983,"endOffset":2053,"count":0}],"isBlockCoverage":true},{"functionName":"n","ranges":[{"startOffset":2091,"endOffset":2129,"count":7},{"startOffset":2113,"endOffset":2125,"count":1},{"startOffset":2125,"endOffset":2128,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2685,"endOffset":2760,"count":0}],"isBlockCoverage":false},{"functionName":"G","ranges":[{"startOffset":3107,"endOffset":3167,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3135,"endOffset":3142,"count":7}],"isBlockCoverage":true}]},{"scriptId":"309","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-node/dist/utils.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5951,"count":1},{"startOffset":291,"endOffset":297,"count":0},{"startOffset":381,"endOffset":402,"count":0},{"startOffset":403,"endOffset":409,"count":0},{"startOffset":481,"endOffset":487,"count":0},{"startOffset":583,"endOffset":589,"count":0}],"isBlockCoverage":true},{"functionName":"slash","ranges":[{"startOffset":591,"endOffset":648,"count":19}],"isBlockCoverage":true},{"functionName":"normalizeRequestId","ranges":[{"startOffset":682,"endOffset":1355,"count":2},{"startOffset":780,"endOffset":813,"count":0},{"startOffset":857,"endOffset":865,"count":0},{"startOffset":890,"endOffset":962,"count":1},{"startOffset":922,"endOffset":930,"count":0},{"startOffset":968,"endOffset":1019,"count":0}],"isBlockCoverage":true},{"functionName":"cleanUrl","ranges":[{"startOffset":1406,"endOffset":1487,"count":562}],"isBlockCoverage":true},{"functionName":"isInternalRequest","ranges":[{"startOffset":1631,"endOffset":1706,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeModuleId","ranges":[{"startOffset":2083,"endOffset":2307,"count":747},{"startOffset":2152,"endOffset":2162,"count":0},{"startOffset":2230,"endOffset":2235,"count":0}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":2308,"endOffset":2361,"count":2}],"isBlockCoverage":true},{"functionName":"toFilePath","ranges":[{"startOffset":2362,"endOffset":3142,"count":575},{"startOffset":2962,"endOffset":2991,"count":0},{"startOffset":3051,"endOffset":3112,"count":19},{"startOffset":3113,"endOffset":3123,"count":556}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2424,"endOffset":2920,"count":575},{"startOffset":2470,"endOffset":2517,"count":0},{"startOffset":2566,"endOffset":2587,"count":356},{"startOffset":2589,"endOffset":2742,"count":343},{"startOffset":2692,"endOffset":2736,"count":324},{"startOffset":2742,"endOffset":2872,"count":232},{"startOffset":2791,"endOffset":2818,"count":219},{"startOffset":2820,"endOffset":2872,"count":219},{"startOffset":2872,"endOffset":2919,"count":32}],"isBlockCoverage":true},{"functionName":"isNodeBuiltin","ranges":[{"startOffset":3183,"endOffset":3379,"count":119},{"startOffset":3248,"endOffset":3260,"count":0},{"startOffset":3326,"endOffset":3367,"count":0}],"isBlockCoverage":true},{"functionName":"toArray","ranges":[{"startOffset":3380,"endOffset":3529,"count":1},{"startOffset":3509,"endOffset":3528,"count":0}],"isBlockCoverage":true},{"functionName":"getCachedData","ranges":[{"startOffset":3530,"endOffset":3802,"count":30},{"startOffset":3658,"endOffset":3800,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3710,"endOffset":3774,"count":2}],"isBlockCoverage":true},{"functionName":"setCacheData","ranges":[{"startOffset":3803,"endOffset":4020,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3959,"endOffset":4016,"count":8}],"isBlockCoverage":true},{"functionName":"getFnpdCacheKey","ranges":[{"startOffset":4021,"endOffset":4086,"count":55}],"isBlockCoverage":true},{"functionName":"traverseBetweenDirs","ranges":[{"startOffset":4087,"endOffset":4242,"count":20},{"startOffset":4180,"endOffset":4240,"count":10}],"isBlockCoverage":true},{"functionName":"withTrailingSlash","ranges":[{"startOffset":4243,"endOffset":4354,"count":1396},{"startOffset":4319,"endOffset":4337,"count":1394},{"startOffset":4337,"endOffset":4353,"count":2}],"isBlockCoverage":true},{"functionName":"createImportMetaEnvProxy","ranges":[{"startOffset":4355,"endOffset":4915,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4493,"endOffset":4673,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4679,"endOffset":4907,"count":0}],"isBlockCoverage":false},{"functionName":"findNearestPackageData","ranges":[{"startOffset":4964,"endOffset":5671,"count":20},{"startOffset":5076,"endOffset":5656,"count":30},{"startOffset":5174,"endOffset":5188,"count":5},{"startOffset":5188,"endOffset":5313,"count":25},{"startOffset":5313,"endOffset":5321,"count":10},{"startOffset":5322,"endOffset":5335,"count":15},{"startOffset":5337,"endOffset":5537,"count":15},{"startOffset":5537,"endOffset":5619,"count":10},{"startOffset":5619,"endOffset":5625,"count":0},{"startOffset":5625,"endOffset":5656,"count":10},{"startOffset":5656,"endOffset":5670,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5289,"endOffset":5302,"count":10}],"isBlockCoverage":true}]},{"scriptId":"310","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/dist/magic-string.es.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37790,"count":1}],"isBlockCoverage":true},{"functionName":"BitSet","ranges":[{"startOffset":71,"endOffset":153,"count":8},{"startOffset":126,"endOffset":144,"count":0}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":156,"endOffset":205,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":208,"endOffset":269,"count":0}],"isBlockCoverage":false},{"functionName":"Chunk","ranges":[{"startOffset":288,"endOffset":562,"count":219}],"isBlockCoverage":true},{"functionName":"appendLeft","ranges":[{"startOffset":565,"endOffset":614,"count":0}],"isBlockCoverage":false},{"functionName":"appendRight","ranges":[{"startOffset":617,"endOffset":679,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":682,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":933,"endOffset":1002,"count":538},{"startOffset":979,"endOffset":998,"count":406}],"isBlockCoverage":true},{"functionName":"eachNext","ranges":[{"startOffset":1005,"endOffset":1101,"count":8},{"startOffset":1056,"endOffset":1098,"count":219}],"isBlockCoverage":true},{"functionName":"eachPrevious","ranges":[{"startOffset":1104,"endOffset":1208,"count":0}],"isBlockCoverage":false},{"functionName":"edit","ranges":[{"startOffset":1211,"endOffset":1414,"count":112},{"startOffset":1297,"endOffset":1342,"count":42}],"isBlockCoverage":true},{"functionName":"prependLeft","ranges":[{"startOffset":1417,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"prependRight","ranges":[{"startOffset":1482,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":1548,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"split","ranges":[{"startOffset":1710,"endOffset":2637,"count":211},{"startOffset":2074,"endOffset":2431,"count":0},{"startOffset":2528,"endOffset":2562,"count":21}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2640,"endOffset":2704,"count":219}],"isBlockCoverage":true},{"functionName":"trimEnd","ranges":[{"startOffset":2707,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"trimStart","ranges":[{"startOffset":3265,"endOffset":3851,"count":0}],"isBlockCoverage":false},{"functionName":"getBtoa","ranges":[{"startOffset":3855,"endOffset":4268,"count":1},{"startOffset":4031,"endOffset":4266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3968,"endOffset":4027,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4082,"endOffset":4135,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4156,"endOffset":4262,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMap","ranges":[{"startOffset":4328,"endOffset":4797,"count":8},{"startOffset":4634,"endOffset":4701,"count":0},{"startOffset":4751,"endOffset":4794,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":4800,"endOffset":4846,"count":0}],"isBlockCoverage":false},{"functionName":"toUrl","ranges":[{"startOffset":4849,"endOffset":4941,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndent","ranges":[{"startOffset":4945,"endOffset":5619,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePath","ranges":[{"startOffset":5621,"endOffset":5990,"count":8},{"startOffset":5806,"endOffset":5850,"count":0},{"startOffset":5875,"endOffset":5942,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":6037,"endOffset":6117,"count":0}],"isBlockCoverage":false},{"functionName":"getLocator","ranges":[{"startOffset":6119,"endOffset":6643,"count":8},{"startOffset":6275,"endOffset":6342,"count":957}],"isBlockCoverage":true},{"functionName":"locate","ranges":[{"startOffset":6352,"endOffset":6640,"count":219},{"startOffset":6436,"endOffset":6544,"count":1544},{"startOffset":6496,"endOffset":6513,"count":915},{"startOffset":6513,"endOffset":6540,"count":629}],"isBlockCoverage":true},{"functionName":"Mappings","ranges":[{"startOffset":6688,"endOffset":6895,"count":8}],"isBlockCoverage":true},{"functionName":"addEdit","ranges":[{"startOffset":6898,"endOffset":8128,"count":112},{"startOffset":6968,"endOffset":8006,"count":70},{"startOffset":7294,"endOffset":7335,"count":0},{"startOffset":7337,"endOffset":7764,"count":0},{"startOffset":7871,"endOffset":7906,"count":0},{"startOffset":8006,"endOffset":8101,"count":42},{"startOffset":8030,"endOffset":8101,"count":0}],"isBlockCoverage":true},{"functionName":"addUneditedChunk","ranges":[{"startOffset":8131,"endOffset":9561,"count":107},{"startOffset":8404,"endOffset":9534,"count":33731},{"startOffset":8451,"endOffset":8643,"count":850},{"startOffset":8643,"endOffset":9502,"count":32881},{"startOffset":8670,"endOffset":8678,"count":0},{"startOffset":8679,"endOffset":8723,"count":0},{"startOffset":8982,"endOffset":9199,"count":22723},{"startOffset":9105,"endOffset":9191,"count":2668},{"startOffset":9199,"endOffset":9356,"count":10158},{"startOffset":9363,"endOffset":9415,"count":0}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":9564,"endOffset":9907,"count":78},{"startOffset":9591,"endOffset":9598,"count":0},{"startOffset":9658,"endOffset":9841,"count":8},{"startOffset":9706,"endOffset":9804,"count":128}],"isBlockCoverage":true},{"functionName":"MagicString","ranges":[{"startOffset":10030,"endOffset":10961,"count":8}],"isBlockCoverage":true},{"functionName":"addSourcemapLocation","ranges":[{"startOffset":10964,"endOffset":11032,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":11035,"endOffset":11186,"count":0}],"isBlockCoverage":false},{"functionName":"appendLeft","ranges":[{"startOffset":11189,"endOffset":11474,"count":21},{"startOffset":11253,"endOffset":11310,"count":0},{"startOffset":11384,"endOffset":11419,"count":0}],"isBlockCoverage":true},{"functionName":"appendRight","ranges":[{"startOffset":11477,"endOffset":11766,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":11769,"endOffset":12729,"count":0}],"isBlockCoverage":false},{"functionName":"generateDecodedMap","ranges":[{"startOffset":12732,"endOffset":13871,"count":8},{"startOffset":12782,"endOffset":12787,"count":0},{"startOffset":13521,"endOffset":13556,"count":0},{"startOffset":13657,"endOffset":13677,"count":0},{"startOffset":13727,"endOffset":13744,"count":0},{"startOffset":13835,"endOffset":13850,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13041,"endOffset":13484,"count":219},{"startOffset":13118,"endOffset":13148,"count":0},{"startOffset":13171,"endOffset":13313,"count":112},{"startOffset":13264,"endOffset":13295,"count":0},{"startOffset":13313,"endOffset":13421,"count":107},{"startOffset":13450,"endOffset":13480,"count":0}],"isBlockCoverage":true},{"functionName":"generateMap","ranges":[{"startOffset":13874,"endOffset":13957,"count":8}],"isBlockCoverage":true},{"functionName":"_ensureindentStr","ranges":[{"startOffset":13960,"endOffset":14073,"count":0}],"isBlockCoverage":false},{"functionName":"_getRawIndentString","ranges":[{"startOffset":14076,"endOffset":14154,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentString","ranges":[{"startOffset":14157,"endOffset":14264,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":14267,"endOffset":16263,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":16266,"endOffset":16389,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeft","ranges":[{"startOffset":16392,"endOffset":16674,"count":0}],"isBlockCoverage":false},{"functionName":"insertRight","ranges":[{"startOffset":16677,"endOffset":16967,"count":0}],"isBlockCoverage":false},{"functionName":"move","ranges":[{"startOffset":16970,"endOffset":17925,"count":0}],"isBlockCoverage":false},{"functionName":"overwrite","ranges":[{"startOffset":17928,"endOffset":18091,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":18094,"endOffset":19914,"count":70},{"startOffset":18168,"endOffset":18228,"count":0},{"startOffset":18287,"endOffset":18317,"count":0},{"startOffset":18337,"endOffset":18365,"count":0},{"startOffset":18405,"endOffset":18445,"count":0},{"startOffset":18470,"endOffset":18577,"count":0},{"startOffset":18646,"endOffset":18941,"count":0},{"startOffset":18984,"endOffset":19003,"count":0},{"startOffset":19055,"endOffset":19074,"count":0},{"startOffset":19102,"endOffset":19281,"count":0},{"startOffset":19416,"endOffset":19592,"count":0},{"startOffset":19644,"endOffset":19896,"count":0}],"isBlockCoverage":true},{"functionName":"prepend","ranges":[{"startOffset":19917,"endOffset":20081,"count":8},{"startOffset":19971,"endOffset":20025,"count":0}],"isBlockCoverage":true},{"functionName":"prependLeft","ranges":[{"startOffset":20084,"endOffset":20383,"count":0}],"isBlockCoverage":false},{"functionName":"prependRight","ranges":[{"startOffset":20386,"endOffset":20689,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":20692,"endOffset":21295,"count":42},{"startOffset":20770,"endOffset":20800,"count":0},{"startOffset":20820,"endOffset":20848,"count":0},{"startOffset":20875,"endOffset":20887,"count":0},{"startOffset":20936,"endOffset":20982,"count":0},{"startOffset":21002,"endOffset":21052,"count":0},{"startOffset":21240,"endOffset":21265,"count":0}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":21298,"endOffset":21857,"count":0}],"isBlockCoverage":false},{"functionName":"lastChar","ranges":[{"startOffset":21860,"endOffset":22316,"count":0}],"isBlockCoverage":false},{"functionName":"lastLine","ranges":[{"startOffset":22319,"endOffset":23295,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":23298,"endOffset":24659,"count":13},{"startOffset":23402,"endOffset":23432,"count":0},{"startOffset":23452,"endOffset":23480,"count":0},{"startOffset":23574,"endOffset":23620,"count":116},{"startOffset":23622,"endOffset":23758,"count":103},{"startOffset":23705,"endOffset":23730,"count":0},{"startOffset":23788,"endOffset":23812,"count":0},{"startOffset":23817,"endOffset":23898,"count":0},{"startOffset":23965,"endOffset":24015,"count":0},{"startOffset":24017,"endOffset":24050,"count":0},{"startOffset":24149,"endOffset":24169,"count":0},{"startOffset":24175,"endOffset":24252,"count":0},{"startOffset":24319,"endOffset":24322,"count":0},{"startOffset":24397,"endOffset":24419,"count":0},{"startOffset":24498,"endOffset":24536,"count":0},{"startOffset":24538,"endOffset":24571,"count":0},{"startOffset":24610,"endOffset":24638,"count":0}],"isBlockCoverage":true},{"functionName":"snip","ranges":[{"startOffset":24710,"endOffset":24848,"count":0}],"isBlockCoverage":false},{"functionName":"_split","ranges":[{"startOffset":24851,"endOffset":25178,"count":245},{"startOffset":24893,"endOffset":24913,"count":211},{"startOffset":24915,"endOffset":24922,"count":34},{"startOffset":24922,"endOffset":25022,"count":211},{"startOffset":25022,"endOffset":25175,"count":538},{"startOffset":25054,"endOffset":25092,"count":211},{"startOffset":25092,"endOffset":25119,"count":327},{"startOffset":25119,"endOffset":25144,"count":195},{"startOffset":25145,"endOffset":25170,"count":132}],"isBlockCoverage":true},{"functionName":"_splitChunk","ranges":[{"startOffset":25181,"endOffset":25774,"count":211},{"startOffset":25228,"endOffset":25251,"count":0},{"startOffset":25253,"endOffset":25518,"count":0},{"startOffset":25695,"endOffset":25721,"count":190}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":25777,"endOffset":25949,"count":8},{"startOffset":25862,"endOffset":25918,"count":219}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":25952,"endOffset":26235,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":26238,"endOffset":26435,"count":0}],"isBlockCoverage":false},{"functionName":"trimLines","ranges":[{"startOffset":26438,"endOffset":26486,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":26489,"endOffset":26561,"count":0}],"isBlockCoverage":false},{"functionName":"trimEndAborted","ranges":[{"startOffset":26564,"endOffset":27216,"count":0}],"isBlockCoverage":false},{"functionName":"trimEnd","ranges":[{"startOffset":27219,"endOffset":27289,"count":0}],"isBlockCoverage":false},{"functionName":"trimStartAborted","ranges":[{"startOffset":27291,"endOffset":27907,"count":0}],"isBlockCoverage":false},{"functionName":"trimStart","ranges":[{"startOffset":27910,"endOffset":27984,"count":0}],"isBlockCoverage":false},{"functionName":"hasChanged","ranges":[{"startOffset":27987,"endOffset":28048,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceRegexp","ranges":[{"startOffset":28051,"endOffset":29495,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceString","ranges":[{"startOffset":29498,"endOffset":29714,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":29717,"endOffset":29914,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceAllString","ranges":[{"startOffset":29917,"endOffset":30337,"count":0}],"isBlockCoverage":false},{"functionName":"replaceAll","ranges":[{"startOffset":30340,"endOffset":30688,"count":0}],"isBlockCoverage":false},{"functionName":"Bundle","ranges":[{"startOffset":30761,"endOffset":30995,"count":0}],"isBlockCoverage":false},{"functionName":"addSource","ranges":[{"startOffset":30998,"endOffset":32331,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":32334,"endOffset":32486,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":32489,"endOffset":32781,"count":0}],"isBlockCoverage":false},{"functionName":"generateDecodedMap","ranges":[{"startOffset":32784,"endOffset":34842,"count":0}],"isBlockCoverage":false},{"functionName":"generateMap","ranges":[{"startOffset":34845,"endOffset":34928,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentString","ranges":[{"startOffset":34931,"endOffset":35383,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":35386,"endOffset":36246,"count":0}],"isBlockCoverage":false},{"functionName":"prepend","ranges":[{"startOffset":36249,"endOffset":36314,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":36317,"endOffset":36611,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":36614,"endOffset":36781,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":36784,"endOffset":36911,"count":0}],"isBlockCoverage":false},{"functionName":"trimLines","ranges":[{"startOffset":36914,"endOffset":36962,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":36965,"endOffset":37037,"count":0}],"isBlockCoverage":false},{"functionName":"trimStart","ranges":[{"startOffset":37040,"endOffset":37371,"count":0}],"isBlockCoverage":false},{"functionName":"trimEnd","ranges":[{"startOffset":37374,"endOffset":37687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/acorn-walk/dist/walk.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14341,"count":1}],"isBlockCoverage":true},{"functionName":"simple","ranges":[{"startOffset":614,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"ancestor","ranges":[{"startOffset":1119,"endOffset":1604,"count":0}],"isBlockCoverage":false},{"functionName":"recursive","ranges":[{"startOffset":1882,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"makeTest","ranges":[{"startOffset":2140,"endOffset":2345,"count":26},{"startOffset":2254,"endOffset":2343,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2211,"endOffset":2252,"count":234}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2286,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"Found","ranges":[{"startOffset":2359,"endOffset":2428,"count":0}],"isBlockCoverage":false},{"functionName":"full","ranges":[{"startOffset":2481,"endOffset":2821,"count":0}],"isBlockCoverage":false},{"functionName":"fullAncestor","ranges":[{"startOffset":2915,"endOffset":3418,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeAt","ranges":[{"startOffset":3608,"endOffset":4230,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeAround","ranges":[{"startOffset":4345,"endOffset":4811,"count":26},{"startOffset":4741,"endOffset":4809,"count":0}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":4490,"endOffset":4721,"count":528},{"startOffset":4549,"endOffset":4561,"count":130},{"startOffset":4590,"endOffset":4607,"count":432},{"startOffset":4609,"endOffset":4619,"count":294},{"startOffset":4619,"endOffset":4686,"count":234},{"startOffset":4686,"endOffset":4715,"count":0}],"isBlockCoverage":true},{"functionName":"findNodeAfter","ranges":[{"startOffset":4873,"endOffset":5339,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeBefore","ranges":[{"startOffset":5402,"endOffset":5844,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":5949,"endOffset":6114,"count":0}],"isBlockCoverage":false},{"functionName":"skipThrough","ranges":[{"startOffset":6116,"endOffset":6166,"count":104}],"isBlockCoverage":true},{"functionName":"ignore","ranges":[{"startOffset":6167,"endOffset":6201,"count":26}],"isBlockCoverage":true},{"functionName":"base.Program.base.BlockStatement.base.StaticBlock","ranges":[{"startOffset":6293,"endOffset":6445,"count":26},{"startOffset":6383,"endOffset":6443,"count":268}],"isBlockCoverage":true},{"functionName":"base.ExpressionStatement.base.ParenthesizedExpression.base.ChainExpression","ranges":[{"startOffset":6590,"endOffset":6661,"count":26}],"isBlockCoverage":true},{"functionName":"base.IfStatement","ranges":[{"startOffset":6682,"endOffset":6843,"count":0}],"isBlockCoverage":false},{"functionName":"base.LabeledStatement","ranges":[{"startOffset":6869,"endOffset":6933,"count":0}],"isBlockCoverage":false},{"functionName":"base.WithStatement","ranges":[{"startOffset":7011,"endOffset":7106,"count":0}],"isBlockCoverage":false},{"functionName":"base.SwitchStatement","ranges":[{"startOffset":7131,"endOffset":7305,"count":0}],"isBlockCoverage":false},{"functionName":"base.SwitchCase","ranges":[{"startOffset":7325,"endOffset":7536,"count":0}],"isBlockCoverage":false},{"functionName":"base.ReturnStatement.base.YieldExpression.base.AwaitExpression","ranges":[{"startOffset":7607,"endOffset":7694,"count":0}],"isBlockCoverage":false},{"functionName":"base.ThrowStatement.base.SpreadElement","ranges":[{"startOffset":7741,"endOffset":7810,"count":0}],"isBlockCoverage":false},{"functionName":"base.TryStatement","ranges":[{"startOffset":7832,"endOffset":7999,"count":0}],"isBlockCoverage":false},{"functionName":"base.CatchClause","ranges":[{"startOffset":8020,"endOffset":8131,"count":0}],"isBlockCoverage":false},{"functionName":"base.WhileStatement.base.DoWhileStatement","ranges":[{"startOffset":8179,"endOffset":8272,"count":0}],"isBlockCoverage":false},{"functionName":"base.ForStatement","ranges":[{"startOffset":8294,"endOffset":8513,"count":0}],"isBlockCoverage":false},{"functionName":"base.ForInStatement.base.ForOfStatement","ranges":[{"startOffset":8559,"endOffset":8684,"count":0}],"isBlockCoverage":false},{"functionName":"base.ForInit","ranges":[{"startOffset":8701,"endOffset":8825,"count":0}],"isBlockCoverage":false},{"functionName":"base.FunctionDeclaration","ranges":[{"startOffset":8888,"endOffset":8946,"count":0}],"isBlockCoverage":false},{"functionName":"base.VariableDeclaration","ranges":[{"startOffset":8975,"endOffset":9122,"count":0}],"isBlockCoverage":false},{"functionName":"base.VariableDeclarator","ranges":[{"startOffset":9150,"endOffset":9258,"count":0}],"isBlockCoverage":false},{"functionName":"base.Function","ranges":[{"startOffset":9277,"endOffset":9543,"count":0}],"isBlockCoverage":false},{"functionName":"base.Pattern","ranges":[{"startOffset":9561,"endOffset":9772,"count":0}],"isBlockCoverage":false},{"functionName":"base.RestElement","ranges":[{"startOffset":9858,"endOffset":9924,"count":0}],"isBlockCoverage":false},{"functionName":"base.ArrayPattern","ranges":[{"startOffset":9946,"endOffset":10107,"count":0}],"isBlockCoverage":false},{"functionName":"base.ObjectPattern","ranges":[{"startOffset":10130,"endOffset":10477,"count":0}],"isBlockCoverage":false},{"functionName":"base.ArrayExpression","ranges":[{"startOffset":10597,"endOffset":10761,"count":0}],"isBlockCoverage":false},{"functionName":"base.ObjectExpression","ranges":[{"startOffset":10787,"endOffset":10932,"count":0}],"isBlockCoverage":false},{"functionName":"base.SequenceExpression","ranges":[{"startOffset":11043,"endOffset":11203,"count":0}],"isBlockCoverage":false},{"functionName":"base.TemplateLiteral","ranges":[{"startOffset":11228,"endOffset":11520,"count":0}],"isBlockCoverage":false},{"functionName":"base.UnaryExpression.base.UpdateExpression","ranges":[{"startOffset":11600,"endOffset":11664,"count":0}],"isBlockCoverage":false},{"functionName":"base.BinaryExpression.base.LogicalExpression","ranges":[{"startOffset":11715,"endOffset":11810,"count":0}],"isBlockCoverage":false},{"functionName":"base.AssignmentExpression.base.AssignmentPattern","ranges":[{"startOffset":11865,"endOffset":11957,"count":0}],"isBlockCoverage":false},{"functionName":"base.ConditionalExpression","ranges":[{"startOffset":11988,"endOffset":12127,"count":0}],"isBlockCoverage":false},{"functionName":"base.NewExpression.base.CallExpression","ranges":[{"startOffset":12172,"endOffset":12406,"count":26},{"startOffset":12331,"endOffset":12402,"count":52}],"isBlockCoverage":true},{"functionName":"base.MemberExpression","ranges":[{"startOffset":12432,"endOffset":12555,"count":26},{"startOffset":12514,"endOffset":12553,"count":0}],"isBlockCoverage":true},{"functionName":"base.ExportNamedDeclaration.base.ExportDefaultDeclaration","ranges":[{"startOffset":12619,"endOffset":12851,"count":0}],"isBlockCoverage":false},{"functionName":"base.ExportAllDeclaration","ranges":[{"startOffset":12881,"endOffset":12994,"count":0}],"isBlockCoverage":false},{"functionName":"base.ImportDeclaration","ranges":[{"startOffset":13021,"endOffset":13202,"count":0}],"isBlockCoverage":false},{"functionName":"base.ImportExpression","ranges":[{"startOffset":13228,"endOffset":13290,"count":0}],"isBlockCoverage":false},{"functionName":"base.TaggedTemplateExpression","ranges":[{"startOffset":13476,"endOffset":13570,"count":0}],"isBlockCoverage":false},{"functionName":"base.ClassDeclaration.base.ClassExpression","ranges":[{"startOffset":13619,"endOffset":13674,"count":0}],"isBlockCoverage":false},{"functionName":"base.Class","ranges":[{"startOffset":13689,"endOffset":13846,"count":0}],"isBlockCoverage":false},{"functionName":"base.ClassBody","ranges":[{"startOffset":13865,"endOffset":14002,"count":0}],"isBlockCoverage":false},{"functionName":"base.MethodDefinition.base.PropertyDefinition.base.Property","ranges":[{"startOffset":14070,"endOffset":14207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"312","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/index.SMVOaj7F.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":585,"count":1}],"isBlockCoverage":true},{"functionName":"getRunMode","ranges":[{"startOffset":178,"endOffset":242,"count":0}],"isBlockCoverage":false},{"functionName":"isRunningInBenchmark","ranges":[{"startOffset":243,"endOffset":317,"count":0}],"isBlockCoverage":false},{"functionName":"removeUndefinedValues","ranges":[{"startOffset":349,"endOffset":498,"count":1}],"isBlockCoverage":true}]},{"scriptId":"313","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/utils/dist/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7178,"count":1}],"isBlockCoverage":true},{"functionName":"setIsNodeInPattern","ranges":[{"startOffset":101,"endOffset":181,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeInPattern","ranges":[{"startOffset":182,"endOffset":259,"count":897}],"isBlockCoverage":true},{"functionName":"esmWalker","ranges":[{"startOffset":260,"endOffset":5299,"count":8}],"isBlockCoverage":true},{"functionName":"setScope","ranges":[{"startOffset":502,"endOffset":747,"count":118},{"startOffset":576,"endOffset":597,"count":37},{"startOffset":605,"endOffset":612,"count":0},{"startOffset":632,"endOffset":719,"count":81}],"isBlockCoverage":true},{"functionName":"isInScope","ranges":[{"startOffset":751,"endOffset":930,"count":2046}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":811,"endOffset":924,"count":25570},{"startOffset":893,"endOffset":901,"count":22780},{"startOffset":902,"endOffset":916,"count":2790}],"isBlockCoverage":true},{"functionName":"handlePattern","ranges":[{"startOffset":933,"endOffset":1714,"count":111},{"startOffset":1051,"endOffset":1710,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1207,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1471,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":1734,"endOffset":4299,"count":4483},{"startOffset":1809,"endOffset":1828,"count":29},{"startOffset":1828,"endOffset":1846,"count":4454},{"startOffset":1846,"endOffset":1910,"count":4446},{"startOffset":1881,"endOffset":1909,"count":8},{"startOffset":1920,"endOffset":1948,"count":4446},{"startOffset":1948,"endOffset":2004,"count":4454},{"startOffset":2004,"endOffset":2036,"count":127},{"startOffset":2036,"endOffset":2087,"count":4454},{"startOffset":2087,"endOffset":2146,"count":475},{"startOffset":2112,"endOffset":2120,"count":0},{"startOffset":2146,"endOffset":2186,"count":4454},{"startOffset":2186,"endOffset":2216,"count":0},{"startOffset":2226,"endOffset":2277,"count":0},{"startOffset":2277,"endOffset":2392,"count":4454},{"startOffset":2335,"endOffset":2392,"count":0},{"startOffset":2392,"endOffset":2431,"count":4454},{"startOffset":2431,"endOffset":2604,"count":1605},{"startOffset":2480,"endOffset":2525,"count":1255},{"startOffset":2527,"endOffset":2596,"count":441},{"startOffset":2604,"endOffset":4293,"count":2849},{"startOffset":2636,"endOffset":3825,"count":141},{"startOffset":2687,"endOffset":2834,"count":0},{"startOffset":3825,"endOffset":4293,"count":2708},{"startOffset":3860,"endOffset":3894,"count":344},{"startOffset":3896,"endOffset":3939,"count":0},{"startOffset":3985,"endOffset":4190,"count":127},{"startOffset":4143,"endOffset":4182,"count":111},{"startOffset":4190,"endOffset":4293,"count":2581},{"startOffset":4228,"endOffset":4241,"count":0},{"startOffset":4243,"endOffset":4293,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2863,"endOffset":3815,"count":7},{"startOffset":2943,"endOffset":3012,"count":0},{"startOffset":3059,"endOffset":3067,"count":0}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":3087,"endOffset":3791,"count":7},{"startOffset":3155,"endOffset":3169,"count":0},{"startOffset":3195,"endOffset":3250,"count":0},{"startOffset":3268,"endOffset":3287,"count":0},{"startOffset":3351,"endOffset":3358,"count":0},{"startOffset":3430,"endOffset":3437,"count":0},{"startOffset":3482,"endOffset":3496,"count":0},{"startOffset":3520,"endOffset":3587,"count":0},{"startOffset":3617,"endOffset":3631,"count":0},{"startOffset":3654,"endOffset":3710,"count":0},{"startOffset":3728,"endOffset":3735,"count":0}],"isBlockCoverage":true},{"functionName":"leave","ranges":[{"startOffset":4305,"endOffset":4521,"count":4454},{"startOffset":4344,"endOffset":4408,"count":4446},{"startOffset":4379,"endOffset":4407,"count":8},{"startOffset":4418,"endOffset":4438,"count":4446},{"startOffset":4494,"endOffset":4515,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4550,"endOffset":5295,"count":441},{"startOffset":4736,"endOffset":4755,"count":0},{"startOffset":4756,"endOffset":4837,"count":0},{"startOffset":4907,"endOffset":4975,"count":0},{"startOffset":5014,"endOffset":5043,"count":0},{"startOffset":5109,"endOffset":5130,"count":0},{"startOffset":5159,"endOffset":5167,"count":0}],"isBlockCoverage":true},{"functionName":"isRefIdentifier","ranges":[{"startOffset":5300,"endOffset":6193,"count":1255},{"startOffset":5429,"endOffset":5466,"count":1239},{"startOffset":5468,"endOffset":5487,"count":16},{"startOffset":5493,"endOffset":5506,"count":16},{"startOffset":5506,"endOffset":5537,"count":1239},{"startOffset":5537,"endOffset":5644,"count":5},{"startOffset":5571,"endOffset":5584,"count":0},{"startOffset":5627,"endOffset":5640,"count":0},{"startOffset":5644,"endOffset":5686,"count":1239},{"startOffset":5686,"endOffset":5705,"count":0},{"startOffset":5711,"endOffset":5724,"count":0},{"startOffset":5724,"endOffset":5768,"count":1239},{"startOffset":5768,"endOffset":5781,"count":342},{"startOffset":5781,"endOffset":5812,"count":897},{"startOffset":5812,"endOffset":5834,"count":0},{"startOffset":5840,"endOffset":5853,"count":0},{"startOffset":5853,"endOffset":5891,"count":897},{"startOffset":5891,"endOffset":5943,"count":0},{"startOffset":5949,"endOffset":5962,"count":0},{"startOffset":5962,"endOffset":6004,"count":897},{"startOffset":6004,"endOffset":6029,"count":648},{"startOffset":6030,"endOffset":6049,"count":456},{"startOffset":6055,"endOffset":6068,"count":456},{"startOffset":6068,"endOffset":6114,"count":441},{"startOffset":6114,"endOffset":6127,"count":0},{"startOffset":6127,"endOffset":6163,"count":441},{"startOffset":6163,"endOffset":6176,"count":0},{"startOffset":6176,"endOffset":6192,"count":441}],"isBlockCoverage":true},{"functionName":"isStaticProperty","ranges":[{"startOffset":6194,"endOffset":6290,"count":1687},{"startOffset":6242,"endOffset":6269,"count":1680},{"startOffset":6270,"endOffset":6287,"count":342}],"isBlockCoverage":true},{"functionName":"isStaticPropertyKey","ranges":[{"startOffset":6291,"endOffset":6395,"count":1246},{"startOffset":6370,"endOffset":6392,"count":342}],"isBlockCoverage":true},{"functionName":"isFunctionNode","ranges":[{"startOffset":6470,"endOffset":6548,"count":4088}],"isBlockCoverage":true},{"functionName":"isBlock","ranges":[{"startOffset":6618,"endOffset":6686,"count":254}],"isBlockCoverage":true},{"functionName":"findParentScope","ranges":[{"startOffset":6687,"endOffset":6804,"count":127},{"startOffset":6774,"endOffset":6790,"count":0}],"isBlockCoverage":true},{"functionName":"isInDestructuringAssignment","ranges":[{"startOffset":6805,"endOffset":7033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"314","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/strip-literal/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2295,"count":1}],"isBlockCoverage":true},{"functionName":"stripLiteralJsTokens","ranges":[{"startOffset":35,"endOffset":2034,"count":0}],"isBlockCoverage":false},{"functionName":"stripLiteral","ranges":[{"startOffset":2036,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"stripLiteralDetailed","ranges":[{"startOffset":2130,"endOffset":2224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"315","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/utils.dEtNIEgr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7583,"count":1},{"startOffset":6100,"endOffset":6202,"count":0}],"isBlockCoverage":true},{"functionName":"ansiRegex","ranges":[{"startOffset":356,"endOffset":690,"count":1},{"startOffset":669,"endOffset":680,"count":0}],"isBlockCoverage":true},{"functionName":"stripAnsi","ranges":[{"startOffset":720,"endOffset":1107,"count":79705},{"startOffset":782,"endOffset":860,"count":0}],"isBlockCoverage":true},{"functionName":"getCols","ranges":[{"startOffset":1289,"endOffset":1492,"count":47},{"startOffset":1374,"endOffset":1382,"count":0},{"startOffset":1440,"endOffset":1452,"count":0}],"isBlockCoverage":true},{"functionName":"divider","ranges":[{"startOffset":1493,"endOffset":1995,"count":47},{"startOffset":1569,"endOffset":1958,"count":30},{"startOffset":1657,"endOffset":1704,"count":28},{"startOffset":1704,"endOffset":1815,"count":2},{"startOffset":1958,"endOffset":1994,"count":17}],"isBlockCoverage":true},{"functionName":"formatTestPath","ranges":[{"startOffset":1996,"endOffset":2329,"count":0}],"isBlockCoverage":false},{"functionName":"renderSnapshotSummary","ranges":[{"startOffset":2330,"endOffset":3727,"count":1},{"startOffset":2432,"endOffset":2492,"count":0},{"startOffset":2524,"endOffset":2585,"count":0},{"startOffset":2615,"endOffset":2678,"count":0},{"startOffset":2709,"endOffset":2916,"count":0},{"startOffset":2988,"endOffset":3237,"count":0},{"startOffset":3265,"endOffset":3707,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3141,"endOffset":3231,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3491,"endOffset":3701,"count":0}],"isBlockCoverage":false},{"functionName":"countTestErrors","ranges":[{"startOffset":3728,"endOffset":3930,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3784,"endOffset":3923,"count":28},{"startOffset":3861,"endOffset":3869,"count":0},{"startOffset":3891,"endOffset":3899,"count":0},{"startOffset":3913,"endOffset":3917,"count":0}],"isBlockCoverage":true},{"functionName":"getStateString","ranges":[{"startOffset":3931,"endOffset":4788,"count":2},{"startOffset":4028,"endOffset":4055,"count":0},{"startOffset":4494,"endOffset":4500,"count":0},{"startOffset":4565,"endOffset":4571,"count":0},{"startOffset":4593,"endOffset":4633,"count":0},{"startOffset":4658,"endOffset":4689,"count":0},{"startOffset":4780,"endOffset":4784,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4086,"endOffset":4179,"count":180},{"startOffset":4143,"endOffset":4151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4212,"endOffset":4305,"count":180},{"startOffset":4269,"endOffset":4277,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4340,"endOffset":4364,"count":180}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4395,"endOffset":4419,"count":180}],"isBlockCoverage":true},{"functionName":"getStateSymbol","ranges":[{"startOffset":4789,"endOffset":5472,"count":34643},{"startOffset":4887,"endOffset":4902,"count":0},{"startOffset":4927,"endOffset":4949,"count":9907},{"startOffset":4949,"endOffset":4985,"count":24736},{"startOffset":4985,"endOffset":5212,"count":5701},{"startOffset":5024,"endOffset":5039,"count":4245},{"startOffset":5039,"endOffset":5098,"count":1456},{"startOffset":5098,"endOffset":5176,"count":42},{"startOffset":5176,"endOffset":5212,"count":1456},{"startOffset":5212,"endOffset":5249,"count":19035},{"startOffset":5249,"endOffset":5353,"count":11403},{"startOffset":5288,"endOffset":5296,"count":0},{"startOffset":5313,"endOffset":5329,"count":0},{"startOffset":5353,"endOffset":5456,"count":7632},{"startOffset":5425,"endOffset":5434,"count":5122},{"startOffset":5435,"endOffset":5451,"count":2510},{"startOffset":5456,"endOffset":5471,"count":0}],"isBlockCoverage":true},{"functionName":"getHookStateSymbol","ranges":[{"startOffset":5473,"endOffset":6024,"count":2625},{"startOffset":5582,"endOffset":5590,"count":0},{"startOffset":5611,"endOffset":5619,"count":0},{"startOffset":5740,"endOffset":5839,"count":34},{"startOffset":5903,"endOffset":5986,"count":43}],"isBlockCoverage":true},{"functionName":"elegantSpinner","ranges":[{"startOffset":6204,"endOffset":6349,"count":85}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6258,"endOffset":6346,"count":4081}],"isBlockCoverage":true},{"functionName":"formatTimeString","ranges":[{"startOffset":6350,"endOffset":6429,"count":1}],"isBlockCoverage":true},{"functionName":"formatProjectName","ranges":[{"startOffset":6430,"endOffset":6747,"count":28},{"startOffset":6506,"endOffset":6746,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6545,"endOffset":6589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"316","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/rollup/dist/es/parseAst.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":293,"count":1}],"isBlockCoverage":true}]},{"scriptId":"317","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite/dist/node/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2809,"count":1}],"isBlockCoverage":true}]},{"scriptId":"318","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite/dist/node/runtime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44997,"count":1},{"startOffset":3709,"endOffset":3764,"count":0},{"startOffset":5348,"endOffset":5422,"count":64}],"isBlockCoverage":true},{"functionName":"wrapId","ranges":[{"startOffset":209,"endOffset":338,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapId","ranges":[{"startOffset":339,"endOffset":482,"count":0}],"isBlockCoverage":false},{"functionName":"slash","ranges":[{"startOffset":513,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"cleanUrl","ranges":[{"startOffset":605,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":669,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"withTrailingSlash","ranges":[{"startOffset":776,"endOffset":872,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncFunction","ranges":[{"startOffset":895,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeWindowsPath","ranges":[{"startOffset":970,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"cwd","ranges":[{"startOffset":1226,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":1370,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":1976,"endOffset":3339,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":3359,"endOffset":3408,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":3420,"endOffset":3667,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64","ranges":[{"startOffset":3711,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"encodePathChars","ranges":[{"startOffset":3972,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"posixPathToFileHref","ranges":[{"startOffset":4525,"endOffset":5080,"count":0}],"isBlockCoverage":false},{"functionName":"toWindowsPath","ranges":[{"startOffset":5081,"endOffset":5149,"count":0}],"isBlockCoverage":false},{"functionName":"decodeInteger","ranges":[{"startOffset":5423,"endOffset":5767,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":5768,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"StringReader","ranges":[{"startOffset":5887,"endOffset":5952,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":5955,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":6017,"endOffset":6074,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":6077,"endOffset":6208,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":6211,"endOffset":7240,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":7241,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":7294,"endOffset":7349,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":7456,"endOffset":7744,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":7745,"endOffset":7909,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":7910,"endOffset":8061,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":8062,"endOffset":8576,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":8799,"endOffset":8835,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMappings","ranges":[{"startOffset":8836,"endOffset":8949,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":8950,"endOffset":9785,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":9786,"endOffset":9876,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":9877,"endOffset":10214,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10232,"endOffset":10659,"count":0}],"isBlockCoverage":true},{"functionName":"memoizedState","ranges":[{"startOffset":10660,"endOffset":10759,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalPosition","ranges":[{"startOffset":10760,"endOffset":10904,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11058,"endOffset":14354,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeModuleId","ranges":[{"startOffset":14420,"endOffset":14743,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14761,"endOffset":17838,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":17858,"endOffset":18131,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":18148,"endOffset":21304,"count":0}],"isBlockCoverage":true},{"functionName":"analyzeImportedModDifference","ranges":[{"startOffset":21305,"endOffset":22148,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":22390,"endOffset":22399,"count":0}],"isBlockCoverage":false},{"functionName":"createHMRHandler","ranges":[{"startOffset":22451,"endOffset":22597,"count":0}],"isBlockCoverage":false},{"functionName":"handleHMRPayload","ranges":[{"startOffset":22598,"endOffset":24634,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":24647,"endOffset":25129,"count":0}],"isBlockCoverage":true},{"functionName":"createExecHandlers","ranges":[{"startOffset":25349,"endOffset":25502,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25363,"endOffset":25502,"count":0}],"isBlockCoverage":false},{"functionName":"resetInterceptor","ranges":[{"startOffset":25726,"endOffset":26071,"count":0}],"isBlockCoverage":false},{"functionName":"interceptStackTrace","ranges":[{"startOffset":26072,"endOffset":26454,"count":0}],"isBlockCoverage":false},{"functionName":"supportRelativeURL","ranges":[{"startOffset":26455,"endOffset":26844,"count":0}],"isBlockCoverage":false},{"functionName":"getRuntimeSourceMap","ranges":[{"startOffset":26845,"endOffset":27129,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveFile","ranges":[{"startOffset":27130,"endOffset":27367,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMapURL","ranges":[{"startOffset":27368,"endOffset":27713,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMap","ranges":[{"startOffset":27773,"endOffset":28447,"count":0}],"isBlockCoverage":false},{"functionName":"mapSourcePosition","ranges":[{"startOffset":28448,"endOffset":29879,"count":0}],"isBlockCoverage":false},{"functionName":"mapEvalOrigin","ranges":[{"startOffset":29880,"endOffset":30368,"count":0}],"isBlockCoverage":false},{"functionName":"CallSiteToString","ranges":[{"startOffset":30369,"endOffset":31790,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCallSite","ranges":[{"startOffset":31791,"endOffset":32118,"count":0}],"isBlockCoverage":false},{"functionName":"wrapCallSite","ranges":[{"startOffset":32119,"endOffset":33601,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":33602,"endOffset":34084,"count":0}],"isBlockCoverage":false},{"functionName":"enableSourceMapSupport","ranges":[{"startOffset":34085,"endOffset":34924,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":34943,"endOffset":43769,"count":0}],"isBlockCoverage":true},{"functionName":"exportAll","ranges":[{"startOffset":43770,"endOffset":44243,"count":0}],"isBlockCoverage":false},{"functionName":"runViteModule","ranges":[{"startOffset":44270,"endOffset":44765,"count":0}],"isBlockCoverage":false},{"functionName":"runExternalModule","ranges":[{"startOffset":44768,"endOffset":44830,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/utils/dist/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5458,"count":1}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":375,"endOffset":466,"count":0}],"isBlockCoverage":false},{"functionName":"getUnserializableMessage","ranges":[{"startOffset":515,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":732,"endOffset":2343,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeErrorMessage","ranges":[{"startOffset":2344,"endOffset":2459,"count":0}],"isBlockCoverage":false},{"functionName":"processError","ranges":[{"startOffset":2460,"endOffset":3799,"count":0}],"isBlockCoverage":false},{"functionName":"isAsymmetricMatcher","ranges":[{"startOffset":3800,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"isReplaceable","ranges":[{"startOffset":3943,"endOffset":4132,"count":0}],"isBlockCoverage":false},{"functionName":"replaceAsymmetricMatcher","ranges":[{"startOffset":4133,"endOffset":5389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-node/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"321","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14,"count":1}],"isBlockCoverage":true}]},{"scriptId":"322","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"323","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5,"count":1}],"isBlockCoverage":true}]},{"scriptId":"324","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"325","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":1}],"isBlockCoverage":true}]},{"scriptId":"326","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":5}],"isBlockCoverage":true}]},{"scriptId":"327","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/esbuild/lib/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":87654,"count":1},{"startOffset":5563,"endOffset":5894,"count":0},{"startOffset":5942,"endOffset":6270,"count":0},{"startOffset":72686,"endOffset":72697,"count":0},{"startOffset":72826,"endOffset":72840,"count":0},{"startOffset":72858,"endOffset":72872,"count":0},{"startOffset":72877,"endOffset":72911,"count":0},{"startOffset":72981,"endOffset":72989,"count":0},{"startOffset":73036,"endOffset":73055,"count":0},{"startOffset":87321,"endOffset":87352,"count":0},{"startOffset":87450,"endOffset":87652,"count":0}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":300,"endOffset":411,"count":1},{"startOffset":347,"endOffset":409,"count":13}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":431,"endOffset":777,"count":1},{"startOffset":500,"endOffset":529,"count":0},{"startOffset":584,"endOffset":758,"count":13}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":669,"endOffset":684,"count":12}],"isBlockCoverage":true},{"functionName":"__toESM","ranges":[{"startOffset":793,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"__toCommonJS","ranges":[{"startOffset":1323,"endOffset":1394,"count":1}],"isBlockCoverage":true},{"functionName":"analyzeMetafile","ranges":[{"startOffset":1483,"endOffset":1504,"count":1}],"isBlockCoverage":true},{"functionName":"analyzeMetafileSync","ranges":[{"startOffset":1529,"endOffset":1554,"count":1}],"isBlockCoverage":true},{"functionName":"build","ranges":[{"startOffset":1565,"endOffset":1576,"count":1}],"isBlockCoverage":true},{"functionName":"buildSync","ranges":[{"startOffset":1591,"endOffset":1606,"count":1}],"isBlockCoverage":true},{"functionName":"context","ranges":[{"startOffset":1619,"endOffset":1632,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1645,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessages","ranges":[{"startOffset":1683,"endOffset":1703,"count":1}],"isBlockCoverage":true},{"functionName":"formatMessagesSync","ranges":[{"startOffset":1727,"endOffset":1751,"count":1}],"isBlockCoverage":true},{"functionName":"initialize","ranges":[{"startOffset":1767,"endOffset":1783,"count":1}],"isBlockCoverage":true},{"functionName":"stop","ranges":[{"startOffset":1793,"endOffset":1803,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1818,"endOffset":1833,"count":1}],"isBlockCoverage":true},{"functionName":"transformSync","ranges":[{"startOffset":1852,"endOffset":1871,"count":1}],"isBlockCoverage":true},{"functionName":"version","ranges":[{"startOffset":1884,"endOffset":1897,"count":1}],"isBlockCoverage":true},{"functionName":"encodePacket","ranges":[{"startOffset":1980,"endOffset":3020,"count":132}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":2026,"endOffset":2820,"count":1864},{"startOffset":2063,"endOffset":2090,"count":2},{"startOffset":2090,"endOffset":2816,"count":1862},{"startOffset":2128,"endOffset":2180,"count":101},{"startOffset":2180,"endOffset":2816,"count":1761},{"startOffset":2217,"endOffset":2273,"count":6},{"startOffset":2273,"endOffset":2816,"count":1755},{"startOffset":2310,"endOffset":2372,"count":1423},{"startOffset":2372,"endOffset":2816,"count":332},{"startOffset":2411,"endOffset":2461,"count":94},{"startOffset":2461,"endOffset":2816,"count":238},{"startOffset":2495,"endOffset":2615,"count":102},{"startOffset":2579,"endOffset":2609,"count":1324},{"startOffset":2615,"endOffset":2816,"count":136},{"startOffset":2739,"endOffset":2810,"count":408}],"isBlockCoverage":true},{"functionName":"decodePacket","ranges":[{"startOffset":3021,"endOffset":4018,"count":132},{"startOffset":3937,"endOffset":3981,"count":0}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":3066,"endOffset":3776,"count":774},{"startOffset":3106,"endOffset":3134,"count":4},{"startOffset":3141,"endOffset":3177,"count":186},{"startOffset":3184,"endOffset":3219,"count":8},{"startOffset":3226,"endOffset":3271,"count":245},{"startOffset":3278,"endOffset":3311,"count":1},{"startOffset":3318,"endOffset":3500,"count":193},{"startOffset":3426,"endOffset":3469,"count":5},{"startOffset":3507,"endOffset":3708,"count":137},{"startOffset":3615,"endOffset":3677,"count":637},{"startOffset":3715,"endOffset":3766,"count":0}],"isBlockCoverage":true},{"functionName":"ByteBuffer","ranges":[{"startOffset":4046,"endOffset":4147,"count":264}],"isBlockCoverage":true},{"functionName":"_write","ranges":[{"startOffset":4150,"endOffset":4382,"count":4398},{"startOffset":4210,"endOffset":4326,"count":85}],"isBlockCoverage":true},{"functionName":"write8","ranges":[{"startOffset":4385,"endOffset":4467,"count":1965}],"isBlockCoverage":true},{"functionName":"write32","ranges":[{"startOffset":4470,"endOffset":4567,"count":508}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":4570,"endOffset":4724,"count":1925}],"isBlockCoverage":true},{"functionName":"_read","ranges":[{"startOffset":4727,"endOffset":4890,"count":3196},{"startOffset":4786,"endOffset":4834,"count":0}],"isBlockCoverage":true},{"functionName":"read8","ranges":[{"startOffset":4893,"endOffset":4942,"count":960}],"isBlockCoverage":true},{"functionName":"read32","ranges":[{"startOffset":4945,"endOffset":5009,"count":1353}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":5012,"endOffset":5207,"count":883}],"isBlockCoverage":true},{"functionName":"encodeUTF8","ranges":[{"startOffset":5429,"endOffset":5459,"count":1926}],"isBlockCoverage":true},{"functionName":"decodeUTF8","ranges":[{"startOffset":5476,"endOffset":5508,"count":883}],"isBlockCoverage":true},{"functionName":"encodeUTF8","ranges":[{"startOffset":5621,"endOffset":5648,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUTF8","ranges":[{"startOffset":5665,"endOffset":5800,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":6271,"endOffset":6413,"count":1486}],"isBlockCoverage":true},{"functionName":"writeUInt32LE","ranges":[{"startOffset":6414,"endOffset":6592,"count":2565}],"isBlockCoverage":true},{"functionName":"validateTarget","ranges":[{"startOffset":6725,"endOffset":6896,"count":94},{"startOffset":6832,"endOffset":6877,"count":0}],"isBlockCoverage":true},{"functionName":"canBeAnything","ranges":[{"startOffset":6917,"endOffset":6927,"count":0}],"isBlockCoverage":false},{"functionName":"mustBeBoolean","ranges":[{"startOffset":6949,"endOffset":7007,"count":656},{"startOffset":6994,"endOffset":7007,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeString","ranges":[{"startOffset":7028,"endOffset":7084,"count":380},{"startOffset":7072,"endOffset":7084,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeRegExp","ranges":[{"startOffset":7105,"endOffset":7166,"count":2},{"startOffset":7147,"endOffset":7166,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeInteger","ranges":[{"startOffset":7188,"endOffset":7271,"count":0}],"isBlockCoverage":false},{"functionName":"mustBeFunction","ranges":[{"startOffset":7294,"endOffset":7354,"count":2},{"startOffset":7340,"endOffset":7354,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeArray","ranges":[{"startOffset":7374,"endOffset":7425,"count":1},{"startOffset":7413,"endOffset":7425,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeObject","ranges":[{"startOffset":7446,"endOffset":7546,"count":94},{"startOffset":7533,"endOffset":7546,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeEntryPoints","ranges":[{"startOffset":7572,"endOffset":7659,"count":1},{"startOffset":7634,"endOffset":7659,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeWebAssemblyModule","ranges":[{"startOffset":7691,"endOffset":7769,"count":0}],"isBlockCoverage":false},{"functionName":"mustBeObjectOrNull","ranges":[{"startOffset":7796,"endOffset":7886,"count":0}],"isBlockCoverage":false},{"functionName":"mustBeStringOrBoolean","ranges":[{"startOffset":7916,"endOffset":8015,"count":94},{"startOffset":7953,"endOffset":7982,"count":0},{"startOffset":7990,"endOffset":8015,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeStringOrObject","ranges":[{"startOffset":8044,"endOffset":8185,"count":93},{"startOffset":8160,"endOffset":8185,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeStringOrArray","ranges":[{"startOffset":8213,"endOffset":8305,"count":94},{"startOffset":8250,"endOffset":8273,"count":1},{"startOffset":8281,"endOffset":8305,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeStringOrUint8Array","ranges":[{"startOffset":8338,"endOffset":8441,"count":1},{"startOffset":8375,"endOffset":8405,"count":0},{"startOffset":8413,"endOffset":8441,"count":0}],"isBlockCoverage":true},{"functionName":"mustBeStringOrURL","ranges":[{"startOffset":8467,"endOffset":8556,"count":0}],"isBlockCoverage":false},{"functionName":"getFlag","ranges":[{"startOffset":8558,"endOffset":8821,"count":3918},{"startOffset":8682,"endOffset":8696,"count":2500},{"startOffset":8696,"endOffset":8752,"count":1418},{"startOffset":8752,"endOffset":8803,"count":0},{"startOffset":8803,"endOffset":8820,"count":1418}],"isBlockCoverage":true},{"functionName":"checkForInvalidFlags","ranges":[{"startOffset":8822,"endOffset":9005,"count":101},{"startOffset":8901,"endOffset":9003,"count":1419},{"startOffset":8927,"endOffset":8999,"count":0}],"isBlockCoverage":true},{"functionName":"validateInitializeOptions","ranges":[{"startOffset":9006,"endOffset":9438,"count":0}],"isBlockCoverage":false},{"functionName":"validateMangleCache","ranges":[{"startOffset":9439,"endOffset":9902,"count":94},{"startOffset":9530,"endOffset":9880,"count":0}],"isBlockCoverage":true},{"functionName":"pushLogFlags","ranges":[{"startOffset":9903,"endOffset":10381,"count":94},{"startOffset":10195,"endOffset":10226,"count":0}],"isBlockCoverage":true},{"functionName":"validateStringValue","ranges":[{"startOffset":10382,"endOffset":10623,"count":101},{"startOffset":10464,"endOffset":10605,"count":0}],"isBlockCoverage":true},{"functionName":"pushCommonFlags","ranges":[{"startOffset":10624,"endOffset":15898,"count":94},{"startOffset":12990,"endOffset":13038,"count":93},{"startOffset":13068,"endOffset":13110,"count":0},{"startOffset":13144,"endOffset":13194,"count":0},{"startOffset":13242,"endOffset":13317,"count":1},{"startOffset":13317,"endOffset":13376,"count":93},{"startOffset":13395,"endOffset":13428,"count":1},{"startOffset":13447,"endOffset":13489,"count":0},{"startOffset":13506,"endOffset":13543,"count":1},{"startOffset":13563,"endOffset":13671,"count":93},{"startOffset":13624,"endOffset":13637,"count":0},{"startOffset":13686,"endOffset":13709,"count":0},{"startOffset":13730,"endOffset":13760,"count":0},{"startOffset":13785,"endOffset":13819,"count":0},{"startOffset":13845,"endOffset":13880,"count":0},{"startOffset":13898,"endOffset":13938,"count":0},{"startOffset":13954,"endOffset":13989,"count":93},{"startOffset":14020,"endOffset":14064,"count":93},{"startOffset":14090,"endOffset":14125,"count":0},{"startOffset":14138,"endOffset":14219,"count":0},{"startOffset":14238,"endOffset":14357,"count":0},{"startOffset":14377,"endOffset":14428,"count":0},{"startOffset":14449,"endOffset":14502,"count":0},{"startOffset":14534,"endOffset":14580,"count":0},{"startOffset":14592,"endOffset":14619,"count":0},{"startOffset":14638,"endOffset":14680,"count":0},{"startOffset":14700,"endOffset":14744,"count":0},{"startOffset":14768,"endOffset":14821,"count":0},{"startOffset":14836,"endOffset":14860,"count":93},{"startOffset":14883,"endOffset":14916,"count":0},{"startOffset":14931,"endOffset":15136,"count":1},{"startOffset":14961,"endOffset":15132,"count":5},{"startOffset":14996,"endOffset":15038,"count":0},{"startOffset":15156,"endOffset":15389,"count":0},{"startOffset":15407,"endOffset":15761,"count":93},{"startOffset":15440,"endOffset":15757,"count":186},{"startOffset":15475,"endOffset":15520,"count":0},{"startOffset":15595,"endOffset":15702,"count":0},{"startOffset":15774,"endOffset":15851,"count":0},{"startOffset":15869,"endOffset":15896,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14293,"endOffset":14342,"count":0}],"isBlockCoverage":false},{"functionName":"flagsForBuildOptions","ranges":[{"startOffset":15899,"endOffset":23849,"count":1},{"startOffset":18274,"endOffset":18288,"count":0},{"startOffset":18591,"endOffset":18595,"count":0},{"startOffset":18678,"endOffset":18710,"count":0},{"startOffset":18728,"endOffset":18754,"count":0},{"startOffset":18779,"endOffset":18813,"count":0},{"startOffset":18871,"endOffset":18906,"count":0},{"startOffset":18921,"endOffset":18954,"count":0},{"startOffset":18970,"endOffset":19005,"count":0},{"startOffset":19022,"endOffset":19059,"count":0},{"startOffset":19076,"endOffset":19113,"count":0},{"startOffset":19139,"endOffset":19446,"count":0},{"startOffset":19465,"endOffset":19507,"count":0},{"startOffset":19526,"endOffset":19568,"count":0},{"startOffset":19587,"endOffset":19629,"count":0},{"startOffset":19648,"endOffset":19690,"count":0},{"startOffset":19851,"endOffset":19899,"count":0},{"startOffset":20007,"endOffset":20283,"count":0},{"startOffset":20300,"endOffset":20393,"count":0},{"startOffset":20407,"endOffset":20623,"count":0},{"startOffset":20638,"endOffset":20859,"count":0},{"startOffset":20874,"endOffset":21095,"count":0},{"startOffset":21110,"endOffset":21199,"count":0},{"startOffset":21214,"endOffset":21429,"count":0},{"startOffset":21450,"endOffset":21688,"count":0},{"startOffset":21892,"endOffset":21914,"count":0},{"startOffset":21916,"endOffset":22498,"count":0},{"startOffset":22621,"endOffset":22767,"count":0},{"startOffset":22785,"endOffset":23528,"count":0},{"startOffset":23573,"endOffset":23672,"count":0}],"isBlockCoverage":true},{"functionName":"flagsForTransformOptions","ranges":[{"startOffset":23850,"endOffset":24950,"count":93},{"startOffset":24639,"endOffset":24651,"count":0},{"startOffset":24790,"endOffset":24823,"count":0},{"startOffset":24838,"endOffset":24871,"count":0}],"isBlockCoverage":true},{"functionName":"createChannel","ranges":[{"startOffset":24951,"endOffset":34376,"count":1}],"isBlockCoverage":true},{"functionName":"readFromStdout","ranges":[{"startOffset":25241,"endOffset":25895,"count":126},{"startOffset":25328,"endOffset":25424,"count":2},{"startOffset":25549,"endOffset":25787,"count":133},{"startOffset":25644,"endOffset":25668,"count":0}],"isBlockCoverage":true},{"functionName":"afterClose","ranges":[{"startOffset":25916,"endOffset":26208,"count":0}],"isBlockCoverage":false},{"functionName":"sendRequest","ranges":[{"startOffset":26230,"endOffset":26660,"count":94},{"startOffset":26287,"endOffset":26364,"count":0}],"isBlockCoverage":true},{"functionName":"responseCallbacks.<computed>","ranges":[{"startOffset":26423,"endOffset":26556,"count":94}],"isBlockCoverage":true},{"functionName":"sendResponse","ranges":[{"startOffset":26683,"endOffset":26877,"count":38},{"startOffset":26728,"endOffset":26799,"count":0}],"isBlockCoverage":true},{"functionName":"handleRequest","ranges":[{"startOffset":26901,"endOffset":27604,"count":38},{"startOffset":26974,"endOffset":27029,"count":34},{"startOffset":27029,"endOffset":27363,"count":4},{"startOffset":27175,"endOffset":27204,"count":0},{"startOffset":27363,"endOffset":27600,"count":0}],"isBlockCoverage":true},{"functionName":"handleIncomingPacket","ranges":[{"startOffset":27663,"endOffset":28319,"count":133},{"startOffset":27699,"endOffset":27985,"count":1},{"startOffset":27825,"endOffset":27965,"count":0},{"startOffset":27985,"endOffset":28050,"count":132},{"startOffset":28050,"endOffset":28103,"count":38},{"startOffset":28103,"endOffset":28315,"count":94},{"startOffset":28235,"endOffset":28268,"count":0}],"isBlockCoverage":true},{"functionName":"buildOrContext","ranges":[{"startOffset":28344,"endOffset":29216,"count":1}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":28549,"endOffset":28638,"count":2},{"startOffset":28587,"endOffset":28630,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":28646,"endOffset":28789,"count":2},{"startOffset":28686,"endOffset":28781,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29079,"endOffset":29205,"count":1}],"isBlockCoverage":true},{"functionName":"transform2","ranges":[{"startOffset":29237,"endOffset":32356,"count":93},{"startOffset":32193,"endOffset":32223,"count":0},{"startOffset":32256,"endOffset":32335,"count":0}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":29370,"endOffset":32156,"count":93},{"startOffset":29437,"endOffset":29470,"count":0},{"startOffset":29482,"endOffset":29559,"count":0},{"startOffset":29852,"endOffset":29875,"count":0},{"startOffset":29924,"endOffset":29931,"count":0},{"startOffset":29968,"endOffset":30002,"count":0},{"startOffset":31693,"endOffset":32150,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30038,"endOffset":31682,"count":93},{"startOffset":30082,"endOffset":30122,"count":0},{"startOffset":30926,"endOffset":31007,"count":0},{"startOffset":31039,"endOffset":31332,"count":0},{"startOffset":31363,"endOffset":31654,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":30329,"endOffset":30891,"count":93},{"startOffset":30642,"endOffset":30716,"count":0},{"startOffset":30757,"endOffset":30827,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31108,"endOffset":31318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31431,"endOffset":31640,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31990,"endOffset":32140,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":32296,"endOffset":32328,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessages2","ranges":[{"startOffset":32382,"endOffset":33486,"count":0}],"isBlockCoverage":false},{"functionName":"analyzeMetafile2","ranges":[{"startOffset":33513,"endOffset":34170,"count":0}],"isBlockCoverage":false},{"functionName":"buildOrContextImpl","ranges":[{"startOffset":34377,"endOffset":43187,"count":1},{"startOffset":35254,"endOffset":35318,"count":0},{"startOffset":35416,"endOffset":35497,"count":0},{"startOffset":36034,"endOffset":36167,"count":0}],"isBlockCoverage":true},{"functionName":"handleError","ranges":[{"startOffset":34632,"endOffset":35104,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35686,"endOffset":35978,"count":1},{"startOffset":35724,"endOffset":35776,"count":0},{"startOffset":35919,"endOffset":35970,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35986,"endOffset":36011,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36076,"endOffset":36106,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36108,"endOffset":36121,"count":0}],"isBlockCoverage":false},{"functionName":"buildOrContextContinue","ranges":[{"startOffset":36170,"endOffset":43185,"count":1},{"startOffset":36568,"endOffset":36586,"count":0},{"startOffset":36588,"endOffset":36661,"count":0},{"startOffset":36849,"endOffset":36862,"count":0},{"startOffset":36992,"endOffset":37026,"count":0},{"startOffset":38326,"endOffset":38827,"count":0}],"isBlockCoverage":true},{"functionName":"buildResponseToResult","ranges":[{"startOffset":37061,"endOffset":38241,"count":1},{"startOffset":37660,"endOffset":37702,"count":0},{"startOffset":37748,"endOffset":37815,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37848,"endOffset":38233,"count":1},{"startOffset":37947,"endOffset":38164,"count":0}],"isBlockCoverage":true},{"functionName":"requestCallbacks.on-end","ranges":[{"startOffset":38355,"endOffset":38826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38859,"endOffset":43179,"count":1},{"startOffset":38899,"endOffset":38939,"count":0},{"startOffset":39123,"endOffset":43178,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39011,"endOffset":39113,"count":1}],"isBlockCoverage":true},{"functionName":"rebuild","ranges":[{"startOffset":39348,"endOffset":40241,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":40258,"endOffset":40763,"count":0}],"isBlockCoverage":false},{"functionName":"serve","ranges":[{"startOffset":40780,"endOffset":42443,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":42461,"endOffset":42730,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":42749,"endOffset":43116,"count":0}],"isBlockCoverage":false},{"functionName":"handlePlugins","ranges":[{"startOffset":43208,"endOffset":57506,"count":1},{"startOffset":43618,"endOffset":49188,"count":2},{"startOffset":43673,"endOffset":43731,"count":0},{"startOffset":43841,"endOffset":43899,"count":0},{"startOffset":44013,"endOffset":44067,"count":0},{"startOffset":49055,"endOffset":49069,"count":0},{"startOffset":49111,"endOffset":49184,"count":0},{"startOffset":55672,"endOffset":57248,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":44299,"endOffset":46568,"count":0}],"isBlockCoverage":false},{"functionName":"onStart","ranges":[{"startOffset":46647,"endOffset":46975,"count":0}],"isBlockCoverage":false},{"functionName":"onEnd","ranges":[{"startOffset":46985,"endOffset":47303,"count":0}],"isBlockCoverage":false},{"functionName":"onResolve","ranges":[{"startOffset":47313,"endOffset":48114,"count":1},{"startOffset":47842,"endOffset":47898,"count":0}],"isBlockCoverage":true},{"functionName":"onLoad","ranges":[{"startOffset":48124,"endOffset":48904,"count":1},{"startOffset":48641,"endOffset":48694,"count":0}],"isBlockCoverage":true},{"functionName":"onDispose","ranges":[{"startOffset":48914,"endOffset":48990,"count":0}],"isBlockCoverage":false},{"functionName":"requestCallbacks.on-start","ranges":[{"startOffset":49222,"endOffset":50273,"count":0}],"isBlockCoverage":false},{"functionName":"requestCallbacks.on-resolve","ranges":[{"startOffset":50310,"endOffset":53051,"count":3},{"startOffset":50837,"endOffset":52857,"count":2},{"startOffset":50881,"endOffset":50975,"count":0},{"startOffset":51984,"endOffset":52017,"count":0},{"startOffset":52103,"endOffset":52134,"count":0},{"startOffset":52165,"endOffset":52190,"count":0},{"startOffset":52288,"endOffset":52323,"count":0},{"startOffset":52358,"endOffset":52406,"count":0},{"startOffset":52437,"endOffset":52513,"count":0},{"startOffset":52546,"endOffset":52628,"count":0},{"startOffset":52663,"endOffset":52731,"count":0},{"startOffset":52765,"endOffset":52830,"count":0},{"startOffset":52866,"endOffset":53009,"count":0}],"isBlockCoverage":true},{"functionName":"requestCallbacks.on-load","ranges":[{"startOffset":53085,"endOffset":55579,"count":1},{"startOffset":53577,"endOffset":53668,"count":0},{"startOffset":54539,"endOffset":54572,"count":0},{"startOffset":54619,"endOffset":54648,"count":0},{"startOffset":54762,"endOffset":54795,"count":0},{"startOffset":54830,"endOffset":54878,"count":0},{"startOffset":54965,"endOffset":55041,"count":0},{"startOffset":55074,"endOffset":55156,"count":0},{"startOffset":55191,"endOffset":55259,"count":0},{"startOffset":55293,"endOffset":55358,"count":0},{"startOffset":55394,"endOffset":55537,"count":0}],"isBlockCoverage":true},{"functionName":"runOnEndCallbacks","ranges":[{"startOffset":55607,"endOffset":55637,"count":1}],"isBlockCoverage":true},{"functionName":"runOnEndCallbacks","ranges":[{"startOffset":55698,"endOffset":57243,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleOnDisposeCallbacks","ranges":[{"startOffset":57284,"endOffset":57377,"count":1},{"startOffset":57333,"endOffset":57373,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57352,"endOffset":57362,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectStash","ranges":[{"startOffset":57508,"endOffset":57797,"count":94}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":57613,"endOffset":57655,"count":4}],"isBlockCoverage":true},{"functionName":"store","ranges":[{"startOffset":57661,"endOffset":57790,"count":0}],"isBlockCoverage":false},{"functionName":"extractCallerV8","ranges":[{"startOffset":57798,"endOffset":58210,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57887,"endOffset":58207,"count":0}],"isBlockCoverage":false},{"functionName":"extractErrorMessageV8","ranges":[{"startOffset":58211,"endOffset":58613,"count":0}],"isBlockCoverage":false},{"functionName":"parseStackLinesV8","ranges":[{"startOffset":58614,"endOffset":60110,"count":0}],"isBlockCoverage":false},{"functionName":"failureErrorWithLog","ranges":[{"startOffset":60111,"endOffset":61010,"count":0}],"isBlockCoverage":false},{"functionName":"replaceDetailsInMessages","ranges":[{"startOffset":61011,"endOffset":61173,"count":188},{"startOffset":61098,"endOffset":61152,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeLocation","ranges":[{"startOffset":61174,"endOffset":62331,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeMessages","ranges":[{"startOffset":62332,"endOffset":63794,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeStringArray","ranges":[{"startOffset":63795,"endOffset":64045,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeStringMap","ranges":[{"startOffset":64046,"endOffset":64365,"count":0}],"isBlockCoverage":false},{"functionName":"convertOutputFiles","ranges":[{"startOffset":64366,"endOffset":64704,"count":1}],"isBlockCoverage":true},{"functionName":"get text","ranges":[{"startOffset":64504,"endOffset":64697,"count":1},{"startOffset":64577,"endOffset":64599,"count":0}],"isBlockCoverage":true},{"functionName":"isValidBinaryPath","ranges":[{"startOffset":64916,"endOffset":64954,"count":1},{"startOffset":64927,"endOffset":64954,"count":0}],"isBlockCoverage":true},{"functionName":"pkgAndSubpathForCurrentPlatform","ranges":[{"startOffset":66168,"endOffset":66864,"count":1},{"startOffset":66458,"endOffset":66827,"count":0}],"isBlockCoverage":true},{"functionName":"pkgForSomeOtherPlatform","ranges":[{"startOffset":66865,"endOffset":67566,"count":0}],"isBlockCoverage":false},{"functionName":"downloadedBinPath","ranges":[{"startOffset":67567,"endOffset":67777,"count":0}],"isBlockCoverage":false},{"functionName":"generateBinPath","ranges":[{"startOffset":67778,"endOffset":72352,"count":1},{"startOffset":67853,"endOffset":68090,"count":0},{"startOffset":68240,"endOffset":71627,"count":0},{"startOffset":71659,"endOffset":72320,"count":0}],"isBlockCoverage":true},{"functionName":"esbuildCommandAndArgs","ranges":[{"startOffset":73099,"endOffset":74168,"count":1},{"startOffset":73135,"endOffset":73143,"count":0},{"startOffset":73231,"endOffset":73916,"count":0},{"startOffset":73930,"endOffset":74005,"count":0},{"startOffset":74080,"endOffset":74121,"count":0}],"isBlockCoverage":true},{"functionName":"isTTY","ranges":[{"startOffset":74182,"endOffset":74201,"count":94}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":74220,"endOffset":74476,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":74480,"endOffset":74677,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":74699,"endOffset":75004,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":75008,"endOffset":75236,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":75276,"endOffset":75328,"count":1}],"isBlockCoverage":true},{"functionName":"context","ranges":[{"startOffset":75344,"endOffset":75408,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":75426,"endOffset":75496,"count":93}],"isBlockCoverage":true},{"functionName":"formatMessages","ranges":[{"startOffset":75519,"endOffset":75600,"count":0}],"isBlockCoverage":false},{"functionName":"analyzeMetafile","ranges":[{"startOffset":75624,"endOffset":75706,"count":0}],"isBlockCoverage":false},{"functionName":"buildSync","ranges":[{"startOffset":75724,"endOffset":76206,"count":0}],"isBlockCoverage":false},{"functionName":"transformSync","ranges":[{"startOffset":76228,"endOffset":76754,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessagesSync","ranges":[{"startOffset":76781,"endOffset":77280,"count":0}],"isBlockCoverage":false},{"functionName":"analyzeMetafileSync","ranges":[{"startOffset":77308,"endOffset":77878,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":77891,"endOffset":78017,"count":0}],"isBlockCoverage":false},{"functionName":"initialize","ranges":[{"startOffset":78069,"endOffset":78586,"count":0}],"isBlockCoverage":false},{"functionName":"ensureServiceIsRunning","ranges":[{"startOffset":78687,"endOffset":81348,"count":94},{"startOffset":78719,"endOffset":78743,"count":93},{"startOffset":78743,"endOffset":81347,"count":1}],"isBlockCoverage":true},{"functionName":"writeToStdin","ranges":[{"startOffset":79042,"endOffset":79155,"count":132}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":79095,"endOffset":79147,"count":132},{"startOffset":79123,"endOffset":79139,"count":0}],"isBlockCoverage":true},{"functionName":"stopService","ranges":[{"startOffset":79478,"endOffset":79640,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":79790,"endOffset":79844,"count":94},{"startOffset":79826,"endOffset":79838,"count":77}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":79850,"endOffset":79908,"count":94},{"startOffset":79888,"endOffset":79902,"count":77}],"isBlockCoverage":true},{"functionName":"build","ranges":[{"startOffset":79948,"endOffset":80209,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":79973,"endOffset":80208,"count":1}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":80146,"endOffset":80192,"count":1},{"startOffset":80164,"endOffset":80177,"count":0}],"isBlockCoverage":true},{"functionName":"context","ranges":[{"startOffset":80224,"endOffset":80458,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":80475,"endOffset":80743,"count":93}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":80507,"endOffset":80742,"count":93},{"startOffset":80625,"endOffset":80630,"count":0}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":80689,"endOffset":80735,"count":93},{"startOffset":80707,"endOffset":80720,"count":0}],"isBlockCoverage":true},{"functionName":"formatMessages","ranges":[{"startOffset":80765,"endOffset":80993,"count":0}],"isBlockCoverage":false},{"functionName":"analyzeMetafile","ranges":[{"startOffset":81016,"endOffset":81314,"count":0}],"isBlockCoverage":false},{"functionName":"runServiceSync","ranges":[{"startOffset":81371,"endOffset":82274,"count":0}],"isBlockCoverage":false},{"functionName":"randomFileName","ranges":[{"startOffset":82297,"endOffset":82394,"count":0}],"isBlockCoverage":false},{"functionName":"startWorkerThreadService","ranges":[{"startOffset":82459,"endOffset":85304,"count":0}],"isBlockCoverage":false},{"functionName":"startSyncServiceWorker","ranges":[{"startOffset":85335,"endOffset":87291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"329","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"330","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"331","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"332","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"333","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":7}],"isBlockCoverage":true}]},{"scriptId":"334","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":6}],"isBlockCoverage":true}]},{"scriptId":"335","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"336","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5,"count":1}],"isBlockCoverage":true}]},{"scriptId":"337","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-node/dist/constants.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":541,"count":1}],"isBlockCoverage":true}]},{"scriptId":"338","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/runner/dist/chunk-tasks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5020,"count":1}],"isBlockCoverage":true},{"functionName":"partitionSuiteChildren","ranges":[{"startOffset":94,"endOffset":492,"count":0}],"isBlockCoverage":false},{"functionName":"interpretTaskModes","ranges":[{"startOffset":494,"endOffset":1569,"count":0}],"isBlockCoverage":false},{"functionName":"getTaskFullName","ranges":[{"startOffset":1570,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"someTasksAreOnly","ranges":[{"startOffset":1684,"endOffset":1818,"count":0}],"isBlockCoverage":false},{"functionName":"skipAllTasks","ranges":[{"startOffset":1819,"endOffset":2000,"count":0}],"isBlockCoverage":false},{"functionName":"checkAllowOnly","ranges":[{"startOffset":2001,"endOffset":2276,"count":0}],"isBlockCoverage":false},{"functionName":"generateHash","ranges":[{"startOffset":2277,"endOffset":2532,"count":0}],"isBlockCoverage":false},{"functionName":"calculateSuiteHash","ranges":[{"startOffset":2533,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"createChainable","ranges":[{"startOffset":2708,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"isAtomTest","ranges":[{"startOffset":3354,"endOffset":3431,"count":136865},{"startOffset":3406,"endOffset":3428,"count":58628}],"isBlockCoverage":true},{"functionName":"getTests","ranges":[{"startOffset":3432,"endOffset":3881,"count":37148},{"startOffset":3548,"endOffset":3863,"count":37194},{"startOffset":3573,"endOffset":3601,"count":0},{"startOffset":3643,"endOffset":3853,"count":99671},{"startOffset":3675,"endOffset":3714,"count":78237},{"startOffset":3714,"endOffset":3845,"count":21434},{"startOffset":3818,"endOffset":3835,"count":69477}],"isBlockCoverage":true},{"functionName":"getTasks","ranges":[{"startOffset":3882,"endOffset":4004,"count":0}],"isBlockCoverage":false},{"functionName":"getSuites","ranges":[{"startOffset":4005,"endOffset":4128,"count":83}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4065,"endOffset":4124,"count":238},{"startOffset":4091,"endOffset":4119,"count":82},{"startOffset":4120,"endOffset":4124,"count":156}],"isBlockCoverage":true},{"functionName":"hasTests","ranges":[{"startOffset":4129,"endOffset":4245,"count":0}],"isBlockCoverage":false},{"functionName":"hasFailed","ranges":[{"startOffset":4246,"endOffset":4444,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4303,"endOffset":4440,"count":17},{"startOffset":4360,"endOffset":4368,"count":0},{"startOffset":4392,"endOffset":4435,"count":16},{"startOffset":4414,"endOffset":4435,"count":7}],"isBlockCoverage":true},{"functionName":"getNames","ranges":[{"startOffset":4445,"endOffset":4772,"count":58},{"startOffset":4548,"endOffset":4556,"count":0},{"startOffset":4557,"endOffset":4572,"count":227},{"startOffset":4574,"endOffset":4618,"count":113},{"startOffset":4594,"endOffset":4602,"count":0},{"startOffset":4620,"endOffset":4754,"count":169},{"startOffset":4650,"endOffset":4665,"count":55},{"startOffset":4691,"endOffset":4699,"count":0},{"startOffset":4722,"endOffset":4750,"count":114}],"isBlockCoverage":true}]},{"scriptId":"339","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/tasks.IknbGB2n.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":525,"count":1}],"isBlockCoverage":true},{"functionName":"hasFailedSnapshot","ranges":[{"startOffset":84,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"getFullName","ranges":[{"startOffset":380,"endOffset":470,"count":58}],"isBlockCoverage":true}]},{"scriptId":"340","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tinypool/dist/esm/chunk-FJA3Y3DX.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1078,"count":1}],"isBlockCoverage":true},{"functionName":"isTransferable","ranges":[{"startOffset":220,"endOffset":352,"count":24},{"startOffset":331,"endOffset":349,"count":0}],"isBlockCoverage":true},{"functionName":"isMovable","ranges":[{"startOffset":353,"endOffset":442,"count":24},{"startOffset":412,"endOffset":439,"count":0}],"isBlockCoverage":true},{"functionName":"markMovable","ranges":[{"startOffset":443,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"isTaskQueue","ranges":[{"startOffset":607,"endOffset":822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-node/dist/source-map.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30816,"count":1},{"startOffset":498,"endOffset":580,"count":64}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":581,"endOffset":1968,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":1969,"endOffset":2099,"count":0}],"isBlockCoverage":false},{"functionName":"decodeInteger","ranges":[{"startOffset":2100,"endOffset":2548,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":2549,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":2682,"endOffset":2738,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator$1","ranges":[{"startOffset":2739,"endOffset":2798,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3726,"endOffset":4113,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":4143,"endOffset":4212,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":4213,"endOffset":4287,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":4288,"endOffset":4356,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":4357,"endOffset":4424,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":4425,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":4489,"endOffset":4686,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":4687,"endOffset":4914,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":4915,"endOffset":5133,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":5134,"endOffset":6022,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":6023,"endOffset":6338,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":6339,"endOffset":6749,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":6914,"endOffset":9310,"count":0}],"isBlockCoverage":false},{"functionName":"resolve$1","ranges":[{"startOffset":9379,"endOffset":11768,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":11770,"endOffset":12172,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":12246,"endOffset":12390,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":12507,"endOffset":13083,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":13084,"endOffset":13281,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":13282,"endOffset":13465,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":13466,"endOffset":13587,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":13588,"endOffset":13655,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":14228,"endOffset":14650,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":14651,"endOffset":14850,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":14851,"endOffset":15037,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":15038,"endOffset":15154,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":15344,"endOffset":16060,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":16693,"endOffset":17755,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17759,"endOffset":18988,"count":1}],"isBlockCoverage":true},{"functionName":"decodedMappings","ranges":[{"startOffset":17789,"endOffset":17877,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":17905,"endOffset":18985,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":18993,"endOffset":19085,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":19086,"endOffset":19489,"count":0}],"isBlockCoverage":false},{"functionName":"globalProcessVersion","ranges":[{"startOffset":19705,"endOffset":19845,"count":0}],"isBlockCoverage":false},{"functionName":"handlerExec","ranges":[{"startOffset":19846,"endOffset":20040,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19884,"endOffset":20037,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20121,"endOffset":20553,"count":0}],"isBlockCoverage":false},{"functionName":"supportRelativeURL","ranges":[{"startOffset":20556,"endOffset":21022,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMapURL","ranges":[{"startOffset":21023,"endOffset":21414,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21498,"endOffset":22089,"count":0}],"isBlockCoverage":false},{"functionName":"mapSourcePosition","ranges":[{"startOffset":22092,"endOffset":23425,"count":0}],"isBlockCoverage":false},{"functionName":"mapEvalOrigin","ranges":[{"startOffset":23426,"endOffset":23931,"count":0}],"isBlockCoverage":false},{"functionName":"CallSiteToString","ranges":[{"startOffset":23932,"endOffset":25592,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCallSite","ranges":[{"startOffset":25593,"endOffset":25924,"count":0}],"isBlockCoverage":false},{"functionName":"wrapCallSite","ranges":[{"startOffset":25925,"endOffset":27589,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":27590,"endOffset":28116,"count":0}],"isBlockCoverage":false},{"functionName":"install","ranges":[{"startOffset":28194,"endOffset":28712,"count":0}],"isBlockCoverage":false},{"functionName":"withInlineSourcemap","ranges":[{"startOffset":29057,"endOffset":30229,"count":95},{"startOffset":29232,"endOffset":29246,"count":0},{"startOffset":29318,"endOffset":29326,"count":0},{"startOffset":29868,"endOffset":29917,"count":0},{"startOffset":29958,"endOffset":30000,"count":91}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29336,"endOffset":29680,"count":95},{"startOffset":29377,"endOffset":29391,"count":0},{"startOffset":29422,"endOffset":29653,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceMap","ranges":[{"startOffset":30230,"endOffset":30478,"count":0}],"isBlockCoverage":false},{"functionName":"installSourcemapsSupport","ranges":[{"startOffset":30479,"endOffset":30738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tinypool/dist/esm/chunk-T6A5DJAH.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1424,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":61,"endOffset":198,"count":827},{"startOffset":93,"endOffset":179,"count":0}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":220,"endOffset":333,"count":827},{"startOffset":290,"endOffset":300,"count":825},{"startOffset":301,"endOffset":306,"count":2}],"isBlockCoverage":true},{"functionName":"__accessCheck","ranges":[{"startOffset":355,"endOffset":442,"count":26},{"startOffset":407,"endOffset":440,"count":0}],"isBlockCoverage":true},{"functionName":"__privateGet","ranges":[{"startOffset":463,"endOffset":602,"count":25},{"startOffset":563,"endOffset":581,"count":0}],"isBlockCoverage":true},{"functionName":"__privateAdd","ranges":[{"startOffset":623,"endOffset":819,"count":1},{"startOffset":676,"endOffset":745,"count":0},{"startOffset":774,"endOffset":791,"count":0}],"isBlockCoverage":true},{"functionName":"__privateSet","ranges":[{"startOffset":840,"endOffset":1008,"count":1},{"startOffset":939,"endOffset":964,"count":0}],"isBlockCoverage":true},{"functionName":"getFilename","ranges":[{"startOffset":1198,"endOffset":1234,"count":1}],"isBlockCoverage":true},{"functionName":"getDirname","ranges":[{"startOffset":1253,"endOffset":1286,"count":1}],"isBlockCoverage":true}]},{"scriptId":"343","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/mlly/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":72384,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeSlash","ranges":[{"startOffset":650,"endOffset":718,"count":4}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":719,"endOffset":801,"count":0}],"isBlockCoverage":false},{"functionName":"matchAll","ranges":[{"startOffset":802,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"clearImports","ranges":[{"startOffset":1106,"endOffset":1229,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNames","ranges":[{"startOffset":1230,"endOffset":1577,"count":0}],"isBlockCoverage":false},{"functionName":"formatList","ranges":[{"startOffset":2610,"endOffset":2787,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3148,"endOffset":5259,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5460,"endOffset":5606,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5803,"endOffset":5962,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6224,"endOffset":7063,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7244,"endOffset":7387,"count":9},{"startOffset":7322,"endOffset":7332,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7738,"endOffset":7941,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8149,"endOffset":8500,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9067,"endOffset":9156,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9355,"endOffset":9661,"count":0}],"isBlockCoverage":false},{"functionName":"createError","ranges":[{"startOffset":10024,"endOffset":10295,"count":12}],"isBlockCoverage":true},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":10393,"endOffset":11520,"count":12}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":10551,"endOffset":11518,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":11223,"endOffset":11300,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":11552,"endOffset":12066,"count":27},{"startOffset":11761,"endOffset":11787,"count":0},{"startOffset":11792,"endOffset":11800,"count":0},{"startOffset":11902,"endOffset":11945,"count":0},{"startOffset":12040,"endOffset":12064,"count":0}],"isBlockCoverage":true},{"functionName":"hideStackFrames","ranges":[{"startOffset":12247,"endOffset":12545,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12686,"endOffset":13089,"count":9}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":13207,"endOffset":14127,"count":9},{"startOffset":13688,"endOffset":14126,"count":0}],"isBlockCoverage":true},{"functionName":"determineSpecificType","ranges":[{"startOffset":14252,"endOffset":14847,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":15412,"endOffset":17403,"count":31},{"startOffset":15514,"endOffset":15539,"count":24},{"startOffset":15539,"endOffset":15675,"count":7},{"startOffset":15675,"endOffset":15823,"count":4},{"startOffset":15790,"endOffset":15819,"count":0},{"startOffset":15823,"endOffset":16111,"count":7},{"startOffset":16111,"endOffset":17352,"count":3},{"startOffset":16224,"endOffset":16537,"count":0},{"startOffset":16900,"endOffset":16987,"count":2},{"startOffset":17039,"endOffset":17126,"count":0},{"startOffset":17236,"endOffset":17301,"count":2},{"startOffset":17308,"endOffset":17348,"count":2},{"startOffset":17352,"endOffset":17402,"count":7}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":17475,"endOffset":18483,"count":10},{"startOffset":17641,"endOffset":18285,"count":30},{"startOffset":17759,"endOffset":17778,"count":0},{"startOffset":17911,"endOffset":17945,"count":10},{"startOffset":17945,"endOffset":18262,"count":20},{"startOffset":18262,"endOffset":18281,"count":0},{"startOffset":18285,"endOffset":18482,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageType","ranges":[{"startOffset":18623,"endOffset":18764,"count":0}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":19275,"endOffset":19491,"count":0}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":19968,"endOffset":20004,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":20040,"endOffset":20225,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":20464,"endOffset":20840,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":20877,"endOffset":21756,"count":0}],"isBlockCoverage":false},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":21758,"endOffset":21827,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":21925,"endOffset":22158,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":23551,"endOffset":24403,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":24530,"endOffset":25807,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":25873,"endOffset":26247,"count":51},{"startOffset":26016,"endOffset":26245,"count":49}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":26549,"endOffset":26752,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":26872,"endOffset":28300,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":28413,"endOffset":29914,"count":1},{"startOffset":28539,"endOffset":28704,"count":0},{"startOffset":28801,"endOffset":29030,"count":0},{"startOffset":29088,"endOffset":29108,"count":0},{"startOffset":29162,"endOffset":29360,"count":0},{"startOffset":29395,"endOffset":29646,"count":0},{"startOffset":29820,"endOffset":29825,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":30037,"endOffset":30260,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":30369,"endOffset":30576,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":30741,"endOffset":31100,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":31267,"endOffset":31644,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":31936,"endOffset":34912,"count":1},{"startOffset":32115,"endOffset":32151,"count":0},{"startOffset":32157,"endOffset":32230,"count":0},{"startOffset":32264,"endOffset":32890,"count":0},{"startOffset":32950,"endOffset":33652,"count":0},{"startOffset":33863,"endOffset":33936,"count":0},{"startOffset":33960,"endOffset":33975,"count":0},{"startOffset":34027,"endOffset":34705,"count":0},{"startOffset":34871,"endOffset":34911,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32663,"endOffset":32676,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33111,"endOffset":33124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33305,"endOffset":33318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34084,"endOffset":34097,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34362,"endOffset":34375,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34840,"endOffset":34853,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":34967,"endOffset":35126,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":35435,"endOffset":38156,"count":1},{"startOffset":35818,"endOffset":37017,"count":0},{"startOffset":37019,"endOffset":38155,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":38268,"endOffset":39258,"count":1},{"startOffset":38401,"endOffset":38412,"count":0},{"startOffset":38468,"endOffset":38480,"count":0},{"startOffset":38637,"endOffset":39227,"count":2},{"startOffset":38758,"endOffset":39223,"count":1},{"startOffset":38879,"endOffset":39223,"count":0}],"isBlockCoverage":true},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":39339,"endOffset":40030,"count":0}],"isBlockCoverage":false},{"functionName":"packageExportsResolve","ranges":[{"startOffset":40241,"endOffset":42836,"count":1},{"startOffset":40459,"endOffset":40494,"count":0},{"startOffset":40541,"endOffset":40577,"count":0},{"startOffset":40578,"endOffset":40614,"count":0},{"startOffset":40619,"endOffset":41058,"count":0},{"startOffset":41206,"endOffset":42261,"count":2},{"startOffset":41312,"endOffset":41374,"count":1},{"startOffset":41381,"endOffset":42257,"count":1},{"startOffset":41670,"endOffset":41802,"count":0},{"startOffset":42668,"endOffset":42741,"count":0},{"startOffset":42771,"endOffset":42835,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":42888,"endOffset":43398,"count":1},{"startOffset":43057,"endOffset":43076,"count":0},{"startOffset":43121,"endOffset":43131,"count":0},{"startOffset":43186,"endOffset":43195,"count":0},{"startOffset":43237,"endOffset":43397,"count":0}],"isBlockCoverage":true},{"functionName":"packageImportsResolve","ranges":[{"startOffset":43508,"endOffset":45844,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":45904,"endOffset":46888,"count":10},{"startOffset":46159,"endOffset":46198,"count":0},{"startOffset":46332,"endOffset":46343,"count":0},{"startOffset":46537,"endOffset":46572,"count":0},{"startOffset":46599,"endOffset":46736,"count":0},{"startOffset":46796,"endOffset":46800,"count":0}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":47013,"endOffset":49043,"count":10},{"startOffset":47110,"endOffset":47157,"count":0},{"startOffset":47520,"endOffset":47564,"count":0},{"startOffset":47565,"endOffset":47604,"count":0},{"startOffset":47611,"endOffset":47766,"count":0},{"startOffset":47977,"endOffset":48913,"count":50},{"startOffset":48054,"endOffset":48076,"count":1},{"startOffset":48078,"endOffset":48386,"count":49},{"startOffset":48196,"endOffset":48222,"count":0},{"startOffset":48386,"endOffset":48555,"count":1},{"startOffset":48557,"endOffset":48712,"count":1},{"startOffset":48712,"endOffset":48913,"count":0},{"startOffset":48913,"endOffset":49042,"count":9}],"isBlockCoverage":true},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":49104,"endOffset":49391,"count":10},{"startOffset":49174,"endOffset":49373,"count":0}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":49452,"endOffset":49632,"count":10},{"startOffset":49538,"endOffset":49550,"count":0},{"startOffset":49579,"endOffset":49590,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":50171,"endOffset":51632,"count":10},{"startOffset":50696,"endOffset":50905,"count":0},{"startOffset":50961,"endOffset":51033,"count":0},{"startOffset":51194,"endOffset":51232,"count":0},{"startOffset":51234,"endOffset":51369,"count":0},{"startOffset":51442,"endOffset":51542,"count":1},{"startOffset":51542,"endOffset":51567,"count":0},{"startOffset":51567,"endOffset":51631,"count":1}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":51634,"endOffset":51806,"count":2},{"startOffset":51692,"endOffset":51720,"count":1},{"startOffset":51722,"endOffset":51758,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":51807,"endOffset":51893,"count":1}],"isBlockCoverage":true},{"functionName":"sanitizeURIComponent","ranges":[{"startOffset":51968,"endOffset":52113,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeFilePath","ranges":[{"startOffset":52114,"endOffset":52294,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeid","ranges":[{"startOffset":52295,"endOffset":52565,"count":2},{"startOffset":52352,"endOffset":52381,"count":0},{"startOffset":52429,"endOffset":52449,"count":0},{"startOffset":52481,"endOffset":52511,"count":0}],"isBlockCoverage":true},{"functionName":"loadURL","ranges":[{"startOffset":52566,"endOffset":52680,"count":0}],"isBlockCoverage":false},{"functionName":"toDataURL","ranges":[{"startOffset":52681,"endOffset":52814,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeBuiltin","ranges":[{"startOffset":52815,"endOffset":52931,"count":0}],"isBlockCoverage":false},{"functionName":"getProtocol","ranges":[{"startOffset":52979,"endOffset":53095,"count":0}],"isBlockCoverage":false},{"functionName":"_tryModuleResolve","ranges":[{"startOffset":53403,"endOffset":53604,"count":10},{"startOffset":53512,"endOffset":53602,"count":9},{"startOffset":53572,"endOffset":53598,"count":0}],"isBlockCoverage":true},{"functionName":"_resolve","ranges":[{"startOffset":53605,"endOffset":55665,"count":1},{"startOffset":53673,"endOffset":53820,"count":0},{"startOffset":53863,"endOffset":53883,"count":0},{"startOffset":53915,"endOffset":53945,"count":0},{"startOffset":53978,"endOffset":54011,"count":0},{"startOffset":54034,"endOffset":54246,"count":0},{"startOffset":54290,"endOffset":54319,"count":0},{"startOffset":54404,"endOffset":54419,"count":0},{"startOffset":54515,"endOffset":54575,"count":0},{"startOffset":54630,"endOffset":54904,"count":2},{"startOffset":54947,"endOffset":55446,"count":2},{"startOffset":55025,"endOffset":55087,"count":1},{"startOffset":55161,"endOffset":55352,"count":8},{"startOffset":55316,"endOffset":55344,"count":0},{"startOffset":55373,"endOffset":55397,"count":0},{"startOffset":55403,"endOffset":55422,"count":1},{"startOffset":55422,"endOffset":55442,"count":0},{"startOffset":55464,"endOffset":55629,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54441,"endOffset":54486,"count":2}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":55666,"endOffset":55735,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":55736,"endOffset":55889,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePathSync","ranges":[{"startOffset":55890,"endOffset":55981,"count":1}],"isBlockCoverage":true},{"functionName":"resolvePath","ranges":[{"startOffset":55982,"endOffset":56143,"count":0}],"isBlockCoverage":false},{"functionName":"createResolve","ranges":[{"startOffset":56144,"endOffset":56255,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeModulePath","ranges":[{"startOffset":56337,"endOffset":56650,"count":0}],"isBlockCoverage":false},{"functionName":"lookupNodeModuleSubpath","ranges":[{"startOffset":56651,"endOffset":57084,"count":0}],"isBlockCoverage":false},{"functionName":"_findSubpath","ranges":[{"startOffset":57085,"endOffset":57449,"count":0}],"isBlockCoverage":false},{"functionName":"_flattenExports","ranges":[{"startOffset":57450,"endOffset":57893,"count":0}],"isBlockCoverage":false},{"functionName":"findStaticImports","ranges":[{"startOffset":59598,"endOffset":59765,"count":0}],"isBlockCoverage":false},{"functionName":"findDynamicImports","ranges":[{"startOffset":59766,"endOffset":59932,"count":0}],"isBlockCoverage":false},{"functionName":"findTypeImports","ranges":[{"startOffset":59933,"endOffset":60179,"count":0}],"isBlockCoverage":false},{"functionName":"parseStaticImport","ranges":[{"startOffset":60180,"endOffset":60845,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeImport","ranges":[{"startOffset":60846,"endOffset":61671,"count":0}],"isBlockCoverage":false},{"functionName":"findExports","ranges":[{"startOffset":61672,"endOffset":63584,"count":0}],"isBlockCoverage":false},{"functionName":"findTypeExports","ranges":[{"startOffset":63585,"endOffset":64415,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExports","ranges":[{"startOffset":64416,"endOffset":64955,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeNamedExports","ranges":[{"startOffset":64956,"endOffset":65252,"count":0}],"isBlockCoverage":false},{"functionName":"findExportNames","ranges":[{"startOffset":65253,"endOffset":65359,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleExportNames","ranges":[{"startOffset":65360,"endOffset":65948,"count":0}],"isBlockCoverage":false},{"functionName":"_filterStatement","ranges":[{"startOffset":65949,"endOffset":66178,"count":0}],"isBlockCoverage":false},{"functionName":"_tryGetLocations","ranges":[{"startOffset":66179,"endOffset":66284,"count":0}],"isBlockCoverage":false},{"functionName":"_getLocations","ranges":[{"startOffset":66285,"endOffset":66726,"count":0}],"isBlockCoverage":false},{"functionName":"createCommonJS","ranges":[{"startOffset":66728,"endOffset":67246,"count":0}],"isBlockCoverage":false},{"functionName":"interopDefault","ranges":[{"startOffset":67247,"endOffset":68082,"count":0}],"isBlockCoverage":false},{"functionName":"loadModule","ranges":[{"startOffset":68271,"endOffset":68443,"count":0}],"isBlockCoverage":false},{"functionName":"evalModule","ranges":[{"startOffset":68444,"endOffset":68775,"count":0}],"isBlockCoverage":false},{"functionName":"transformModule","ranges":[{"startOffset":68776,"endOffset":69060,"count":0}],"isBlockCoverage":false},{"functionName":"resolveImports","ranges":[{"startOffset":69061,"endOffset":69770,"count":0}],"isBlockCoverage":false},{"functionName":"hasESMSyntax","ranges":[{"startOffset":70153,"endOffset":70296,"count":0}],"isBlockCoverage":false},{"functionName":"hasCJSSyntax","ranges":[{"startOffset":70297,"endOffset":70440,"count":0}],"isBlockCoverage":false},{"functionName":"detectSyntax","ranges":[{"startOffset":70441,"endOffset":70708,"count":0}],"isBlockCoverage":false},{"functionName":"isValidNodeImport","ranges":[{"startOffset":70791,"endOffset":71732,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/chunks/runtime-console.EO5ha7qv.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4313,"count":1}],"isBlockCoverage":true},{"functionName":"getTaskIdByStack","ranges":[{"startOffset":458,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"createCustomConsole","ranges":[{"startOffset":978,"endOffset":4262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14743,"count":1},{"startOffset":311,"endOffset":393,"count":64},{"startOffset":1451,"endOffset":1919,"count":0}],"isBlockCoverage":true},{"functionName":"decodeInteger","ranges":[{"startOffset":394,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInteger","ranges":[{"startOffset":813,"endOffset":1162,"count":51584},{"startOffset":916,"endOffset":935,"count":813},{"startOffset":936,"endOffset":948,"count":50771},{"startOffset":957,"endOffset":1125,"count":53163},{"startOffset":1056,"endOffset":1076,"count":1579}],"isBlockCoverage":true},{"functionName":"hasMoreVlq","ranges":[{"startOffset":1163,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1507,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1694,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"StringWriter","ranges":[{"startOffset":1946,"endOffset":2061,"count":8}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2066,"endOffset":2264,"count":66216},{"startOffset":2178,"endOffset":2258,"count":0}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":2269,"endOffset":2400,"count":8},{"startOffset":2388,"endOffset":2393,"count":0}],"isBlockCoverage":true},{"functionName":"StringReader","ranges":[{"startOffset":2428,"endOffset":2507,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":2512,"endOffset":2577,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":2582,"endOffset":2645,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":2650,"endOffset":2805,"count":0}],"isBlockCoverage":false},{"functionName":"decodeOriginalScopes","ranges":[{"startOffset":2827,"endOffset":3943,"count":0}],"isBlockCoverage":false},{"functionName":"encodeOriginalScopes","ranges":[{"startOffset":3944,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeOriginalScopes","ranges":[{"startOffset":4159,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"decodeGeneratedRanges","ranges":[{"startOffset":5195,"endOffset":8822,"count":0}],"isBlockCoverage":false},{"functionName":"encodeGeneratedRanges","ranges":[{"startOffset":8823,"endOffset":9105,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeGeneratedRanges","ranges":[{"startOffset":9106,"endOffset":11755,"count":0}],"isBlockCoverage":false},{"functionName":"catchupLine","ranges":[{"startOffset":11756,"endOffset":11879,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":11881,"endOffset":13400,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":13401,"endOffset":13455,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":13456,"endOffset":13513,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":13514,"endOffset":14579,"count":8},{"startOffset":13725,"endOffset":14550,"count":986},{"startOffset":13791,"endOffset":13815,"count":978},{"startOffset":13859,"endOffset":13868,"count":165},{"startOffset":13868,"endOffset":13942,"count":821},{"startOffset":13942,"endOffset":14544,"count":12896},{"startOffset":14020,"endOffset":14040,"count":12075},{"startOffset":14165,"endOffset":14174,"count":0},{"startOffset":14462,"endOffset":14544,"count":0},{"startOffset":14544,"endOffset":14550,"count":821}],"isBlockCoverage":true}]},{"scriptId":"346","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/global.CkGT_TMy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":999,"count":1}],"isBlockCoverage":true},{"functionName":"getWorkerState","ranges":[{"startOffset":0,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"provideWorkerState","ranges":[{"startOffset":574,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentEnvironment","ranges":[{"startOffset":784,"endOffset":912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/estree-walker/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":806,"count":1}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":390,"endOffset":513,"count":15}],"isBlockCoverage":true},{"functionName":"asyncWalk","ranges":[{"startOffset":664,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/rollup/dist/native.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3555,"count":1},{"startOffset":2263,"endOffset":2274,"count":0}],"isBlockCoverage":true},{"functionName":"isMusl","ranges":[{"startOffset":154,"endOffset":206,"count":0}],"isBlockCoverage":false},{"functionName":"requireWithFriendlyError","ranges":[{"startOffset":1231,"endOffset":2114,"count":1},{"startOffset":1271,"endOffset":2112,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageBase","ranges":[{"startOffset":2313,"endOffset":2578,"count":1},{"startOffset":2420,"endOffset":2456,"count":0},{"startOffset":2481,"endOffset":2492,"count":0},{"startOffset":2494,"endOffset":2553,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnsupportedError","ranges":[{"startOffset":2580,"endOffset":3345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"350","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"351","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14,"count":1}],"isBlockCoverage":true}]},{"scriptId":"352","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite/dist/node/chunks/dep-CB_7IfJ-.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2076991,"count":1},{"startOffset":3579,"endOffset":3702,"count":0},{"startOffset":4767,"endOffset":4772,"count":0},{"startOffset":4966,"endOffset":5047,"count":0},{"startOffset":5048,"endOffset":5066,"count":0},{"startOffset":122405,"endOffset":122414,"count":0},{"startOffset":122570,"endOffset":122588,"count":0},{"startOffset":158779,"endOffset":158785,"count":0},{"startOffset":158905,"endOffset":158909,"count":0},{"startOffset":159258,"endOffset":160827,"count":0},{"startOffset":213522,"endOffset":213575,"count":0},{"startOffset":309923,"endOffset":309934,"count":0},{"startOffset":310233,"endOffset":310309,"count":0},{"startOffset":317741,"endOffset":317750,"count":0},{"startOffset":344367,"endOffset":344376,"count":0},{"startOffset":354618,"endOffset":354702,"count":64},{"startOffset":355760,"endOffset":356228,"count":0},{"startOffset":522355,"endOffset":522395,"count":0},{"startOffset":522576,"endOffset":522657,"count":0},{"startOffset":532530,"endOffset":532718,"count":0},{"startOffset":542461,"endOffset":542494,"count":0},{"startOffset":572934,"endOffset":572975,"count":0},{"startOffset":573296,"endOffset":573320,"count":0},{"startOffset":573664,"endOffset":573688,"count":0},{"startOffset":574079,"endOffset":574164,"count":0},{"startOffset":662553,"endOffset":662599,"count":0},{"startOffset":677025,"endOffset":677042,"count":0},{"startOffset":677430,"endOffset":677457,"count":0},{"startOffset":753445,"endOffset":753453,"count":0},{"startOffset":753526,"endOffset":753644,"count":0},{"startOffset":755015,"endOffset":755144,"count":0},{"startOffset":755514,"endOffset":755557,"count":0},{"startOffset":755680,"endOffset":755712,"count":0},{"startOffset":808948,"endOffset":808966,"count":0},{"startOffset":810828,"endOffset":810853,"count":0},{"startOffset":866791,"endOffset":866839,"count":0},{"startOffset":1279152,"endOffset":1279189,"count":0},{"startOffset":1284439,"endOffset":1284504,"count":0},{"startOffset":1296211,"endOffset":1296278,"count":0},{"startOffset":1303381,"endOffset":1303446,"count":0},{"startOffset":1310414,"endOffset":1310920,"count":0},{"startOffset":1321780,"endOffset":1321807,"count":0},{"startOffset":1358446,"endOffset":1358467,"count":0},{"startOffset":1358485,"endOffset":1358764,"count":0},{"startOffset":1404298,"endOffset":1404348,"count":4},{"startOffset":1521041,"endOffset":1521191,"count":0},{"startOffset":1521244,"endOffset":1521396,"count":0},{"startOffset":1672878,"endOffset":1672909,"count":0},{"startOffset":1683500,"endOffset":1683533,"count":0},{"startOffset":1683565,"endOffset":1683598,"count":0},{"startOffset":1684687,"endOffset":1684725,"count":0},{"startOffset":1684726,"endOffset":1684762,"count":0},{"startOffset":1684824,"endOffset":1684829,"count":0},{"startOffset":1730653,"endOffset":1730980,"count":0},{"startOffset":1832142,"endOffset":1832248,"count":0},{"startOffset":1863182,"endOffset":1863189,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultExportFromCjs","ranges":[{"startOffset":3705,"endOffset":3845,"count":19},{"startOffset":3770,"endOffset":3823,"count":0},{"startOffset":3824,"endOffset":3838,"count":0}],"isBlockCoverage":true},{"functionName":"getAugmentedNamespace","ranges":[{"startOffset":3847,"endOffset":4454,"count":1},{"startOffset":3903,"endOffset":3912,"count":0},{"startOffset":3963,"endOffset":4163,"count":0}],"isBlockCoverage":true},{"functionName":"a","ranges":[{"startOffset":3975,"endOffset":4129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4258,"endOffset":4439,"count":30},{"startOffset":4358,"endOffset":4361,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4395,"endOffset":4430,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsRequire","ranges":[{"startOffset":4456,"endOffset":4708,"count":0}],"isBlockCoverage":false},{"functionName":"formatter","ranges":[{"startOffset":5087,"endOffset":5318,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5121,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"replaceClose","ranges":[{"startOffset":5340,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"createColors","ranges":[{"startOffset":5630,"endOffset":6785,"count":1},{"startOffset":5696,"endOffset":5710,"count":0}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":5698,"endOffset":5710,"count":0}],"isBlockCoverage":false},{"functionName":"matches$1","ranges":[{"startOffset":6991,"endOffset":7340,"count":3298},{"startOffset":7112,"endOffset":7339,"count":0}],"isBlockCoverage":true},{"functionName":"getEntries","ranges":[{"startOffset":7341,"endOffset":8000,"count":1},{"startOffset":7410,"endOffset":7436,"count":0},{"startOffset":7834,"endOffset":7999,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7577,"endOffset":7826,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7874,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"getHookFunction","ranges":[{"startOffset":8001,"endOffset":8227,"count":1},{"startOffset":8070,"endOffset":8098,"count":0},{"startOffset":8112,"endOffset":8132,"count":0},{"startOffset":8133,"endOffset":8170,"count":0},{"startOffset":8172,"endOffset":8208,"count":0}],"isBlockCoverage":true},{"functionName":"resolveCustomResolver","ranges":[{"startOffset":8228,"endOffset":8470,"count":3},{"startOffset":8323,"endOffset":8361,"count":1},{"startOffset":8361,"endOffset":8386,"count":2},{"startOffset":8386,"endOffset":8451,"count":0},{"startOffset":8451,"endOffset":8469,"count":2}],"isBlockCoverage":true},{"functionName":"alias$1","ranges":[{"startOffset":8471,"endOffset":10253,"count":1},{"startOffset":8575,"endOffset":8671,"count":0}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":8644,"endOffset":8654,"count":0}],"isBlockCoverage":false},{"functionName":"buildStart","ranges":[{"startOffset":8716,"endOffset":9044,"count":1},{"startOffset":8833,"endOffset":8837,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8853,"endOffset":9031,"count":3},{"startOffset":8909,"endOffset":9028,"count":1},{"startOffset":8972,"endOffset":8988,"count":0},{"startOffset":8998,"endOffset":9027,"count":0}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":9054,"endOffset":10244,"count":1650},{"startOffset":9285,"endOffset":9329,"count":1648},{"startOffset":9329,"endOffset":9587,"count":2},{"startOffset":9587,"endOffset":10243,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9209,"endOffset":9251,"count":3298}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9697,"endOffset":10232,"count":0}],"isBlockCoverage":false},{"functionName":"wrapId$1","ranges":[{"startOffset":10565,"endOffset":10696,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapId$1","ranges":[{"startOffset":10697,"endOffset":10842,"count":164},{"startOffset":10763,"endOffset":10834,"count":0}],"isBlockCoverage":true},{"functionName":"slash$1","ranges":[{"startOffset":10873,"endOffset":10937,"count":3501}],"isBlockCoverage":true},{"functionName":"cleanUrl","ranges":[{"startOffset":10967,"endOffset":11030,"count":4155}],"isBlockCoverage":true},{"functionName":"withTrailingSlash","ranges":[{"startOffset":11031,"endOffset":11148,"count":919},{"startOffset":11103,"endOffset":11131,"count":426},{"startOffset":11131,"endOffset":11147,"count":493}],"isBlockCoverage":true},{"functionName":"AsyncFunction","ranges":[{"startOffset":11171,"endOffset":11191,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11271,"endOffset":11441,"count":1}],"isBlockCoverage":true},{"functionName":"WalkerBase","ranges":[{"startOffset":11667,"endOffset":12047,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":12166,"endOffset":12324,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":12416,"endOffset":12570,"count":0}],"isBlockCoverage":false},{"functionName":"SyncWalker","ranges":[{"startOffset":13007,"endOffset":13152,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":13304,"endOffset":15203,"count":0}],"isBlockCoverage":false},{"functionName":"walk$3","ranges":[{"startOffset":15541,"endOffset":15668,"count":0}],"isBlockCoverage":false},{"functionName":"extglobChars","ranges":[{"startOffset":19695,"endOffset":20034,"count":3}],"isBlockCoverage":true},{"functionName":"globChars","ranges":[{"startOffset":20075,"endOffset":20154,"count":6},{"startOffset":20136,"endOffset":20149,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20160,"endOffset":22094,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":20404,"endOffset":20473,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":20500,"endOffset":20536,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":20561,"endOffset":20614,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":20639,"endOffset":20693,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":20721,"endOffset":20761,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":20793,"endOffset":20909,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":20943,"endOffset":21138,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":21162,"endOffset":21316,"count":9},{"startOffset":21231,"endOffset":21266,"count":0},{"startOffset":21292,"endOffset":21312,"count":0}],"isBlockCoverage":true},{"functionName":"exports.escapeLast","ranges":[{"startOffset":21341,"endOffset":21591,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":21618,"endOffset":21782,"count":6},{"startOffset":21698,"endOffset":21761,"count":0}],"isBlockCoverage":true},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":21807,"endOffset":22090,"count":0}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":22923,"endOffset":23004,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":23021,"endOffset":23121,"count":0}],"isBlockCoverage":false},{"functionName":"scan$2","ranges":[{"startOffset":23772,"endOffset":31457,"count":0}],"isBlockCoverage":false},{"functionName":"expandRange","ranges":[{"startOffset":31752,"endOffset":31951,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":32024,"endOffset":32130,"count":0}],"isBlockCoverage":false},{"functionName":"parse$g","ranges":[{"startOffset":32263,"endOffset":56559,"count":3},{"startOffset":32318,"endOffset":32369,"count":0},{"startOffset":32492,"endOffset":32532,"count":0},{"startOffset":32593,"endOffset":32689,"count":0},{"startOffset":32817,"endOffset":32821,"count":0},{"startOffset":33437,"endOffset":33445,"count":0},{"startOffset":33485,"endOffset":33499,"count":0},{"startOffset":33533,"endOffset":33549,"count":0},{"startOffset":33579,"endOffset":33608,"count":0},{"startOffset":33680,"endOffset":33718,"count":0},{"startOffset":38234,"endOffset":39459,"count":0},{"startOffset":39540,"endOffset":55430,"count":19},{"startOffset":39594,"endOffset":39617,"count":0},{"startOffset":39686,"endOffset":40502,"count":0},{"startOffset":40648,"endOffset":40711,"count":0},{"startOffset":40713,"endOffset":41845,"count":0},{"startOffset":41988,"endOffset":42004,"count":0},{"startOffset":42006,"endOffset":42123,"count":0},{"startOffset":42186,"endOffset":42343,"count":0},{"startOffset":42404,"endOffset":42492,"count":0},{"startOffset":42517,"endOffset":42952,"count":0},{"startOffset":43017,"endOffset":43376,"count":0},{"startOffset":43401,"endOffset":44860,"count":0},{"startOffset":44915,"endOffset":44939,"count":1},{"startOffset":44941,"endOffset":45208,"count":1},{"startOffset":45208,"endOffset":45233,"count":18},{"startOffset":45233,"endOffset":46363,"count":1},{"startOffset":45326,"endOffset":45407,"count":0},{"startOffset":45465,"endOffset":45864,"count":0},{"startOffset":45897,"endOffset":45919,"count":0},{"startOffset":45921,"endOffset":46247,"count":0},{"startOffset":46363,"endOffset":46418,"count":17},{"startOffset":46418,"endOffset":46571,"count":0},{"startOffset":46571,"endOffset":46627,"count":17},{"startOffset":46627,"endOffset":46888,"count":1},{"startOffset":46888,"endOffset":46945,"count":16},{"startOffset":46945,"endOffset":47555,"count":0},{"startOffset":47555,"endOffset":47609,"count":16},{"startOffset":47609,"endOffset":48175,"count":4},{"startOffset":47638,"endOffset":47660,"count":0},{"startOffset":47662,"endOffset":47911,"count":0},{"startOffset":48008,"endOffset":48175,"count":2},{"startOffset":48175,"endOffset":48239,"count":12},{"startOffset":48239,"endOffset":49178,"count":0},{"startOffset":49178,"endOffset":49239,"count":12},{"startOffset":49239,"endOffset":49539,"count":0},{"startOffset":49539,"endOffset":49593,"count":12},{"startOffset":49593,"endOffset":50143,"count":0},{"startOffset":50143,"endOffset":50203,"count":12},{"startOffset":50203,"endOffset":50428,"count":0},{"startOffset":50428,"endOffset":50488,"count":12},{"startOffset":50488,"endOffset":50789,"count":4},{"startOffset":50532,"endOffset":50571,"count":0},{"startOffset":50789,"endOffset":50885,"count":8},{"startOffset":50887,"endOffset":51094,"count":0},{"startOffset":51094,"endOffset":51179,"count":8},{"startOffset":51181,"endOffset":51238,"count":0},{"startOffset":51238,"endOffset":51270,"count":8},{"startOffset":51270,"endOffset":54469,"count":3},{"startOffset":51308,"endOffset":51359,"count":0},{"startOffset":51526,"endOffset":51583,"count":0},{"startOffset":51615,"endOffset":51660,"count":0},{"startOffset":51662,"endOffset":51740,"count":0},{"startOffset":51781,"endOffset":51834,"count":0},{"startOffset":51876,"endOffset":51928,"count":0},{"startOffset":51949,"endOffset":51974,"count":0},{"startOffset":51975,"endOffset":51986,"count":0},{"startOffset":51987,"endOffset":52000,"count":0},{"startOffset":52002,"endOffset":52080,"count":0},{"startOffset":52157,"endOffset":52334,"count":0},{"startOffset":52377,"endOffset":52594,"count":0},{"startOffset":52629,"endOffset":52657,"count":0},{"startOffset":52658,"endOffset":52671,"count":0},{"startOffset":52672,"endOffset":52680,"count":0},{"startOffset":52682,"endOffset":53082,"count":0},{"startOffset":53117,"endOffset":53145,"count":0},{"startOffset":53146,"endOffset":53164,"count":0},{"startOffset":53166,"endOffset":53699,"count":0},{"startOffset":54082,"endOffset":54469,"count":0},{"startOffset":54469,"endOffset":54557,"count":5},{"startOffset":54557,"endOffset":54738,"count":0},{"startOffset":54738,"endOffset":54806,"count":5},{"startOffset":54807,"endOffset":54829,"count":0},{"startOffset":54831,"endOffset":54901,"count":0},{"startOffset":54901,"endOffset":54939,"count":5},{"startOffset":54939,"endOffset":54963,"count":2},{"startOffset":54964,"endOffset":54986,"count":1},{"startOffset":54988,"endOffset":55408,"count":4},{"startOffset":55021,"endOffset":55106,"count":0},{"startOffset":55222,"endOffset":55298,"count":0},{"startOffset":55326,"endOffset":55402,"count":1},{"startOffset":55408,"endOffset":55430,"count":5},{"startOffset":55461,"endOffset":55641,"count":0},{"startOffset":55670,"endOffset":55848,"count":0},{"startOffset":55877,"endOffset":56055,"count":0},{"startOffset":56116,"endOffset":56142,"count":2},{"startOffset":56145,"endOffset":56225,"count":1},{"startOffset":56319,"endOffset":56540,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":33300,"endOffset":33404,"count":3},{"startOffset":33378,"endOffset":33391,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":34214,"endOffset":34243,"count":25}],"isBlockCoverage":true},{"functionName":"state.peek","ranges":[{"startOffset":34273,"endOffset":34306,"count":4}],"isBlockCoverage":true},{"functionName":"state.advance","ranges":[{"startOffset":34342,"endOffset":34374,"count":22},{"startOffset":34369,"endOffset":34374,"count":0}],"isBlockCoverage":true},{"functionName":"remaining","ranges":[{"startOffset":34396,"endOffset":34430,"count":12}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":34450,"endOffset":34533,"count":23}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":34553,"endOffset":34664,"count":20},{"startOffset":34605,"endOffset":34619,"count":16},{"startOffset":34620,"endOffset":34633,"count":4}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":34684,"endOffset":34960,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":34983,"endOffset":35037,"count":1}],"isBlockCoverage":true},{"functionName":"decrement","ranges":[{"startOffset":35060,"endOffset":35109,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":35434,"endOffset":36361,"count":20},{"startOffset":35477,"endOffset":35969,"count":3},{"startOffset":35518,"endOffset":35567,"count":0},{"startOffset":35634,"endOffset":35682,"count":0},{"startOffset":35717,"endOffset":35740,"count":0},{"startOffset":35741,"endOffset":35752,"count":0},{"startOffset":35753,"endOffset":35766,"count":0},{"startOffset":35768,"endOffset":35963,"count":0},{"startOffset":35995,"endOffset":36018,"count":0},{"startOffset":36020,"endOffset":36083,"count":0},{"startOffset":36103,"endOffset":36116,"count":1},{"startOffset":36168,"endOffset":36190,"count":5},{"startOffset":36192,"endOffset":36297,"count":1},{"startOffset":36297,"endOffset":36360,"count":19}],"isBlockCoverage":true},{"functionName":"extglobOpen","ranges":[{"startOffset":36386,"endOffset":36817,"count":0}],"isBlockCoverage":false},{"functionName":"extglobClose","ranges":[{"startOffset":36843,"endOffset":38132,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38326,"endOffset":38997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39168,"endOffset":39248,"count":0}],"isBlockCoverage":false},{"functionName":"parse$g.fastpaths","ranges":[{"startOffset":56784,"endOffset":59091,"count":3},{"startOffset":56886,"endOffset":56926,"count":0},{"startOffset":56988,"endOffset":57084,"count":0},{"startOffset":57452,"endOffset":57460,"count":0},{"startOffset":57506,"endOffset":57514,"count":0},{"startOffset":57547,"endOffset":57551,"count":0},{"startOffset":57640,"endOffset":57647,"count":0},{"startOffset":57677,"endOffset":57706,"count":0},{"startOffset":58999,"endOffset":59029,"count":0},{"startOffset":59031,"endOffset":59071,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":57727,"endOffset":57878,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":57898,"endOffset":58898,"count":4},{"startOffset":57932,"endOffset":57986,"count":0},{"startOffset":57994,"endOffset":58055,"count":0},{"startOffset":58063,"endOffset":58140,"count":0},{"startOffset":58148,"endOffset":58238,"count":0},{"startOffset":58246,"endOffset":58295,"count":0},{"startOffset":58303,"endOffset":58409,"count":0},{"startOffset":58417,"endOffset":58546,"count":0},{"startOffset":58554,"endOffset":58664,"count":0},{"startOffset":58753,"endOffset":58760,"count":3},{"startOffset":58760,"endOffset":58831,"count":1},{"startOffset":58831,"endOffset":58888,"count":0}],"isBlockCoverage":true},{"functionName":"isObject$3","ranges":[{"startOffset":59276,"endOffset":59336,"count":3},{"startOffset":59314,"endOffset":59336,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch$5","ranges":[{"startOffset":60092,"endOffset":61924,"count":4},{"startOffset":60161,"endOffset":60441,"count":1},{"startOffset":60441,"endOffset":60478,"count":3},{"startOffset":60478,"endOffset":60492,"count":0},{"startOffset":60493,"endOffset":60506,"count":0},{"startOffset":60527,"endOffset":60568,"count":3},{"startOffset":60556,"endOffset":60567,"count":0},{"startOffset":60570,"endOffset":60645,"count":0},{"startOffset":60645,"endOffset":60670,"count":3},{"startOffset":60670,"endOffset":60675,"count":0},{"startOffset":60749,"endOffset":60787,"count":0},{"startOffset":60792,"endOffset":60840,"count":3},{"startOffset":60945,"endOffset":61101,"count":0},{"startOffset":61101,"endOffset":61871,"count":3},{"startOffset":61871,"endOffset":61903,"count":0},{"startOffset":61903,"endOffset":61923,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60188,"endOffset":60237,"count":3}],"isBlockCoverage":true},{"functionName":"arrayMatcher","ranges":[{"startOffset":60265,"endOffset":60411,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":60913,"endOffset":60924,"count":0}],"isBlockCoverage":false},{"functionName":"matcher","ranges":[{"startOffset":61121,"endOffset":61849,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$5.test","ranges":[{"startOffset":62474,"endOffset":63279,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$5.matchBase","ranges":[{"startOffset":63696,"endOffset":63889,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$5.isMatch","ranges":[{"startOffset":64527,"endOffset":64590,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$5.parse","ranges":[{"startOffset":65002,"endOffset":65174,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$5.scan","ranges":[{"startOffset":65811,"endOffset":65853,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch$5.compileRe","ranges":[{"startOffset":66346,"endOffset":66858,"count":3},{"startOffset":66440,"endOffset":66470,"count":0},{"startOffset":66495,"endOffset":66500,"count":0},{"startOffset":66534,"endOffset":66538,"count":0},{"startOffset":66577,"endOffset":66581,"count":0},{"startOffset":66686,"endOffset":66725,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch$5.makeRe","ranges":[{"startOffset":67733,"endOffset":68245,"count":3},{"startOffset":67846,"endOffset":67907,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch$5.toRegex","ranges":[{"startOffset":68709,"endOffset":68937,"count":3},{"startOffset":68765,"endOffset":68770,"count":0},{"startOffset":68835,"endOffset":68839,"count":0},{"startOffset":68847,"endOffset":68935,"count":0}],"isBlockCoverage":true},{"functionName":"ArrayPattern","ranges":[{"startOffset":69221,"endOffset":69396,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentPattern","ranges":[{"startOffset":69402,"endOffset":69497,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":69503,"endOffset":69567,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":69573,"endOffset":69595,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectPattern","ranges":[{"startOffset":69601,"endOffset":69979,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":69985,"endOffset":70082,"count":0}],"isBlockCoverage":false},{"functionName":"extractAssignedNames","ranges":[{"startOffset":70115,"endOffset":70237,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":70320,"endOffset":70725,"count":0}],"isBlockCoverage":false},{"functionName":"addDeclaration","ranges":[{"startOffset":70730,"endOffset":71196,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":71201,"endOffset":71317,"count":0}],"isBlockCoverage":false},{"functionName":"attachScopes","ranges":[{"startOffset":71341,"endOffset":73862,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":73940,"endOffset":73996,"count":8}],"isBlockCoverage":true},{"functionName":"ensureArray","ranges":[{"startOffset":73997,"endOffset":74136,"count":8},{"startOffset":74059,"endOffset":74072,"count":1},{"startOffset":74072,"endOffset":74104,"count":7},{"startOffset":74104,"endOffset":74114,"count":5},{"startOffset":74114,"endOffset":74135,"count":2}],"isBlockCoverage":true},{"functionName":"normalizePath","ranges":[{"startOffset":74162,"endOffset":74252,"count":244}],"isBlockCoverage":true},{"functionName":"getMatcherString","ranges":[{"startOffset":74255,"endOffset":74958,"count":0}],"isBlockCoverage":false},{"functionName":"createFilter","ranges":[{"startOffset":74982,"endOffset":76253,"count":4},{"startOffset":75068,"endOffset":75086,"count":2}],"isBlockCoverage":true},{"functionName":"getMatcher","ranges":[{"startOffset":75111,"endOffset":75510,"count":3},{"startOffset":75161,"endOffset":75510,"count":0}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":75183,"endOffset":75500,"count":0}],"isBlockCoverage":false},{"functionName":"result","ranges":[{"startOffset":75655,"endOffset":76250,"count":244},{"startOffset":75725,"endOffset":75738,"count":0},{"startOffset":75778,"endOffset":75791,"count":0},{"startOffset":75893,"endOffset":76020,"count":192},{"startOffset":75997,"endOffset":76010,"count":1},{"startOffset":76020,"endOffset":76078,"count":243},{"startOffset":76078,"endOffset":76204,"count":97},{"startOffset":76182,"endOffset":76194,"count":93},{"startOffset":76204,"endOffset":76249,"count":150}],"isBlockCoverage":true},{"functionName":"makeLegalIdentifier","ranges":[{"startOffset":77264,"endOffset":77583,"count":30},{"startOffset":77505,"endOffset":77551,"count":0},{"startOffset":77574,"endOffset":77580,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":77352,"endOffset":77387,"count":0}],"isBlockCoverage":false},{"functionName":"stringify$8","ranges":[{"startOffset":77586,"endOffset":77760,"count":35},{"startOffset":77646,"endOffset":77660,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":77689,"endOffset":77756,"count":0}],"isBlockCoverage":false},{"functionName":"serializeArray","ranges":[{"startOffset":77761,"endOffset":78134,"count":6},{"startOffset":77892,"endOffset":77896,"count":0},{"startOffset":77939,"endOffset":78073,"count":15},{"startOffset":77996,"endOffset":78001,"count":9},{"startOffset":78002,"endOffset":78006,"count":6},{"startOffset":78124,"endOffset":78128,"count":0}],"isBlockCoverage":true},{"functionName":"serializeObject","ranges":[{"startOffset":78135,"endOffset":78687,"count":5},{"startOffset":78267,"endOffset":78271,"count":0},{"startOffset":78359,"endOffset":78626,"count":30},{"startOffset":78467,"endOffset":78485,"count":0},{"startOffset":78514,"endOffset":78519,"count":25},{"startOffset":78520,"endOffset":78524,"count":5},{"startOffset":78565,"endOffset":78569,"count":0},{"startOffset":78677,"endOffset":78681,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":78688,"endOffset":79728,"count":46},{"startOffset":78766,"endOffset":78781,"count":11},{"startOffset":78783,"endOffset":79091,"count":11},{"startOffset":78829,"endOffset":78876,"count":6},{"startOffset":78876,"endOffset":78922,"count":5},{"startOffset":78922,"endOffset":78958,"count":0},{"startOffset":78958,"endOffset":79006,"count":5},{"startOffset":79006,"endOffset":79028,"count":0},{"startOffset":79028,"endOffset":79091,"count":5},{"startOffset":79091,"endOffset":79125,"count":35},{"startOffset":79125,"endOffset":79423,"count":0},{"startOffset":79423,"endOffset":79457,"count":35},{"startOffset":79457,"endOffset":79638,"count":0},{"startOffset":79638,"endOffset":79680,"count":35},{"startOffset":79680,"endOffset":79697,"count":0},{"startOffset":79697,"endOffset":79727,"count":35}],"isBlockCoverage":true},{"functionName":"isWellFormedString","ranges":[{"startOffset":79834,"endOffset":80158,"count":0}],"isBlockCoverage":false},{"functionName":"dataToEsm","ranges":[{"startOffset":80177,"endOffset":82785,"count":1},{"startOffset":80264,"endOffset":80268,"count":0},{"startOffset":80291,"endOffset":80307,"count":0},{"startOffset":80346,"endOffset":80350,"count":0},{"startOffset":80388,"endOffset":80392,"count":0},{"startOffset":80459,"endOffset":80466,"count":0},{"startOffset":80574,"endOffset":80605,"count":0},{"startOffset":80606,"endOffset":80639,"count":0},{"startOffset":80640,"endOffset":80664,"count":0},{"startOffset":80721,"endOffset":80727,"count":0},{"startOffset":80762,"endOffset":80800,"count":0},{"startOffset":80897,"endOffset":82585,"count":0},{"startOffset":82594,"endOffset":82598,"count":0}],"isBlockCoverage":true},{"functionName":"commondir","ranges":[{"startOffset":82832,"endOffset":83588,"count":0}],"isBlockCoverage":false},{"functionName":"balanced$1","ranges":[{"startOffset":83692,"endOffset":84023,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":84025,"endOffset":84110,"count":0}],"isBlockCoverage":false},{"functionName":"range$1","ranges":[{"startOffset":84140,"endOffset":84879,"count":0}],"isBlockCoverage":false},{"functionName":"numeric","ranges":[{"startOffset":85171,"endOffset":85279,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":85281,"endOffset":85518,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":85520,"endOffset":85749,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":85913,"endOffset":86379,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":86381,"endOffset":86960,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":86962,"endOffset":87013,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":87014,"endOffset":87067,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":87069,"endOffset":87108,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":87109,"endOffset":87148,"count":0}],"isBlockCoverage":false},{"functionName":"expand$3","ranges":[{"startOffset":87150,"endOffset":89876,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":90013,"endOffset":90227,"count":0}],"isBlockCoverage":false},{"functionName":"braceEscape","ranges":[{"startOffset":91124,"endOffset":91161,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEscape","ranges":[{"startOffset":91222,"endOffset":91274,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":91360,"endOffset":91387,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":91745,"endOffset":95807,"count":0}],"isBlockCoverage":false},{"functionName":"unescape$1","ranges":[{"startOffset":96402,"endOffset":96614,"count":0}],"isBlockCoverage":false},{"functionName":"isExtglobType","ranges":[{"startOffset":96722,"endOffset":96743,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape$1","ranges":[{"startOffset":97500,"endOffset":97552,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":97969,"endOffset":119101,"count":0}],"isBlockCoverage":true},{"functionName":"escape$2","ranges":[{"startOffset":119556,"endOffset":119910,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":119931,"endOffset":120178,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":120306,"endOffset":120359,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":120387,"endOffset":120418,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":120449,"endOffset":120561,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":120595,"endOffset":120685,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":120747,"endOffset":120791,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":120820,"endOffset":120869,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":120920,"endOffset":120971,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":121014,"endOffset":121057,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":121079,"endOffset":121127,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":121197,"endOffset":121387,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":121417,"endOffset":121610,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":121634,"endOffset":121763,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":121784,"endOffset":121910,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":121936,"endOffset":122034,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":122063,"endOffset":122166,"count":0}],"isBlockCoverage":false},{"functionName":"filter$1","ranges":[{"startOffset":123230,"endOffset":123294,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":123337,"endOffset":123375,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":123394,"endOffset":124964,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":125267,"endOffset":125618,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe$1","ranges":[{"startOffset":126318,"endOffset":126385,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":126430,"endOffset":126652,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":126777,"endOffset":126829,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":126847,"endOffset":158481,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":158954,"endOffset":159133,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":159304,"endOffset":159472,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":159522,"endOffset":160009,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":160121,"endOffset":160824,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":160868,"endOffset":160897,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":160916,"endOffset":160971,"count":0}],"isBlockCoverage":false},{"functionName":"getUintArray","ranges":[{"startOffset":161486,"endOffset":161803,"count":0}],"isBlockCoverage":false},{"functionName":"ZeroArray","ranges":[{"startOffset":161862,"endOffset":161930,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":161945,"endOffset":162683,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":161945,"endOffset":162683,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":163332,"endOffset":213450,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":213722,"endOffset":213875,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":213972,"endOffset":214203,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":214300,"endOffset":214446,"count":0}],"isBlockCoverage":false},{"functionName":"defer$3","ranges":[{"startOffset":215696,"endOffset":215730,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":215748,"endOffset":215760,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":215779,"endOffset":215840,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":215868,"endOffset":216047,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":216075,"endOffset":216126,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":216226,"endOffset":216763,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":216920,"endOffset":217020,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":217025,"endOffset":217193,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":217224,"endOffset":217245,"count":0}],"isBlockCoverage":false},{"functionName":"isEncodingOptions","ranges":[{"startOffset":217273,"endOffset":217336,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":217729,"endOffset":246543,"count":0}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":246907,"endOffset":247158,"count":0}],"isBlockCoverage":false},{"functionName":"uncToDrive","ranges":[{"startOffset":247268,"endOffset":247343,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":248469,"endOffset":248776,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":248862,"endOffset":249017,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeNocase","ranges":[{"startOffset":249083,"endOffset":249257,"count":0}],"isBlockCoverage":false},{"functionName":"ResolveCache","ranges":[{"startOffset":249388,"endOffset":249438,"count":0}],"isBlockCoverage":false},{"functionName":"ChildrenCache","ranges":[{"startOffset":250317,"endOffset":250487,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":251114,"endOffset":282720,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":282925,"endOffset":284767,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":284890,"endOffset":285778,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":286125,"endOffset":307115,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":307339,"endOffset":308400,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":308663,"endOffset":309327,"count":0}],"isBlockCoverage":true},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":309593,"endOffset":309725,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternList","ranges":[{"startOffset":310408,"endOffset":310430,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobList","ranges":[{"startOffset":310451,"endOffset":310473,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":310576,"endOffset":317394,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":317815,"endOffset":321380,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":321547,"endOffset":322107,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":322341,"endOffset":322775,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":322892,"endOffset":323691,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":323877,"endOffset":331735,"count":0}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":331865,"endOffset":332010,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":332097,"endOffset":341932,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":341967,"endOffset":343082,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":343117,"endOffset":344131,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":344452,"endOffset":352162,"count":0}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":352766,"endOffset":352996,"count":0}],"isBlockCoverage":false},{"functionName":"globStreamSync","ranges":[{"startOffset":352999,"endOffset":353101,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":353102,"endOffset":353196,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":353197,"endOffset":353291,"count":0}],"isBlockCoverage":false},{"functionName":"glob_","ranges":[{"startOffset":353292,"endOffset":353385,"count":0}],"isBlockCoverage":false},{"functionName":"globIterateSync","ranges":[{"startOffset":353386,"endOffset":353490,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":353491,"endOffset":353587,"count":0}],"isBlockCoverage":false},{"functionName":"decodeInteger","ranges":[{"startOffset":354703,"endOffset":355121,"count":467912},{"startOffset":354812,"endOffset":354946,"count":487034},{"startOffset":355045,"endOffset":355090,"count":10829}],"isBlockCoverage":true},{"functionName":"encodeInteger","ranges":[{"startOffset":355122,"endOffset":355471,"count":415424},{"startOffset":355225,"endOffset":355244,"count":9876},{"startOffset":355245,"endOffset":355257,"count":405548},{"startOffset":355266,"endOffset":355434,"count":433508},{"startOffset":355365,"endOffset":355385,"count":18084}],"isBlockCoverage":true},{"functionName":"hasMoreVlq","ranges":[{"startOffset":355472,"endOffset":355593,"count":233950},{"startOffset":355542,"endOffset":355555,"count":11826},{"startOffset":355555,"endOffset":355592,"count":222124}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":355816,"endOffset":355967,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":356003,"endOffset":356217,"count":0}],"isBlockCoverage":false},{"functionName":"StringWriter","ranges":[{"startOffset":356255,"endOffset":356370,"count":195}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":356375,"endOffset":356573,"count":538156},{"startOffset":356487,"endOffset":356567,"count":1}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":356578,"endOffset":356709,"count":195},{"startOffset":356654,"endOffset":356696,"count":193},{"startOffset":356697,"endOffset":356702,"count":2}],"isBlockCoverage":true},{"functionName":"StringReader","ranges":[{"startOffset":356737,"endOffset":356816,"count":200}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":356821,"endOffset":356886,"count":487034}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":356891,"endOffset":356954,"count":222124}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":356959,"endOffset":357114,"count":12623},{"startOffset":357086,"endOffset":357101,"count":200},{"startOffset":357102,"endOffset":357107,"count":12423}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":357118,"endOffset":358637,"count":200},{"startOffset":357380,"endOffset":358585,"count":12623},{"startOffset":357558,"endOffset":358475,"count":116975},{"startOffset":357692,"endOffset":357707,"count":0},{"startOffset":358031,"endOffset":358209,"count":12},{"startOffset":358209,"endOffset":358329,"count":116963},{"startOffset":358343,"endOffset":358411,"count":0},{"startOffset":358509,"endOffset":358520,"count":0}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":358638,"endOffset":358694,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator$1","ranges":[{"startOffset":358695,"endOffset":358754,"count":0}],"isBlockCoverage":false},{"functionName":"encode$1","ranges":[{"startOffset":358755,"endOffset":359822,"count":195},{"startOffset":358968,"endOffset":359793,"count":12005},{"startOffset":359034,"endOffset":359058,"count":11810},{"startOffset":359102,"endOffset":359111,"count":990},{"startOffset":359111,"endOffset":359185,"count":11015},{"startOffset":359185,"endOffset":359787,"count":103853},{"startOffset":359263,"endOffset":359283,"count":92838},{"startOffset":359408,"endOffset":359417,"count":0},{"startOffset":359696,"endOffset":359705,"count":103841},{"startOffset":359705,"endOffset":359787,"count":12},{"startOffset":359787,"endOffset":359793,"count":11015}],"isBlockCoverage":true},{"functionName":"BitSet","ranges":[{"startOffset":359840,"endOffset":359922,"count":168},{"startOffset":359895,"endOffset":359913,"count":0}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":359925,"endOffset":359974,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":359977,"endOffset":360038,"count":0}],"isBlockCoverage":false},{"functionName":"Chunk","ranges":[{"startOffset":360057,"endOffset":360331,"count":3395}],"isBlockCoverage":true},{"functionName":"appendLeft","ranges":[{"startOffset":360334,"endOffset":360383,"count":57}],"isBlockCoverage":true},{"functionName":"appendRight","ranges":[{"startOffset":360386,"endOffset":360448,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":360451,"endOffset":360699,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":360702,"endOffset":360771,"count":6650},{"startOffset":360748,"endOffset":360767,"count":6404}],"isBlockCoverage":true},{"functionName":"eachNext","ranges":[{"startOffset":360774,"endOffset":360870,"count":95},{"startOffset":360825,"endOffset":360867,"count":2994}],"isBlockCoverage":true},{"functionName":"eachPrevious","ranges":[{"startOffset":360873,"endOffset":360977,"count":0}],"isBlockCoverage":false},{"functionName":"edit","ranges":[{"startOffset":360980,"endOffset":361183,"count":1627},{"startOffset":361066,"endOffset":361111,"count":348}],"isBlockCoverage":true},{"functionName":"prependLeft","ranges":[{"startOffset":361186,"endOffset":361248,"count":0}],"isBlockCoverage":false},{"functionName":"prependRight","ranges":[{"startOffset":361251,"endOffset":361314,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":361317,"endOffset":361476,"count":0}],"isBlockCoverage":false},{"functionName":"split","ranges":[{"startOffset":361479,"endOffset":362406,"count":3227},{"startOffset":361843,"endOffset":362200,"count":0},{"startOffset":362297,"endOffset":362331,"count":1172}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":362409,"endOffset":362473,"count":3395}],"isBlockCoverage":true},{"functionName":"trimEnd","ranges":[{"startOffset":362476,"endOffset":363031,"count":0}],"isBlockCoverage":false},{"functionName":"trimStart","ranges":[{"startOffset":363034,"endOffset":363620,"count":0}],"isBlockCoverage":false},{"functionName":"getBtoa","ranges":[{"startOffset":363624,"endOffset":364037,"count":1},{"startOffset":363800,"endOffset":364035,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":363737,"endOffset":363796,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":363851,"endOffset":363904,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":363925,"endOffset":364031,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMap","ranges":[{"startOffset":364117,"endOffset":364495,"count":95},{"startOffset":364425,"endOffset":364492,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":364498,"endOffset":364544,"count":0}],"isBlockCoverage":false},{"functionName":"toUrl","ranges":[{"startOffset":364547,"endOffset":364641,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndent","ranges":[{"startOffset":364646,"endOffset":365320,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePath","ranges":[{"startOffset":365322,"endOffset":365691,"count":0}],"isBlockCoverage":false},{"functionName":"isObject$2","ranges":[{"startOffset":365740,"endOffset":365824,"count":0}],"isBlockCoverage":false},{"functionName":"getLocator","ranges":[{"startOffset":365826,"endOffset":366350,"count":95},{"startOffset":365982,"endOffset":366049,"count":5253}],"isBlockCoverage":true},{"functionName":"locate","ranges":[{"startOffset":366059,"endOffset":366347,"count":2994},{"startOffset":366143,"endOffset":366251,"count":17443},{"startOffset":366203,"endOffset":366220,"count":9589},{"startOffset":366220,"endOffset":366247,"count":7854}],"isBlockCoverage":true},{"functionName":"Mappings","ranges":[{"startOffset":366395,"endOffset":366602,"count":95}],"isBlockCoverage":true},{"functionName":"addEdit","ranges":[{"startOffset":366605,"endOffset":367835,"count":1463},{"startOffset":366675,"endOffset":367713,"count":1115},{"startOffset":367001,"endOffset":367042,"count":0},{"startOffset":367044,"endOffset":367471,"count":0},{"startOffset":367578,"endOffset":367613,"count":0},{"startOffset":367713,"endOffset":367808,"count":348},{"startOffset":367737,"endOffset":367808,"count":0}],"isBlockCoverage":true},{"functionName":"addUneditedChunk","ranges":[{"startOffset":367838,"endOffset":369249,"count":1531},{"startOffset":368111,"endOffset":369222,"count":178076},{"startOffset":368131,"endOffset":368139,"count":0},{"startOffset":368140,"endOffset":368184,"count":0},{"startOffset":368439,"endOffset":368650,"count":117772},{"startOffset":368560,"endOffset":368643,"count":16403},{"startOffset":368650,"endOffset":368803,"count":60304},{"startOffset":368809,"endOffset":368859,"count":0},{"startOffset":368911,"endOffset":369103,"count":5158},{"startOffset":369103,"endOffset":369190,"count":172918}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":369252,"endOffset":369595,"count":1255},{"startOffset":369279,"endOffset":369286,"count":0},{"startOffset":369346,"endOffset":369529,"count":140},{"startOffset":369394,"endOffset":369492,"count":348}],"isBlockCoverage":true},{"functionName":"MagicString","ranges":[{"startOffset":369720,"endOffset":370651,"count":168}],"isBlockCoverage":true},{"functionName":"addSourcemapLocation","ranges":[{"startOffset":370654,"endOffset":370722,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":370725,"endOffset":370876,"count":0}],"isBlockCoverage":false},{"functionName":"appendLeft","ranges":[{"startOffset":370879,"endOffset":371164,"count":348},{"startOffset":370943,"endOffset":371000,"count":0},{"startOffset":371074,"endOffset":371109,"count":57},{"startOffset":371109,"endOffset":371146,"count":291}],"isBlockCoverage":true},{"functionName":"appendRight","ranges":[{"startOffset":371167,"endOffset":371456,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":371459,"endOffset":372419,"count":0}],"isBlockCoverage":false},{"functionName":"generateDecodedMap","ranges":[{"startOffset":372422,"endOffset":373561,"count":95},{"startOffset":372472,"endOffset":372477,"count":0},{"startOffset":372664,"endOffset":372702,"count":83},{"startOffset":373211,"endOffset":373246,"count":0},{"startOffset":373293,"endOffset":373346,"count":0},{"startOffset":373417,"endOffset":373434,"count":0},{"startOffset":373525,"endOffset":373540,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":372731,"endOffset":373174,"count":2994},{"startOffset":372808,"endOffset":372838,"count":0},{"startOffset":372861,"endOffset":373003,"count":1463},{"startOffset":372954,"endOffset":372985,"count":0},{"startOffset":373003,"endOffset":373111,"count":1531},{"startOffset":373140,"endOffset":373170,"count":57}],"isBlockCoverage":true},{"functionName":"generateMap","ranges":[{"startOffset":373564,"endOffset":373649,"count":95}],"isBlockCoverage":true},{"functionName":"_ensureindentStr","ranges":[{"startOffset":373652,"endOffset":373765,"count":0}],"isBlockCoverage":false},{"functionName":"_getRawIndentString","ranges":[{"startOffset":373768,"endOffset":373846,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentString","ranges":[{"startOffset":373849,"endOffset":373956,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":373959,"endOffset":375957,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":375960,"endOffset":376083,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeft","ranges":[{"startOffset":376086,"endOffset":376368,"count":0}],"isBlockCoverage":false},{"functionName":"insertRight","ranges":[{"startOffset":376371,"endOffset":376661,"count":0}],"isBlockCoverage":false},{"functionName":"move","ranges":[{"startOffset":376664,"endOffset":377619,"count":0}],"isBlockCoverage":false},{"functionName":"overwrite","ranges":[{"startOffset":377622,"endOffset":377785,"count":164},{"startOffset":377684,"endOffset":377689,"count":0}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":377788,"endOffset":379608,"count":1279},{"startOffset":377862,"endOffset":377922,"count":0},{"startOffset":377981,"endOffset":378011,"count":0},{"startOffset":378031,"endOffset":378059,"count":0},{"startOffset":378099,"endOffset":378139,"count":0},{"startOffset":378164,"endOffset":378271,"count":0},{"startOffset":378340,"endOffset":378635,"count":0},{"startOffset":378678,"endOffset":378697,"count":164},{"startOffset":378698,"endOffset":378705,"count":1115},{"startOffset":378749,"endOffset":378768,"count":164},{"startOffset":378769,"endOffset":378776,"count":1115},{"startOffset":378796,"endOffset":378975,"count":0},{"startOffset":379110,"endOffset":379286,"count":0},{"startOffset":379338,"endOffset":379590,"count":0}],"isBlockCoverage":true},{"functionName":"prepend","ranges":[{"startOffset":379611,"endOffset":379775,"count":0}],"isBlockCoverage":false},{"functionName":"prependLeft","ranges":[{"startOffset":379778,"endOffset":380077,"count":0}],"isBlockCoverage":false},{"functionName":"prependRight","ranges":[{"startOffset":380080,"endOffset":380383,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":380386,"endOffset":380989,"count":348},{"startOffset":380464,"endOffset":380494,"count":0},{"startOffset":380514,"endOffset":380542,"count":0},{"startOffset":380569,"endOffset":380581,"count":0},{"startOffset":380630,"endOffset":380676,"count":0},{"startOffset":380696,"endOffset":380746,"count":0},{"startOffset":380934,"endOffset":380959,"count":0}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":380992,"endOffset":381551,"count":0}],"isBlockCoverage":false},{"functionName":"lastChar","ranges":[{"startOffset":381554,"endOffset":382010,"count":0}],"isBlockCoverage":false},{"functionName":"lastLine","ranges":[{"startOffset":382013,"endOffset":382999,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":383002,"endOffset":384363,"count":0}],"isBlockCoverage":false},{"functionName":"snip","ranges":[{"startOffset":384414,"endOffset":384552,"count":0}],"isBlockCoverage":false},{"functionName":"_split","ranges":[{"startOffset":384555,"endOffset":384882,"count":3602},{"startOffset":384597,"endOffset":384617,"count":3227},{"startOffset":384619,"endOffset":384626,"count":375},{"startOffset":384626,"endOffset":384726,"count":3227},{"startOffset":384726,"endOffset":384879,"count":6650},{"startOffset":384758,"endOffset":384796,"count":3227},{"startOffset":384796,"endOffset":384823,"count":3423},{"startOffset":384823,"endOffset":384848,"count":3177},{"startOffset":384849,"endOffset":384874,"count":246}],"isBlockCoverage":true},{"functionName":"_splitChunk","ranges":[{"startOffset":384885,"endOffset":385478,"count":3227},{"startOffset":384932,"endOffset":384955,"count":0},{"startOffset":384957,"endOffset":385222,"count":0},{"startOffset":385399,"endOffset":385425,"count":2055}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":385481,"endOffset":385653,"count":168},{"startOffset":385566,"endOffset":385622,"count":3395}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":385656,"endOffset":385939,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":385942,"endOffset":386139,"count":0}],"isBlockCoverage":false},{"functionName":"trimLines","ranges":[{"startOffset":386142,"endOffset":386190,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":386193,"endOffset":386265,"count":0}],"isBlockCoverage":false},{"functionName":"trimEndAborted","ranges":[{"startOffset":386268,"endOffset":386920,"count":0}],"isBlockCoverage":false},{"functionName":"trimEnd","ranges":[{"startOffset":386923,"endOffset":386993,"count":0}],"isBlockCoverage":false},{"functionName":"trimStartAborted","ranges":[{"startOffset":386995,"endOffset":387611,"count":0}],"isBlockCoverage":false},{"functionName":"trimStart","ranges":[{"startOffset":387614,"endOffset":387688,"count":0}],"isBlockCoverage":false},{"functionName":"hasChanged","ranges":[{"startOffset":387691,"endOffset":387752,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceRegexp","ranges":[{"startOffset":387755,"endOffset":389199,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceString","ranges":[{"startOffset":389202,"endOffset":389418,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":389421,"endOffset":389618,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceAllString","ranges":[{"startOffset":389621,"endOffset":390041,"count":0}],"isBlockCoverage":false},{"functionName":"replaceAll","ranges":[{"startOffset":390044,"endOffset":390392,"count":0}],"isBlockCoverage":false},{"functionName":"isReference","ranges":[{"startOffset":390396,"endOffset":391811,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":391903,"endOffset":392080,"count":0}],"isBlockCoverage":false},{"functionName":"hasCjsKeywords","ranges":[{"startOffset":392209,"endOffset":392359,"count":0}],"isBlockCoverage":false},{"functionName":"analyzeTopLevelStatements","ranges":[{"startOffset":392405,"endOffset":393558,"count":0}],"isBlockCoverage":false},{"functionName":"deconflict","ranges":[{"startOffset":393612,"endOffset":394059,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":394061,"endOffset":394254,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathSlashes","ranges":[{"startOffset":394256,"endOffset":394330,"count":0}],"isBlockCoverage":false},{"functionName":"getVirtualPathForDynamicRequirePath","ranges":[{"startOffset":394376,"endOffset":394454,"count":0}],"isBlockCoverage":false},{"functionName":"capitalize","ranges":[{"startOffset":394457,"endOffset":394534,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictRequiresFilter","ranges":[{"startOffset":394536,"endOffset":395339,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageEntryPoint","ranges":[{"startOffset":395341,"endOffset":395682,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory$1","ranges":[{"startOffset":395684,"endOffset":395845,"count":0}],"isBlockCoverage":false},{"functionName":"getDynamicRequireModules","ranges":[{"startOffset":395847,"endOffset":397079,"count":0}],"isBlockCoverage":false},{"functionName":"getDynamicModuleRegistry","ranges":[{"startOffset":397447,"endOffset":400946,"count":0}],"isBlockCoverage":false},{"functionName":"isWrappedId","ranges":[{"startOffset":400968,"endOffset":401003,"count":0}],"isBlockCoverage":false},{"functionName":"wrapId","ranges":[{"startOffset":401020,"endOffset":401054,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapId","ranges":[{"startOffset":401073,"endOffset":401130,"count":0}],"isBlockCoverage":false},{"functionName":"getHelpersModule","ranges":[{"startOffset":403172,"endOffset":403221,"count":0}],"isBlockCoverage":false},{"functionName":"getUnknownRequireProxy","ranges":[{"startOffset":403223,"endOffset":404127,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticRequireProxy","ranges":[{"startOffset":404129,"endOffset":405106,"count":0}],"isBlockCoverage":false},{"functionName":"getEntryProxy","ranges":[{"startOffset":405108,"endOffset":405700,"count":0}],"isBlockCoverage":false},{"functionName":"getEsImportProxy","ranges":[{"startOffset":405702,"endOffset":406410,"count":0}],"isBlockCoverage":false},{"functionName":"getCandidatesForExtension","ranges":[{"startOffset":406467,"endOffset":406599,"count":0}],"isBlockCoverage":false},{"functionName":"getCandidates","ranges":[{"startOffset":406601,"endOffset":406785,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":406787,"endOffset":407281,"count":0}],"isBlockCoverage":false},{"functionName":"getResolveId","ranges":[{"startOffset":407283,"endOffset":411783,"count":0}],"isBlockCoverage":false},{"functionName":"getRequireResolver","ranges":[{"startOffset":411785,"endOffset":419790,"count":0}],"isBlockCoverage":false},{"functionName":"validateVersion","ranges":[{"startOffset":419792,"endOffset":420921,"count":0}],"isBlockCoverage":false},{"functionName":"==","ranges":[{"startOffset":420951,"endOffset":420988,"count":0}],"isBlockCoverage":false},{"functionName":"!=","ranges":[{"startOffset":420999,"endOffset":421029,"count":0}],"isBlockCoverage":false},{"functionName":"===","ranges":[{"startOffset":421041,"endOffset":421077,"count":0}],"isBlockCoverage":false},{"functionName":"!==","ranges":[{"startOffset":421089,"endOffset":421120,"count":0}],"isBlockCoverage":false},{"functionName":"!","ranges":[{"startOffset":421130,"endOffset":421156,"count":0}],"isBlockCoverage":false},{"functionName":"&&","ranges":[{"startOffset":421167,"endOffset":421211,"count":0}],"isBlockCoverage":false},{"functionName":"||","ranges":[{"startOffset":421222,"endOffset":421266,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":421271,"endOffset":421336,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":421338,"endOffset":421547,"count":0}],"isBlockCoverage":false},{"functionName":"isTruthy","ranges":[{"startOffset":421549,"endOffset":421824,"count":0}],"isBlockCoverage":false},{"functionName":"isFalsy","ranges":[{"startOffset":421826,"endOffset":421882,"count":0}],"isBlockCoverage":false},{"functionName":"getKeypath","ranges":[{"startOffset":421884,"endOffset":422276,"count":0}],"isBlockCoverage":false},{"functionName":"getDefineCompiledEsmType","ranges":[{"startOffset":422318,"endOffset":422774,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinePropertyCallName","ranges":[{"startOffset":422776,"endOffset":423867,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandProperty","ranges":[{"startOffset":423869,"endOffset":423976,"count":0}],"isBlockCoverage":false},{"functionName":"wrapCode","ranges":[{"startOffset":423978,"endOffset":424627,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteExportsAndGetExportsBlock","ranges":[{"startOffset":424629,"endOffset":426675,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsWhenUsingRequireWrapper","ranges":[{"startOffset":426677,"endOffset":427788,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForReplacedModuleExports","ranges":[{"startOffset":427790,"endOffset":428384,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultExportDeclaration","ranges":[{"startOffset":428386,"endOffset":428752,"count":0}],"isBlockCoverage":false},{"functionName":"getExports","ranges":[{"startOffset":428754,"endOffset":431167,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteModuleExportsAssignments","ranges":[{"startOffset":431169,"endOffset":431384,"count":0}],"isBlockCoverage":false},{"functionName":"replaceDefineCompiledEsmExpressionsAndGetIfRestorable","ranges":[{"startOffset":431386,"endOffset":432030,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireExpression","ranges":[{"startOffset":432032,"endOffset":432318,"count":0}],"isBlockCoverage":false},{"functionName":"isRequire","ranges":[{"startOffset":432320,"endOffset":432535,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleRequire","ranges":[{"startOffset":432537,"endOffset":432781,"count":0}],"isBlockCoverage":false},{"functionName":"hasDynamicArguments","ranges":[{"startOffset":432783,"endOffset":433013,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeRequirePropertyAccess","ranges":[{"startOffset":433083,"endOffset":433207,"count":0}],"isBlockCoverage":false},{"functionName":"getRequireStringArg","ranges":[{"startOffset":433209,"endOffset":433371,"count":0}],"isBlockCoverage":false},{"functionName":"getRequireHandlers","ranges":[{"startOffset":433373,"endOffset":435680,"count":0}],"isBlockCoverage":false},{"functionName":"collectSources","ranges":[{"startOffset":435682,"endOffset":436079,"count":0}],"isBlockCoverage":false},{"functionName":"processRequireExpressions","ranges":[{"startOffset":436081,"endOffset":437791,"count":0}],"isBlockCoverage":false},{"functionName":"getGenerateRequireName","ranges":[{"startOffset":437793,"endOffset":438074,"count":0}],"isBlockCoverage":false},{"functionName":"transformCommonjs","ranges":[{"startOffset":438637,"endOffset":456887,"count":0}],"isBlockCoverage":false},{"functionName":"commonjs","ranges":[{"startOffset":456922,"endOffset":465912,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":466826,"endOffset":466895,"count":184}],"isBlockCoverage":true},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":466896,"endOffset":466970,"count":200}],"isBlockCoverage":true},{"functionName":"isAbsolutePath","ranges":[{"startOffset":466971,"endOffset":467039,"count":200}],"isBlockCoverage":true},{"functionName":"isFileUrl","ranges":[{"startOffset":467040,"endOffset":467107,"count":184}],"isBlockCoverage":true},{"functionName":"isRelative","ranges":[{"startOffset":467108,"endOffset":467171,"count":184}],"isBlockCoverage":true},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":467172,"endOffset":467369,"count":200},{"startOffset":467327,"endOffset":467333,"count":0}],"isBlockCoverage":true},{"functionName":"parseFileUrl","ranges":[{"startOffset":467370,"endOffset":467597,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":467598,"endOffset":467816,"count":200}],"isBlockCoverage":true},{"functionName":"parseUrl$3","ranges":[{"startOffset":467817,"endOffset":468707,"count":200},{"startOffset":467882,"endOffset":468032,"count":0},{"startOffset":468064,"endOffset":468244,"count":16},{"startOffset":468244,"endOffset":468279,"count":184},{"startOffset":468279,"endOffset":468306,"count":0},{"startOffset":468306,"endOffset":468345,"count":184},{"startOffset":468345,"endOffset":468376,"count":0},{"startOffset":468376,"endOffset":468645,"count":184},{"startOffset":468543,"endOffset":468546,"count":0},{"startOffset":468611,"endOffset":468614,"count":0},{"startOffset":468673,"endOffset":468676,"count":0}],"isBlockCoverage":true},{"functionName":"stripPathFilename","ranges":[{"startOffset":468708,"endOffset":469023,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":469024,"endOffset":469436,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath$4","ranges":[{"startOffset":469601,"endOffset":471999,"count":200},{"startOffset":470469,"endOffset":471787,"count":360},{"startOffset":470617,"endOffset":470687,"count":0},{"startOffset":470902,"endOffset":470911,"count":0},{"startOffset":471112,"endOffset":471575,"count":0},{"startOffset":471845,"endOffset":471885,"count":360},{"startOffset":471921,"endOffset":471945,"count":0},{"startOffset":471948,"endOffset":471976,"count":0}],"isBlockCoverage":true},{"functionName":"resolve$2","ranges":[{"startOffset":472068,"endOffset":474463,"count":400},{"startOffset":472117,"endOffset":472125,"count":200},{"startOffset":472135,"endOffset":472224,"count":200},{"startOffset":472224,"endOffset":472242,"count":0},{"startOffset":472259,"endOffset":473269,"count":0},{"startOffset":473269,"endOffset":473504,"count":200},{"startOffset":473504,"endOffset":473522,"count":0},{"startOffset":473531,"endOffset":473580,"count":0},{"startOffset":473589,"endOffset":474268,"count":184},{"startOffset":473779,"endOffset":473803,"count":0},{"startOffset":473846,"endOffset":473866,"count":0},{"startOffset":473868,"endOffset":474221,"count":0},{"startOffset":474277,"endOffset":474344,"count":16},{"startOffset":474353,"endOffset":474455,"count":0}],"isBlockCoverage":true},{"functionName":"resolve$1","ranges":[{"startOffset":474465,"endOffset":474869,"count":400},{"startOffset":474788,"endOffset":474810,"count":0},{"startOffset":474820,"endOffset":474832,"count":0}],"isBlockCoverage":true},{"functionName":"stripFilename","ranges":[{"startOffset":474943,"endOffset":475087,"count":200},{"startOffset":475007,"endOffset":475086,"count":0}],"isBlockCoverage":true},{"functionName":"maybeSort","ranges":[{"startOffset":475214,"endOffset":475790,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":475791,"endOffset":475988,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":475989,"endOffset":476176,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":476177,"endOffset":476298,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":476299,"endOffset":476370,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":476943,"endOffset":477367,"count":89829},{"startOffset":477020,"endOffset":477326,"count":183939},{"startOffset":477146,"endOffset":477207,"count":25626},{"startOffset":477207,"endOffset":477229,"count":158313},{"startOffset":477229,"endOffset":477267,"count":72042},{"startOffset":477267,"endOffset":477320,"count":86271},{"startOffset":477326,"endOffset":477366,"count":64203}],"isBlockCoverage":true},{"functionName":"upperBound","ranges":[{"startOffset":477368,"endOffset":477569,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":477570,"endOffset":477758,"count":25626},{"startOffset":477666,"endOffset":477738,"count":20232}],"isBlockCoverage":true},{"functionName":"memoizedState","ranges":[{"startOffset":477759,"endOffset":477875,"count":200}],"isBlockCoverage":true},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":478065,"endOffset":478783,"count":89829},{"startOffset":478259,"endOffset":478651,"count":83930},{"startOffset":478296,"endOffset":478419,"count":0},{"startOffset":478564,"endOffset":478567,"count":1835},{"startOffset":478568,"endOffset":478579,"count":82095},{"startOffset":478590,"endOffset":478645,"count":0}],"isBlockCoverage":true},{"functionName":"TraceMap","ranges":[{"startOffset":479046,"endOffset":480200,"count":200},{"startOffset":479178,"endOffset":479189,"count":0},{"startOffset":479223,"endOffset":479240,"count":0},{"startOffset":479420,"endOffset":479425,"count":0},{"startOffset":479587,"endOffset":479616,"count":192},{"startOffset":479617,"endOffset":479629,"count":192},{"startOffset":479948,"endOffset":480071,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":479747,"endOffset":479778,"count":200},{"startOffset":479766,"endOffset":479771,"count":0}],"isBlockCoverage":true},{"functionName":"cast$2","ranges":[{"startOffset":480344,"endOffset":480384,"count":179958}],"isBlockCoverage":true},{"functionName":"encodedMappings","ranges":[{"startOffset":480469,"endOffset":480655,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMappings","ranges":[{"startOffset":480756,"endOffset":480891,"count":89929},{"startOffset":480840,"endOffset":480887,"count":200}],"isBlockCoverage":true},{"functionName":"traceSegment","ranges":[{"startOffset":481075,"endOffset":481571,"count":89829},{"startOffset":481359,"endOffset":481371,"count":0},{"startOffset":481544,"endOffset":481550,"count":1992},{"startOffset":481551,"endOffset":481568,"count":87837}],"isBlockCoverage":true},{"functionName":"originalPositionFor$1","ranges":[{"startOffset":481796,"endOffset":482864,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMap","ranges":[{"startOffset":483012,"endOffset":483085,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMap","ranges":[{"startOffset":483233,"endOffset":483306,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":483307,"endOffset":483631,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":483632,"endOffset":483724,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":483725,"endOffset":484128,"count":89829},{"startOffset":483876,"endOffset":483980,"count":25626},{"startOffset":483922,"endOffset":483934,"count":0},{"startOffset":483980,"endOffset":484038,"count":64203},{"startOffset":484030,"endOffset":484038,"count":0},{"startOffset":484060,"endOffset":484088,"count":87837},{"startOffset":484098,"endOffset":484108,"count":1992},{"startOffset":484108,"endOffset":484127,"count":87837}],"isBlockCoverage":true},{"functionName":"SetArray","ranges":[{"startOffset":484534,"endOffset":484625,"count":300}],"isBlockCoverage":true},{"functionName":"cast$1","ranges":[{"startOffset":484769,"endOffset":484809,"count":175808}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":484906,"endOffset":484976,"count":175706}],"isBlockCoverage":true},{"functionName":"put","ranges":[{"startOffset":485109,"endOffset":485433,"count":175706},{"startOffset":485285,"endOffset":485298,"count":175604},{"startOffset":485298,"endOffset":485432,"count":102}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":485487,"endOffset":485839,"count":0}],"isBlockCoverage":false},{"functionName":"GenMapping","ranges":[{"startOffset":486054,"endOffset":486349,"count":100}],"isBlockCoverage":true},{"functionName":"cast","ranges":[{"startOffset":486493,"endOffset":486531,"count":175774}],"isBlockCoverage":true},{"functionName":"maybeAddSegment","ranges":[{"startOffset":486843,"endOffset":487026,"count":87837}],"isBlockCoverage":true},{"functionName":"setSourceContent","ranges":[{"startOffset":487102,"endOffset":487308,"count":87837}],"isBlockCoverage":true},{"functionName":"setIgnore","ranges":[{"startOffset":487309,"endOffset":487673,"count":0}],"isBlockCoverage":false},{"functionName":"toDecodedMap","ranges":[{"startOffset":487821,"endOffset":488294,"count":100}],"isBlockCoverage":true},{"functionName":"toEncodedMap","ranges":[{"startOffset":488442,"endOffset":488607,"count":100}],"isBlockCoverage":true},{"functionName":"addSegmentInternal","ranges":[{"startOffset":488704,"endOffset":489646,"count":87837},{"startOffset":489046,"endOffset":489163,"count":0},{"startOffset":489239,"endOffset":489257,"count":32},{"startOffset":489258,"endOffset":489267,"count":87805},{"startOffset":489325,"endOffset":489361,"count":100},{"startOffset":489447,"endOffset":489470,"count":61806},{"startOffset":489470,"endOffset":489515,"count":26031},{"startOffset":489515,"endOffset":489580,"count":12},{"startOffset":489589,"endOffset":489642,"count":26019}],"isBlockCoverage":true},{"functionName":"getLine","ranges":[{"startOffset":489647,"endOffset":489797,"count":87837},{"startOffset":489734,"endOffset":489767,"count":6404}],"isBlockCoverage":true},{"functionName":"getColumnIndex","ranges":[{"startOffset":489798,"endOffset":490040,"count":87837},{"startOffset":489919,"endOffset":490020,"count":82038}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":490041,"endOffset":490195,"count":26031},{"startOffset":490127,"endOffset":490167,"count":0}],"isBlockCoverage":true},{"functionName":"removeEmptyFinalLines","ranges":[{"startOffset":490196,"endOffset":490459,"count":100},{"startOffset":490435,"endOffset":490457,"count":0}],"isBlockCoverage":true},{"functionName":"skipSourceless","ranges":[{"startOffset":490460,"endOffset":490999,"count":0}],"isBlockCoverage":false},{"functionName":"skipSource","ranges":[{"startOffset":491000,"endOffset":491745,"count":87837},{"startOffset":491202,"endOffset":491215,"count":5799},{"startOffset":491215,"endOffset":491369,"count":82038},{"startOffset":491369,"endOffset":491382,"count":0},{"startOffset":491382,"endOffset":491617,"count":82038},{"startOffset":491618,"endOffset":491665,"count":79424},{"startOffset":491666,"endOffset":491741,"count":61806},{"startOffset":491711,"endOffset":491730,"count":20},{"startOffset":491731,"endOffset":491740,"count":61786}],"isBlockCoverage":true},{"functionName":"SegmentObject","ranges":[{"startOffset":491860,"endOffset":491991,"count":87838}],"isBlockCoverage":true},{"functionName":"Source","ranges":[{"startOffset":491992,"endOffset":492149,"count":300}],"isBlockCoverage":true},{"functionName":"MapSource","ranges":[{"startOffset":492303,"endOffset":492389,"count":200}],"isBlockCoverage":true},{"functionName":"OriginalSource","ranges":[{"startOffset":492547,"endOffset":492664,"count":100}],"isBlockCoverage":true},{"functionName":"traceMappings","ranges":[{"startOffset":492829,"endOffset":494472,"count":100},{"startOffset":493292,"endOffset":494454,"count":6504},{"startOffset":493386,"endOffset":494448,"count":89829},{"startOffset":493844,"endOffset":493867,"count":0},{"startOffset":494097,"endOffset":494106,"count":1992},{"startOffset":494120,"endOffset":494311,"count":87837},{"startOffset":494329,"endOffset":494409,"count":87837},{"startOffset":494409,"endOffset":494438,"count":0}],"isBlockCoverage":true},{"functionName":"originalPositionFor","ranges":[{"startOffset":494641,"endOffset":495342,"count":177666},{"startOffset":494721,"endOffset":494824,"count":87837},{"startOffset":494824,"endOffset":494998,"count":89829},{"startOffset":494998,"endOffset":495010,"count":1992},{"startOffset":495010,"endOffset":495170,"count":87837},{"startOffset":495170,"endOffset":495196,"count":0},{"startOffset":495196,"endOffset":495301,"count":87837},{"startOffset":495301,"endOffset":495331,"count":32},{"startOffset":495332,"endOffset":495338,"count":87805}],"isBlockCoverage":true},{"functionName":"asArray","ranges":[{"startOffset":495344,"endOffset":495443,"count":100},{"startOffset":495421,"endOffset":495442,"count":0}],"isBlockCoverage":true},{"functionName":"buildSourceMapTree","ranges":[{"startOffset":495984,"endOffset":496567,"count":100},{"startOffset":496206,"endOffset":496400,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":496065,"endOffset":496091,"count":200}],"isBlockCoverage":true},{"functionName":"build$2","ranges":[{"startOffset":496568,"endOffset":498389,"count":100}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":496768,"endOffset":498348,"count":100},{"startOffset":497226,"endOffset":497231,"count":0},{"startOffset":497694,"endOffset":497765,"count":0},{"startOffset":498124,"endOffset":498133,"count":0},{"startOffset":498171,"endOffset":498177,"count":0},{"startOffset":498224,"endOffset":498232,"count":0},{"startOffset":498246,"endOffset":498270,"count":8},{"startOffset":498271,"endOffset":498278,"count":92}],"isBlockCoverage":true},{"functionName":"SourceMap","ranges":[{"startOffset":498517,"endOffset":499039,"count":100},{"startOffset":498589,"endOffset":498608,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":499044,"endOffset":499099,"count":0}],"isBlockCoverage":false},{"functionName":"remapping","ranges":[{"startOffset":499740,"endOffset":499963,"count":100}],"isBlockCoverage":true},{"functionName":"requireMs$1","ranges":[{"startOffset":500078,"endOffset":503316,"count":1},{"startOffset":500126,"endOffset":500138,"count":0}],"isBlockCoverage":true},{"functionName":"ms$1","ranges":[{"startOffset":500572,"endOffset":500953,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":501085,"endOffset":502223,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":502329,"endOffset":502661,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":502766,"endOffset":503117,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":503157,"endOffset":503300,"count":0}],"isBlockCoverage":false},{"functionName":"requireCommon","ranges":[{"startOffset":503356,"endOffset":509981,"count":1},{"startOffset":503408,"endOffset":503424,"count":0}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":503561,"endOffset":509941,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":503884,"endOffset":503928,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":504494,"endOffset":504779,"count":23},{"startOffset":504592,"endOffset":504700,"count":310}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":504958,"endOffset":507197,"count":23}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":505088,"endOffset":506339,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":506701,"endOffset":506976,"count":23},{"startOffset":506743,"endOffset":506780,"count":0},{"startOffset":506834,"endOffset":506943,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":506987,"endOffset":507024,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":507201,"endOffset":507408,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":507577,"endOffset":508213,"count":1},{"startOffset":507795,"endOffset":507807,"count":0},{"startOffset":507962,"endOffset":508204,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":508306,"endOffset":508538,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":508689,"endOffset":509093,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":509219,"endOffset":509359,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":509456,"endOffset":509570,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":509694,"endOffset":509872,"count":0}],"isBlockCoverage":false},{"functionName":"requireBrowser$1","ranges":[{"startOffset":510036,"endOffset":516719,"count":0}],"isBlockCoverage":false},{"functionName":"requireNode$1","ranges":[{"startOffset":516807,"endOffset":522135,"count":1},{"startOffset":516859,"endOffset":516881,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":516908,"endOffset":522082,"count":1},{"startOffset":517763,"endOffset":517779,"count":0},{"startOffset":518561,"endOffset":518666,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":517259,"endOffset":517267,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":518902,"endOffset":518946,"count":105}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":518955,"endOffset":519455,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":519539,"endOffset":519686,"count":23},{"startOffset":519604,"endOffset":519645,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":519771,"endOffset":520227,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":520231,"endOffset":520356,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":520464,"endOffset":520584,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":520679,"endOffset":520952,"count":1},{"startOffset":520726,"endOffset":520768,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":521083,"endOffset":521133,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":521312,"endOffset":521527,"count":23},{"startOffset":521454,"endOffset":521523,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":521700,"endOffset":521868,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":521969,"endOffset":522077,"count":0}],"isBlockCoverage":false},{"functionName":"invalidatePackageData","ranges":[{"startOffset":522658,"endOffset":522897,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageData","ranges":[{"startOffset":522898,"endOffset":524398,"count":703},{"startOffset":522997,"endOffset":523469,"count":0},{"startOffset":523523,"endOffset":524381,"count":1068},{"startOffset":523547,"endOffset":523736,"count":719},{"startOffset":523716,"endOffset":523730,"count":633},{"startOffset":523736,"endOffset":523865,"count":435},{"startOffset":523865,"endOffset":524241,"count":39},{"startOffset":523908,"endOffset":523913,"count":0},{"startOffset":524015,"endOffset":524209,"count":18},{"startOffset":524248,"endOffset":524261,"count":0},{"startOffset":524261,"endOffset":524344,"count":396},{"startOffset":524344,"endOffset":524350,"count":31},{"startOffset":524350,"endOffset":524381,"count":365},{"startOffset":524381,"endOffset":524397,"count":31}],"isBlockCoverage":true},{"functionName":"findNearestPackageData","ranges":[{"startOffset":524399,"endOffset":525112,"count":736},{"startOffset":524509,"endOffset":525095,"count":1031},{"startOffset":524533,"endOffset":524648,"count":679},{"startOffset":524628,"endOffset":524642,"count":650},{"startOffset":524648,"endOffset":524735,"count":381},{"startOffset":524735,"endOffset":524743,"count":86},{"startOffset":524747,"endOffset":524975,"count":86},{"startOffset":524837,"endOffset":524921,"count":2},{"startOffset":524954,"endOffset":524969,"count":0},{"startOffset":524975,"endOffset":525058,"count":295},{"startOffset":525058,"endOffset":525064,"count":0},{"startOffset":525064,"endOffset":525095,"count":295},{"startOffset":525095,"endOffset":525111,"count":0}],"isBlockCoverage":true},{"functionName":"findNearestMainPackageData","ranges":[{"startOffset":525113,"endOffset":525410,"count":31},{"startOffset":525316,"endOffset":525406,"count":0}],"isBlockCoverage":true},{"functionName":"loadPackageData","ranges":[{"startOffset":525411,"endOffset":526703,"count":125},{"startOffset":525671,"endOffset":525716,"count":6},{"startOffset":525716,"endOffset":526192,"count":119},{"startOffset":525754,"endOffset":526148,"count":0}],"isBlockCoverage":true},{"functionName":"hasSideEffects","ranges":[{"startOffset":525694,"endOffset":525711,"count":3}],"isBlockCoverage":true},{"functionName":"hasSideEffects","ranges":[{"startOffset":525814,"endOffset":525825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":525894,"endOffset":526033,"count":0}],"isBlockCoverage":false},{"functionName":"hasSideEffects","ranges":[{"startOffset":526177,"endOffset":526187,"count":20}],"isBlockCoverage":true},{"functionName":"setResolvedCache","ranges":[{"startOffset":526317,"endOffset":526501,"count":45},{"startOffset":526380,"endOffset":526434,"count":0}],"isBlockCoverage":true},{"functionName":"getResolvedCache","ranges":[{"startOffset":526507,"endOffset":526682,"count":672},{"startOffset":526563,"endOffset":526616,"count":0}],"isBlockCoverage":true},{"functionName":"watchPackageDataPlugin","ranges":[{"startOffset":526704,"endOffset":527638,"count":1}],"isBlockCoverage":true},{"functionName":"watchFileStub","ranges":[{"startOffset":526873,"endOffset":526910,"count":0}],"isBlockCoverage":false},{"functionName":"packageCache.set","ranges":[{"startOffset":527028,"endOffset":527243,"count":111},{"startOffset":527079,"endOffset":527107,"count":27},{"startOffset":527109,"endOffset":527203,"count":1}],"isBlockCoverage":true},{"functionName":"buildStart","ranges":[{"startOffset":527297,"endOffset":527428,"count":1}],"isBlockCoverage":true},{"functionName":"buildEnd","ranges":[{"startOffset":527434,"endOffset":527485,"count":1}],"isBlockCoverage":true},{"functionName":"watchChange","ranges":[{"startOffset":527491,"endOffset":527631,"count":0}],"isBlockCoverage":false},{"functionName":"getRpdCache","ranges":[{"startOffset":527639,"endOffset":528038,"count":719},{"startOffset":527861,"endOffset":528036,"count":633}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":527913,"endOffset":528010,"count":42}],"isBlockCoverage":true},{"functionName":"setRpdCache","ranges":[{"startOffset":528039,"endOffset":528364,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":528267,"endOffset":528360,"count":26}],"isBlockCoverage":true},{"functionName":"getRpdCacheKey","ranges":[{"startOffset":528365,"endOffset":528486,"count":805}],"isBlockCoverage":true},{"functionName":"getFnpdCache","ranges":[{"startOffset":528487,"endOffset":528808,"count":679},{"startOffset":528657,"endOffset":528806,"count":650}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":528709,"endOffset":528780,"count":27}],"isBlockCoverage":true},{"functionName":"setFnpdCache","ranges":[{"startOffset":528809,"endOffset":529056,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":528985,"endOffset":529052,"count":0}],"isBlockCoverage":false},{"functionName":"getFnpdCacheKey","ranges":[{"startOffset":529057,"endOffset":529122,"count":708}],"isBlockCoverage":true},{"functionName":"traverseBetweenDirs","ranges":[{"startOffset":529123,"endOffset":529285,"count":1303},{"startOffset":529216,"endOffset":529283,"count":95}],"isBlockCoverage":true},{"functionName":"flattenId","ranges":[{"startOffset":529475,"endOffset":529683,"count":0}],"isBlockCoverage":false},{"functionName":"limitFlattenIdLength","ranges":[{"startOffset":529788,"endOffset":529962,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeId","ranges":[{"startOffset":529984,"endOffset":530028,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":530189,"endOffset":530214,"count":68}],"isBlockCoverage":true},{"functionName":"isBuiltin","ranges":[{"startOffset":530217,"endOffset":530434,"count":954},{"startOffset":530270,"endOffset":530309,"count":0},{"startOffset":530311,"endOffset":530323,"count":0},{"startOffset":530351,"endOffset":530390,"count":0},{"startOffset":530392,"endOffset":530404,"count":0}],"isBlockCoverage":true},{"functionName":"isNodeBuiltin","ranges":[{"startOffset":530435,"endOffset":530559,"count":956},{"startOffset":530509,"endOffset":530521,"count":0}],"isBlockCoverage":true},{"functionName":"isInNodeModules$1","ranges":[{"startOffset":530560,"endOffset":530632,"count":873}],"isBlockCoverage":true},{"functionName":"moduleListContains","ranges":[{"startOffset":530633,"endOffset":530771,"count":164},{"startOffset":530698,"endOffset":530704,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":530710,"endOffset":530764,"count":0}],"isBlockCoverage":false},{"functionName":"isOptimizable","ranges":[{"startOffset":530772,"endOffset":530953,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDependencyVersion","ranges":[{"startOffset":531120,"endOffset":531351,"count":1}],"isBlockCoverage":true},{"functionName":"createDebugger","ranges":[{"startOffset":531489,"endOffset":531950,"count":23},{"startOffset":531656,"endOffset":531674,"count":0},{"startOffset":531676,"endOffset":531800,"count":0},{"startOffset":531816,"endOffset":531948,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":531829,"endOffset":531943,"count":0}],"isBlockCoverage":false},{"functionName":"testCaseInsensitiveFS","ranges":[{"startOffset":531951,"endOffset":532420,"count":1},{"startOffset":532030,"endOffset":532150,"count":0},{"startOffset":532196,"endOffset":532335,"count":0}],"isBlockCoverage":true},{"functionName":"urlCanParse","ranges":[{"startOffset":532596,"endOffset":532717,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath$3","ranges":[{"startOffset":532805,"endOffset":532902,"count":3501},{"startOffset":532894,"endOffset":532898,"count":0}],"isBlockCoverage":true},{"functionName":"fsPathFromId","ranges":[{"startOffset":532903,"endOffset":533112,"count":166},{"startOffset":532994,"endOffset":533022,"count":2},{"startOffset":533023,"endOffset":533027,"count":164},{"startOffset":533060,"endOffset":533085,"count":2},{"startOffset":533095,"endOffset":533109,"count":0}],"isBlockCoverage":true},{"functionName":"fsPathFromUrl","ranges":[{"startOffset":533113,"endOffset":533182,"count":164}],"isBlockCoverage":true},{"functionName":"isParentDirectory","ranges":[{"startOffset":533183,"endOffset":533362,"count":2},{"startOffset":533285,"endOffset":533359,"count":1}],"isBlockCoverage":true},{"functionName":"isSameFileUri","ranges":[{"startOffset":533363,"endOffset":533499,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalUrl","ranges":[{"startOffset":533560,"endOffset":533589,"count":2950}],"isBlockCoverage":true},{"functionName":"isDataUrl","ranges":[{"startOffset":533641,"endOffset":533669,"count":1710}],"isBlockCoverage":true},{"functionName":"isJSRequest","ranges":[{"startOffset":533869,"endOffset":534055,"count":0}],"isBlockCoverage":false},{"functionName":"isTsRequest","ranges":[{"startOffset":534127,"endOffset":534155,"count":1497}],"isBlockCoverage":true},{"functionName":"isImportRequest","ranges":[{"startOffset":534493,"endOffset":534525,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalRequest","ranges":[{"startOffset":534553,"endOffset":534588,"count":0}],"isBlockCoverage":false},{"functionName":"removeImportQuery","ranges":[{"startOffset":534590,"endOffset":534701,"count":354}],"isBlockCoverage":true},{"functionName":"removeDirectQuery","ranges":[{"startOffset":534702,"endOffset":534817,"count":0}],"isBlockCoverage":false},{"functionName":"removeUrlQuery","ranges":[{"startOffset":534886,"endOffset":534986,"count":0}],"isBlockCoverage":false},{"functionName":"injectQuery","ranges":[{"startOffset":535021,"endOffset":535388,"count":0}],"isBlockCoverage":false},{"functionName":"removeTimestampQuery","ranges":[{"startOffset":535427,"endOffset":535537,"count":2408}],"isBlockCoverage":true},{"functionName":"asyncReplace","ranges":[{"startOffset":535538,"endOffset":535893,"count":0}],"isBlockCoverage":false},{"functionName":"timeFrom","ranges":[{"startOffset":535894,"endOffset":536229,"count":0}],"isBlockCoverage":false},{"functionName":"prettifyUrl","ranges":[{"startOffset":536230,"endOffset":536582,"count":0}],"isBlockCoverage":false},{"functionName":"isObject$1","ranges":[{"startOffset":536583,"endOffset":536683,"count":302}],"isBlockCoverage":true},{"functionName":"isDefined","ranges":[{"startOffset":536684,"endOffset":536737,"count":568}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":536738,"endOffset":536858,"count":6489},{"startOffset":536845,"endOffset":536856,"count":0}],"isBlockCoverage":true},{"functionName":"lookupFile","ranges":[{"startOffset":536859,"endOffset":537174,"count":0}],"isBlockCoverage":false},{"functionName":"isFilePathESM","ranges":[{"startOffset":537175,"endOffset":537528,"count":1},{"startOffset":537258,"endOffset":537280,"count":0},{"startOffset":537318,"endOffset":537341,"count":0},{"startOffset":537489,"endOffset":537522,"count":0}],"isBlockCoverage":true},{"functionName":"pad$1","ranges":[{"startOffset":537572,"endOffset":537700,"count":0}],"isBlockCoverage":false},{"functionName":"posToNumber","ranges":[{"startOffset":537701,"endOffset":537991,"count":0}],"isBlockCoverage":false},{"functionName":"numberToPos","ranges":[{"startOffset":537992,"endOffset":538578,"count":0}],"isBlockCoverage":false},{"functionName":"generateCodeFrame","ranges":[{"startOffset":538579,"endOffset":539848,"count":0}],"isBlockCoverage":false},{"functionName":"isFileReadable","ranges":[{"startOffset":539849,"endOffset":540065,"count":12},{"startOffset":539915,"endOffset":539938,"count":8},{"startOffset":539938,"endOffset":540034,"count":4},{"startOffset":540034,"endOffset":540063,"count":0}],"isBlockCoverage":true},{"functionName":"emptyDir","ranges":[{"startOffset":540108,"endOffset":541104,"count":0}],"isBlockCoverage":false},{"functionName":"copyDir","ranges":[{"startOffset":541105,"endOffset":541594,"count":0}],"isBlockCoverage":false},{"functionName":"recursiveReaddir","ranges":[{"startOffset":541672,"endOffset":542399,"count":1},{"startOffset":541767,"endOffset":542398,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":541960,"endOffset":541995,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":542214,"endOffset":542367,"count":0}],"isBlockCoverage":false},{"functionName":"windowsMappedRealpathSync","ranges":[{"startOffset":542549,"endOffset":542858,"count":0}],"isBlockCoverage":false},{"functionName":"windowsSafeRealPathSync","ranges":[{"startOffset":542945,"endOffset":543138,"count":4},{"startOffset":543020,"endOffset":543094,"count":1}],"isBlockCoverage":true},{"functionName":"optimizeSafeRealPathSync","ranges":[{"startOffset":543139,"endOffset":544031,"count":1},{"startOffset":543296,"endOffset":543318,"count":0},{"startOffset":543320,"endOffset":543386,"count":0},{"startOffset":543458,"endOffset":543626,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":543645,"endOffset":544027,"count":1},{"startOffset":543681,"endOffset":543688,"count":0},{"startOffset":543757,"endOffset":543854,"count":5},{"startOffset":543814,"endOffset":543848,"count":0},{"startOffset":543958,"endOffset":544023,"count":0}],"isBlockCoverage":true},{"functionName":"ensureWatchedFile","ranges":[{"startOffset":544032,"endOffset":544345,"count":189},{"startOffset":544177,"endOffset":544265,"count":94},{"startOffset":544266,"endOffset":544297,"count":94},{"startOffset":544299,"endOffset":544343,"count":94}],"isBlockCoverage":true},{"functionName":"joinSrcset","ranges":[{"startOffset":544465,"endOffset":544591,"count":0}],"isBlockCoverage":false},{"functionName":"splitSrcSetDescriptor","ranges":[{"startOffset":544592,"endOffset":544898,"count":0}],"isBlockCoverage":false},{"functionName":"processSrcSet","ranges":[{"startOffset":544899,"endOffset":545128,"count":0}],"isBlockCoverage":false},{"functionName":"processSrcSetSync","ranges":[{"startOffset":545129,"endOffset":545332,"count":0}],"isBlockCoverage":false},{"functionName":"splitSrcSet","ranges":[{"startOffset":545483,"endOffset":545874,"count":0}],"isBlockCoverage":false},{"functionName":"escapeToLinuxLikePath","ranges":[{"startOffset":545993,"endOffset":546229,"count":200},{"startOffset":546067,"endOffset":546137,"count":16},{"startOffset":546137,"endOffset":546177,"count":184},{"startOffset":546177,"endOffset":546211,"count":0},{"startOffset":546211,"endOffset":546228,"count":184}],"isBlockCoverage":true},{"functionName":"unescapeToLinuxLikePath","ranges":[{"startOffset":546284,"endOffset":546524,"count":100},{"startOffset":546361,"endOffset":546407,"count":0},{"startOffset":546445,"endOffset":546506,"count":8},{"startOffset":546506,"endOffset":546523,"count":92}],"isBlockCoverage":true},{"functionName":"combineSourcemaps","ranges":[{"startOffset":546609,"endOffset":547850,"count":100},{"startOffset":546751,"endOffset":546789,"count":0},{"startOffset":547369,"endOffset":547663,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":546719,"endOffset":546748,"count":100}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":546826,"endOffset":547154,"count":200},{"startOffset":547039,"endOffset":547124,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":546944,"endOffset":547001,"count":200},{"startOffset":546995,"endOffset":547001,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":547248,"endOffset":547277,"count":100}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":547353,"endOffset":547363,"count":100}],"isBlockCoverage":true},{"functionName":"loader","ranges":[{"startOffset":547415,"endOffset":547657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":547745,"endOffset":547806,"count":100},{"startOffset":547798,"endOffset":547806,"count":0}],"isBlockCoverage":true},{"functionName":"unique","ranges":[{"startOffset":547851,"endOffset":547910,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalhostAddressIfDiffersFromDNS","ranges":[{"startOffset":547911,"endOffset":548262,"count":1},{"startOffset":548239,"endOffset":548259,"count":0}],"isBlockCoverage":true},{"functionName":"diffDnsOrderChange","ranges":[{"startOffset":548263,"endOffset":548459,"count":0}],"isBlockCoverage":false},{"functionName":"resolveHostname","ranges":[{"startOffset":548460,"endOffset":548962,"count":1},{"startOffset":548547,"endOffset":548571,"count":0},{"startOffset":548602,"endOffset":548693,"count":0},{"startOffset":548750,"endOffset":548763,"count":0},{"startOffset":548896,"endOffset":548931,"count":0}],"isBlockCoverage":true},{"functionName":"resolveServerUrls","ranges":[{"startOffset":548963,"endOffset":550480,"count":0}],"isBlockCoverage":false},{"functionName":"arraify","ranges":[{"startOffset":550481,"endOffset":550561,"count":6},{"startOffset":550539,"endOffset":550547,"count":4},{"startOffset":550548,"endOffset":550558,"count":2}],"isBlockCoverage":true},{"functionName":"blankReplacer","ranges":[{"startOffset":550794,"endOffset":550829,"count":0}],"isBlockCoverage":false},{"functionName":"getHash","ranges":[{"startOffset":550831,"endOffset":551015,"count":0}],"isBlockCoverage":false},{"functionName":"requireResolveFromRootWithFallback","ranges":[{"startOffset":551124,"endOffset":551424,"count":0}],"isBlockCoverage":false},{"functionName":"emptyCssComments","ranges":[{"startOffset":551426,"endOffset":551518,"count":0}],"isBlockCoverage":false},{"functionName":"backwardCompatibleWorkerPlugins","ranges":[{"startOffset":551519,"endOffset":551706,"count":0}],"isBlockCoverage":false},{"functionName":"mergeConfigRecursively","ranges":[{"startOffset":551707,"endOffset":553168,"count":6},{"startOffset":551837,"endOffset":553149,"count":16},{"startOffset":551896,"endOffset":551919,"count":2},{"startOffset":551919,"endOffset":551980,"count":14},{"startOffset":551980,"endOffset":552030,"count":11},{"startOffset":552030,"endOffset":552055,"count":3},{"startOffset":552055,"endOffset":552101,"count":0},{"startOffset":552103,"endOffset":552175,"count":0},{"startOffset":552175,"endOffset":552769,"count":3},{"startOffset":552209,"endOffset":552227,"count":0},{"startOffset":552229,"endOffset":552300,"count":0},{"startOffset":552331,"endOffset":552352,"count":0},{"startOffset":552353,"endOffset":552393,"count":0},{"startOffset":552395,"endOffset":552444,"count":0},{"startOffset":552472,"endOffset":552496,"count":1},{"startOffset":552498,"endOffset":552662,"count":0},{"startOffset":552689,"endOffset":552717,"count":0},{"startOffset":552719,"endOffset":552769,"count":0},{"startOffset":552769,"endOffset":552802,"count":3},{"startOffset":552802,"endOffset":552825,"count":2},{"startOffset":552827,"endOffset":552913,"count":1},{"startOffset":552913,"endOffset":552943,"count":2},{"startOffset":552943,"endOffset":552963,"count":1},{"startOffset":552965,"endOffset":553120,"count":1},{"startOffset":553061,"endOffset":553083,"count":0},{"startOffset":553120,"endOffset":553149,"count":1}],"isBlockCoverage":true},{"functionName":"merged.<computed>","ranges":[{"startOffset":552520,"endOffset":552639,"count":0}],"isBlockCoverage":false},{"functionName":"mergeConfig","ranges":[{"startOffset":553169,"endOffset":553445,"count":5},{"startOffset":553301,"endOffset":553370,"count":0},{"startOffset":553436,"endOffset":553441,"count":0}],"isBlockCoverage":true},{"functionName":"mergeAlias","ranges":[{"startOffset":553446,"endOffset":553641,"count":1},{"startOffset":553484,"endOffset":553493,"count":0},{"startOffset":553504,"endOffset":553513,"count":0},{"startOffset":553534,"endOffset":553550,"count":0},{"startOffset":553552,"endOffset":553584,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeAlias","ranges":[{"startOffset":553642,"endOffset":553843,"count":3},{"startOffset":553732,"endOffset":553840,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":553758,"endOffset":553836,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSingleAlias","ranges":[{"startOffset":553844,"endOffset":554283,"count":4},{"startOffset":553952,"endOffset":553984,"count":0},{"startOffset":553985,"endOffset":554031,"count":0},{"startOffset":554033,"endOffset":554145,"count":0},{"startOffset":554217,"endOffset":554265,"count":0}],"isBlockCoverage":true},{"functionName":"transformStableResult","ranges":[{"startOffset":554284,"endOffset":554493,"count":73},{"startOffset":554403,"endOffset":554428,"count":0},{"startOffset":554429,"endOffset":554479,"count":0}],"isBlockCoverage":true},{"functionName":"asyncFlatten","ranges":[{"startOffset":554494,"endOffset":554640,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":554607,"endOffset":554621,"count":10}],"isBlockCoverage":true},{"functionName":"stripBomTag","ranges":[{"startOffset":554641,"endOffset":554766,"count":95},{"startOffset":554712,"endOffset":554746,"count":0}],"isBlockCoverage":true},{"functionName":"isNonDriveRelativeAbsolutePath","ranges":[{"startOffset":554858,"endOffset":554952,"count":1259},{"startOffset":554887,"endOffset":554907,"count":0}],"isBlockCoverage":true},{"functionName":"shouldServeFile","ranges":[{"startOffset":554954,"endOffset":555080,"count":0}],"isBlockCoverage":false},{"functionName":"hasCorrectCase","ranges":[{"startOffset":555081,"endOffset":555333,"count":0}],"isBlockCoverage":false},{"functionName":"joinUrlSegments","ranges":[{"startOffset":555334,"endOffset":555549,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingSlash","ranges":[{"startOffset":555550,"endOffset":555632,"count":0}],"isBlockCoverage":false},{"functionName":"stripBase","ranges":[{"startOffset":555633,"endOffset":555833,"count":492},{"startOffset":555689,"endOffset":555710,"count":0},{"startOffset":555789,"endOffset":555822,"count":328},{"startOffset":555823,"endOffset":555830,"count":164}],"isBlockCoverage":true},{"functionName":"arrayEqual","ranges":[{"startOffset":555834,"endOffset":556029,"count":0}],"isBlockCoverage":false},{"functionName":"evalValue","ranges":[{"startOffset":556030,"endOffset":556197,"count":0}],"isBlockCoverage":false},{"functionName":"getNpmPackageName","ranges":[{"startOffset":556198,"endOffset":556414,"count":83},{"startOffset":556305,"endOffset":556380,"count":0}],"isBlockCoverage":true},{"functionName":"escapeRegex","ranges":[{"startOffset":556462,"endOffset":556536,"count":1}],"isBlockCoverage":true},{"functionName":"getPackageManagerCommand","ranges":[{"startOffset":556537,"endOffset":557099,"count":0}],"isBlockCoverage":false},{"functionName":"isDevServer","ranges":[{"startOffset":557100,"endOffset":557170,"count":1}],"isBlockCoverage":true},{"functionName":"promiseWithResolvers","ranges":[{"startOffset":557171,"endOffset":557381,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":557264,"endOffset":557338,"count":1}],"isBlockCoverage":true},{"functionName":"createSerialPromiseQueue","ranges":[{"startOffset":557382,"endOffset":557743,"count":2}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":557455,"endOffset":557736,"count":0}],"isBlockCoverage":false},{"functionName":"sortObjectKeys","ranges":[{"startOffset":557744,"endOffset":557893,"count":0}],"isBlockCoverage":false},{"functionName":"displayTime","ranges":[{"startOffset":557894,"endOffset":558196,"count":0}],"isBlockCoverage":false},{"functionName":"encodeURIPath","ranges":[{"startOffset":558197,"endOffset":558415,"count":0}],"isBlockCoverage":false},{"functionName":"partialEncodeURIPath","ranges":[{"startOffset":558416,"endOffset":558653,"count":0}],"isBlockCoverage":false},{"functionName":"setupSIGTERMListener","ranges":[{"startOffset":558683,"endOffset":558815,"count":0}],"isBlockCoverage":false},{"functionName":"teardownSIGTERMListener","ranges":[{"startOffset":558849,"endOffset":558981,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreen","ranges":[{"startOffset":559099,"endOffset":559346,"count":0}],"isBlockCoverage":false},{"functionName":"getTimeFormatter","ranges":[{"startOffset":559366,"endOffset":559547,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":559548,"endOffset":561937,"count":1},{"startOffset":559630,"endOffset":559668,"count":0},{"startOffset":559955,"endOffset":559968,"count":0}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":559957,"endOffset":559968,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":559972,"endOffset":560452,"count":0}],"isBlockCoverage":false},{"functionName":"output","ranges":[{"startOffset":560455,"endOffset":561232,"count":0}],"isBlockCoverage":false},{"functionName":"info","ranges":[{"startOffset":561330,"endOffset":561386,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":561392,"endOffset":561479,"count":0}],"isBlockCoverage":false},{"functionName":"warnOnce","ranges":[{"startOffset":561485,"endOffset":561650,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":561656,"endOffset":561745,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreen","ranges":[{"startOffset":561751,"endOffset":561840,"count":0}],"isBlockCoverage":false},{"functionName":"hasErrorLogged","ranges":[{"startOffset":561846,"endOffset":561913,"count":0}],"isBlockCoverage":false},{"functionName":"printServerUrls","ranges":[{"startOffset":561938,"endOffset":562582,"count":0}],"isBlockCoverage":false},{"functionName":"buildReporterPlugin","ranges":[{"startOffset":562801,"endOffset":570699,"count":0}],"isBlockCoverage":false},{"functionName":"writeLine","ranges":[{"startOffset":570700,"endOffset":570919,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine$1","ranges":[{"startOffset":570920,"endOffset":571007,"count":0}],"isBlockCoverage":false},{"functionName":"throttle","ranges":[{"startOffset":571008,"endOffset":571210,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":571667,"endOffset":571692,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571770,"endOffset":571795,"count":8}],"isBlockCoverage":true},{"functionName":"makePromise","ranges":[{"startOffset":571976,"endOffset":572145,"count":114}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":572052,"endOffset":572103,"count":114}],"isBlockCoverage":true},{"functionName":"resolveTSConfigJson","ranges":[{"startOffset":572273,"endOffset":572770,"count":93},{"startOffset":572418,"endOffset":572543,"count":0},{"startOffset":572545,"endOffset":572769,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":572608,"endOffset":572766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":572936,"endOffset":572975,"count":0}],"isBlockCoverage":false},{"functionName":"isInNodeModules","ranges":[{"startOffset":572979,"endOffset":573023,"count":93}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":573298,"endOffset":573320,"count":0}],"isBlockCoverage":false},{"functionName":"posix2native","ranges":[{"startOffset":573324,"endOffset":573380,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":573666,"endOffset":573688,"count":0}],"isBlockCoverage":false},{"functionName":"native2posix","ranges":[{"startOffset":573692,"endOffset":573755,"count":94}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":574081,"endOffset":574164,"count":0}],"isBlockCoverage":false},{"functionName":"resolve2posix","ranges":[{"startOffset":574168,"endOffset":574327,"count":1},{"startOffset":574282,"endOffset":574322,"count":0}],"isBlockCoverage":true},{"functionName":"resolveReferencedTSConfigFiles","ranges":[{"startOffset":574494,"endOffset":574824,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSolutionTSConfig","ranges":[{"startOffset":574983,"endOffset":575463,"count":93},{"startOffset":575123,"endOffset":575140,"count":0},{"startOffset":575184,"endOffset":575237,"count":0},{"startOffset":575238,"endOffset":575272,"count":0},{"startOffset":575276,"endOffset":575445,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":575205,"endOffset":575236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":575328,"endOffset":575379,"count":0}],"isBlockCoverage":false},{"functionName":"isIncluded","ranges":[{"startOffset":575589,"endOffset":576257,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobMatch","ranges":[{"startOffset":576710,"endOffset":579592,"count":0}],"isBlockCoverage":false},{"functionName":"pattern2regex","ranges":[{"startOffset":579686,"endOffset":580449,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTokens","ranges":[{"startOffset":580567,"endOffset":580757,"count":93}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":581074,"endOffset":581700,"count":93},{"startOffset":581225,"endOffset":581244,"count":0},{"startOffset":581380,"endOffset":581431,"count":72},{"startOffset":581431,"endOffset":581539,"count":21},{"startOffset":581540,"endOffset":581575,"count":0},{"startOffset":581577,"endOffset":581628,"count":0},{"startOffset":581628,"endOffset":581699,"count":21}],"isBlockCoverage":true},{"functionName":"findUp","ranges":[{"startOffset":581925,"endOffset":582840,"count":90},{"startOffset":582032,"endOffset":582037,"count":0},{"startOffset":582097,"endOffset":582327,"count":62},{"startOffset":582179,"endOffset":582222,"count":0},{"startOffset":582244,"endOffset":582290,"count":0},{"startOffset":582327,"endOffset":582388,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":582496,"endOffset":582836,"count":90},{"startOffset":582526,"endOffset":582563,"count":21},{"startOffset":582545,"endOffset":582562,"count":0},{"startOffset":582565,"endOffset":582592,"count":21},{"startOffset":582592,"endOffset":582833,"count":69},{"startOffset":582626,"endOffset":582647,"count":0},{"startOffset":582733,"endOffset":582758,"count":0}],"isBlockCoverage":true},{"functionName":"toJson","ranges":[{"startOffset":583336,"endOffset":583622,"count":1},{"startOffset":583478,"endOffset":583591,"count":0}],"isBlockCoverage":true},{"functionName":"stripDanglingComma","ranges":[{"startOffset":583813,"endOffset":584673,"count":1},{"startOffset":583992,"endOffset":584624,"count":760},{"startOffset":584068,"endOffset":584176,"count":66},{"startOffset":584197,"endOffset":584243,"count":443},{"startOffset":584243,"endOffset":584276,"count":317},{"startOffset":584276,"endOffset":584319,"count":19},{"startOffset":584319,"endOffset":584344,"count":298},{"startOffset":584344,"endOffset":584621,"count":137},{"startOffset":584407,"endOffset":584541,"count":0},{"startOffset":584582,"endOffset":584617,"count":0}],"isBlockCoverage":true},{"functionName":"isEscaped","ranges":[{"startOffset":584800,"endOffset":585023,"count":132},{"startOffset":584942,"endOffset":584983,"count":0}],"isBlockCoverage":true},{"functionName":"strip","ranges":[{"startOffset":585112,"endOffset":585204,"count":0}],"isBlockCoverage":false},{"functionName":"stripJsonComments","ranges":[{"startOffset":585358,"endOffset":586954,"count":1},{"startOffset":585582,"endOffset":586854,"count":760},{"startOffset":585730,"endOffset":585846,"count":66},{"startOffset":585870,"endOffset":585888,"count":443},{"startOffset":585888,"endOffset":585957,"count":317},{"startOffset":585959,"endOffset":586077,"count":0},{"startOffset":586077,"endOffset":586851,"count":317},{"startOffset":586121,"endOffset":586167,"count":0},{"startOffset":586169,"endOffset":586280,"count":0},{"startOffset":586324,"endOffset":586352,"count":0},{"startOffset":586354,"endOffset":586453,"count":0},{"startOffset":586526,"endOffset":586643,"count":0},{"startOffset":586686,"endOffset":586730,"count":0},{"startOffset":586732,"endOffset":586851,"count":0},{"startOffset":586890,"endOffset":586923,"count":0}],"isBlockCoverage":true},{"functionName":"stripBom","ranges":[{"startOffset":587057,"endOffset":587282,"count":1},{"startOffset":587234,"endOffset":587264,"count":0}],"isBlockCoverage":true},{"functionName":"parse$e","ranges":[{"startOffset":587709,"endOffset":588811,"count":93},{"startOffset":587873,"endOffset":587927,"count":0},{"startOffset":588239,"endOffset":588293,"count":0},{"startOffset":588380,"endOffset":588448,"count":92},{"startOffset":588448,"endOffset":588625,"count":1},{"startOffset":588765,"endOffset":588792,"count":0}],"isBlockCoverage":true},{"functionName":"getParsedDeep","ranges":[{"startOffset":589046,"endOffset":589484,"count":92},{"startOffset":589190,"endOffset":589209,"count":0},{"startOffset":589244,"endOffset":589265,"count":0},{"startOffset":589270,"endOffset":589466,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":589382,"endOffset":589394,"count":0}],"isBlockCoverage":false},{"functionName":"parseFile$1","ranges":[{"startOffset":589728,"endOffset":590580,"count":1},{"startOffset":589849,"endOffset":589902,"count":0},{"startOffset":589906,"endOffset":589955,"count":0},{"startOffset":590453,"endOffset":590504,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":590043,"endOffset":590240,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":590251,"endOffset":590388,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeTSConfig","ranges":[{"startOffset":590748,"endOffset":591041,"count":1}],"isBlockCoverage":true},{"functionName":"parseReferences","ranges":[{"startOffset":591212,"endOffset":591670,"count":1},{"startOffset":591310,"endOffset":591669,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":591446,"endOffset":591489,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":591529,"endOffset":591571,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":591595,"endOffset":591633,"count":0}],"isBlockCoverage":false},{"functionName":"parseExtends","ranges":[{"startOffset":591825,"endOffset":593892,"count":1},{"startOffset":591915,"endOffset":593891,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":592956,"endOffset":593006,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":593063,"endOffset":593119,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":593514,"endOffset":593548,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtends","ranges":[{"startOffset":593978,"endOffset":594503,"count":0}],"isBlockCoverage":false},{"functionName":"extendTSConfig","ranges":[{"startOffset":594879,"endOffset":596169,"count":0}],"isBlockCoverage":false},{"functionName":"rebaseRelative","ranges":[{"startOffset":596573,"endOffset":596817,"count":0}],"isBlockCoverage":false},{"functionName":"rebasePath","ranges":[{"startOffset":596907,"endOffset":597169,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":597210,"endOffset":597920,"count":0}],"isBlockCoverage":true},{"functionName":"applyDefaults","ranges":[{"startOffset":597990,"endOffset":598184,"count":1},{"startOffset":598070,"endOffset":598182,"count":0}],"isBlockCoverage":true},{"functionName":"isJSConfig","ranges":[{"startOffset":598390,"endOffset":598490,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":598531,"endOffset":601630,"count":1}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":598659,"endOffset":598724,"count":0}],"isBlockCoverage":false},{"functionName":"hasConfigPath","ranges":[{"startOffset":598878,"endOffset":598987,"count":183}],"isBlockCoverage":true},{"functionName":"getConfigPath","ranges":[{"startOffset":599218,"endOffset":599454,"count":134},{"startOffset":599387,"endOffset":599400,"count":1},{"startOffset":599424,"endOffset":599451,"count":0}],"isBlockCoverage":true},{"functionName":"hasParseResult","ranges":[{"startOffset":599548,"endOffset":599606,"count":188}],"isBlockCoverage":true},{"functionName":"getParseResult","ranges":[{"startOffset":599755,"endOffset":599931,"count":92},{"startOffset":599876,"endOffset":599928,"count":0}],"isBlockCoverage":true},{"functionName":"setParseResult","ranges":[{"startOffset":600185,"endOffset":600748,"count":94}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":600529,"endOffset":600635,"count":94}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":600647,"endOffset":600743,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigPath","ranges":[{"startOffset":600904,"endOffset":601308,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":601069,"endOffset":601183,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":601195,"endOffset":601303,"count":0}],"isBlockCoverage":false},{"functionName":"transformWithEsbuild","ranges":[{"startOffset":601944,"endOffset":605174,"count":93},{"startOffset":602137,"endOffset":602157,"count":0},{"startOffset":602209,"endOffset":602237,"count":0},{"startOffset":602279,"endOffset":602307,"count":0},{"startOffset":602809,"endOffset":602828,"count":0},{"startOffset":602969,"endOffset":602974,"count":0},{"startOffset":603020,"endOffset":603157,"count":1023},{"startOffset":603066,"endOffset":603149,"count":93},{"startOffset":603247,"endOffset":603264,"count":0},{"startOffset":603369,"endOffset":603431,"count":0},{"startOffset":603469,"endOffset":603502,"count":0},{"startOffset":603529,"endOffset":603569,"count":0},{"startOffset":603597,"endOffset":603645,"count":0},{"startOffset":603677,"endOffset":603722,"count":0},{"startOffset":604180,"endOffset":604208,"count":0},{"startOffset":604210,"endOffset":604381,"count":0},{"startOffset":604494,"endOffset":604512,"count":0},{"startOffset":604571,"endOffset":605172,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":604715,"endOffset":605111,"count":0}],"isBlockCoverage":false},{"functionName":"esbuildPlugin","ranges":[{"startOffset":605175,"endOffset":606724,"count":1}],"isBlockCoverage":true},{"functionName":"configureServer","ranges":[{"startOffset":605957,"endOffset":606143,"count":1}],"isBlockCoverage":true},{"functionName":"buildEnd","ranges":[{"startOffset":606149,"endOffset":606188,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":606194,"endOffset":606717,"count":95},{"startOffset":606243,"endOffset":606266,"count":2},{"startOffset":606268,"endOffset":606711,"count":93},{"startOffset":606385,"endOffset":606502,"count":0},{"startOffset":606525,"endOffset":606552,"count":0},{"startOffset":606554,"endOffset":606620,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":606421,"endOffset":606490,"count":0}],"isBlockCoverage":false},{"functionName":"buildEsbuildPlugin","ranges":[{"startOffset":607317,"endOffset":608189,"count":0}],"isBlockCoverage":false},{"functionName":"resolveEsbuildTranspileOptions","ranges":[{"startOffset":608191,"endOffset":609925,"count":0}],"isBlockCoverage":false},{"functionName":"prettifyMessage","ranges":[{"startOffset":609926,"endOffset":610098,"count":0}],"isBlockCoverage":false},{"functionName":"loadTsconfigJsonForFile","ranges":[{"startOffset":610118,"endOffset":610728,"count":93},{"startOffset":610201,"endOffset":610251,"count":1},{"startOffset":610524,"endOffset":610726,"count":0}],"isBlockCoverage":true},{"functionName":"reloadOnTsconfigChange","ranges":[{"startOffset":610729,"endOffset":611376,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":611418,"endOffset":614813,"count":0}],"isBlockCoverage":true},{"functionName":"genWorkerCode","ranges":[{"startOffset":614815,"endOffset":616373,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":616397,"endOffset":616971,"count":0}],"isBlockCoverage":true},{"functionName":"genFakeWorkerArgsAndCode","ranges":[{"startOffset":616973,"endOffset":617238,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":617300,"endOffset":617935,"count":0}],"isBlockCoverage":true},{"functionName":"loadTerserPath","ranges":[{"startOffset":617977,"endOffset":618493,"count":0}],"isBlockCoverage":false},{"functionName":"terserPlugin","ranges":[{"startOffset":618495,"endOffset":619671,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":632985,"endOffset":633139,"count":0}],"isBlockCoverage":false},{"functionName":"initPublicFiles","ranges":[{"startOffset":633195,"endOffset":633602,"count":1},{"startOffset":633323,"endOffset":633426,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":633476,"endOffset":633529,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicFiles","ranges":[{"startOffset":633603,"endOffset":633675,"count":0}],"isBlockCoverage":false},{"functionName":"checkPublicFile","ranges":[{"startOffset":633676,"endOffset":634224,"count":0}],"isBlockCoverage":false},{"functionName":"registerCustomMime","ranges":[{"startOffset":634435,"endOffset":634583,"count":1}],"isBlockCoverage":true},{"functionName":"renderAssetUrlInJS","ranges":[{"startOffset":634584,"endOffset":636133,"count":0}],"isBlockCoverage":false},{"functionName":"assetPlugin","ranges":[{"startOffset":636134,"endOffset":638845,"count":1}],"isBlockCoverage":true},{"functionName":"buildStart","ranges":[{"startOffset":636247,"endOffset":636386,"count":1}],"isBlockCoverage":true},{"functionName":"configureServer","ranges":[{"startOffset":636392,"endOffset":636463,"count":1}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":636469,"endOffset":636687,"count":577},{"startOffset":636576,"endOffset":636681,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":636693,"endOffset":637866,"count":95},{"startOffset":636736,"endOffset":636761,"count":0},{"startOffset":636788,"endOffset":637002,"count":0},{"startOffset":637094,"endOffset":637750,"count":0},{"startOffset":637751,"endOffset":637767,"count":0},{"startOffset":637768,"endOffset":637775,"count":0},{"startOffset":637818,"endOffset":637842,"count":0},{"startOffset":637843,"endOffset":637851,"count":0}],"isBlockCoverage":true},{"functionName":"renderChunk","ranges":[{"startOffset":637872,"endOffset":638180,"count":0}],"isBlockCoverage":false},{"functionName":"generateBundle","ranges":[{"startOffset":638186,"endOffset":638838,"count":0}],"isBlockCoverage":false},{"functionName":"fileToUrl$1","ranges":[{"startOffset":638846,"endOffset":639025,"count":0}],"isBlockCoverage":false},{"functionName":"fileToDevUrl","ranges":[{"startOffset":639026,"endOffset":639496,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicAssetFilename","ranges":[{"startOffset":639497,"endOffset":639599,"count":0}],"isBlockCoverage":false},{"functionName":"publicFileToBuiltUrl","ranges":[{"startOffset":639724,"endOffset":640141,"count":0}],"isBlockCoverage":false},{"functionName":"isGitLfsPlaceholder","ranges":[{"startOffset":640218,"endOffset":640393,"count":0}],"isBlockCoverage":false},{"functionName":"fileToBuiltUrl","ranges":[{"startOffset":640394,"endOffset":641863,"count":0}],"isBlockCoverage":false},{"functionName":"urlToBuiltUrl","ranges":[{"startOffset":641864,"endOffset":642292,"count":0}],"isBlockCoverage":false},{"functionName":"shouldInline","ranges":[{"startOffset":642314,"endOffset":643016,"count":0}],"isBlockCoverage":false},{"functionName":"svgToDataURL","ranges":[{"startOffset":643074,"endOffset":643583,"count":0}],"isBlockCoverage":false},{"functionName":"manifestPlugin","ranges":[{"startOffset":643620,"endOffset":647540,"count":0}],"isBlockCoverage":false},{"functionName":"getChunkOriginalFileName","ranges":[{"startOffset":647541,"endOffset":648035,"count":0}],"isBlockCoverage":false},{"functionName":"dataURIPlugin","ranges":[{"startOffset":648163,"endOffset":649275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":649321,"endOffset":649505,"count":1}],"isBlockCoverage":true},{"functionName":"parse$d","ranges":[{"startOffset":649594,"endOffset":650487,"count":94},{"startOffset":649626,"endOffset":649661,"count":0},{"startOffset":649702,"endOffset":649717,"count":0},{"startOffset":649753,"endOffset":649788,"count":0},{"startOffset":649814,"endOffset":649816,"count":0},{"startOffset":649869,"endOffset":650008,"count":0},{"startOffset":650037,"endOffset":650208,"count":320},{"startOffset":650140,"endOffset":650144,"count":291},{"startOffset":650144,"endOffset":650146,"count":29},{"startOffset":650153,"endOffset":650157,"count":291},{"startOffset":650157,"endOffset":650159,"count":29},{"startOffset":650221,"endOffset":650408,"count":113},{"startOffset":650293,"endOffset":650300,"count":56},{"startOffset":650300,"endOffset":650313,"count":57},{"startOffset":650317,"endOffset":650322,"count":57},{"startOffset":650322,"endOffset":650325,"count":56},{"startOffset":650370,"endOffset":650375,"count":0},{"startOffset":650397,"endOffset":650402,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":649644,"endOffset":649658,"count":0}],"isBlockCoverage":false},{"functionName":"k","ranges":[{"startOffset":650408,"endOffset":650457,"count":320},{"startOffset":650446,"endOffset":650456,"count":0}],"isBlockCoverage":true},{"functionName":"Q","ranges":[{"startOffset":650487,"endOffset":650589,"count":0}],"isBlockCoverage":false},{"functionName":"B","ranges":[{"startOffset":650589,"endOffset":650664,"count":94},{"startOffset":650640,"endOffset":650663,"count":203150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":662579,"endOffset":662597,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":662638,"endOffset":662659,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":662701,"endOffset":669453,"count":1},{"startOffset":663517,"endOffset":663576,"count":0},{"startOffset":663579,"endOffset":663629,"count":0},{"startOffset":665279,"endOffset":665354,"count":0},{"startOffset":665357,"endOffset":665423,"count":0}],"isBlockCoverage":true},{"functionName":"getCommentRegex","ranges":[{"startOffset":662781,"endOffset":663031,"count":95}],"isBlockCoverage":true},{"functionName":"getMapFileCommentRegex","ranges":[{"startOffset":663104,"endOffset":663357,"count":95}],"isBlockCoverage":true},{"functionName":"decodeBase64WithBufferFrom","ranges":[{"startOffset":663632,"endOffset":663732,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithNewBuffer","ranges":[{"startOffset":663735,"endOffset":663951,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithAtob","ranges":[{"startOffset":663954,"endOffset":664048,"count":0}],"isBlockCoverage":false},{"functionName":"stripComment","ranges":[{"startOffset":664051,"endOffset":664112,"count":0}],"isBlockCoverage":false},{"functionName":"readFromFileMap","ranges":[{"startOffset":664115,"endOffset":664657,"count":0}],"isBlockCoverage":false},{"functionName":"Converter","ranges":[{"startOffset":664660,"endOffset":665018,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toJSON","ranges":[{"startOffset":665050,"endOffset":665126,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithBufferFrom","ranges":[{"startOffset":665426,"endOffset":665553,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithNewBuffer","ranges":[{"startOffset":665556,"endOffset":665797,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithBtoa","ranges":[{"startOffset":665800,"endOffset":665917,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toURI","ranges":[{"startOffset":665948,"endOffset":666029,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toComment","ranges":[{"startOffset":666065,"endOffset":666482,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toObject","ranges":[{"startOffset":666554,"endOffset":666607,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.addProperty","ranges":[{"startOffset":666645,"endOffset":666855,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.setProperty","ranges":[{"startOffset":666893,"endOffset":666967,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.getProperty","ranges":[{"startOffset":667005,"endOffset":667055,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromObject","ranges":[{"startOffset":667080,"endOffset":667129,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromJSON","ranges":[{"startOffset":667152,"endOffset":667221,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromURI","ranges":[{"startOffset":667243,"endOffset":667313,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromBase64","ranges":[{"startOffset":667338,"endOffset":667417,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromComment","ranges":[{"startOffset":667443,"endOffset":667719,"count":0}],"isBlockCoverage":false},{"functionName":"makeConverter","ranges":[{"startOffset":667723,"endOffset":667801,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileComment","ranges":[{"startOffset":667833,"endOffset":668311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromSource","ranges":[{"startOffset":668411,"endOffset":668533,"count":95},{"startOffset":668492,"endOffset":668522,"count":0}],"isBlockCoverage":true},{"functionName":"exports.fromMapFileSource","ranges":[{"startOffset":668640,"endOffset":669053,"count":95},{"startOffset":668700,"endOffset":668931,"count":0},{"startOffset":668999,"endOffset":669042,"count":0}],"isBlockCoverage":true},{"functionName":"exports.removeComments","ranges":[{"startOffset":669082,"endOffset":669150,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeMapFileComments","ranges":[{"startOffset":669186,"endOffset":669261,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateMapFileComment","ranges":[{"startOffset":669298,"endOffset":669449,"count":0}],"isBlockCoverage":false},{"functionName":"computeSourceRoute","ranges":[{"startOffset":669706,"endOffset":669926,"count":0}],"isBlockCoverage":false},{"functionName":"injectSourcesContent","ranges":[{"startOffset":669927,"endOffset":671172,"count":92},{"startOffset":670082,"endOffset":670087,"count":0},{"startOffset":670268,"endOffset":670281,"count":0},{"startOffset":670282,"endOffset":670318,"count":0},{"startOffset":670320,"endOffset":670901,"count":0},{"startOffset":671019,"endOffset":671170,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":670366,"endOffset":670883,"count":0}],"isBlockCoverage":true},{"functionName":"genSourceMapUrl","ranges":[{"startOffset":671173,"endOffset":671354,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeWithSourcemap","ranges":[{"startOffset":671355,"endOffset":671702,"count":0}],"isBlockCoverage":false},{"functionName":"applySourcemapIgnoreList","ranges":[{"startOffset":671703,"endOffset":672627,"count":93},{"startOffset":671979,"endOffset":672500,"count":92},{"startOffset":672052,"endOffset":672061,"count":0},{"startOffset":672155,"endOffset":672214,"count":0},{"startOffset":672294,"endOffset":672375,"count":0},{"startOffset":672395,"endOffset":672441,"count":0},{"startOffset":672443,"endOffset":672496,"count":0},{"startOffset":672539,"endOffset":672625,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourcemapFromFile","ranges":[{"startOffset":672628,"endOffset":672979,"count":95},{"startOffset":672838,"endOffset":672848,"count":0},{"startOffset":672863,"endOffset":672977,"count":0}],"isBlockCoverage":true},{"functionName":"createConvertSourceMapReadMap","ranges":[{"startOffset":672980,"endOffset":673182,"count":95}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":673048,"endOffset":673179,"count":0}],"isBlockCoverage":false},{"functionName":"flatten$1","ranges":[{"startOffset":673348,"endOffset":673457,"count":0}],"isBlockCoverage":false},{"functionName":"splitWhen","ranges":[{"startOffset":673487,"endOffset":673805,"count":0}],"isBlockCoverage":false},{"functionName":"isEnoentCodeError","ranges":[{"startOffset":673956,"endOffset":674029,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":674243,"endOffset":674703,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats$1","ranges":[{"startOffset":674707,"endOffset":674803,"count":0}],"isBlockCoverage":false},{"functionName":"unixify","ranges":[{"startOffset":676205,"endOffset":676276,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbsolute","ranges":[{"startOffset":676303,"endOffset":676385,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDotSegment","ranges":[{"startOffset":676422,"endOffset":676910,"count":0}],"isBlockCoverage":false},{"functionName":"escapeWindowsPath","ranges":[{"startOffset":677044,"endOffset":677154,"count":1}],"isBlockCoverage":true},{"functionName":"escapePosixPath","ranges":[{"startOffset":677201,"endOffset":677307,"count":0}],"isBlockCoverage":false},{"functionName":"convertWindowsPathToPattern","ranges":[{"startOffset":677459,"endOffset":677640,"count":0}],"isBlockCoverage":false},{"functionName":"convertPosixPathToPattern","ranges":[{"startOffset":677707,"endOffset":677793,"count":0}],"isBlockCoverage":false},{"functionName":"isExtglob","ranges":[{"startOffset":678047,"endOffset":678318,"count":0}],"isBlockCoverage":false},{"functionName":"strictCheck","ranges":[{"startOffset":678558,"endOffset":681056,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedCheck","ranges":[{"startOffset":681078,"endOffset":681615,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":681633,"endOffset":681935,"count":0}],"isBlockCoverage":false},{"functionName":"globParent","ranges":[{"startOffset":682372,"endOffset":683031,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":683054,"endOffset":685680,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":683097,"endOffset":683302,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":683366,"endOffset":683425,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":683497,"endOffset":683708,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":683798,"endOffset":684082,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":684198,"endOffset":684374,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":684459,"endOffset":684804,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":684895,"endOffset":685039,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":685106,"endOffset":685268,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":685322,"endOffset":685676,"count":0}],"isBlockCoverage":false},{"functionName":"stringify$7","ranges":[{"startOffset":685738,"endOffset":686380,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber$2","ranges":[{"startOffset":686552,"endOffset":686777,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange$1","ranges":[{"startOffset":686994,"endOffset":688940,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":688943,"endOffset":689290,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":689292,"endOffset":689773,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":689895,"endOffset":690559,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":690561,"endOffset":691359,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":691361,"endOffset":691821,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":691847,"endOffset":691960,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":691962,"endOffset":692025,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":692027,"endOffset":692107,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":692109,"endOffset":692205,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":692207,"endOffset":692298,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":692300,"endOffset":692468,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":692470,"endOffset":692564,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":692566,"endOffset":692626,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":692628,"endOffset":693038,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange$1.clearCache","ranges":[{"startOffset":693113,"endOffset":693146,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":693459,"endOffset":693528,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":693549,"endOffset":693633,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":693657,"endOffset":693752,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":693772,"endOffset":693801,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":693818,"endOffset":694011,"count":0}],"isBlockCoverage":false},{"functionName":"stringify$6","ranges":[{"startOffset":694034,"endOffset":694182,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":694197,"endOffset":694491,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":694511,"endOffset":694748,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":694770,"endOffset":695488,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":695507,"endOffset":695760,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":695779,"endOffset":696038,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":696060,"endOffset":696156,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":696180,"endOffset":696290,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":696313,"endOffset":696458,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":696481,"endOffset":697974,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":697997,"endOffset":698777,"count":0}],"isBlockCoverage":false},{"functionName":"fill$2","ranges":[{"startOffset":698795,"endOffset":699588,"count":0}],"isBlockCoverage":false},{"functionName":"compile$1","ranges":[{"startOffset":699686,"endOffset":701062,"count":0}],"isBlockCoverage":false},{"functionName":"append$1","ranges":[{"startOffset":701193,"endOffset":701872,"count":0}],"isBlockCoverage":false},{"functionName":"expand$2","ranges":[{"startOffset":701892,"endOffset":703851,"count":0}],"isBlockCoverage":false},{"functionName":"parse$c","ranges":[{"startOffset":706001,"endOffset":712299,"count":0}],"isBlockCoverage":false},{"functionName":"braces$2","ranges":[{"startOffset":712808,"endOffset":713303,"count":0}],"isBlockCoverage":false},{"functionName":"braces$2.parse","ranges":[{"startOffset":713634,"endOffset":713682,"count":0}],"isBlockCoverage":false},{"functionName":"braces$2.stringify","ranges":[{"startOffset":714074,"endOffset":714244,"count":0}],"isBlockCoverage":false},{"functionName":"braces$2.compile","ranges":[{"startOffset":714694,"endOffset":714839,"count":0}],"isBlockCoverage":false},{"functionName":"braces$2.expand","ranges":[{"startOffset":715432,"endOffset":715836,"count":0}],"isBlockCoverage":false},{"functionName":"braces$2.create","ranges":[{"startOffset":716415,"endOffset":716621,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyString","ranges":[{"startOffset":716813,"endOffset":716840,"count":0}],"isBlockCoverage":false},{"functionName":"hasBraces","ranges":[{"startOffset":716860,"endOffset":716951,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1","ranges":[{"startOffset":717517,"endOffset":718864,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.matcher","ranges":[{"startOffset":719522,"endOffset":719573,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.isMatch","ranges":[{"startOffset":720185,"endOffset":720248,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.not","ranges":[{"startOffset":720956,"endOffset":721395,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.contains","ranges":[{"startOffset":722124,"endOffset":722689,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.matchKeys","ranges":[{"startOffset":723469,"endOffset":723747,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.some","ranges":[{"startOffset":724534,"endOffset":724790,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.every","ranges":[{"startOffset":725663,"endOffset":725921,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.all","ranges":[{"startOffset":726724,"endOffset":726934,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.capture","ranges":[{"startOffset":727650,"endOffset":727952,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.makeRe","ranges":[{"startOffset":728406,"endOffset":728446,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.scan","ranges":[{"startOffset":728797,"endOffset":728835,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.parse","ranges":[{"startOffset":729229,"endOffset":729453,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.braces","ranges":[{"startOffset":730022,"endOffset":730257,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch$1.braceExpand","ranges":[{"startOffset":730313,"endOffset":730484,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticPattern","ranges":[{"startOffset":732163,"endOffset":732262,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":732308,"endOffset":733366,"count":0}],"isBlockCoverage":false},{"functionName":"hasBraceExpansion","ranges":[{"startOffset":733414,"endOffset":733847,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPositivePattern","ranges":[{"startOffset":733848,"endOffset":733962,"count":0}],"isBlockCoverage":false},{"functionName":"convertToNegativePattern","ranges":[{"startOffset":734026,"endOffset":734098,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativePattern","ranges":[{"startOffset":734162,"endOffset":734259,"count":0}],"isBlockCoverage":false},{"functionName":"isPositivePattern","ranges":[{"startOffset":734309,"endOffset":734388,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatterns","ranges":[{"startOffset":734438,"endOffset":734527,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns$1","ranges":[{"startOffset":734581,"endOffset":734672,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternsInsideCurrentDirectory","ranges":[{"startOffset":734923,"endOffset":735065,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternsOutsideCurrentDirectory","ranges":[{"startOffset":735351,"endOffset":735471,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternRelatedToParentDirectory","ranges":[{"startOffset":735555,"endOffset":735677,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDirectory","ranges":[{"startOffset":735759,"endOffset":735859,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobStar","ranges":[{"startOffset":735907,"endOffset":735981,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithSlashGlobStar","ranges":[{"startOffset":736019,"endOffset":736109,"count":0}],"isBlockCoverage":false},{"functionName":"isAffectDepthOfReadingPattern","ranges":[{"startOffset":736167,"endOffset":736337,"count":0}],"isBlockCoverage":false},{"functionName":"expandPatternsWithBraceExpansion","ranges":[{"startOffset":736411,"endOffset":736597,"count":0}],"isBlockCoverage":false},{"functionName":"expandBraceExpansion","ranges":[{"startOffset":736677,"endOffset":737205,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternParts","ranges":[{"startOffset":737261,"endOffset":737894,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":737940,"endOffset":738025,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToRe","ranges":[{"startOffset":738053,"endOffset":738168,"count":0}],"isBlockCoverage":false},{"functionName":"matchAny","ranges":[{"startOffset":738222,"endOffset":738328,"count":0}],"isBlockCoverage":false},{"functionName":"removeDuplicateSlashes","ranges":[{"startOffset":738565,"endOffset":738661,"count":0}],"isBlockCoverage":false},{"functionName":"merge2$1","ranges":[{"startOffset":739008,"endOffset":741433,"count":0}],"isBlockCoverage":false},{"functionName":"pauseStreams","ranges":[{"startOffset":741472,"endOffset":742013,"count":0}],"isBlockCoverage":false},{"functionName":"merge$1","ranges":[{"startOffset":742129,"endOffset":742495,"count":0}],"isBlockCoverage":false},{"functionName":"propagateCloseEventToSources","ranges":[{"startOffset":742522,"endOffset":742627,"count":0}],"isBlockCoverage":false},{"functionName":"isString$1","ranges":[{"startOffset":742760,"endOffset":742828,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty$1","ranges":[{"startOffset":742861,"endOffset":742915,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":743784,"endOffset":744566,"count":0}],"isBlockCoverage":false},{"functionName":"processPatterns","ranges":[{"startOffset":744594,"endOffset":745988,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToTasks","ranges":[{"startOffset":746260,"endOffset":747404,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":747460,"endOffset":747560,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatternsAsPositive","ranges":[{"startOffset":747610,"endOffset":747851,"count":0}],"isBlockCoverage":false},{"functionName":"groupPatternsByBaseDirectory","ranges":[{"startOffset":747921,"endOffset":748309,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupsToTasks","ranges":[{"startOffset":748377,"endOffset":748586,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupToTask","ranges":[{"startOffset":748652,"endOffset":748906,"count":0}],"isBlockCoverage":false},{"functionName":"read$3","ranges":[{"startOffset":749220,"endOffset":750132,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback$2","ranges":[{"startOffset":750156,"endOffset":750228,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback$2","ranges":[{"startOffset":750229,"endOffset":750309,"count":0}],"isBlockCoverage":false},{"functionName":"read$2","ranges":[{"startOffset":750413,"endOffset":750912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":750975,"endOffset":751588,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":751303,"endOffset":751525,"count":0}],"isBlockCoverage":false},{"functionName":"Settings","ranges":[{"startOffset":751722,"endOffset":752147,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":752152,"endOffset":752254,"count":0}],"isBlockCoverage":false},{"functionName":"stat$4","ranges":[{"startOffset":752528,"endOffset":752827,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":752849,"endOffset":752990,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings$2","ranges":[{"startOffset":753018,"endOffset":753225,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotask_1","ranges":[{"startOffset":753528,"endOffset":753644,"count":0}],"isBlockCoverage":false},{"functionName":"runParallel","ranges":[{"startOffset":753812,"endOffset":754701,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":755875,"endOffset":756335,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":756338,"endOffset":756430,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments$1","ranges":[{"startOffset":756727,"endOffset":756990,"count":0}],"isBlockCoverage":false},{"functionName":"read$1","ranges":[{"startOffset":757313,"endOffset":757573,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes$1","ranges":[{"startOffset":757597,"endOffset":758560,"count":0}],"isBlockCoverage":false},{"functionName":"makeRplTaskEntry","ranges":[{"startOffset":758616,"endOffset":759240,"count":0}],"isBlockCoverage":false},{"functionName":"readdir$3","ranges":[{"startOffset":759241,"endOffset":760515,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback$1","ranges":[{"startOffset":760545,"endOffset":760617,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback$1","ranges":[{"startOffset":760618,"endOffset":760698,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":760958,"endOffset":761180,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":761201,"endOffset":762011,"count":0}],"isBlockCoverage":false},{"functionName":"readdir$2","ranges":[{"startOffset":762064,"endOffset":762623,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":762692,"endOffset":763365,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":763080,"endOffset":763302,"count":0}],"isBlockCoverage":false},{"functionName":"Settings","ranges":[{"startOffset":763552,"endOffset":764287,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":764292,"endOffset":764394,"count":0}],"isBlockCoverage":false},{"functionName":"scandir","ranges":[{"startOffset":764672,"endOffset":764968,"count":0}],"isBlockCoverage":false},{"functionName":"scandirSync","ranges":[{"startOffset":764994,"endOffset":765138,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings$1","ranges":[{"startOffset":765172,"endOffset":765379,"count":0}],"isBlockCoverage":false},{"functionName":"reusify$1","ranges":[{"startOffset":765409,"endOffset":765833,"count":0}],"isBlockCoverage":false},{"functionName":"fastqueue","ranges":[{"startOffset":765918,"endOffset":769820,"count":0}],"isBlockCoverage":false},{"functionName":"noop$4","ranges":[{"startOffset":769822,"endOffset":769843,"count":0}],"isBlockCoverage":false},{"functionName":"Task","ranges":[{"startOffset":769845,"endOffset":770370,"count":0}],"isBlockCoverage":false},{"functionName":"queueAsPromised","ranges":[{"startOffset":770372,"endOffset":772034,"count":0}],"isBlockCoverage":false},{"functionName":"isFatalError","ranges":[{"startOffset":772350,"endOffset":772501,"count":0}],"isBlockCoverage":false},{"functionName":"isAppliedFilter","ranges":[{"startOffset":772540,"endOffset":772628,"count":0}],"isBlockCoverage":false},{"functionName":"replacePathSegmentSeparator","ranges":[{"startOffset":772673,"endOffset":772786,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments","ranges":[{"startOffset":772855,"endOffset":773160,"count":0}],"isBlockCoverage":false},{"functionName":"Reader","ranges":[{"startOffset":773353,"endOffset":773552,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncReader","ranges":[{"startOffset":773842,"endOffset":774342,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":774347,"endOffset":774571,"count":0}],"isBlockCoverage":false},{"functionName":"get isDestroyed","ranges":[{"startOffset":774576,"endOffset":774635,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":774640,"endOffset":774834,"count":0}],"isBlockCoverage":false},{"functionName":"onEntry","ranges":[{"startOffset":774839,"endOffset":774909,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":774914,"endOffset":774986,"count":0}],"isBlockCoverage":false},{"functionName":"onEnd","ranges":[{"startOffset":774991,"endOffset":775059,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":775064,"endOffset":775299,"count":0}],"isBlockCoverage":false},{"functionName":"_worker","ranges":[{"startOffset":775304,"endOffset":775694,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":775699,"endOffset":775951,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":775956,"endOffset":776583,"count":0}],"isBlockCoverage":false},{"functionName":"_emitEntry","ranges":[{"startOffset":776588,"endOffset":776657,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncProvider","ranges":[{"startOffset":776808,"endOffset":777011,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":777016,"endOffset":777369,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":777405,"endOffset":777475,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":777476,"endOffset":777556,"count":0}],"isBlockCoverage":false},{"functionName":"StreamProvider","ranges":[{"startOffset":777729,"endOffset":778178,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":778183,"endOffset":778532,"count":0}],"isBlockCoverage":false},{"functionName":"SyncReader","ranges":[{"startOffset":778802,"endOffset":778962,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":778967,"endOffset":779104,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":779109,"endOffset":779192,"count":0}],"isBlockCoverage":false},{"functionName":"_handleQueue","ranges":[{"startOffset":779197,"endOffset":779342,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDirectory","ranges":[{"startOffset":779347,"endOffset":779677,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":779682,"endOffset":779821,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":779826,"endOffset":780372,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToStorage","ranges":[{"startOffset":780377,"endOffset":780441,"count":0}],"isBlockCoverage":false},{"functionName":"SyncProvider","ranges":[{"startOffset":780586,"endOffset":780760,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":780765,"endOffset":780815,"count":0}],"isBlockCoverage":false},{"functionName":"Settings","ranges":[{"startOffset":781013,"endOffset":781949,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":781954,"endOffset":782056,"count":0}],"isBlockCoverage":false},{"functionName":"walk$2","ranges":[{"startOffset":782379,"endOffset":782717,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":782739,"endOffset":782935,"count":0}],"isBlockCoverage":false},{"functionName":"walkStream","ranges":[{"startOffset":782963,"endOffset":783163,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":783195,"endOffset":783400,"count":0}],"isBlockCoverage":false},{"functionName":"Reader","ranges":[{"startOffset":783579,"endOffset":783894,"count":0}],"isBlockCoverage":false},{"functionName":"_getFullEntryPath","ranges":[{"startOffset":783899,"endOffset":783995,"count":0}],"isBlockCoverage":false},{"functionName":"_makeEntry","ranges":[{"startOffset":784000,"endOffset":784293,"count":0}],"isBlockCoverage":false},{"functionName":"_isFatalError","ranges":[{"startOffset":784298,"endOffset":784416,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderStream","ranges":[{"startOffset":784689,"endOffset":784823,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":784828,"endOffset":784906,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":784917,"endOffset":785676,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":785681,"endOffset":785985,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":785990,"endOffset":786241,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderAsync","ranges":[{"startOffset":786472,"endOffset":786632,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":786637,"endOffset":786980,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":786985,"endOffset":787409,"count":0}],"isBlockCoverage":false},{"functionName":"Matcher","ranges":[{"startOffset":787626,"endOffset":787870,"count":0}],"isBlockCoverage":false},{"functionName":"_fillStorage","ranges":[{"startOffset":787875,"endOffset":788264,"count":0}],"isBlockCoverage":false},{"functionName":"_getPatternSegments","ranges":[{"startOffset":788269,"endOffset":788862,"count":0}],"isBlockCoverage":false},{"functionName":"_splitSegmentsIntoSections","ranges":[{"startOffset":788867,"endOffset":789039,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":789213,"endOffset":790427,"count":0}],"isBlockCoverage":false},{"functionName":"DeepFilter","ranges":[{"startOffset":790600,"endOffset":790740,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":790745,"endOffset":790988,"count":0}],"isBlockCoverage":false},{"functionName":"_getMatcher","ranges":[{"startOffset":790993,"endOffset":791111,"count":0}],"isBlockCoverage":false},{"functionName":"_getNegativePatternsRe","ranges":[{"startOffset":791116,"endOffset":791372,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":791377,"endOffset":791862,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByDeep","ranges":[{"startOffset":791867,"endOffset":792172,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryLevel","ranges":[{"startOffset":792177,"endOffset":792461,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedSymbolicLink","ranges":[{"startOffset":792466,"endOffset":792588,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByPositivePatterns","ranges":[{"startOffset":792593,"endOffset":792724,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByNegativePatterns","ranges":[{"startOffset":792729,"endOffset":792853,"count":0}],"isBlockCoverage":false},{"functionName":"EntryFilter","ranges":[{"startOffset":793015,"endOffset":793187,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":793192,"endOffset":793547,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":793552,"endOffset":794350,"count":0}],"isBlockCoverage":false},{"functionName":"_isDuplicateEntry","ranges":[{"startOffset":794355,"endOffset":794431,"count":0}],"isBlockCoverage":false},{"functionName":"_createIndexRecord","ranges":[{"startOffset":794436,"endOffset":794517,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyFileFilter","ranges":[{"startOffset":794522,"endOffset":794619,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyDirectoryFilter","ranges":[{"startOffset":794624,"endOffset":794737,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByAbsoluteNegativePatterns","ranges":[{"startOffset":794742,"endOffset":795031,"count":0}],"isBlockCoverage":false},{"functionName":"_isMatchToPatterns","ranges":[{"startOffset":795036,"endOffset":795542,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorFilter","ranges":[{"startOffset":795708,"endOffset":795774,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":795779,"endOffset":795854,"count":0}],"isBlockCoverage":false},{"functionName":"_isNonFatalError","ranges":[{"startOffset":795859,"endOffset":795978,"count":0}],"isBlockCoverage":false},{"functionName":"EntryTransformer","ranges":[{"startOffset":796145,"endOffset":796211,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformer","ranges":[{"startOffset":796216,"endOffset":796290,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":796295,"endOffset":796811,"count":0}],"isBlockCoverage":false},{"functionName":"Provider","ranges":[{"startOffset":797057,"endOffset":797442,"count":0}],"isBlockCoverage":false},{"functionName":"_getRootDirectory","ranges":[{"startOffset":797447,"endOffset":797540,"count":0}],"isBlockCoverage":false},{"functionName":"_getReaderOptions","ranges":[{"startOffset":797545,"endOffset":798306,"count":0}],"isBlockCoverage":false},{"functionName":"_getMicromatchOptions","ranges":[{"startOffset":798311,"endOffset":798721,"count":0}],"isBlockCoverage":false},{"functionName":"ProviderAsync","ranges":[{"startOffset":798930,"endOffset":799042,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":799047,"endOffset":799302,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":799307,"endOffset":799493,"count":0}],"isBlockCoverage":false},{"functionName":"ProviderStream","ranges":[{"startOffset":799757,"endOffset":799868,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":799873,"endOffset":800473,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":800478,"endOffset":800664,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderSync","ranges":[{"startOffset":800916,"endOffset":801050,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":801055,"endOffset":801131,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":801142,"endOffset":801543,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":801548,"endOffset":801868,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":801873,"endOffset":801962,"count":0}],"isBlockCoverage":false},{"functionName":"ProviderSync","ranges":[{"startOffset":802163,"endOffset":802274,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":802279,"endOffset":802504,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":802509,"endOffset":802695,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":802751,"endOffset":805670,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":803425,"endOffset":805395,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":805401,"endOffset":805489,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileSystemMethods","ranges":[{"startOffset":805495,"endOffset":805635,"count":0}],"isBlockCoverage":false},{"functionName":"FastGlob","ranges":[{"startOffset":805837,"endOffset":806061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":806172,"endOffset":808937,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":806323,"endOffset":806506,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":806537,"endOffset":807028,"count":0}],"isBlockCoverage":false},{"functionName":"generateTasks","ranges":[{"startOffset":807063,"endOffset":807306,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":807355,"endOffset":807565,"count":0}],"isBlockCoverage":false},{"functionName":"escapePath","ranges":[{"startOffset":807620,"endOffset":807734,"count":1}],"isBlockCoverage":true},{"functionName":"convertPathToPattern","ranges":[{"startOffset":807777,"endOffset":807915,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":807979,"endOffset":808409,"count":1}],"isBlockCoverage":true},{"functionName":"escapePath","ranges":[{"startOffset":808006,"endOffset":808141,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathToPattern","ranges":[{"startOffset":808189,"endOffset":808344,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":808458,"endOffset":808892,"count":1}],"isBlockCoverage":true},{"functionName":"escapePath","ranges":[{"startOffset":808485,"endOffset":808622,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathToPattern","ranges":[{"startOffset":808670,"endOffset":808827,"count":0}],"isBlockCoverage":false},{"functionName":"getWorks","ranges":[{"startOffset":808969,"endOffset":809265,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":809266,"endOffset":809577,"count":1},{"startOffset":809475,"endOffset":809575,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":809380,"endOffset":809448,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultSearchPlaces","ranges":[{"startOffset":809879,"endOffset":810297,"count":1},{"startOffset":810024,"endOffset":810028,"count":0},{"startOffset":810167,"endOffset":810171,"count":0},{"startOffset":810260,"endOffset":810264,"count":0}],"isBlockCoverage":true},{"functionName":"parentDir","ranges":[{"startOffset":810539,"endOffset":810605,"count":6},{"startOffset":810589,"endOffset":810602,"count":0}],"isBlockCoverage":true},{"functionName":"jsonLoader","ranges":[{"startOffset":810670,"endOffset":810705,"count":2}],"isBlockCoverage":true},{"functionName":"dynamicImport","ranges":[{"startOffset":811155,"endOffset":811589,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":812046,"endOffset":812820,"count":1},{"startOffset":812367,"endOffset":812387,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":812297,"endOffset":812303,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":812466,"endOffset":812801,"count":15},{"startOffset":812513,"endOffset":812523,"count":1},{"startOffset":812576,"endOffset":812644,"count":0},{"startOffset":812682,"endOffset":812798,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageProp","ranges":[{"startOffset":812901,"endOffset":813158,"count":2},{"startOffset":812970,"endOffset":812985,"count":0},{"startOffset":812987,"endOffset":813005,"count":0},{"startOffset":813048,"endOffset":813066,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":813079,"endOffset":813131,"count":2},{"startOffset":813113,"endOffset":813118,"count":0}],"isBlockCoverage":true},{"functionName":"validateFilePath","ranges":[{"startOffset":813192,"endOffset":813301,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoader","ranges":[{"startOffset":813374,"endOffset":813571,"count":0}],"isBlockCoverage":false},{"functionName":"makeEmplace","ranges":[{"startOffset":813688,"endOffset":813781,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":813703,"endOffset":813781,"count":0}],"isBlockCoverage":false},{"functionName":"lilconfig","ranges":[{"startOffset":813845,"endOffset":817587,"count":1},{"startOffset":814022,"endOffset":814027,"count":0}],"isBlockCoverage":true},{"functionName":"search","ranges":[{"startOffset":814149,"endOffset":816053,"count":1},{"startOffset":814417,"endOffset":815798,"count":4},{"startOffset":814499,"endOffset":814577,"count":0},{"startOffset":814652,"endOffset":815701,"count":60},{"startOffset":814761,"endOffset":814769,"count":2},{"startOffset":814769,"endOffset":814799,"count":58},{"startOffset":814799,"endOffset":814913,"count":2},{"startOffset":814913,"endOffset":814923,"count":0},{"startOffset":815035,"endOffset":815305,"count":2},{"startOffset":815179,"endOffset":815281,"count":0},{"startOffset":815305,"endOffset":815431,"count":0},{"startOffset":815433,"endOffset":815701,"count":0},{"startOffset":815726,"endOffset":815751,"count":3},{"startOffset":815753,"endOffset":815767,"count":1},{"startOffset":815767,"endOffset":815798,"count":3},{"startOffset":815921,"endOffset":815940,"count":0},{"startOffset":815988,"endOffset":816020,"count":4}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":816057,"endOffset":817366,"count":0}],"isBlockCoverage":false},{"functionName":"clearLoadCache","ranges":[{"startOffset":817370,"endOffset":817425,"count":0}],"isBlockCoverage":false},{"functionName":"clearSearchCache","ranges":[{"startOffset":817429,"endOffset":817488,"count":0}],"isBlockCoverage":false},{"functionName":"clearCaches","ranges":[{"startOffset":817492,"endOffset":817580,"count":0}],"isBlockCoverage":false},{"functionName":"lilconfigSync","ranges":[{"startOffset":817659,"endOffset":821244,"count":0}],"isBlockCoverage":false},{"functionName":"isAlias","ranges":[{"startOffset":821546,"endOffset":821619,"count":0}],"isBlockCoverage":false},{"functionName":"isDocument","ranges":[{"startOffset":821640,"endOffset":821711,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":821727,"endOffset":821798,"count":0}],"isBlockCoverage":false},{"functionName":"isPair","ranges":[{"startOffset":821815,"endOffset":821887,"count":0}],"isBlockCoverage":false},{"functionName":"isScalar$1","ranges":[{"startOffset":821908,"endOffset":821984,"count":0}],"isBlockCoverage":false},{"functionName":"isSeq","ranges":[{"startOffset":822000,"endOffset":822071,"count":0}],"isBlockCoverage":false},{"functionName":"isCollection$1","ranges":[{"startOffset":822073,"endOffset":822284,"count":0}],"isBlockCoverage":false},{"functionName":"isNode$1","ranges":[{"startOffset":822285,"endOffset":822541,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnchor","ranges":[{"startOffset":822560,"endOffset":822629,"count":0}],"isBlockCoverage":false},{"functionName":"visit$1","ranges":[{"startOffset":824316,"endOffset":824638,"count":0}],"isBlockCoverage":false},{"functionName":"visit_","ranges":[{"startOffset":825009,"endOffset":826329,"count":0}],"isBlockCoverage":false},{"functionName":"visitAsync","ranges":[{"startOffset":827964,"endOffset":828317,"count":0}],"isBlockCoverage":false},{"functionName":"visitAsync_","ranges":[{"startOffset":828697,"endOffset":830072,"count":0}],"isBlockCoverage":false},{"functionName":"initVisitor","ranges":[{"startOffset":830073,"endOffset":830652,"count":0}],"isBlockCoverage":false},{"functionName":"callVisitor","ranges":[{"startOffset":830653,"endOffset":831159,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNode","ranges":[{"startOffset":831160,"endOffset":831671,"count":0}],"isBlockCoverage":false},{"functionName":"escapeTagName","ranges":[{"startOffset":831815,"endOffset":831870,"count":0}],"isBlockCoverage":false},{"functionName":"Directives","ranges":[{"startOffset":831895,"endOffset":832342,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":832347,"endOffset":832481,"count":0}],"isBlockCoverage":false},{"functionName":"atDocument","ranges":[{"startOffset":832652,"endOffset":833198,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":833325,"endOffset":834895,"count":0}],"isBlockCoverage":false},{"functionName":"tagName","ranges":[{"startOffset":835132,"endOffset":836336,"count":0}],"isBlockCoverage":false},{"functionName":"tagString","ranges":[{"startOffset":836489,"endOffset":836757,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":836762,"endOffset":837636,"count":0}],"isBlockCoverage":false},{"functionName":"anchorIsValid","ranges":[{"startOffset":837846,"endOffset":838109,"count":0}],"isBlockCoverage":false},{"functionName":"anchorNames","ranges":[{"startOffset":838110,"endOffset":838328,"count":0}],"isBlockCoverage":false},{"functionName":"findNewAnchor","ranges":[{"startOffset":838409,"endOffset":838586,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeAnchors","ranges":[{"startOffset":838587,"endOffset":839882,"count":0}],"isBlockCoverage":false},{"functionName":"applyReviver","ranges":[{"startOffset":840161,"endOffset":841701,"count":0}],"isBlockCoverage":false},{"functionName":"toJS","ranges":[{"startOffset":842074,"endOffset":842906,"count":0}],"isBlockCoverage":false},{"functionName":"NodeBase","ranges":[{"startOffset":842929,"endOffset":843019,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":843064,"endOffset":843274,"count":0}],"isBlockCoverage":false},{"functionName":"toJS","ranges":[{"startOffset":843338,"endOffset":844077,"count":0}],"isBlockCoverage":false},{"functionName":"Alias","ranges":[{"startOffset":844116,"endOffset":844351,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":844499,"endOffset":844817,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":844822,"endOffset":846027,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":846032,"endOffset":846513,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasCount","ranges":[{"startOffset":846516,"endOffset":847212,"count":0}],"isBlockCoverage":false},{"functionName":"isScalarValue","ranges":[{"startOffset":847236,"endOffset":847315,"count":0}],"isBlockCoverage":false},{"functionName":"Scalar","ranges":[{"startOffset":847353,"endOffset":847432,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":847437,"endOffset":847529,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":847534,"endOffset":847587,"count":0}],"isBlockCoverage":false},{"functionName":"findTagObject","ranges":[{"startOffset":847816,"endOffset":848173,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":848174,"endOffset":850658,"count":0}],"isBlockCoverage":false},{"functionName":"collectionFromPath","ranges":[{"startOffset":850660,"endOffset":851297,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyPath","ranges":[{"startOffset":851461,"endOffset":851558,"count":0}],"isBlockCoverage":false},{"functionName":"Collection","ranges":[{"startOffset":851600,"endOffset":851831,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":851968,"endOffset":852333,"count":0}],"isBlockCoverage":false},{"functionName":"addIn","ranges":[{"startOffset":852553,"endOffset":853076,"count":0}],"isBlockCoverage":false},{"functionName":"deleteIn","ranges":[{"startOffset":853199,"endOffset":853547,"count":0}],"isBlockCoverage":false},{"functionName":"getIn","ranges":[{"startOffset":853783,"endOffset":854093,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllNullValues","ranges":[{"startOffset":854098,"endOffset":854529,"count":0}],"isBlockCoverage":false},{"functionName":"hasIn","ranges":[{"startOffset":854619,"endOffset":854846,"count":0}],"isBlockCoverage":false},{"functionName":"setIn","ranges":[{"startOffset":854994,"endOffset":855530,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyComment","ranges":[{"startOffset":855742,"endOffset":855786,"count":0}],"isBlockCoverage":false},{"functionName":"indentComment","ranges":[{"startOffset":855788,"endOffset":855968,"count":0}],"isBlockCoverage":false},{"functionName":"lineComment","ranges":[{"startOffset":855989,"endOffset":856198,"count":0}],"isBlockCoverage":false},{"functionName":"foldFlowLines","ranges":[{"startOffset":856502,"endOffset":860372,"count":0}],"isBlockCoverage":false},{"functionName":"consumeMoreIndentedLines","ranges":[{"startOffset":860484,"endOffset":860931,"count":0}],"isBlockCoverage":false},{"functionName":"getFoldOptions","ranges":[{"startOffset":860956,"endOffset":861134,"count":0}],"isBlockCoverage":false},{"functionName":"containsDocumentMarker","ranges":[{"startOffset":861291,"endOffset":861328,"count":0}],"isBlockCoverage":false},{"functionName":"lineLengthOverLimit","ranges":[{"startOffset":861330,"endOffset":861849,"count":0}],"isBlockCoverage":false},{"functionName":"doubleQuotedString","ranges":[{"startOffset":861850,"endOffset":865431,"count":0}],"isBlockCoverage":false},{"functionName":"singleQuotedString","ranges":[{"startOffset":865432,"endOffset":866029,"count":0}],"isBlockCoverage":false},{"functionName":"quotedString","ranges":[{"startOffset":866030,"endOffset":866560,"count":0}],"isBlockCoverage":false},{"functionName":"blockString","ranges":[{"startOffset":866840,"endOffset":870014,"count":0}],"isBlockCoverage":false},{"functionName":"plainString","ranges":[{"startOffset":870015,"endOffset":872097,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyString","ranges":[{"startOffset":872098,"endOffset":873641,"count":0}],"isBlockCoverage":false},{"functionName":"createStringifyContext","ranges":[{"startOffset":873643,"endOffset":874791,"count":0}],"isBlockCoverage":false},{"functionName":"getTagObject","ranges":[{"startOffset":874792,"endOffset":875560,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyProps","ranges":[{"startOffset":875642,"endOffset":876123,"count":0}],"isBlockCoverage":false},{"functionName":"stringify$2","ranges":[{"startOffset":876124,"endOffset":877546,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyPair","ranges":[{"startOffset":877548,"endOffset":882573,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":882575,"endOffset":882984,"count":0}],"isBlockCoverage":false},{"functionName":"addPairToJSMap","ranges":[{"startOffset":883010,"endOffset":884183,"count":0}],"isBlockCoverage":false},{"functionName":"isMergeKey","ranges":[{"startOffset":884203,"endOffset":884341,"count":0}],"isBlockCoverage":false},{"functionName":"mergeToJSMap","ranges":[{"startOffset":884859,"endOffset":885634,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyKey","ranges":[{"startOffset":885635,"endOffset":886591,"count":0}],"isBlockCoverage":false},{"functionName":"createPair","ranges":[{"startOffset":886593,"endOffset":886756,"count":0}],"isBlockCoverage":false},{"functionName":"Pair","ranges":[{"startOffset":886774,"endOffset":886929,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":886934,"endOffset":887161,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":887166,"endOffset":887289,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":887294,"endOffset":887462,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyCollection","ranges":[{"startOffset":887466,"endOffset":887701,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyBlockCollection","ranges":[{"startOffset":887702,"endOffset":889562,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyFlowCollection","ranges":[{"startOffset":889563,"endOffset":892133,"count":0}],"isBlockCoverage":false},{"functionName":"addCommentBefore","ranges":[{"startOffset":892134,"endOffset":892471,"count":0}],"isBlockCoverage":false},{"functionName":"findPair","ranges":[{"startOffset":892473,"endOffset":892809,"count":0}],"isBlockCoverage":false},{"functionName":"get tagName","ranges":[{"startOffset":892856,"endOffset":892917,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLMap","ranges":[{"startOffset":892922,"endOffset":893002,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":893149,"endOffset":894037,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":894258,"endOffset":895405,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":895410,"endOffset":895615,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":895620,"endOffset":895809,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":895814,"endOffset":895874,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":895879,"endOffset":895948,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":896165,"endOffset":896426,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":896431,"endOffset":897082,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":897206,"endOffset":897336,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":897354,"endOffset":897406,"count":0}],"isBlockCoverage":false},{"functionName":"get tagName","ranges":[{"startOffset":897457,"endOffset":897518,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLSeq","ranges":[{"startOffset":897523,"endOffset":897603,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":897608,"endOffset":897658,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":897913,"endOffset":898111,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":898116,"endOffset":898347,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":898562,"endOffset":898683,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":898960,"endOffset":899300,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":899305,"endOffset":899539,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":899544,"endOffset":899890,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":899902,"endOffset":900419,"count":0}],"isBlockCoverage":false},{"functionName":"asItemIndex","ranges":[{"startOffset":900422,"endOffset":900669,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":900789,"endOffset":900920,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":900938,"endOffset":900990,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":901026,"endOffset":901060,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":901128,"endOffset":901138,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":901144,"endOffset":901321,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":901358,"endOffset":901380,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":901398,"endOffset":901420,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":901524,"endOffset":901546,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":901563,"endOffset":901686,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":901723,"endOffset":901758,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":901874,"endOffset":901925,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":901931,"endOffset":902224,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyNumber","ranges":[{"startOffset":902229,"endOffset":902917,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":902954,"endOffset":902988,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":903118,"endOffset":903279,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":903350,"endOffset":903384,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":903541,"endOffset":903563,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":903569,"endOffset":903708,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":903744,"endOffset":903778,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":903887,"endOffset":904130,"count":0}],"isBlockCoverage":false},{"functionName":"intIdentify$2","ranges":[{"startOffset":904189,"endOffset":904252,"count":0}],"isBlockCoverage":false},{"functionName":"intResolve$1","ranges":[{"startOffset":904275,"endOffset":904384,"count":0}],"isBlockCoverage":false},{"functionName":"intStringify$1","ranges":[{"startOffset":904386,"endOffset":904587,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":904621,"endOffset":904664,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":904775,"endOffset":904827,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":904844,"endOffset":904881,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":905023,"endOffset":905076,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":905145,"endOffset":905188,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":905305,"endOffset":905358,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":905375,"endOffset":905413,"count":0}],"isBlockCoverage":false},{"functionName":"intIdentify$1","ranges":[{"startOffset":905582,"endOffset":905680,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyJSON","ranges":[{"startOffset":905703,"endOffset":905739,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":905787,"endOffset":905821,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":905901,"endOffset":905911,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":905977,"endOffset":905999,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":906021,"endOffset":906043,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":906148,"endOffset":906158,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":906224,"endOffset":906259,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":906370,"endOffset":906391,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":906589,"endOffset":906670,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":906691,"endOffset":906769,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":906801,"endOffset":906835,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":906989,"endOffset":907011,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":907126,"endOffset":907242,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":907340,"endOffset":907376,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":907787,"endOffset":908426,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":908432,"endOffset":909783,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePairs","ranges":[{"startOffset":909788,"endOffset":910912,"count":0}],"isBlockCoverage":false},{"functionName":"createPairs","ranges":[{"startOffset":910913,"endOffset":912120,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLOMap","ranges":[{"startOffset":912312,"endOffset":912654,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":912830,"endOffset":913459,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":913471,"endOffset":913652,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":913748,"endOffset":913777,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":913863,"endOffset":914376,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":914394,"endOffset":914457,"count":0}],"isBlockCoverage":false},{"functionName":"boolStringify","ranges":[{"startOffset":914462,"endOffset":914691,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":914724,"endOffset":914747,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":914872,"endOffset":914894,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":914961,"endOffset":914985,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":915112,"endOffset":915135,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":915203,"endOffset":915237,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":915367,"endOffset":915530,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":915599,"endOffset":915633,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":915789,"endOffset":915831,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":915837,"endOffset":915976,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":916010,"endOffset":916044,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":916152,"endOffset":916491,"count":0}],"isBlockCoverage":false},{"functionName":"intIdentify","ranges":[{"startOffset":916548,"endOffset":916611,"count":0}],"isBlockCoverage":false},{"functionName":"intResolve","ranges":[{"startOffset":916613,"endOffset":917259,"count":0}],"isBlockCoverage":false},{"functionName":"intStringify","ranges":[{"startOffset":917260,"endOffset":917519,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":917679,"endOffset":917729,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":917746,"endOffset":917781,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":917943,"endOffset":917993,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":918010,"endOffset":918044,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":918188,"endOffset":918239,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":918440,"endOffset":918491,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":918508,"endOffset":918544,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLSet","ranges":[{"startOffset":918585,"endOffset":918667,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":918672,"endOffset":919112,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":919254,"endOffset":919484,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":919489,"endOffset":919899,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":919904,"endOffset":919968,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":919973,"endOffset":920307,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":920319,"endOffset":920744,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":920837,"endOffset":920866,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":920962,"endOffset":921024,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":921030,"endOffset":921367,"count":0}],"isBlockCoverage":false},{"functionName":"parseSexagesimal","ranges":[{"startOffset":921451,"endOffset":921829,"count":0}],"isBlockCoverage":false},{"functionName":"stringifySexagesimal","ranges":[{"startOffset":921934,"endOffset":922844,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":922877,"endOffset":922938,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":923076,"endOffset":923146,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":923221,"endOffset":923255,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":923404,"endOffset":923439,"count":0}],"isBlockCoverage":false},{"functionName":"identify","ranges":[{"startOffset":923514,"endOffset":923544,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":924188,"endOffset":924859,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":924876,"endOffset":924948,"count":0}],"isBlockCoverage":false},{"functionName":"getTags","ranges":[{"startOffset":925904,"endOffset":926977,"count":0}],"isBlockCoverage":false},{"functionName":"sortMapEntriesByKey","ranges":[{"startOffset":927007,"endOffset":927059,"count":0}],"isBlockCoverage":false},{"functionName":"Schema","ranges":[{"startOffset":927080,"endOffset":928071,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":928076,"endOffset":928245,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyDocument","ranges":[{"startOffset":928249,"endOffset":931022,"count":0}],"isBlockCoverage":false},{"functionName":"Document","ranges":[{"startOffset":931045,"endOffset":932597,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":932780,"endOffset":933554,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":933600,"endOffset":933701,"count":0}],"isBlockCoverage":false},{"functionName":"addIn","ranges":[{"startOffset":933747,"endOffset":933864,"count":0}],"isBlockCoverage":false},{"functionName":"createAlias","ranges":[{"startOffset":934323,"endOffset":934673,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":934678,"endOffset":936131,"count":0}],"isBlockCoverage":false},{"functionName":"createPair","ranges":[{"startOffset":936299,"endOffset":936486,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":936607,"endOffset":936710,"count":0}],"isBlockCoverage":false},{"functionName":"deleteIn","ranges":[{"startOffset":936831,"endOffset":937211,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":937447,"endOffset":937594,"count":0}],"isBlockCoverage":false},{"functionName":"getIn","ranges":[{"startOffset":937831,"endOffset":938146,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":938234,"endOffset":938329,"count":0}],"isBlockCoverage":false},{"functionName":"hasIn","ranges":[{"startOffset":938408,"endOffset":938588,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":938734,"endOffset":939065,"count":0}],"isBlockCoverage":false},{"functionName":"setIn","ranges":[{"startOffset":939211,"endOffset":939723,"count":0}],"isBlockCoverage":false},{"functionName":"setSchema","ranges":[{"startOffset":940047,"endOffset":941581,"count":0}],"isBlockCoverage":false},{"functionName":"toJS","ranges":[{"startOffset":941636,"endOffset":942314,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":942501,"endOffset":942612,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":942667,"endOffset":943123,"count":0}],"isBlockCoverage":false},{"functionName":"assertCollection","ranges":[{"startOffset":943126,"endOffset":943292,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLError","ranges":[{"startOffset":943330,"endOffset":943500,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLParseError","ranges":[{"startOffset":943548,"endOffset":943640,"count":0}],"isBlockCoverage":false},{"functionName":"YAMLWarning","ranges":[{"startOffset":943685,"endOffset":943774,"count":0}],"isBlockCoverage":false},{"functionName":"prettifyError","ranges":[{"startOffset":943799,"endOffset":945248,"count":0}],"isBlockCoverage":false},{"functionName":"resolveProps","ranges":[{"startOffset":945251,"endOffset":950790,"count":0}],"isBlockCoverage":false},{"functionName":"containsNewline","ranges":[{"startOffset":950792,"endOffset":951813,"count":0}],"isBlockCoverage":false},{"functionName":"flowIndentCheck","ranges":[{"startOffset":951815,"endOffset":952216,"count":0}],"isBlockCoverage":false},{"functionName":"mapIncludes","ranges":[{"startOffset":952218,"endOffset":952677,"count":0}],"isBlockCoverage":false},{"functionName":"resolveBlockMap","ranges":[{"startOffset":952750,"endOffset":957192,"count":0}],"isBlockCoverage":false},{"functionName":"resolveBlockSeq","ranges":[{"startOffset":957194,"endOffset":958704,"count":0}],"isBlockCoverage":false},{"functionName":"resolveEnd","ranges":[{"startOffset":958706,"endOffset":959920,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock$1","ranges":[{"startOffset":960018,"endOffset":960096,"count":0}],"isBlockCoverage":false},{"functionName":"resolveFlowCollection","ranges":[{"startOffset":960098,"endOffset":968048,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCollection","ranges":[{"startOffset":968050,"endOffset":968733,"count":0}],"isBlockCoverage":false},{"functionName":"composeCollection","ranges":[{"startOffset":968734,"endOffset":971152,"count":0}],"isBlockCoverage":false},{"functionName":"resolveBlockScalar","ranges":[{"startOffset":971154,"endOffset":975868,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockScalarHeader","ranges":[{"startOffset":975869,"endOffset":978093,"count":0}],"isBlockCoverage":false},{"functionName":"splitLines","ranges":[{"startOffset":978157,"endOffset":978522,"count":0}],"isBlockCoverage":false},{"functionName":"resolveFlowScalar","ranges":[{"startOffset":978524,"endOffset":979799,"count":0}],"isBlockCoverage":false},{"functionName":"plainValue","ranges":[{"startOffset":979800,"endOffset":980591,"count":0}],"isBlockCoverage":false},{"functionName":"singleQuotedValue","ranges":[{"startOffset":980592,"endOffset":980842,"count":0}],"isBlockCoverage":false},{"functionName":"foldLines","ranges":[{"startOffset":980843,"endOffset":982034,"count":0}],"isBlockCoverage":false},{"functionName":"doubleQuotedValue","ranges":[{"startOffset":982035,"endOffset":984180,"count":0}],"isBlockCoverage":false},{"functionName":"foldNewline","ranges":[{"startOffset":984303,"endOffset":984715,"count":0}],"isBlockCoverage":false},{"functionName":"parseCharCode","ranges":[{"startOffset":985261,"endOffset":985705,"count":0}],"isBlockCoverage":false},{"functionName":"composeScalar","ranges":[{"startOffset":985707,"endOffset":987020,"count":0}],"isBlockCoverage":false},{"functionName":"findScalarTagByName","ranges":[{"startOffset":987021,"endOffset":987973,"count":0}],"isBlockCoverage":false},{"functionName":"findScalarTagByTest","ranges":[{"startOffset":987974,"endOffset":988611,"count":0}],"isBlockCoverage":false},{"functionName":"emptyScalarPosition","ranges":[{"startOffset":988613,"endOffset":989416,"count":0}],"isBlockCoverage":false},{"functionName":"composeNode","ranges":[{"startOffset":989464,"endOffset":991270,"count":0}],"isBlockCoverage":false},{"functionName":"composeEmptyNode","ranges":[{"startOffset":991271,"endOffset":991926,"count":0}],"isBlockCoverage":false},{"functionName":"composeAlias","ranges":[{"startOffset":991927,"endOffset":992520,"count":0}],"isBlockCoverage":false},{"functionName":"composeDoc","ranges":[{"startOffset":992522,"endOffset":993817,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorPos","ranges":[{"startOffset":993819,"endOffset":994114,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrelude","ranges":[{"startOffset":994115,"endOffset":995049,"count":0}],"isBlockCoverage":false},{"functionName":"Composer","ranges":[{"startOffset":995326,"endOffset":996000,"count":0}],"isBlockCoverage":false},{"functionName":"decorate","ranges":[{"startOffset":996005,"endOffset":997311,"count":0}],"isBlockCoverage":false},{"functionName":"streamInfo","ranges":[{"startOffset":997443,"endOffset":997658,"count":0}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":998030,"endOffset":998207,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":998262,"endOffset":1000879,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1001274,"endOffset":1001882,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsScalar","ranges":[{"startOffset":1001886,"endOffset":1002651,"count":0}],"isBlockCoverage":false},{"functionName":"createScalarToken","ranges":[{"startOffset":1003671,"endOffset":1004975,"count":0}],"isBlockCoverage":false},{"functionName":"setScalarValue","ranges":[{"startOffset":1006198,"endOffset":1007788,"count":0}],"isBlockCoverage":false},{"functionName":"setBlockScalarValue","ranges":[{"startOffset":1007789,"endOffset":1008820,"count":0}],"isBlockCoverage":false},{"functionName":"addEndtoBlockProps","ranges":[{"startOffset":1008871,"endOffset":1009246,"count":0}],"isBlockCoverage":false},{"functionName":"setFlowScalarValue","ranges":[{"startOffset":1009247,"endOffset":1010797,"count":0}],"isBlockCoverage":false},{"functionName":"stringify$1","ranges":[{"startOffset":1011004,"endOffset":1011069,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyToken","ranges":[{"startOffset":1011071,"endOffset":1012234,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyItem","ranges":[{"startOffset":1012235,"endOffset":1012552,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":1014229,"endOffset":1014410,"count":0}],"isBlockCoverage":false},{"functionName":"visit.itemAtPath","ranges":[{"startOffset":1014842,"endOffset":1015106,"count":0}],"isBlockCoverage":false},{"functionName":"visit.parentCollection","ranges":[{"startOffset":1015333,"endOffset":1015596,"count":0}],"isBlockCoverage":false},{"functionName":"_visit","ranges":[{"startOffset":1015598,"endOffset":1016492,"count":0}],"isBlockCoverage":false},{"functionName":"isCollection","ranges":[{"startOffset":1016856,"endOffset":1016894,"count":0}],"isBlockCoverage":false},{"functionName":"isScalar","ranges":[{"startOffset":1016987,"endOffset":1017177,"count":0}],"isBlockCoverage":false},{"functionName":"prettyToken","ranges":[{"startOffset":1017261,"endOffset":1017583,"count":0}],"isBlockCoverage":false},{"functionName":"tokenType","ranges":[{"startOffset":1017665,"endOffset":1019111,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":1020838,"endOffset":1021053,"count":0}],"isBlockCoverage":false},{"functionName":"isNotAnchorChar","ranges":[{"startOffset":1021339,"endOffset":1021380,"count":0}],"isBlockCoverage":false},{"functionName":"Lexer","ranges":[{"startOffset":1022038,"endOffset":1023598,"count":0}],"isBlockCoverage":false},{"functionName":"lex","ranges":[{"startOffset":1023817,"endOffset":1024280,"count":0}],"isBlockCoverage":false},{"functionName":"atLineEnd","ranges":[{"startOffset":1024285,"endOffset":1024606,"count":0}],"isBlockCoverage":false},{"functionName":"charAt","ranges":[{"startOffset":1024611,"endOffset":1024670,"count":0}],"isBlockCoverage":false},{"functionName":"continueScalar","ranges":[{"startOffset":1024675,"endOffset":1025495,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":1025500,"endOffset":1025939,"count":0}],"isBlockCoverage":false},{"functionName":"hasChars","ranges":[{"startOffset":1025944,"endOffset":1026014,"count":0}],"isBlockCoverage":false},{"functionName":"setNext","ranges":[{"startOffset":1026019,"endOffset":1026198,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1026203,"endOffset":1026266,"count":0}],"isBlockCoverage":false},{"functionName":"parseNext","ranges":[{"startOffset":1026271,"endOffset":1027001,"count":0}],"isBlockCoverage":false},{"functionName":"parseStream","ranges":[{"startOffset":1027006,"endOffset":1028400,"count":0}],"isBlockCoverage":false},{"functionName":"parseLineStart","ranges":[{"startOffset":1028405,"endOffset":1029220,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockStart","ranges":[{"startOffset":1029225,"endOffset":1029700,"count":0}],"isBlockCoverage":false},{"functionName":"parseDocument","ranges":[{"startOffset":1029705,"endOffset":1031118,"count":0}],"isBlockCoverage":false},{"functionName":"parseFlowCollection","ranges":[{"startOffset":1031123,"endOffset":1034022,"count":0}],"isBlockCoverage":false},{"functionName":"parseQuotedScalar","ranges":[{"startOffset":1034027,"endOffset":1035454,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockScalarHeader","ranges":[{"startOffset":1035459,"endOffset":1035968,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockScalar","ranges":[{"startOffset":1035973,"endOffset":1038652,"count":0}],"isBlockCoverage":false},{"functionName":"parsePlainScalar","ranges":[{"startOffset":1038657,"endOffset":1040174,"count":0}],"isBlockCoverage":false},{"functionName":"pushCount","ranges":[{"startOffset":1040179,"endOffset":1040349,"count":0}],"isBlockCoverage":false},{"functionName":"pushToIndex","ranges":[{"startOffset":1040354,"endOffset":1040619,"count":0}],"isBlockCoverage":false},{"functionName":"pushIndicators","ranges":[{"startOffset":1040624,"endOffset":1041780,"count":0}],"isBlockCoverage":false},{"functionName":"pushTag","ranges":[{"startOffset":1041785,"endOffset":1042620,"count":0}],"isBlockCoverage":false},{"functionName":"pushNewline","ranges":[{"startOffset":1042625,"endOffset":1042896,"count":0}],"isBlockCoverage":false},{"functionName":"pushSpaces","ranges":[{"startOffset":1042901,"endOffset":1043243,"count":0}],"isBlockCoverage":false},{"functionName":"pushUntil","ranges":[{"startOffset":1043248,"endOffset":1043442,"count":0}],"isBlockCoverage":false},{"functionName":"LineCounter","ranges":[{"startOffset":1043645,"endOffset":1044837,"count":0}],"isBlockCoverage":false},{"functionName":"includesToken","ranges":[{"startOffset":1044841,"endOffset":1044999,"count":0}],"isBlockCoverage":false},{"functionName":"findNonEmptyIndex","ranges":[{"startOffset":1045000,"endOffset":1045295,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowToken","ranges":[{"startOffset":1045296,"endOffset":1045579,"count":0}],"isBlockCoverage":false},{"functionName":"getPrevProps","ranges":[{"startOffset":1045580,"endOffset":1046026,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstKeyStartProps","ranges":[{"startOffset":1046063,"endOffset":1046481,"count":0}],"isBlockCoverage":false},{"functionName":"fixFlowSeqItems","ranges":[{"startOffset":1046482,"endOffset":1047268,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":1048023,"endOffset":1048854,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1049200,"endOffset":1049481,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":1049566,"endOffset":1051192,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1051269,"endOffset":1051352,"count":0}],"isBlockCoverage":false},{"functionName":"get sourceToken","ranges":[{"startOffset":1051357,"endOffset":1051560,"count":0}],"isBlockCoverage":false},{"functionName":"step","ranges":[{"startOffset":1051565,"endOffset":1052811,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1052816,"endOffset":1052881,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":1052886,"endOffset":1056550,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":1056555,"endOffset":1057523,"count":0}],"isBlockCoverage":false},{"functionName":"document","ranges":[{"startOffset":1057528,"endOffset":1058499,"count":0}],"isBlockCoverage":false},{"functionName":"scalar","ranges":[{"startOffset":1058504,"endOffset":1059276,"count":0}],"isBlockCoverage":false},{"functionName":"blockScalar","ranges":[{"startOffset":1059281,"endOffset":1060222,"count":0}],"isBlockCoverage":false},{"functionName":"blockMap","ranges":[{"startOffset":1060227,"endOffset":1069342,"count":0}],"isBlockCoverage":false},{"functionName":"blockSequence","ranges":[{"startOffset":1069347,"endOffset":1071584,"count":0}],"isBlockCoverage":false},{"functionName":"flowCollection","ranges":[{"startOffset":1071589,"endOffset":1075268,"count":0}],"isBlockCoverage":false},{"functionName":"flowScalar","ranges":[{"startOffset":1075273,"endOffset":1075684,"count":0}],"isBlockCoverage":false},{"functionName":"startBlockValue","ranges":[{"startOffset":1075689,"endOffset":1077764,"count":0}],"isBlockCoverage":false},{"functionName":"atIndentedComment","ranges":[{"startOffset":1077769,"endOffset":1078013,"count":0}],"isBlockCoverage":false},{"functionName":"documentEnd","ranges":[{"startOffset":1078018,"endOffset":1078317,"count":0}],"isBlockCoverage":false},{"functionName":"lineEnd","ranges":[{"startOffset":1078322,"endOffset":1079121,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptions","ranges":[{"startOffset":1079125,"endOffset":1079350,"count":0}],"isBlockCoverage":false},{"functionName":"parseAllDocuments","ranges":[{"startOffset":1079702,"endOffset":1080323,"count":0}],"isBlockCoverage":false},{"functionName":"parseDocument","ranges":[{"startOffset":1080381,"endOffset":1081254,"count":0}],"isBlockCoverage":false},{"functionName":"parse$a","ranges":[{"startOffset":1081255,"endOffset":1081899,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1081900,"endOffset":1082633,"count":0}],"isBlockCoverage":false},{"functionName":"req$2","ranges":[{"startOffset":1084223,"endOffset":1084374,"count":0}],"isBlockCoverage":false},{"functionName":"options","ranges":[{"startOffset":1084585,"endOffset":1085411,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":1085670,"endOffset":1086017,"count":0}],"isBlockCoverage":false},{"functionName":"plugins","ranges":[{"startOffset":1086192,"endOffset":1087253,"count":0}],"isBlockCoverage":false},{"functionName":"interopRequireDefault","ranges":[{"startOffset":1087519,"endOffset":1087574,"count":0}],"isBlockCoverage":false},{"functionName":"processResult","ranges":[{"startOffset":1087772,"endOffset":1088182,"count":0}],"isBlockCoverage":false},{"functionName":"createContext","ranges":[{"startOffset":1088324,"endOffset":1088767,"count":1},{"startOffset":1088704,"endOffset":1088751,"count":0}],"isBlockCoverage":true},{"functionName":"importDefault","ranges":[{"startOffset":1088792,"endOffset":1088904,"count":0}],"isBlockCoverage":false},{"functionName":"addTypeScriptLoader","ranges":[{"startOffset":1088935,"endOffset":1089841,"count":1}],"isBlockCoverage":true},{"functionName":".yaml","ranges":[{"startOffset":1089600,"endOffset":1089642,"count":0}],"isBlockCoverage":false},{"functionName":".yml","ranges":[{"startOffset":1089658,"endOffset":1089700,"count":0}],"isBlockCoverage":false},{"functionName":"withTypeScriptLoader","ranges":[{"startOffset":1089873,"endOffset":1090683,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1089896,"endOffset":1090681,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1089980,"endOffset":1090675,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1090926,"endOffset":1091364,"count":1},{"startOffset":1091115,"endOffset":1091130,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1091209,"endOffset":1091361,"count":1},{"startOffset":1091314,"endOffset":1091360,"count":0}],"isBlockCoverage":true},{"functionName":"jsTokens_1","ranges":[{"startOffset":1093873,"endOffset":1104308,"count":0}],"isBlockCoverage":false},{"functionName":"stripLiteralJsTokens","ranges":[{"startOffset":1104377,"endOffset":1106197,"count":0}],"isBlockCoverage":false},{"functionName":"stripLiteral","ranges":[{"startOffset":1106199,"endOffset":1106283,"count":0}],"isBlockCoverage":false},{"functionName":"stripLiteralDetailed","ranges":[{"startOffset":1106284,"endOffset":1106369,"count":0}],"isBlockCoverage":false},{"functionName":"parse$9","ranges":[{"startOffset":1108627,"endOffset":1109420,"count":1},{"startOffset":1108873,"endOffset":1109404,"count":9},{"startOffset":1108977,"endOffset":1108982,"count":0},{"startOffset":1109263,"endOffset":1109356,"count":0}],"isBlockCoverage":true},{"functionName":"_parseVault","ranges":[{"startOffset":1109422,"endOffset":1110569,"count":0}],"isBlockCoverage":false},{"functionName":"_log","ranges":[{"startOffset":1110571,"endOffset":1110653,"count":0}],"isBlockCoverage":false},{"functionName":"_warn","ranges":[{"startOffset":1110655,"endOffset":1110738,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":1110740,"endOffset":1110825,"count":0}],"isBlockCoverage":false},{"functionName":"_dotenvKey","ranges":[{"startOffset":1110827,"endOffset":1111251,"count":0}],"isBlockCoverage":false},{"functionName":"_instructions","ranges":[{"startOffset":1111253,"endOffset":1112546,"count":0}],"isBlockCoverage":false},{"functionName":"_vaultPath","ranges":[{"startOffset":1112548,"endOffset":1113205,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveHome","ranges":[{"startOffset":1113207,"endOffset":1113328,"count":0}],"isBlockCoverage":false},{"functionName":"_configVault","ranges":[{"startOffset":1113330,"endOffset":1113664,"count":0}],"isBlockCoverage":false},{"functionName":"configDotenv","ranges":[{"startOffset":1113666,"endOffset":1115285,"count":0}],"isBlockCoverage":false},{"functionName":"config","ranges":[{"startOffset":1115327,"endOffset":1115838,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":1115840,"endOffset":1116927,"count":0}],"isBlockCoverage":false},{"functionName":"populate","ranges":[{"startOffset":1116972,"endOffset":1117832,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveEscapeSequences","ranges":[{"startOffset":1118901,"endOffset":1118982,"count":9}],"isBlockCoverage":true},{"functionName":"interpolate","ranges":[{"startOffset":1118984,"endOffset":1119979,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1119085,"endOffset":1119976,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":1119981,"endOffset":1121023,"count":1},{"startOffset":1120166,"endOffset":1120896,"count":9},{"startOffset":1120308,"endOffset":1120690,"count":0},{"startOffset":1120941,"endOffset":1121003,"count":9}],"isBlockCoverage":true},{"functionName":"getEnvFilesForMode","ranges":[{"startOffset":1121049,"endOffset":1121337,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1121281,"endOffset":1121333,"count":4}],"isBlockCoverage":true},{"functionName":"loadEnv","ranges":[{"startOffset":1121338,"endOffset":1122615,"count":1},{"startOffset":1121415,"endOffset":1121555,"count":0},{"startOffset":1121898,"endOffset":1121942,"count":0},{"startOffset":1121944,"endOffset":1122003,"count":0},{"startOffset":1122025,"endOffset":1122058,"count":0},{"startOffset":1122060,"endOffset":1122107,"count":0},{"startOffset":1122134,"endOffset":1122172,"count":0},{"startOffset":1122174,"endOffset":1122231,"count":0},{"startOffset":1122362,"endOffset":1122458,"count":9},{"startOffset":1122423,"endOffset":1122454,"count":0},{"startOffset":1122492,"endOffset":1122599,"count":108},{"startOffset":1122553,"endOffset":1122595,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1121717,"endOffset":1121869,"count":4},{"startOffset":1121765,"endOffset":1121773,"count":1},{"startOffset":1121777,"endOffset":1121787,"count":3},{"startOffset":1121787,"endOffset":1121868,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1122386,"endOffset":1122420,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1122516,"endOffset":1122550,"count":108}],"isBlockCoverage":true},{"functionName":"resolveEnvPrefix","ranges":[{"startOffset":1122616,"endOffset":1122897,"count":2},{"startOffset":1122735,"endOffset":1122875,"count":0}],"isBlockCoverage":true},{"functionName":"modulePreloadPolyfillPlugin","ranges":[{"startOffset":1123042,"endOffset":1123673,"count":1},{"startOffset":1123131,"endOffset":1123150,"count":0}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":1123230,"endOffset":1123351,"count":1497},{"startOffset":1123288,"endOffset":1123345,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1123357,"endOffset":1123666,"count":95},{"startOffset":1123418,"endOffset":1123660,"count":0}],"isBlockCoverage":true},{"functionName":"polyfill","ranges":[{"startOffset":1123674,"endOffset":1124929,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1125707,"endOffset":1125722,"count":2}],"isBlockCoverage":true},{"functionName":"isHTMLProxy","ranges":[{"startOffset":1125764,"endOffset":1125794,"count":577}],"isBlockCoverage":true},{"functionName":"isHTMLRequest","ranges":[{"startOffset":1125818,"endOffset":1125855,"count":95}],"isBlockCoverage":true},{"functionName":"htmlInlineProxyPlugin","ranges":[{"startOffset":1125960,"endOffset":1126660,"count":1}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":1126107,"endOffset":1126184,"count":577},{"startOffset":1126150,"endOffset":1126178,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1126190,"endOffset":1126653,"count":95},{"startOffset":1126272,"endOffset":1126647,"count":0}],"isBlockCoverage":true},{"functionName":"addToHTMLProxyCache","ranges":[{"startOffset":1126661,"endOffset":1126981,"count":0}],"isBlockCoverage":false},{"functionName":"addToHTMLProxyTransformResult","ranges":[{"startOffset":1126982,"endOffset":1127071,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsElement","ranges":[{"startOffset":1127453,"endOffset":1127520,"count":0}],"isBlockCoverage":false},{"functionName":"traverseNodes","ranges":[{"startOffset":1127521,"endOffset":1127833,"count":0}],"isBlockCoverage":false},{"functionName":"traverseHtml","ranges":[{"startOffset":1127834,"endOffset":1128180,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfo","ranges":[{"startOffset":1128181,"endOffset":1128727,"count":0}],"isBlockCoverage":false},{"functionName":"overwriteAttrValue","ranges":[{"startOffset":1128764,"endOffset":1129407,"count":0}],"isBlockCoverage":false},{"functionName":"formatParseError","ranges":[{"startOffset":1129408,"endOffset":1129810,"count":0}],"isBlockCoverage":false},{"functionName":"handleParseError","ranges":[{"startOffset":1129811,"endOffset":1130363,"count":0}],"isBlockCoverage":false},{"functionName":"buildHtmlPlugin","ranges":[{"startOffset":1130364,"endOffset":1149642,"count":0}],"isBlockCoverage":false},{"functionName":"parseRelAttr","ranges":[{"startOffset":1149643,"endOffset":1149732,"count":0}],"isBlockCoverage":false},{"functionName":"findNeedTransformStyleAttribute","ranges":[{"startOffset":1149733,"endOffset":1150135,"count":0}],"isBlockCoverage":false},{"functionName":"extractImportExpressionFromClassicScript","ranges":[{"startOffset":1150136,"endOffset":1150730,"count":0}],"isBlockCoverage":false},{"functionName":"preImportMapHook","ranges":[{"startOffset":1150731,"endOffset":1151402,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1150776,"endOffset":1151399,"count":0}],"isBlockCoverage":false},{"functionName":"postImportMapHook","ranges":[{"startOffset":1151403,"endOffset":1151777,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1151443,"endOffset":1151774,"count":0}],"isBlockCoverage":false},{"functionName":"injectCspNonceMetaTagHook","ranges":[{"startOffset":1151778,"endOffset":1152209,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1151832,"endOffset":1152206,"count":0}],"isBlockCoverage":false},{"functionName":"htmlEnvHook","ranges":[{"startOffset":1152210,"endOffset":1153432,"count":1},{"startOffset":1152411,"endOffset":1153431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1152820,"endOffset":1153429,"count":0}],"isBlockCoverage":false},{"functionName":"injectNonceAttributeTagHook","ranges":[{"startOffset":1153433,"endOffset":1154450,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1153583,"endOffset":1154447,"count":0}],"isBlockCoverage":false},{"functionName":"resolveHtmlTransforms","ranges":[{"startOffset":1154451,"endOffset":1155614,"count":1},{"startOffset":1154606,"endOffset":1155567,"count":32},{"startOffset":1154676,"endOffset":1155563,"count":0}],"isBlockCoverage":true},{"functionName":"headTagInsertCheck","ranges":[{"startOffset":1155766,"endOffset":1156344,"count":0}],"isBlockCoverage":false},{"functionName":"applyHtmlTransforms","ranges":[{"startOffset":1156345,"endOffset":1157601,"count":0}],"isBlockCoverage":false},{"functionName":"isEntirelyImport","ranges":[{"startOffset":1157716,"endOffset":1157828,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseInHTML","ranges":[{"startOffset":1157829,"endOffset":1158042,"count":0}],"isBlockCoverage":false},{"functionName":"injectToHead","ranges":[{"startOffset":1158368,"endOffset":1159077,"count":0}],"isBlockCoverage":false},{"functionName":"injectToBody","ranges":[{"startOffset":1159078,"endOffset":1159931,"count":0}],"isBlockCoverage":false},{"functionName":"prependInjectFallback","ranges":[{"startOffset":1159932,"endOffset":1160259,"count":0}],"isBlockCoverage":false},{"functionName":"serializeTag","ranges":[{"startOffset":1160329,"endOffset":1160608,"count":0}],"isBlockCoverage":false},{"functionName":"serializeTags","ranges":[{"startOffset":1160609,"endOffset":1160839,"count":0}],"isBlockCoverage":false},{"functionName":"serializeAttrs","ranges":[{"startOffset":1160840,"endOffset":1161095,"count":0}],"isBlockCoverage":false},{"functionName":"incrementIndent","ranges":[{"startOffset":1161096,"endOffset":1161192,"count":0}],"isBlockCoverage":false},{"functionName":"getAttrKey","ranges":[{"startOffset":1161193,"endOffset":1161299,"count":0}],"isBlockCoverage":false},{"functionName":"getAttrSourceCodeLocation","ranges":[{"startOffset":1161300,"endOffset":1161402,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCSSOptions","ranges":[{"startOffset":1161439,"endOffset":1161768,"count":1},{"startOffset":1161524,"endOffset":1161719,"count":0}],"isBlockCoverage":true},{"functionName":"isCSSRequest","ranges":[{"startOffset":1162308,"endOffset":1162347,"count":566}],"isBlockCoverage":true},{"functionName":"isModuleCSSRequest","ranges":[{"startOffset":1162376,"endOffset":1162414,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectCSSRequest","ranges":[{"startOffset":1162443,"endOffset":1162515,"count":189},{"startOffset":1162483,"endOffset":1162515,"count":0}],"isBlockCoverage":true},{"functionName":"isDirectRequest","ranges":[{"startOffset":1162541,"endOffset":1162583,"count":0}],"isBlockCoverage":false},{"functionName":"encodePublicUrlsInCSS","ranges":[{"startOffset":1162762,"endOffset":1162841,"count":0}],"isBlockCoverage":false},{"functionName":"cssPlugin","ranges":[{"startOffset":1162897,"endOffset":1166131,"count":1}],"isBlockCoverage":true},{"functionName":"buildStart","ranges":[{"startOffset":1163271,"endOffset":1163709,"count":1}],"isBlockCoverage":true},{"functionName":"buildEnd","ranges":[{"startOffset":1163715,"endOffset":1163778,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1163784,"endOffset":1164331,"count":95},{"startOffset":1163837,"endOffset":1164325,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1164337,"endOffset":1166124,"count":95},{"startOffset":1164392,"endOffset":1164419,"count":0},{"startOffset":1164420,"endOffset":1164448,"count":0},{"startOffset":1164475,"endOffset":1166123,"count":0}],"isBlockCoverage":true},{"functionName":"urlReplacer","ranges":[{"startOffset":1164502,"endOffset":1165665,"count":0}],"isBlockCoverage":false},{"functionName":"cssPostPlugin","ranges":[{"startOffset":1166132,"endOffset":1181608,"count":1},{"startOffset":1166507,"endOffset":1166531,"count":0},{"startOffset":1166554,"endOffset":1166570,"count":0}],"isBlockCoverage":true},{"functionName":"getCssAssetDirname","ranges":[{"startOffset":1166601,"endOffset":1167139,"count":0}],"isBlockCoverage":false},{"functionName":"renderStart","ranges":[{"startOffset":1167183,"endOffset":1167381,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":1167387,"endOffset":1170457,"count":95},{"startOffset":1167451,"endOffset":1167478,"count":0},{"startOffset":1167479,"endOffset":1167507,"count":0},{"startOffset":1167534,"endOffset":1167693,"count":0},{"startOffset":1167695,"endOffset":1168268,"count":0},{"startOffset":1168269,"endOffset":1168333,"count":0},{"startOffset":1168373,"endOffset":1170417,"count":0},{"startOffset":1170418,"endOffset":1170425,"count":0},{"startOffset":1170426,"endOffset":1170442,"count":0}],"isBlockCoverage":true},{"functionName":"getContentWithSourcemap","ranges":[{"startOffset":1168415,"endOffset":1168786,"count":0}],"isBlockCoverage":false},{"functionName":"renderChunk","ranges":[{"startOffset":1170463,"endOffset":1178070,"count":0}],"isBlockCoverage":false},{"functionName":"augmentChunkHash","ranges":[{"startOffset":1178076,"endOffset":1178300,"count":0}],"isBlockCoverage":false},{"functionName":"generateBundle","ranges":[{"startOffset":1178306,"endOffset":1181601,"count":0}],"isBlockCoverage":false},{"functionName":"cssAnalysisPlugin","ranges":[{"startOffset":1181609,"endOffset":1183175,"count":1}],"isBlockCoverage":true},{"functionName":"configureServer","ranges":[{"startOffset":1181706,"endOffset":1181762,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1181768,"endOffset":1183168,"count":95},{"startOffset":1181830,"endOffset":1181857,"count":0},{"startOffset":1181858,"endOffset":1181886,"count":0},{"startOffset":1181913,"endOffset":1181944,"count":0},{"startOffset":1182071,"endOffset":1183162,"count":0}],"isBlockCoverage":true},{"functionName":"getEmptyChunkReplacer","ranges":[{"startOffset":1183176,"endOffset":1183817,"count":0}],"isBlockCoverage":false},{"functionName":"createCSSResolvers","ranges":[{"startOffset":1183818,"endOffset":1185001,"count":0}],"isBlockCoverage":false},{"functionName":"getCssResolversKeys","ranges":[{"startOffset":1185002,"endOffset":1185078,"count":0}],"isBlockCoverage":false},{"functionName":"compileCSSPreprocessors","ranges":[{"startOffset":1185079,"endOffset":1186504,"count":0}],"isBlockCoverage":false},{"functionName":"getAtImportResolvers","ranges":[{"startOffset":1186570,"endOffset":1186850,"count":0}],"isBlockCoverage":false},{"functionName":"compileCSS","ranges":[{"startOffset":1186851,"endOffset":1193234,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedImport","ranges":[{"startOffset":1193235,"endOffset":1193449,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1193293,"endOffset":1193446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1193497,"endOffset":1193565,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1193616,"endOffset":1193684,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1193728,"endOffset":1193751,"count":0}],"isBlockCoverage":false},{"functionName":"preprocessCSS","ranges":[{"startOffset":1193870,"endOffset":1194245,"count":0}],"isBlockCoverage":false},{"functionName":"formatPostcssSourceMap","ranges":[{"startOffset":1194246,"endOffset":1194822,"count":0}],"isBlockCoverage":false},{"functionName":"combineSourcemapsIfExists","ranges":[{"startOffset":1194823,"endOffset":1195061,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeCss","ranges":[{"startOffset":1195162,"endOffset":1195441,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePostcssConfig","ranges":[{"startOffset":1195442,"endOffset":1196603,"count":1},{"startOffset":1195560,"endOffset":1195590,"count":0},{"startOffset":1195669,"endOffset":1195824,"count":0},{"startOffset":1195889,"endOffset":1195904,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1195965,"endOffset":1196448,"count":1},{"startOffset":1196032,"endOffset":1196423,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1196467,"endOffset":1196536,"count":1}],"isBlockCoverage":true},{"functionName":"UrlRewritePostcssPlugin","ranges":[{"startOffset":1196975,"endOffset":1198285,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteCssUrls","ranges":[{"startOffset":1198327,"endOffset":1198533,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteCssDataUris","ranges":[{"startOffset":1198534,"endOffset":1198760,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteImportCss","ranges":[{"startOffset":1198761,"endOffset":1198971,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteCssImageSet","ranges":[{"startOffset":1199041,"endOffset":1199512,"count":0}],"isBlockCoverage":false},{"functionName":"skipUrlReplacer","ranges":[{"startOffset":1199513,"endOffset":1199654,"count":0}],"isBlockCoverage":false},{"functionName":"doUrlReplace","ranges":[{"startOffset":1199655,"endOffset":1200266,"count":0}],"isBlockCoverage":false},{"functionName":"doImportCSSReplace","ranges":[{"startOffset":1200267,"endOffset":1200628,"count":0}],"isBlockCoverage":false},{"functionName":"minifyCSS","ranges":[{"startOffset":1200629,"endOffset":1201978,"count":0}],"isBlockCoverage":false},{"functionName":"resolveMinifyCssEsbuildOptions","ranges":[{"startOffset":1201979,"endOffset":1202602,"count":0}],"isBlockCoverage":false},{"functionName":"hoistAtRules","ranges":[{"startOffset":1202804,"endOffset":1203370,"count":0}],"isBlockCoverage":false},{"functionName":"loadPreprocessorPath","ranges":[{"startOffset":1203406,"endOffset":1204147,"count":0}],"isBlockCoverage":false},{"functionName":"loadSassPackage","ranges":[{"startOffset":1204148,"endOffset":1204487,"count":0}],"isBlockCoverage":false},{"functionName":"loadSss","ranges":[{"startOffset":1204503,"endOffset":1204708,"count":0}],"isBlockCoverage":false},{"functionName":"cleanScssBugUrl","ranges":[{"startOffset":1204709,"endOffset":1205034,"count":0}],"isBlockCoverage":false},{"functionName":"fixScssBugImportValue","ranges":[{"startOffset":1205035,"endOffset":1205372,"count":0}],"isBlockCoverage":false},{"functionName":"makeScssWorker","ranges":[{"startOffset":1205396,"endOffset":1207568,"count":0}],"isBlockCoverage":false},{"functionName":"makeModernScssWorker","ranges":[{"startOffset":1207599,"endOffset":1210223,"count":0}],"isBlockCoverage":false},{"functionName":"makeModernCompilerScssWorker","ranges":[{"startOffset":1210262,"endOffset":1212261,"count":0}],"isBlockCoverage":false},{"functionName":"scssProcessor","ranges":[{"startOffset":1212285,"endOffset":1214160,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1212365,"endOffset":1212460,"count":1},{"startOffset":1212422,"endOffset":1212454,"count":0}],"isBlockCoverage":true},{"functionName":"process","ranges":[{"startOffset":1212466,"endOffset":1214153,"count":0}],"isBlockCoverage":false},{"functionName":"rebaseUrls","ranges":[{"startOffset":1214162,"endOffset":1215491,"count":0}],"isBlockCoverage":false},{"functionName":"makeLessWorker","ranges":[{"startOffset":1215515,"endOffset":1218078,"count":0}],"isBlockCoverage":false},{"functionName":"lessProcessor","ranges":[{"startOffset":1218102,"endOffset":1219701,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1218182,"endOffset":1218277,"count":1},{"startOffset":1218239,"endOffset":1218271,"count":0}],"isBlockCoverage":true},{"functionName":"process","ranges":[{"startOffset":1218283,"endOffset":1219694,"count":0}],"isBlockCoverage":false},{"functionName":"makeStylWorker","ranges":[{"startOffset":1219726,"endOffset":1220692,"count":0}],"isBlockCoverage":false},{"functionName":"stylProcessor","ranges":[{"startOffset":1220716,"endOffset":1222200,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1220796,"endOffset":1220891,"count":1},{"startOffset":1220853,"endOffset":1220885,"count":0}],"isBlockCoverage":true},{"functionName":"process","ranges":[{"startOffset":1220897,"endOffset":1222193,"count":0}],"isBlockCoverage":false},{"functionName":"formatStylusSourceMap","ranges":[{"startOffset":1222202,"endOffset":1222528,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":1222529,"endOffset":1223240,"count":0}],"isBlockCoverage":false},{"functionName":"createPreprocessorWorkerController","ranges":[{"startOffset":1223284,"endOffset":1223941,"count":1}],"isBlockCoverage":true},{"functionName":"sassProcess","ranges":[{"startOffset":1223450,"endOffset":1223631,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1223649,"endOffset":1223714,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeMaxWorkers","ranges":[{"startOffset":1223971,"endOffset":1224088,"count":1},{"startOffset":1224025,"endOffset":1224087,"count":0}],"isBlockCoverage":true},{"functionName":"isPreProcessor","ranges":[{"startOffset":1224252,"endOffset":1224329,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1224376,"endOffset":1224404,"count":0}],"isBlockCoverage":false},{"functionName":"compileLightningCSS","ranges":[{"startOffset":1224407,"endOffset":1227170,"count":0}],"isBlockCoverage":false},{"functionName":"convertTargets","ranges":[{"startOffset":1228379,"endOffset":1229535,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":1229779,"endOffset":1229861,"count":0}],"isBlockCoverage":false},{"functionName":"encodeQueryValue","ranges":[{"startOffset":1229862,"endOffset":1230160,"count":0}],"isBlockCoverage":false},{"functionName":"encodeQueryKey","ranges":[{"startOffset":1230161,"endOffset":1230252,"count":0}],"isBlockCoverage":false},{"functionName":"encodeQueryItem","ranges":[{"startOffset":1230253,"endOffset":1230635,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyQuery","ranges":[{"startOffset":1230636,"endOffset":1230801,"count":0}],"isBlockCoverage":false},{"functionName":"clearImports","ranges":[{"startOffset":1230828,"endOffset":1230951,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNames","ranges":[{"startOffset":1230952,"endOffset":1231299,"count":0}],"isBlockCoverage":false},{"functionName":"formatList","ranges":[{"startOffset":1232313,"endOffset":1232490,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1232822,"endOffset":1234939,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1235103,"endOffset":1235249,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1235411,"endOffset":1235570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1235797,"endOffset":1236638,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1236790,"endOffset":1236933,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1237207,"endOffset":1237410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1237580,"endOffset":1237931,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1238388,"endOffset":1238477,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1238646,"endOffset":1238952,"count":0}],"isBlockCoverage":false},{"functionName":"createError","ranges":[{"startOffset":1239315,"endOffset":1239586,"count":12}],"isBlockCoverage":true},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":1239684,"endOffset":1240811,"count":12}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":1239842,"endOffset":1240809,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":1240843,"endOffset":1241357,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":1241538,"endOffset":1241836,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1241977,"endOffset":1242380,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":1242498,"endOffset":1243426,"count":0}],"isBlockCoverage":false},{"functionName":"determineSpecificType","ranges":[{"startOffset":1243551,"endOffset":1244146,"count":0}],"isBlockCoverage":false},{"functionName":"parseStaticImport","ranges":[{"startOffset":1244388,"endOffset":1245053,"count":0}],"isBlockCoverage":false},{"functionName":"hasESMSyntax","ranges":[{"startOffset":1245265,"endOffset":1245408,"count":0}],"isBlockCoverage":false},{"functionName":"getAffectedGlobModules","ranges":[{"startOffset":1245461,"endOffset":1246002,"count":0}],"isBlockCoverage":false},{"functionName":"importGlobPlugin","ranges":[{"startOffset":1246003,"endOffset":1247105,"count":1}],"isBlockCoverage":true},{"functionName":"configureServer","ranges":[{"startOffset":1246098,"endOffset":1246191,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1246197,"endOffset":1247098,"count":95},{"startOffset":1246278,"endOffset":1247092,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1246382,"endOffset":1246456,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1246633,"endOffset":1246655,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1246736,"endOffset":1247000,"count":0}],"isBlockCoverage":false},{"functionName":"err$1","ranges":[{"startOffset":1247351,"endOffset":1247442,"count":0}],"isBlockCoverage":false},{"functionName":"parseGlobOptions","ranges":[{"startOffset":1247443,"endOffset":1249533,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportGlob","ranges":[{"startOffset":1249534,"endOffset":1252353,"count":0}],"isBlockCoverage":false},{"functionName":"findCorrespondingCloseParenthesisPosition","ranges":[{"startOffset":1252354,"endOffset":1252990,"count":0}],"isBlockCoverage":false},{"functionName":"transformGlobImport","ranges":[{"startOffset":1253083,"endOffset":1256792,"count":0}],"isBlockCoverage":false},{"functionName":"globSafePath","ranges":[{"startOffset":1256793,"endOffset":1256873,"count":0}],"isBlockCoverage":false},{"functionName":"lastNthChar","ranges":[{"startOffset":1256874,"endOffset":1256947,"count":0}],"isBlockCoverage":false},{"functionName":"globSafeResolvedPath","ranges":[{"startOffset":1256948,"endOffset":1257407,"count":0}],"isBlockCoverage":false},{"functionName":"toAbsoluteGlob","ranges":[{"startOffset":1257408,"endOffset":1258345,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonBase","ranges":[{"startOffset":1258346,"endOffset":1258967,"count":0}],"isBlockCoverage":false},{"functionName":"isVirtualModule","ranges":[{"startOffset":1258968,"endOffset":1259075,"count":0}],"isBlockCoverage":false},{"functionName":"requireMs","ranges":[{"startOffset":1259212,"endOffset":1262169,"count":1},{"startOffset":1259256,"endOffset":1259266,"count":0}],"isBlockCoverage":true},{"functionName":"ms","ranges":[{"startOffset":1259680,"endOffset":1260068,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1260200,"endOffset":1261254,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":1261360,"endOffset":1261651,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":1261756,"endOffset":1261926,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":1261966,"endOffset":1262155,"count":0}],"isBlockCoverage":false},{"functionName":"requireDebug","ranges":[{"startOffset":1262194,"endOffset":1267100,"count":1},{"startOffset":1262244,"endOffset":1262267,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262293,"endOffset":1267044,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1263205,"endOffset":1263472,"count":2},{"startOffset":1263286,"endOffset":1263400,"count":30}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1263617,"endOffset":1265478,"count":2}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1263656,"endOffset":1265147,"count":12},{"startOffset":1263727,"endOffset":1263853,"count":0},{"startOffset":1264094,"endOffset":1265080,"count":0},{"startOffset":1265081,"endOffset":1265109,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1264422,"endOffset":1264936,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1265654,"endOffset":1266224,"count":1},{"startOffset":1265812,"endOffset":1265824,"count":0},{"startOffset":1265943,"endOffset":1266214,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":1266290,"endOffset":1266338,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":1266496,"endOffset":1266831,"count":2},{"startOffset":1266595,"endOffset":1266673,"count":0},{"startOffset":1266732,"endOffset":1266809,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":1266935,"endOffset":1267040,"count":0}],"isBlockCoverage":false},{"functionName":"requireBrowser","ranges":[{"startOffset":1267230,"endOffset":1272355,"count":0}],"isBlockCoverage":false},{"functionName":"requireNode","ranges":[{"startOffset":1272439,"endOffset":1278985,"count":1},{"startOffset":1272487,"endOffset":1272507,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1272532,"endOffset":1278938,"count":1},{"startOffset":1274058,"endOffset":1274270,"count":0},{"startOffset":1274296,"endOffset":1274312,"count":0},{"startOffset":1274356,"endOffset":1274402,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1273228,"endOffset":1273281,"count":105}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1273290,"endOffset":1273771,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1274079,"endOffset":1274091,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1274481,"endOffset":1274618,"count":2},{"startOffset":1274553,"endOffset":1274590,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":1274713,"endOffset":1274906,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":1275015,"endOffset":1275124,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":1275210,"endOffset":1275677,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":1275776,"endOffset":1275864,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":1275960,"endOffset":1276252,"count":1},{"startOffset":1276197,"endOffset":1276248,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1276383,"endOffset":1276434,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1276652,"endOffset":1278431,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":1278610,"endOffset":1278830,"count":2},{"startOffset":1278754,"endOffset":1278826,"count":0}],"isBlockCoverage":true},{"functionName":"encodeUrl$1","ranges":[{"startOffset":1280664,"endOffset":1280840,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHtml$1","ranges":[{"startOffset":1281324,"endOffset":1282194,"count":0}],"isBlockCoverage":false},{"functionName":"first$1","ranges":[{"startOffset":1282577,"endOffset":1283579,"count":0}],"isBlockCoverage":false},{"functionName":"listener","ranges":[{"startOffset":1283632,"endOffset":1283993,"count":0}],"isBlockCoverage":false},{"functionName":"defer$2","ranges":[{"startOffset":1284441,"endOffset":1284504,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished$1","ranges":[{"startOffset":1284702,"endOffset":1284920,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished$1","ranges":[{"startOffset":1285034,"endOffset":1285432,"count":0}],"isBlockCoverage":false},{"functionName":"attachFinishedListener","ranges":[{"startOffset":1285557,"endOffset":1286408,"count":0}],"isBlockCoverage":false},{"functionName":"attachListener","ranges":[{"startOffset":1286518,"endOffset":1286819,"count":0}],"isBlockCoverage":false},{"functionName":"createListener","ranges":[{"startOffset":1286921,"endOffset":1287261,"count":0}],"isBlockCoverage":false},{"functionName":"patchAssignSocket","ranges":[{"startOffset":1287412,"endOffset":1287714,"count":0}],"isBlockCoverage":false},{"functionName":"parseurl","ranges":[{"startOffset":1288268,"endOffset":1288611,"count":0}],"isBlockCoverage":false},{"functionName":"originalurl","ranges":[{"startOffset":1288748,"endOffset":1289120,"count":0}],"isBlockCoverage":false},{"functionName":"fastparse","ranges":[{"startOffset":1289237,"endOffset":1290298,"count":0}],"isBlockCoverage":false},{"functionName":"fresh","ranges":[{"startOffset":1290444,"endOffset":1290629,"count":0}],"isBlockCoverage":false},{"functionName":"populateStatusesMap","ranges":[{"startOffset":1293261,"endOffset":1293650,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":1293356,"endOffset":1293632,"count":64}],"isBlockCoverage":true},{"functionName":"status","ranges":[{"startOffset":1294025,"endOffset":1294531,"count":0}],"isBlockCoverage":false},{"functionName":"hasPipeDataListeners","ranges":[{"startOffset":1294762,"endOffset":1294981,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe$1","ranges":[{"startOffset":1295074,"endOffset":1295645,"count":0}],"isBlockCoverage":false},{"functionName":"defer$1","ranges":[{"startOffset":1296213,"endOffset":1296278,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":1296407,"endOffset":1296807,"count":0}],"isBlockCoverage":false},{"functionName":"finalhandler$1","ranges":[{"startOffset":1297060,"endOffset":1298421,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorHeaders","ranges":[{"startOffset":1298523,"endOffset":1298841,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":1299020,"endOffset":1299364,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorStatusCode","ranges":[{"startOffset":1299470,"endOffset":1299806,"count":0}],"isBlockCoverage":false},{"functionName":"getResourceName","ranges":[{"startOffset":1300053,"endOffset":1300182,"count":0}],"isBlockCoverage":false},{"functionName":"getResponseStatusCode","ranges":[{"startOffset":1300294,"endOffset":1300528,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":1300652,"endOffset":1300777,"count":0}],"isBlockCoverage":false},{"functionName":"send$2","ranges":[{"startOffset":1300965,"endOffset":1301843,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":1301968,"endOffset":1302182,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1302467,"endOffset":1302628,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1302514,"endOffset":1302624,"count":2},{"startOffset":1302571,"endOffset":1302603,"count":21}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":1303383,"endOffset":1303446,"count":0}],"isBlockCoverage":false},{"functionName":"createServer$1","ranges":[{"startOffset":1303526,"endOffset":1303729,"count":1}],"isBlockCoverage":true},{"functionName":"app","ranges":[{"startOffset":1303556,"endOffset":1303615,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":1304354,"endOffset":1305106,"count":12},{"startOffset":1304479,"endOffset":1304520,"count":11},{"startOffset":1304584,"endOffset":1304724,"count":0},{"startOffset":1304796,"endOffset":1304846,"count":0},{"startOffset":1304911,"endOffset":1304946,"count":11},{"startOffset":1305000,"endOffset":1305006,"count":11},{"startOffset":1305020,"endOffset":1305034,"count":0}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":1304649,"endOffset":1304719,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":1305218,"endOffset":1306862,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":1307476,"endOffset":1307588,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":1307638,"endOffset":1308196,"count":0}],"isBlockCoverage":false},{"functionName":"logerror","ranges":[{"startOffset":1308278,"endOffset":1308370,"count":0}],"isBlockCoverage":false},{"functionName":"getProtohost","ranges":[{"startOffset":1308457,"endOffset":1308735,"count":0}],"isBlockCoverage":false},{"functionName":"toObject","ranges":[{"startOffset":1309089,"endOffset":1309262,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseNative","ranges":[{"startOffset":1309264,"endOffset":1310359,"count":1},{"startOffset":1309322,"endOffset":1309344,"count":0},{"startOffset":1309616,"endOffset":1309638,"count":0},{"startOffset":1309747,"endOffset":1309796,"count":10},{"startOffset":1309931,"endOffset":1309953,"count":0},{"startOffset":1310212,"endOffset":1310234,"count":0},{"startOffset":1310254,"endOffset":1310357,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1309850,"endOffset":1309888,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1310074,"endOffset":1310124,"count":20}],"isBlockCoverage":true},{"functionName":"objectAssign","ranges":[{"startOffset":1310416,"endOffset":1310920,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":1311636,"endOffset":1312710,"count":0}],"isBlockCoverage":false},{"functionName":"parse$7","ranges":[{"startOffset":1312819,"endOffset":1313370,"count":0}],"isBlockCoverage":false},{"functionName":"vary","ranges":[{"startOffset":1313501,"endOffset":1313893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1313931,"endOffset":1320483,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":1314153,"endOffset":1314236,"count":0}],"isBlockCoverage":false},{"functionName":"isOriginAllowed","ranges":[{"startOffset":1314240,"endOffset":1314727,"count":0}],"isBlockCoverage":false},{"functionName":"configureOrigin","ranges":[{"startOffset":1314731,"endOffset":1315616,"count":0}],"isBlockCoverage":false},{"functionName":"configureMethods","ranges":[{"startOffset":1315620,"endOffset":1315902,"count":0}],"isBlockCoverage":false},{"functionName":"configureCredentials","ranges":[{"startOffset":1315906,"endOffset":1316108,"count":0}],"isBlockCoverage":false},{"functionName":"configureAllowedHeaders","ranges":[{"startOffset":1316112,"endOffset":1316844,"count":0}],"isBlockCoverage":false},{"functionName":"configureExposedHeaders","ranges":[{"startOffset":1316848,"endOffset":1317251,"count":0}],"isBlockCoverage":false},{"functionName":"configureMaxAge","ranges":[{"startOffset":1317255,"endOffset":1317539,"count":0}],"isBlockCoverage":false},{"functionName":"applyHeaders","ranges":[{"startOffset":1317543,"endOffset":1317968,"count":0}],"isBlockCoverage":false},{"functionName":"cors","ranges":[{"startOffset":1317972,"endOffset":1319092,"count":0}],"isBlockCoverage":false},{"functionName":"middlewareWrapper","ranges":[{"startOffset":1319096,"endOffset":1320374,"count":1},{"startOffset":1319292,"endOffset":1319326,"count":0}],"isBlockCoverage":true},{"functionName":"optionsCallback","ranges":[{"startOffset":1319358,"endOffset":1319407,"count":0}],"isBlockCoverage":false},{"functionName":"corsMiddleware","ranges":[{"startOffset":1319427,"endOffset":1320369,"count":0}],"isBlockCoverage":false},{"functionName":"isNormalFlowError","ranges":[{"startOffset":1321569,"endOffset":1321612,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1321682,"endOffset":1321709,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFilter","ranges":[{"startOffset":1321835,"endOffset":1322702,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultOptions","ranges":[{"startOffset":1322754,"endOffset":1323065,"count":0}],"isBlockCoverage":false},{"functionName":"ReaddirpStream","ranges":[{"startOffset":1323069,"endOffset":1324365,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":1324369,"endOffset":1325771,"count":0}],"isBlockCoverage":false},{"functionName":"_exploreDir","ranges":[{"startOffset":1325775,"endOffset":1325981,"count":0}],"isBlockCoverage":false},{"functionName":"_formatEntry","ranges":[{"startOffset":1325985,"endOffset":1326425,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":1326429,"endOffset":1326575,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryType","ranges":[{"startOffset":1326579,"endOffset":1327765,"count":0}],"isBlockCoverage":false},{"functionName":"_includeAsFile","ranges":[{"startOffset":1327769,"endOffset":1327915,"count":0}],"isBlockCoverage":false},{"functionName":"readdirp$1","ranges":[{"startOffset":1328479,"endOffset":1329114,"count":0}],"isBlockCoverage":false},{"functionName":"readdirpPromise","ranges":[{"startOffset":1329141,"endOffset":1329399,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath$2","ranges":[{"startOffset":1329762,"endOffset":1330608,"count":0}],"isBlockCoverage":false},{"functionName":"arrify$1","ranges":[{"startOffset":1331056,"endOffset":1331101,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":1331222,"endOffset":1331568,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1331769,"endOffset":1332577,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch$1","ranges":[{"startOffset":1332745,"endOffset":1333748,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryPath$1","ranges":[{"startOffset":1336219,"endOffset":1336294,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1336321,"endOffset":1338258,"count":1}],"isBlockCoverage":true},{"functionName":"exports.EMPTY_FN","ranges":[{"startOffset":1338043,"endOffset":1338051,"count":0}],"isBlockCoverage":false},{"functionName":"exports.IDENTITY_FN","ranges":[{"startOffset":1338076,"endOffset":1338086,"count":0}],"isBlockCoverage":false},{"functionName":"foreach","ranges":[{"startOffset":1339151,"endOffset":1339244,"count":0}],"isBlockCoverage":false},{"functionName":"addAndConvert","ranges":[{"startOffset":1339269,"endOffset":1339439,"count":0}],"isBlockCoverage":false},{"functionName":"clearItem","ranges":[{"startOffset":1339460,"endOffset":1339585,"count":0}],"isBlockCoverage":false},{"functionName":"delFromSet","ranges":[{"startOffset":1339607,"endOffset":1339788,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":1339810,"endOffset":1339861,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchInstance","ranges":[{"startOffset":1340666,"endOffset":1341292,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchBroadcast","ranges":[{"startOffset":1341599,"endOffset":1341784,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchListener","ranges":[{"startOffset":1342123,"endOffset":1344235,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchFileListener","ranges":[{"startOffset":1344812,"endOffset":1346441,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFsHandler","ranges":[{"startOffset":1346560,"endOffset":1346661,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithNodeFs","ranges":[{"startOffset":1346865,"endOffset":1347722,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFile","ranges":[{"startOffset":1347982,"endOffset":1350055,"count":0}],"isBlockCoverage":false},{"functionName":"_handleSymlink","ranges":[{"startOffset":1350382,"endOffset":1351419,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRead","ranges":[{"startOffset":1351421,"endOffset":1353949,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDir","ranges":[{"startOffset":1354397,"endOffset":1355462,"count":0}],"isBlockCoverage":false},{"functionName":"_addToNodeFs","ranges":[{"startOffset":1355910,"endOffset":1358117,"count":0}],"isBlockCoverage":false},{"functionName":"Depth","ranges":[{"startOffset":1359301,"endOffset":1359346,"count":0}],"isBlockCoverage":false},{"functionName":"createFSEventsInstance","ranges":[{"startOffset":1360414,"endOffset":1360501,"count":0}],"isBlockCoverage":false},{"functionName":"setFSEventsListener","ranges":[{"startOffset":1360902,"endOffset":1363297,"count":0}],"isBlockCoverage":false},{"functionName":"couldConsolidate","ranges":[{"startOffset":1363402,"endOffset":1363641,"count":0}],"isBlockCoverage":false},{"functionName":"canUse","ranges":[{"startOffset":1363718,"endOffset":1363763,"count":0}],"isBlockCoverage":false},{"functionName":"calcDepth","ranges":[{"startOffset":1363846,"endOffset":1363970,"count":0}],"isBlockCoverage":false},{"functionName":"sameTypes","ranges":[{"startOffset":1364106,"endOffset":1364309,"count":0}],"isBlockCoverage":false},{"functionName":"FsEventsHandler","ranges":[{"startOffset":1364432,"endOffset":1364470,"count":0}],"isBlockCoverage":false},{"functionName":"checkIgnored","ranges":[{"startOffset":1364471,"endOffset":1364775,"count":0}],"isBlockCoverage":false},{"functionName":"addOrChange","ranges":[{"startOffset":1364777,"endOffset":1365010,"count":0}],"isBlockCoverage":false},{"functionName":"checkExists","ranges":[{"startOffset":1365012,"endOffset":1365685,"count":0}],"isBlockCoverage":false},{"functionName":"handleEvent","ranges":[{"startOffset":1365687,"endOffset":1366988,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithFsEvents","ranges":[{"startOffset":1367376,"endOffset":1369508,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFsEventsSymlink","ranges":[{"startOffset":1369843,"endOffset":1370928,"count":0}],"isBlockCoverage":false},{"functionName":"emitAdd","ranges":[{"startOffset":1370993,"endOffset":1371474,"count":0}],"isBlockCoverage":false},{"functionName":"initWatch","ranges":[{"startOffset":1371476,"endOffset":1371743,"count":0}],"isBlockCoverage":false},{"functionName":"_addToFsEvents","ranges":[{"startOffset":1372083,"endOffset":1374836,"count":0}],"isBlockCoverage":false},{"functionName":"arrify","ranges":[{"startOffset":1376530,"endOffset":1376584,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":1376602,"endOffset":1376780,"count":0}],"isBlockCoverage":false},{"functionName":"unifyPaths","ranges":[{"startOffset":1376802,"endOffset":1377067,"count":0}],"isBlockCoverage":false},{"functionName":"toUnix","ranges":[{"startOffset":1377225,"endOffset":1377522,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathToUnix","ranges":[{"startOffset":1377657,"endOffset":1377706,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeIgnored","ranges":[{"startOffset":1377734,"endOffset":1377905,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePath","ranges":[{"startOffset":1377932,"endOffset":1378126,"count":0}],"isBlockCoverage":false},{"functionName":"undef","ranges":[{"startOffset":1378143,"endOffset":1378181,"count":0}],"isBlockCoverage":false},{"functionName":"DirEntry","ranges":[{"startOffset":1378359,"endOffset":1378515,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":1378519,"endOffset":1378648,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":1378652,"endOffset":1378987,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1378991,"endOffset":1379084,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":1379130,"endOffset":1379231,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":1379235,"endOffset":1379376,"count":0}],"isBlockCoverage":false},{"functionName":"WatchHelper","ranges":[{"startOffset":1379463,"endOffset":1380181,"count":0}],"isBlockCoverage":false},{"functionName":"checkGlobSymlink","ranges":[{"startOffset":1380185,"endOffset":1380666,"count":0}],"isBlockCoverage":false},{"functionName":"entryPath","ranges":[{"startOffset":1380670,"endOffset":1380808,"count":0}],"isBlockCoverage":false},{"functionName":"filterPath","ranges":[{"startOffset":1380812,"endOffset":1381229,"count":0}],"isBlockCoverage":false},{"functionName":"getDirParts","ranges":[{"startOffset":1381233,"endOffset":1381547,"count":0}],"isBlockCoverage":false},{"functionName":"filterDir","ranges":[{"startOffset":1381551,"endOffset":1382070,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":1382416,"endOffset":1386042,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":1386355,"endOffset":1388092,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":1388303,"endOffset":1388981,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1389082,"endOffset":1389846,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":1389921,"endOffset":1390171,"count":0}],"isBlockCoverage":false},{"functionName":"emitWithAll","ranges":[{"startOffset":1390173,"endOffset":1390277,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":1390686,"endOffset":1392989,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":1393164,"endOffset":1393440,"count":0}],"isBlockCoverage":false},{"functionName":"_throttle","ranges":[{"startOffset":1393736,"endOffset":1394470,"count":0}],"isBlockCoverage":false},{"functionName":"_incrReadyCount","ranges":[{"startOffset":1394472,"endOffset":1394522,"count":0}],"isBlockCoverage":false},{"functionName":"_awaitWriteFinish","ranges":[{"startOffset":1394969,"endOffset":1396327,"count":0}],"isBlockCoverage":false},{"functionName":"_getGlobIgnored","ranges":[{"startOffset":1396329,"endOffset":1396393,"count":0}],"isBlockCoverage":false},{"functionName":"_isIgnored","ranges":[{"startOffset":1396567,"endOffset":1397167,"count":0}],"isBlockCoverage":false},{"functionName":"_isntIgnored","ranges":[{"startOffset":1397169,"endOffset":1397236,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchHelpers","ranges":[{"startOffset":1397533,"endOffset":1397772,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchedDir","ranges":[{"startOffset":1397970,"endOffset":1398238,"count":0}],"isBlockCoverage":false},{"functionName":"_hasReadPermissions","ranges":[{"startOffset":1398503,"endOffset":1398779,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":1399085,"endOffset":1401774,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":1401840,"endOffset":1401981,"count":0}],"isBlockCoverage":false},{"functionName":"_closeFile","ranges":[{"startOffset":1402051,"endOffset":1402207,"count":0}],"isBlockCoverage":false},{"functionName":"_addPathCloser","ranges":[{"startOffset":1402270,"endOffset":1402453,"count":0}],"isBlockCoverage":false},{"functionName":"_readdirp","ranges":[{"startOffset":1402455,"endOffset":1402853,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":1403155,"endOffset":1403260,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":1403324,"endOffset":1403747,"count":0}],"isBlockCoverage":false},{"functionName":"matchAll","ranges":[{"startOffset":1404397,"endOffset":1404663,"count":0}],"isBlockCoverage":false},{"functionName":"getVar","ranges":[{"startOffset":1404665,"endOffset":1404968,"count":0}],"isBlockCoverage":false},{"functionName":"parseInternal","ranges":[{"startOffset":1404970,"endOffset":1408377,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1408393,"endOffset":1408918,"count":0}],"isBlockCoverage":false},{"functionName":"guessEditor","ranges":[{"startOffset":1412969,"endOffset":1416319,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentsForPosition","ranges":[{"startOffset":1416441,"endOffset":1418285,"count":0}],"isBlockCoverage":false},{"functionName":"wrapErrorCallback","ranges":[{"startOffset":1418770,"endOffset":1419267,"count":0}],"isBlockCoverage":false},{"functionName":"isTerminalEditor","ranges":[{"startOffset":1419269,"endOffset":1419415,"count":0}],"isBlockCoverage":false},{"functionName":"parseFile","ranges":[{"startOffset":1419456,"endOffset":1419718,"count":0}],"isBlockCoverage":false},{"functionName":"launchEditor","ranges":[{"startOffset":1419747,"endOffset":1424321,"count":0}],"isBlockCoverage":false},{"functionName":"launchEditorMiddleware","ranges":[{"startOffset":1424477,"endOffset":1425153,"count":1},{"startOffset":1424571,"endOffset":1424648,"count":0},{"startOffset":1424687,"endOffset":1424748,"count":0}],"isBlockCoverage":true},{"functionName":"launchEditorMiddleware","ranges":[{"startOffset":1424798,"endOffset":1425151,"count":0}],"isBlockCoverage":false},{"functionName":"resolveHttpServer","ranges":[{"startOffset":1425250,"endOffset":1425946,"count":0}],"isBlockCoverage":false},{"functionName":"resolveHttpsConfig","ranges":[{"startOffset":1425947,"endOffset":1426251,"count":1},{"startOffset":1426018,"endOffset":1426250,"count":0}],"isBlockCoverage":true},{"functionName":"readFileIfExists","ranges":[{"startOffset":1426252,"endOffset":1426416,"count":0}],"isBlockCoverage":false},{"functionName":"httpServerStart","ranges":[{"startOffset":1426417,"endOffset":1427199,"count":0}],"isBlockCoverage":false},{"functionName":"setClientErrorHandler","ranges":[{"startOffset":1427200,"endOffset":1427756,"count":0}],"isBlockCoverage":false},{"functionName":"getFsUtils","ranges":[{"startOffset":1427979,"endOffset":1428496,"count":6},{"startOffset":1428071,"endOffset":1428476,"count":1},{"startOffset":1428150,"endOffset":1428181,"count":0},{"startOffset":1428182,"endOffset":1428205,"count":0},{"startOffset":1428245,"endOffset":1428429,"count":0}],"isBlockCoverage":true},{"functionName":"readDirCacheSync","ranges":[{"startOffset":1428497,"endOffset":1428691,"count":0}],"isBlockCoverage":false},{"functionName":"direntsToDirentMap","ranges":[{"startOffset":1428692,"endOffset":1429028,"count":0}],"isBlockCoverage":false},{"functionName":"ensureFileMaybeSymlinkIsResolved","ranges":[{"startOffset":1429029,"endOffset":1429338,"count":0}],"isBlockCoverage":false},{"functionName":"pathUntilPart","ranges":[{"startOffset":1429339,"endOffset":1429460,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedFsUtils","ranges":[{"startOffset":1429461,"endOffset":1436177,"count":0}],"isBlockCoverage":false},{"functionName":"tryResolveRealFile","ranges":[{"startOffset":1436178,"endOffset":1436333,"count":4423},{"startOffset":1436276,"endOffset":1436284,"count":152},{"startOffset":1436288,"endOffset":1436331,"count":152}],"isBlockCoverage":true},{"functionName":"tryResolveRealFileWithExtensions","ranges":[{"startOffset":1436334,"endOffset":1436552,"count":685},{"startOffset":1436450,"endOffset":1436550,"count":4401},{"startOffset":1436535,"endOffset":1436546,"count":130},{"startOffset":1436550,"endOffset":1436551,"count":555}],"isBlockCoverage":true},{"functionName":"tryResolveRealFileOrType","ranges":[{"startOffset":1436553,"endOffset":1436837,"count":915},{"startOffset":1436665,"endOffset":1436673,"count":162},{"startOffset":1436677,"endOffset":1436754,"count":162},{"startOffset":1436754,"endOffset":1436769,"count":753},{"startOffset":1436769,"endOffset":1436782,"count":0},{"startOffset":1436786,"endOffset":1436825,"count":0},{"startOffset":1436825,"endOffset":1436836,"count":753}],"isBlockCoverage":true},{"functionName":"getRealPath","ranges":[{"startOffset":1436838,"endOffset":1437000,"count":314}],"isBlockCoverage":true},{"functionName":"isDirectory","ranges":[{"startOffset":1437001,"endOffset":1437106,"count":753},{"startOffset":1437079,"endOffset":1437092,"count":707},{"startOffset":1437095,"endOffset":1437103,"count":46}],"isBlockCoverage":true},{"functionName":"entitytag","ranges":[{"startOffset":1437554,"endOffset":1438015,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":1438188,"endOffset":1438779,"count":0}],"isBlockCoverage":false},{"functionName":"isstats","ranges":[{"startOffset":1438895,"endOffset":1439326,"count":0}],"isBlockCoverage":false},{"functionName":"stattag","ranges":[{"startOffset":1439426,"endOffset":1439580,"count":0}],"isBlockCoverage":false},{"functionName":"e","ranges":[{"startOffset":1439643,"endOffset":1439786,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":1439786,"endOffset":1440426,"count":13},{"startOffset":1439985,"endOffset":1439989,"count":0},{"startOffset":1440012,"endOffset":1440259,"count":0},{"startOffset":1440267,"endOffset":1440275,"count":0},{"startOffset":1440286,"endOffset":1440296,"count":0},{"startOffset":1440298,"endOffset":1440423,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1439825,"endOffset":1439983,"count":13},{"startOffset":1439877,"endOffset":1439881,"count":0},{"startOffset":1439916,"endOffset":1439926,"count":0},{"startOffset":1439962,"endOffset":1439972,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1440300,"endOffset":1440418,"count":0}],"isBlockCoverage":false},{"functionName":"r","ranges":[{"startOffset":1440426,"endOffset":1440589,"count":13},{"startOffset":1440462,"endOffset":1440473,"count":10},{"startOffset":1440473,"endOffset":1440518,"count":3},{"startOffset":1440518,"endOffset":1440529,"count":0},{"startOffset":1440529,"endOffset":1440531,"count":3},{"startOffset":1440549,"endOffset":1440551,"count":0},{"startOffset":1440551,"endOffset":1440588,"count":3},{"startOffset":1440579,"endOffset":1440588,"count":0}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":1440589,"endOffset":1440811,"count":26},{"startOffset":1440635,"endOffset":1440658,"count":13},{"startOffset":1440643,"endOffset":1440653,"count":0},{"startOffset":1440658,"endOffset":1440686,"count":13},{"startOffset":1440686,"endOffset":1440763,"count":0},{"startOffset":1440763,"endOffset":1440809,"count":13},{"startOffset":1440779,"endOffset":1440809,"count":31},{"startOffset":1440791,"endOffset":1440809,"count":13}],"isBlockCoverage":true},{"functionName":"o","ranges":[{"startOffset":1440811,"endOffset":1440961,"count":13},{"startOffset":1440875,"endOffset":1440885,"count":0},{"startOffset":1440912,"endOffset":1440925,"count":1},{"startOffset":1440951,"endOffset":1440956,"count":0}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":1440961,"endOffset":1441023,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePlugin","ranges":[{"startOffset":1441480,"endOffset":1449908,"count":1},{"startOffset":1441740,"endOffset":1441745,"count":0},{"startOffset":1441804,"endOffset":1441817,"count":0}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":1441871,"endOffset":1449035,"count":1497},{"startOffset":1442053,"endOffset":1442078,"count":0},{"startOffset":1442236,"endOffset":1442264,"count":0},{"startOffset":1442367,"endOffset":1442396,"count":0},{"startOffset":1442468,"endOffset":1442480,"count":0},{"startOffset":1442613,"endOffset":1442635,"count":0},{"startOffset":1442677,"endOffset":1442704,"count":0},{"startOffset":1442868,"endOffset":1443051,"count":0},{"startOffset":1443108,"endOffset":1443164,"count":217},{"startOffset":1443129,"endOffset":1443158,"count":0},{"startOffset":1443166,"endOffset":1443220,"count":1280},{"startOffset":1443220,"endOffset":1443396,"count":217},{"startOffset":1443285,"endOffset":1443303,"count":0},{"startOffset":1443353,"endOffset":1443385,"count":0},{"startOffset":1443452,"endOffset":1443471,"count":0},{"startOffset":1443477,"endOffset":1443644,"count":0},{"startOffset":1443690,"endOffset":1443872,"count":2},{"startOffset":1443739,"endOffset":1443795,"count":0},{"startOffset":1443872,"endOffset":1443905,"count":1495},{"startOffset":1443906,"endOffset":1443964,"count":70},{"startOffset":1443966,"endOffset":1444239,"count":70},{"startOffset":1444094,"endOffset":1444150,"count":0},{"startOffset":1444239,"endOffset":1444264,"count":1425},{"startOffset":1444264,"endOffset":1444347,"count":1305},{"startOffset":1444315,"endOffset":1444347,"count":145},{"startOffset":1444349,"endOffset":1445840,"count":192},{"startOffset":1444411,"endOffset":1444426,"count":0},{"startOffset":1444563,"endOffset":1444583,"count":0},{"startOffset":1444603,"endOffset":1445016,"count":0},{"startOffset":1445039,"endOffset":1445080,"count":0},{"startOffset":1445081,"endOffset":1445149,"count":0},{"startOffset":1445151,"endOffset":1445184,"count":0},{"startOffset":1445234,"endOffset":1445832,"count":166},{"startOffset":1445322,"endOffset":1445383,"count":0},{"startOffset":1445451,"endOffset":1445482,"count":0},{"startOffset":1445484,"endOffset":1445800,"count":0},{"startOffset":1445840,"endOffset":1445879,"count":1259},{"startOffset":1445881,"endOffset":1446236,"count":0},{"startOffset":1446236,"endOffset":1446282,"count":1259},{"startOffset":1446282,"endOffset":1446318,"count":608},{"startOffset":1446320,"endOffset":1446469,"count":33},{"startOffset":1446337,"endOffset":1446392,"count":0},{"startOffset":1446469,"endOffset":1446499,"count":1226},{"startOffset":1446499,"endOffset":1446569,"count":0},{"startOffset":1446569,"endOffset":1446595,"count":1226},{"startOffset":1446595,"endOffset":1446625,"count":0},{"startOffset":1446625,"endOffset":1446659,"count":1226},{"startOffset":1446659,"endOffset":1448975,"count":649},{"startOffset":1446711,"endOffset":1446727,"count":0},{"startOffset":1446777,"endOffset":1446793,"count":0},{"startOffset":1446794,"endOffset":1446967,"count":0},{"startOffset":1446969,"endOffset":1447002,"count":0},{"startOffset":1447025,"endOffset":1447066,"count":0},{"startOffset":1447067,"endOffset":1447202,"count":0},{"startOffset":1447204,"endOffset":1447237,"count":0},{"startOffset":1447449,"endOffset":1448967,"count":0},{"startOffset":1448975,"endOffset":1448989,"count":577},{"startOffset":1448989,"endOffset":1449028,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1449041,"endOffset":1449901,"count":95},{"startOffset":1449096,"endOffset":1449575,"count":0},{"startOffset":1449620,"endOffset":1449895,"count":0}],"isBlockCoverage":true},{"functionName":"resolveSubpathImports","ranges":[{"startOffset":1449909,"endOffset":1450671,"count":1497},{"startOffset":1450040,"endOffset":1450459,"count":0},{"startOffset":1450469,"endOffset":1450670,"count":0}],"isBlockCoverage":true},{"functionName":"ensureVersionQuery","ranges":[{"startOffset":1450672,"endOffset":1451254,"count":271},{"startOffset":1450797,"endOffset":1450876,"count":0},{"startOffset":1450878,"endOffset":1451233,"count":0}],"isBlockCoverage":true},{"functionName":"splitFileAndPostfix","ranges":[{"startOffset":1451255,"endOffset":1451380,"count":1539}],"isBlockCoverage":true},{"functionName":"tryFsResolve","ranges":[{"startOffset":1451381,"endOffset":1452164,"count":915},{"startOffset":1451544,"endOffset":1451572,"count":0},{"startOffset":1451574,"endOffset":1451962,"count":0},{"startOffset":1452141,"endOffset":1452162,"count":314}],"isBlockCoverage":true},{"functionName":"isPossibleTsOutput","ranges":[{"startOffset":1452241,"endOffset":1452275,"count":728}],"isBlockCoverage":true},{"functionName":"tryCleanFsResolve","ranges":[{"startOffset":1452277,"endOffset":1454798,"count":915},{"startOffset":1452478,"endOffset":1452494,"count":23},{"startOffset":1452611,"endOffset":1452617,"count":162},{"startOffset":1452619,"endOffset":1452642,"count":162},{"startOffset":1452642,"endOffset":1452704,"count":753},{"startOffset":1452704,"endOffset":1452731,"count":728},{"startOffset":1452754,"endOffset":1452782,"count":693},{"startOffset":1452783,"endOffset":1452795,"count":0},{"startOffset":1452797,"endOffset":1453862,"count":753},{"startOffset":1452879,"endOffset":1453858,"count":707},{"startOffset":1452907,"endOffset":1453333,"count":22},{"startOffset":1453167,"endOffset":1453302,"count":0},{"startOffset":1453314,"endOffset":1453325,"count":0},{"startOffset":1453333,"endOffset":1453468,"count":685},{"startOffset":1453468,"endOffset":1453479,"count":130},{"startOffset":1453479,"endOffset":1453501,"count":555},{"startOffset":1453501,"endOffset":1453852,"count":0},{"startOffset":1453862,"endOffset":1453913,"count":601},{"startOffset":1453891,"endOffset":1453897,"count":0},{"startOffset":1453915,"endOffset":1454796,"count":0}],"isBlockCoverage":true},{"functionName":"tryNodeResolve","ranges":[{"startOffset":1454799,"endOffset":1459885,"count":703},{"startOffset":1455074,"endOffset":1455104,"count":82},{"startOffset":1455089,"endOffset":1455104,"count":0},{"startOffset":1455105,"endOffset":1455119,"count":621},{"startOffset":1455167,"endOffset":1455192,"count":0},{"startOffset":1455377,"endOffset":1455422,"count":606},{"startOffset":1455422,"endOffset":1455453,"count":97},{"startOffset":1455666,"endOffset":1455705,"count":0},{"startOffset":1455706,"endOffset":1455723,"count":0},{"startOffset":1455841,"endOffset":1456366,"count":31},{"startOffset":1456166,"endOffset":1456177,"count":0},{"startOffset":1456178,"endOffset":1456230,"count":0},{"startOffset":1456232,"endOffset":1456336,"count":0},{"startOffset":1456366,"endOffset":1456397,"count":672},{"startOffset":1456397,"endOffset":1456416,"count":51},{"startOffset":1456417,"endOffset":1456438,"count":621},{"startOffset":1456473,"endOffset":1456503,"count":51},{"startOffset":1456504,"endOffset":1456508,"count":621},{"startOffset":1456603,"endOffset":1456674,"count":0},{"startOffset":1456674,"endOffset":1456691,"count":672},{"startOffset":1456691,"endOffset":1456712,"count":0},{"startOffset":1456714,"endOffset":1456902,"count":0},{"startOffset":1456902,"endOffset":1456920,"count":672},{"startOffset":1456920,"endOffset":1456937,"count":0},{"startOffset":1456937,"endOffset":1457813,"count":672},{"startOffset":1457780,"endOffset":1457797,"count":23},{"startOffset":1457798,"endOffset":1457812,"count":649},{"startOffset":1457815,"endOffset":1457929,"count":23},{"startOffset":1457929,"endOffset":1458087,"count":649},{"startOffset":1458025,"endOffset":1458086,"count":0},{"startOffset":1458089,"endOffset":1458123,"count":649},{"startOffset":1458123,"endOffset":1458205,"count":0},{"startOffset":1458206,"endOffset":1458243,"count":0},{"startOffset":1458274,"endOffset":1458283,"count":0},{"startOffset":1458322,"endOffset":1458331,"count":0},{"startOffset":1458373,"endOffset":1458581,"count":0},{"startOffset":1458582,"endOffset":1458594,"count":0},{"startOffset":1458595,"endOffset":1458637,"count":0},{"startOffset":1458638,"endOffset":1458665,"count":0},{"startOffset":1458666,"endOffset":1458690,"count":0},{"startOffset":1458691,"endOffset":1458725,"count":0},{"startOffset":1458726,"endOffset":1458992,"count":0},{"startOffset":1458993,"endOffset":1459167,"count":0},{"startOffset":1459201,"endOffset":1459731,"count":0},{"startOffset":1459732,"endOffset":1459742,"count":0},{"startOffset":1459744,"endOffset":1459883,"count":0}],"isBlockCoverage":true},{"functionName":"processResult","ranges":[{"startOffset":1456962,"endOffset":1457727,"count":23},{"startOffset":1457001,"endOffset":1457032,"count":2},{"startOffset":1457032,"endOffset":1457097,"count":21},{"startOffset":1457099,"endOffset":1457130,"count":0},{"startOffset":1457130,"endOffset":1457229,"count":21},{"startOffset":1457230,"endOffset":1457255,"count":1},{"startOffset":1457256,"endOffset":1457281,"count":0},{"startOffset":1457283,"endOffset":1457314,"count":0},{"startOffset":1457314,"endOffset":1457358,"count":21},{"startOffset":1457358,"endOffset":1457379,"count":6},{"startOffset":1457380,"endOffset":1457417,"count":5},{"startOffset":1457419,"endOffset":1457662,"count":0},{"startOffset":1457662,"endOffset":1457726,"count":21}],"isBlockCoverage":true},{"functionName":"tryOptimizedResolve","ranges":[{"startOffset":1459886,"endOffset":1460883,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageEntry","ranges":[{"startOffset":1460884,"endOffset":1463006,"count":621},{"startOffset":1461126,"endOffset":1461160,"count":589},{"startOffset":1461160,"endOffset":1461211,"count":32},{"startOffset":1461211,"endOffset":1461352,"count":10},{"startOffset":1461352,"endOffset":1461374,"count":32},{"startOffset":1461374,"endOffset":1461762,"count":22},{"startOffset":1461422,"endOffset":1461756,"count":0},{"startOffset":1461762,"endOffset":1461828,"count":32},{"startOffset":1461828,"endOffset":1461842,"count":28},{"startOffset":1461843,"endOffset":1461885,"count":4},{"startOffset":1461922,"endOffset":1462917,"count":32},{"startOffset":1462002,"endOffset":1462056,"count":0},{"startOffset":1462058,"endOffset":1462119,"count":0},{"startOffset":1462197,"endOffset":1462238,"count":0},{"startOffset":1462239,"endOffset":1462266,"count":0},{"startOffset":1462268,"endOffset":1462348,"count":0},{"startOffset":1462607,"endOffset":1462795,"count":0},{"startOffset":1462917,"endOffset":1463005,"count":0}],"isBlockCoverage":true},{"functionName":"packageEntryFailure","ranges":[{"startOffset":1463007,"endOffset":1463307,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExportsOrImports","ranges":[{"startOffset":1463308,"endOffset":1464067,"count":13},{"startOffset":1463450,"endOffset":1463545,"count":11},{"startOffset":1463834,"endOffset":1463837,"count":0},{"startOffset":1463898,"endOffset":1463934,"count":0},{"startOffset":1463967,"endOffset":1464005,"count":0},{"startOffset":1464056,"endOffset":1464064,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1463605,"endOffset":1463799,"count":41},{"startOffset":1463653,"endOffset":1463708,"count":11},{"startOffset":1463715,"endOffset":1463772,"count":11},{"startOffset":1463778,"endOffset":1463798,"count":19}],"isBlockCoverage":true},{"functionName":"resolveDeepImport","ranges":[{"startOffset":1464068,"endOffset":1465794,"count":51},{"startOffset":1464264,"endOffset":1464287,"count":38},{"startOffset":1464287,"endOffset":1464396,"count":13},{"startOffset":1464396,"endOffset":1465019,"count":3},{"startOffset":1464754,"endOffset":1464798,"count":0},{"startOffset":1464804,"endOffset":1464844,"count":0},{"startOffset":1464866,"endOffset":1465015,"count":0},{"startOffset":1465019,"endOffset":1465391,"count":10},{"startOffset":1465039,"endOffset":1465080,"count":0},{"startOffset":1465081,"endOffset":1465108,"count":0},{"startOffset":1465110,"endOffset":1465391,"count":0},{"startOffset":1465391,"endOffset":1465792,"count":13},{"startOffset":1465619,"endOffset":1465709,"count":0}],"isBlockCoverage":true},{"functionName":"tryResolveBrowserMapping","ranges":[{"startOffset":1465795,"endOffset":1467098,"count":0}],"isBlockCoverage":false},{"functionName":"tryResolveBrowserEntry","ranges":[{"startOffset":1467099,"endOffset":1467846,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithBrowserField","ranges":[{"startOffset":1467847,"endOffset":1468262,"count":0}],"isBlockCoverage":false},{"functionName":"equalWithoutSuffix","ranges":[{"startOffset":1468263,"endOffset":1468387,"count":0}],"isBlockCoverage":false},{"functionName":"esbuildDepPlugin","ranges":[{"startOffset":1469061,"endOffset":1475288,"count":0}],"isBlockCoverage":false},{"functionName":"matchesEntireLine","ranges":[{"startOffset":1475315,"endOffset":1475349,"count":0}],"isBlockCoverage":false},{"functionName":"esbuildCjsExternalPlugin","ranges":[{"startOffset":1475351,"endOffset":1476336,"count":0}],"isBlockCoverage":false},{"functionName":"shouldExternalizeForSSR","ranges":[{"startOffset":1476449,"endOffset":1476727,"count":320},{"startOffset":1476582,"endOffset":1476687,"count":1}],"isBlockCoverage":true},{"functionName":"createIsConfiguredAsSsrExternal","ranges":[{"startOffset":1476728,"endOffset":1479042,"count":2},{"startOffset":1477040,"endOffset":1477060,"count":0}],"isBlockCoverage":true},{"functionName":"isExternalizable","ranges":[{"startOffset":1477237,"endOffset":1478193,"count":52},{"startOffset":1477332,"endOffset":1477359,"count":0},{"startOffset":1477627,"endOffset":1477635,"count":0},{"startOffset":1478028,"endOffset":1478038,"count":21},{"startOffset":1478046,"endOffset":1478189,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1478204,"endOffset":1479039,"count":52},{"startOffset":1478415,"endOffset":1478425,"count":0},{"startOffset":1478436,"endOffset":1478462,"count":0},{"startOffset":1478524,"endOffset":1478576,"count":0},{"startOffset":1478726,"endOffset":1478736,"count":0},{"startOffset":1478752,"endOffset":1478810,"count":0},{"startOffset":1478852,"endOffset":1478885,"count":0},{"startOffset":1478942,"endOffset":1478969,"count":0}],"isBlockCoverage":true},{"functionName":"createIsSsrExternal","ranges":[{"startOffset":1479043,"endOffset":1479526,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1479215,"endOffset":1479523,"count":320},{"startOffset":1479265,"endOffset":1479307,"count":193},{"startOffset":1479307,"endOffset":1479356,"count":127},{"startOffset":1479356,"endOffset":1479381,"count":54},{"startOffset":1479383,"endOffset":1479462,"count":54},{"startOffset":1479416,"endOffset":1479455,"count":52},{"startOffset":1479462,"endOffset":1479522,"count":127}],"isBlockCoverage":true},{"functionName":"isJSONRequest","ranges":[{"startOffset":1479707,"endOffset":1479744,"count":0}],"isBlockCoverage":false},{"functionName":"jsonPlugin","ranges":[{"startOffset":1479746,"endOffset":1481005,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1479829,"endOffset":1480998,"count":95},{"startOffset":1479882,"endOffset":1479894,"count":94},{"startOffset":1479894,"endOffset":1479932,"count":1},{"startOffset":1479932,"endOffset":1479944,"count":0},{"startOffset":1479944,"endOffset":1480020,"count":1},{"startOffset":1480020,"endOffset":1480503,"count":0},{"startOffset":1480503,"endOffset":1480741,"count":1},{"startOffset":1480741,"endOffset":1480992,"count":0}],"isBlockCoverage":true},{"functionName":"extractJsonErrorPosition","ranges":[{"startOffset":1481006,"endOffset":1481323,"count":0}],"isBlockCoverage":false},{"functionName":"optimizedDepsPlugin","ranges":[{"startOffset":1481616,"endOffset":1483446,"count":0}],"isBlockCoverage":false},{"functionName":"throwProcessingError","ranges":[{"startOffset":1483447,"endOffset":1483683,"count":0}],"isBlockCoverage":false},{"functionName":"throwOutdatedRequest","ranges":[{"startOffset":1483684,"endOffset":1483903,"count":0}],"isBlockCoverage":false},{"functionName":"throwFileNotFoundInOptimizedDep","ranges":[{"startOffset":1483904,"endOffset":1484235,"count":0}],"isBlockCoverage":false},{"functionName":"isNonJsRequest","ranges":[{"startOffset":1484294,"endOffset":1484328,"count":95}],"isBlockCoverage":true},{"functionName":"definePlugin","ranges":[{"startOffset":1484445,"endOffset":1488404,"count":1},{"startOffset":1484552,"endOffset":1484571,"count":0},{"startOffset":1484660,"endOffset":1484674,"count":0},{"startOffset":1485114,"endOffset":1485473,"count":0},{"startOffset":1485562,"endOffset":1488403,"count":0}],"isBlockCoverage":true},{"functionName":"generatePattern","ranges":[{"startOffset":1485751,"endOffset":1486755,"count":2},{"startOffset":1485818,"endOffset":1485855,"count":1},{"startOffset":1485905,"endOffset":1485917,"count":1},{"startOffset":1485918,"endOffset":1485922,"count":1},{"startOffset":1486050,"endOffset":1486105,"count":0},{"startOffset":1486143,"endOffset":1486205,"count":0},{"startOffset":1486408,"endOffset":1486441,"count":1},{"startOffset":1486443,"endOffset":1486489,"count":1},{"startOffset":1486534,"endOffset":1486603,"count":0},{"startOffset":1486643,"endOffset":1486695,"count":1},{"startOffset":1486696,"endOffset":1486702,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1486889,"endOffset":1488397,"count":95},{"startOffset":1486982,"endOffset":1486993,"count":0},{"startOffset":1486995,"endOffset":1487020,"count":0},{"startOffset":1487163,"endOffset":1487190,"count":94},{"startOffset":1487199,"endOffset":1487224,"count":1},{"startOffset":1487224,"endOffset":1487289,"count":94},{"startOffset":1487290,"endOffset":1487306,"count":0},{"startOffset":1487328,"endOffset":1487335,"count":94},{"startOffset":1487335,"endOffset":1487567,"count":0},{"startOffset":1487569,"endOffset":1488396,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1488016,"endOffset":1488051,"count":0}],"isBlockCoverage":false},{"functionName":"replaceDefine","ranges":[{"startOffset":1488405,"endOffset":1489396,"count":0}],"isBlockCoverage":false},{"functionName":"serializeDefine","ranges":[{"startOffset":1489397,"endOffset":1489735,"count":3},{"startOffset":1489532,"endOffset":1489713,"count":2},{"startOffset":1489683,"endOffset":1489709,"count":0}],"isBlockCoverage":true},{"functionName":"handleDefineValue","ranges":[{"startOffset":1489736,"endOffset":1489908,"count":2},{"startOffset":1489808,"endOffset":1489827,"count":0},{"startOffset":1489874,"endOffset":1489907,"count":0}],"isBlockCoverage":true},{"functionName":"getImportMetaEnvKeyRe","ranges":[{"startOffset":1489909,"endOffset":1490122,"count":0}],"isBlockCoverage":false},{"functionName":"clientInjectionsPlugin","ranges":[{"startOffset":1490240,"endOffset":1493864,"count":1}],"isBlockCoverage":true},{"functionName":"buildStart","ranges":[{"startOffset":1490355,"endOffset":1493223,"count":1},{"startOffset":1490718,"endOffset":1490729,"count":0},{"startOffset":1490768,"endOffset":1490774,"count":0},{"startOffset":1490816,"endOffset":1490826,"count":0},{"startOffset":1490867,"endOffset":1490876,"count":0},{"startOffset":1490916,"endOffset":1490925,"count":0},{"startOffset":1490983,"endOffset":1490991,"count":0},{"startOffset":1491055,"endOffset":1491074,"count":0},{"startOffset":1491103,"endOffset":1491115,"count":0},{"startOffset":1491128,"endOffset":1491134,"count":0},{"startOffset":1491277,"endOffset":1491283,"count":0},{"startOffset":1491346,"endOffset":1491352,"count":0},{"startOffset":1491457,"endOffset":1491463,"count":0},{"startOffset":1491465,"endOffset":1491536,"count":0},{"startOffset":1491605,"endOffset":1493222,"count":0}],"isBlockCoverage":true},{"functionName":"definesReplacement","ranges":[{"startOffset":1491938,"endOffset":1491961,"count":1}],"isBlockCoverage":true},{"functionName":"injectConfigValues","ranges":[{"startOffset":1492585,"endOffset":1493216,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1493229,"endOffset":1493857,"count":95},{"startOffset":1493335,"endOffset":1493385,"count":1},{"startOffset":1493385,"endOffset":1493851,"count":94},{"startOffset":1493409,"endOffset":1493449,"count":0},{"startOffset":1493451,"endOffset":1493851,"count":0}],"isBlockCoverage":true},{"functionName":"escapeReplacement","ranges":[{"startOffset":1493865,"endOffset":1493971,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1493953,"endOffset":1493968,"count":0}],"isBlockCoverage":false},{"functionName":"wasmHelper","ranges":[{"startOffset":1494038,"endOffset":1495203,"count":0}],"isBlockCoverage":false},{"functionName":"wasmHelperPlugin","ranges":[{"startOffset":1495276,"endOffset":1495781,"count":1}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":1495335,"endOffset":1495416,"count":577},{"startOffset":1495382,"endOffset":1495410,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1495422,"endOffset":1495774,"count":95},{"startOffset":1495470,"endOffset":1495530,"count":0},{"startOffset":1495594,"endOffset":1495773,"count":0}],"isBlockCoverage":true},{"functionName":"wasmFallbackPlugin","ranges":[{"startOffset":1495810,"endOffset":1496250,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1495865,"endOffset":1496243,"count":95},{"startOffset":1495940,"endOffset":1496242,"count":0}],"isBlockCoverage":true},{"functionName":"saveEmitWorkerAsset","ranges":[{"startOffset":1496508,"endOffset":1496668,"count":0}],"isBlockCoverage":false},{"functionName":"bundleWorkerEntry","ranges":[{"startOffset":1496669,"endOffset":1498592,"count":0}],"isBlockCoverage":false},{"functionName":"emitSourcemapForWorkerEntry","ranges":[{"startOffset":1498593,"endOffset":1499033,"count":0}],"isBlockCoverage":false},{"functionName":"encodeWorkerAssetFileName","ranges":[{"startOffset":1499099,"endOffset":1499354,"count":0}],"isBlockCoverage":false},{"functionName":"workerFileToUrl","ranges":[{"startOffset":1499355,"endOffset":1499847,"count":0}],"isBlockCoverage":false},{"functionName":"webWorkerPostPlugin","ranges":[{"startOffset":1499848,"endOffset":1500226,"count":0}],"isBlockCoverage":false},{"functionName":"webWorkerPlugin","ranges":[{"startOffset":1500227,"endOffset":1507672,"count":1}],"isBlockCoverage":true},{"functionName":"configureServer","ranges":[{"startOffset":1500398,"endOffset":1500454,"count":1}],"isBlockCoverage":true},{"functionName":"buildStart","ranges":[{"startOffset":1500460,"endOffset":1500702,"count":1},{"startOffset":1500495,"endOffset":1500520,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1500708,"endOffset":1500807,"count":95},{"startOffset":1500737,"endOffset":1500771,"count":0},{"startOffset":1500773,"endOffset":1500801,"count":0}],"isBlockCoverage":true},{"functionName":"shouldTransformCachedModule","ranges":[{"startOffset":1500813,"endOffset":1500963,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":1500969,"endOffset":1505632,"count":95},{"startOffset":1501076,"endOffset":1502037,"count":0},{"startOffset":1502128,"endOffset":1502251,"count":0},{"startOffset":1502252,"endOffset":1502262,"count":0},{"startOffset":1502297,"endOffset":1502337,"count":0},{"startOffset":1502338,"endOffset":1502348,"count":0},{"startOffset":1502418,"endOffset":1502437,"count":0},{"startOffset":1502438,"endOffset":1502442,"count":0},{"startOffset":1502520,"endOffset":1505631,"count":0}],"isBlockCoverage":true},{"functionName":"renderChunk","ranges":[{"startOffset":1505638,"endOffset":1506943,"count":0}],"isBlockCoverage":false},{"functionName":"generateBundle","ranges":[{"startOffset":1506949,"endOffset":1507665,"count":0}],"isBlockCoverage":false},{"functionName":"isSameContent","ranges":[{"startOffset":1507673,"endOffset":1507873,"count":0}],"isBlockCoverage":false},{"functionName":"preAliasPlugin","ranges":[{"startOffset":1507875,"endOffset":1510011,"count":1}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":1508173,"endOffset":1510004,"count":1652},{"startOffset":1508362,"endOffset":1508386,"count":0},{"startOffset":1508387,"endOffset":1508404,"count":0},{"startOffset":1508405,"endOffset":1508429,"count":0},{"startOffset":1508430,"endOffset":1508451,"count":0},{"startOffset":1508453,"endOffset":1509998,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1508485,"endOffset":1508518,"count":0}],"isBlockCoverage":false},{"functionName":"optimizeAliasReplacementForSSR","ranges":[{"startOffset":1510012,"endOffset":1510154,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":1510155,"endOffset":1510441,"count":640},{"startOffset":1510266,"endOffset":1510440,"count":0}],"isBlockCoverage":true},{"functionName":"getAliasPatterns","ranges":[{"startOffset":1510442,"endOffset":1510656,"count":2},{"startOffset":1510495,"endOffset":1510515,"count":0},{"startOffset":1510598,"endOffset":1510655,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1510571,"endOffset":1510592,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1510636,"endOffset":1510652,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasPatternMatcher","ranges":[{"startOffset":1510657,"endOffset":1510826,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1510755,"endOffset":1510823,"count":320}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1510783,"endOffset":1510822,"count":640}],"isBlockCoverage":true},{"functionName":"err","ranges":[{"startOffset":1510828,"endOffset":1510917,"count":0}],"isBlockCoverage":false},{"functionName":"parseWorkerOptions","ranges":[{"startOffset":1510918,"endOffset":1511449,"count":0}],"isBlockCoverage":false},{"functionName":"getWorkerType","ranges":[{"startOffset":1511450,"endOffset":1512256,"count":0}],"isBlockCoverage":false},{"functionName":"isIncludeWorkerImportMetaUrl","ranges":[{"startOffset":1512257,"endOffset":1512481,"count":0}],"isBlockCoverage":false},{"functionName":"workerImportMetaUrlPlugin","ranges":[{"startOffset":1512482,"endOffset":1515397,"count":1}],"isBlockCoverage":true},{"functionName":"shouldTransformCachedModule","ranges":[{"startOffset":1512893,"endOffset":1513048,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":1513054,"endOffset":1515390,"count":95},{"startOffset":1513115,"endOffset":1513152,"count":0},{"startOffset":1513154,"endOffset":1515384,"count":0}],"isBlockCoverage":true},{"functionName":"assetImportMetaUrlPlugin","ranges":[{"startOffset":1515399,"endOffset":1519530,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1515793,"endOffset":1519523,"count":95},{"startOffset":1515854,"endOffset":1515879,"count":0},{"startOffset":1515880,"endOffset":1515902,"count":0},{"startOffset":1515903,"endOffset":1515930,"count":0},{"startOffset":1515931,"endOffset":1515966,"count":0},{"startOffset":1515968,"endOffset":1519498,"count":0}],"isBlockCoverage":true},{"functionName":"buildGlobPattern","ranges":[{"startOffset":1519531,"endOffset":1520017,"count":0}],"isBlockCoverage":false},{"functionName":"getQueryDelimiterIndex","ranges":[{"startOffset":1520018,"endOffset":1520339,"count":0}],"isBlockCoverage":false},{"functionName":"metadataPlugin","ranges":[{"startOffset":1520341,"endOffset":1520618,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeString","ranges":[{"startOffset":1521568,"endOffset":1521783,"count":0}],"isBlockCoverage":false},{"functionName":"templateLiteralToGlob","ranges":[{"startOffset":1521785,"endOffset":1522059,"count":0}],"isBlockCoverage":false},{"functionName":"callExpressionToGlob","ranges":[{"startOffset":1522061,"endOffset":1522380,"count":0}],"isBlockCoverage":false},{"functionName":"binaryExpressionToGlob","ranges":[{"startOffset":1522382,"endOffset":1522622,"count":0}],"isBlockCoverage":false},{"functionName":"expressionToGlob","ranges":[{"startOffset":1522624,"endOffset":1522996,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnore","ranges":[{"startOffset":1523087,"endOffset":1523397,"count":0}],"isBlockCoverage":false},{"functionName":"dynamicImportToGlob","ranges":[{"startOffset":1523399,"endOffset":1524973,"count":0}],"isBlockCoverage":false},{"functionName":"dynamicImportHelper","ranges":[{"startOffset":1525151,"endOffset":1525635,"count":0}],"isBlockCoverage":false},{"functionName":"parseDynamicImportPattern","ranges":[{"startOffset":1525637,"endOffset":1526456,"count":0}],"isBlockCoverage":false},{"functionName":"transformDynamicImport","ranges":[{"startOffset":1526457,"endOffset":1527667,"count":0}],"isBlockCoverage":false},{"functionName":"dynamicImportVarsPlugin","ranges":[{"startOffset":1527668,"endOffset":1530050,"count":1}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":1528010,"endOffset":1528100,"count":577},{"startOffset":1528066,"endOffset":1528094,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1528106,"endOffset":1528239,"count":95},{"startOffset":1528157,"endOffset":1528233,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1528245,"endOffset":1530043,"count":95},{"startOffset":1528309,"endOffset":1528337,"count":94},{"startOffset":1528338,"endOffset":1528373,"count":94},{"startOffset":1528400,"endOffset":1530037,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePlugins","ranges":[{"startOffset":1530052,"endOffset":1532337,"count":1},{"startOffset":1530245,"endOffset":1530345,"count":0},{"startOffset":1530572,"endOffset":1530601,"count":0},{"startOffset":1530622,"endOffset":1530640,"count":0},{"startOffset":1530709,"endOffset":1530715,"count":0},{"startOffset":1530961,"endOffset":1530967,"count":0},{"startOffset":1531251,"endOffset":1531259,"count":0},{"startOffset":1531335,"endOffset":1531354,"count":0},{"startOffset":1531355,"endOffset":1531420,"count":0},{"startOffset":1531549,"endOffset":1531555,"count":0},{"startOffset":1531859,"endOffset":1531885,"count":0},{"startOffset":1532194,"endOffset":1532198,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1530283,"endOffset":1530314,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePlugin.getDepsOptimizer","ranges":[{"startOffset":1531262,"endOffset":1531300,"count":1497}],"isBlockCoverage":true},{"functionName":"resolvePlugin.shouldExternalize","ranges":[{"startOffset":1531357,"endOffset":1531420,"count":0}],"isBlockCoverage":false},{"functionName":"createPluginHookUtils","ranges":[{"startOffset":1532338,"endOffset":1532934,"count":2}],"isBlockCoverage":true},{"functionName":"getSortedPlugins","ranges":[{"startOffset":1532438,"endOffset":1532695,"count":1848},{"startOffset":1532524,"endOffset":1532564,"count":1839},{"startOffset":1532564,"endOffset":1532694,"count":9}],"isBlockCoverage":true},{"functionName":"getSortedPluginHooks","ranges":[{"startOffset":1532698,"endOffset":1532869,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1532813,"endOffset":1532847,"count":10}],"isBlockCoverage":true},{"functionName":"getSortedPluginsByHook","ranges":[{"startOffset":1532935,"endOffset":1533523,"count":10},{"startOffset":1533085,"endOffset":1533497,"count":298},{"startOffset":1533136,"endOffset":1533493,"count":59},{"startOffset":1533174,"endOffset":1533432,"count":1},{"startOffset":1533210,"endOffset":1533291,"count":0},{"startOffset":1533432,"endOffset":1533493,"count":58}],"isBlockCoverage":true},{"functionName":"getHookHandler","ranges":[{"startOffset":1533524,"endOffset":1533614,"count":13824},{"startOffset":1533590,"endOffset":1533604,"count":1},{"startOffset":1533605,"endOffset":1533611,"count":13823}],"isBlockCoverage":true},{"functionName":"viteAliasCustomResolver","ranges":[{"startOffset":1533647,"endOffset":1533825,"count":2},{"startOffset":1533767,"endOffset":1533822,"count":0}],"isBlockCoverage":true},{"functionName":"ansiRegex","ranges":[{"startOffset":1533828,"endOffset":1534162,"count":1},{"startOffset":1534141,"endOffset":1534152,"count":0}],"isBlockCoverage":true},{"functionName":"stripAnsi","ranges":[{"startOffset":1534192,"endOffset":1534579,"count":0}],"isBlockCoverage":false},{"functionName":"prepareError","ranges":[{"startOffset":1534581,"endOffset":1534855,"count":0}],"isBlockCoverage":false},{"functionName":"buildErrorMessage","ranges":[{"startOffset":1534856,"endOffset":1535294,"count":0}],"isBlockCoverage":false},{"functionName":"cleanStack","ranges":[{"startOffset":1535295,"endOffset":1535396,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":1535397,"endOffset":1535701,"count":0}],"isBlockCoverage":false},{"functionName":"errorMiddleware","ranges":[{"startOffset":1535702,"endOffset":1537072,"count":1}],"isBlockCoverage":true},{"functionName":"viteErrorMiddleware","ranges":[{"startOffset":1535765,"endOffset":1537069,"count":0}],"isBlockCoverage":false},{"functionName":"noop$3","ranges":[{"startOffset":1537089,"endOffset":1537098,"count":0}],"isBlockCoverage":false},{"functionName":"throwClosedServerError","ranges":[{"startOffset":1537638,"endOffset":1537817,"count":0}],"isBlockCoverage":false},{"functionName":"createPluginContainer","ranges":[{"startOffset":1537818,"endOffset":1538021,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1538044,"endOffset":1546792,"count":1}],"isBlockCoverage":true},{"functionName":"PluginContainer","ranges":[{"startOffset":1538111,"endOffset":1538681,"count":1}],"isBlockCoverage":true},{"functionName":"_updateModuleLoadAddedImports","ranges":[{"startOffset":1539168,"endOffset":1539369,"count":95},{"startOffset":1539290,"endOffset":1539365,"count":70}],"isBlockCoverage":true},{"functionName":"_getAddedImports","ranges":[{"startOffset":1539372,"endOffset":1539537,"count":95},{"startOffset":1539526,"endOffset":1539532,"count":0}],"isBlockCoverage":true},{"functionName":"getModuleInfo","ranges":[{"startOffset":1539540,"endOffset":1540283,"count":217},{"startOffset":1539659,"endOffset":1540278,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1539923,"endOffset":1540222,"count":0}],"isBlockCoverage":false},{"functionName":"handleHookPromise","ranges":[{"startOffset":1540387,"endOffset":1540629,"count":13805},{"startOffset":1540442,"endOffset":1540448,"count":7220},{"startOffset":1540450,"endOffset":1540484,"count":6594},{"startOffset":1540484,"endOffset":1540628,"count":7211}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1540583,"endOffset":1540623,"count":7211}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":1540632,"endOffset":1540691,"count":6}],"isBlockCoverage":true},{"functionName":"resolveRollupOptions","ranges":[{"startOffset":1540694,"endOffset":1541193,"count":1},{"startOffset":1540916,"endOffset":1540963,"count":0}],"isBlockCoverage":true},{"functionName":"_getPluginContext","ranges":[{"startOffset":1541196,"endOffset":1541452,"count":9},{"startOffset":1541249,"endOffset":1541276,"count":0},{"startOffset":1541329,"endOffset":1541420,"count":7}],"isBlockCoverage":true},{"functionName":"hookParallel","ranges":[{"startOffset":1541486,"endOffset":1542054,"count":3},{"startOffset":1541623,"endOffset":1542009,"count":9},{"startOffset":1541679,"endOffset":1541688,"count":0},{"startOffset":1541760,"endOffset":1541911,"count":0}],"isBlockCoverage":true},{"functionName":"buildStart","ranges":[{"startOffset":1542057,"endOffset":1542273,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1542175,"endOffset":1542224,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1542234,"endOffset":1542254,"count":6}],"isBlockCoverage":true},{"functionName":"resolveId","ranges":[{"startOffset":1542276,"endOffset":1544071,"count":1652},{"startOffset":1542558,"endOffset":1542579,"count":0},{"startOffset":1542689,"endOffset":1543592,"count":11850},{"startOffset":1542714,"endOffset":1542721,"count":0},{"startOffset":1542723,"endOffset":1542748,"count":0},{"startOffset":1542778,"endOffset":1542787,"count":0},{"startOffset":1542802,"endOffset":1542807,"count":7358},{"startOffset":1542817,"endOffset":1542826,"count":707},{"startOffset":1542826,"endOffset":1542907,"count":11143},{"startOffset":1542907,"endOffset":1542928,"count":0},{"startOffset":1542929,"endOffset":1542932,"count":11143},{"startOffset":1543115,"endOffset":1543127,"count":11143},{"startOffset":1543128,"endOffset":1543133,"count":5793},{"startOffset":1543160,"endOffset":1543168,"count":11143},{"startOffset":1543198,"endOffset":1543207,"count":11143},{"startOffset":1543258,"endOffset":1543278,"count":11143},{"startOffset":1543278,"endOffset":1543287,"count":10068},{"startOffset":1543287,"endOffset":1543326,"count":1075},{"startOffset":1543326,"endOffset":1543356,"count":327},{"startOffset":1543356,"endOffset":1543435,"count":748},{"startOffset":1543435,"endOffset":1543460,"count":1075},{"startOffset":1543460,"endOffset":1543572,"count":0},{"startOffset":1543614,"endOffset":1543629,"count":0},{"startOffset":1543630,"endOffset":1543661,"count":0},{"startOffset":1543663,"endOffset":1543928,"count":0},{"startOffset":1543941,"endOffset":1544035,"count":1075},{"startOffset":1543980,"endOffset":1543984,"count":0},{"startOffset":1544035,"endOffset":1544067,"count":577}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1544074,"endOffset":1544814,"count":95},{"startOffset":1544238,"endOffset":1544730,"count":855},{"startOffset":1544263,"endOffset":1544270,"count":0},{"startOffset":1544272,"endOffset":1544297,"count":0},{"startOffset":1544322,"endOffset":1544331,"count":0},{"startOffset":1544536,"endOffset":1544724,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1544817,"endOffset":1546219,"count":95},{"startOffset":1545140,"endOffset":1546144,"count":1805},{"startOffset":1545165,"endOffset":1545172,"count":0},{"startOffset":1545174,"endOffset":1545199,"count":0},{"startOffset":1545229,"endOffset":1545238,"count":0},{"startOffset":1545327,"endOffset":1545348,"count":0},{"startOffset":1545553,"endOffset":1545594,"count":0},{"startOffset":1545614,"endOffset":1545623,"count":1609},{"startOffset":1545623,"endOffset":1545650,"count":196},{"startOffset":1545650,"endOffset":1545749,"count":0},{"startOffset":1545781,"endOffset":1546100,"count":175},{"startOffset":1545877,"endOffset":1546039,"count":102},{"startOffset":1545918,"endOffset":1545978,"count":0},{"startOffset":1546100,"endOffset":1546138,"count":21}],"isBlockCoverage":true},{"functionName":"watchChange","ranges":[{"startOffset":1546222,"endOffset":1546396,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1546399,"endOffset":1546790,"count":1},{"startOffset":1546437,"endOffset":1546444,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1546585,"endOffset":1546634,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1546642,"endOffset":1546650,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1546714,"endOffset":1546763,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1546771,"endOffset":1546779,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1546813,"endOffset":1552758,"count":1849}],"isBlockCoverage":true},{"functionName":"PluginContext","ranges":[{"startOffset":1546817,"endOffset":1546995,"count":1849}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1547082,"endOffset":1547138,"count":8}],"isBlockCoverage":true},{"functionName":"getModuleInfo","ranges":[{"startOffset":1547141,"endOffset":1547210,"count":217}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":1547213,"endOffset":1547701,"count":871},{"startOffset":1547281,"endOffset":1547291,"count":707},{"startOffset":1547486,"endOffset":1547498,"count":707},{"startOffset":1547521,"endOffset":1547529,"count":707},{"startOffset":1547555,"endOffset":1547564,"count":707},{"startOffset":1547663,"endOffset":1547681,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":1547704,"endOffset":1548327,"count":0}],"isBlockCoverage":false},{"functionName":"_updateModuleInfo","ranges":[{"startOffset":1548330,"endOffset":1548529,"count":175},{"startOffset":1548378,"endOffset":1548525,"count":0}],"isBlockCoverage":true},{"functionName":"getModuleIds","ranges":[{"startOffset":1548532,"endOffset":1548680,"count":0}],"isBlockCoverage":false},{"functionName":"addWatchFile","ranges":[{"startOffset":1548683,"endOffset":1548893,"count":1}],"isBlockCoverage":true},{"functionName":"getWatchFiles","ranges":[{"startOffset":1548896,"endOffset":1548961,"count":0}],"isBlockCoverage":false},{"functionName":"emitFile","ranges":[{"startOffset":1548964,"endOffset":1549052,"count":0}],"isBlockCoverage":false},{"functionName":"setAssetSource","ranges":[{"startOffset":1549055,"endOffset":1549129,"count":0}],"isBlockCoverage":false},{"functionName":"getFileName","ranges":[{"startOffset":1549132,"endOffset":1549215,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":1549218,"endOffset":1549533,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":1549536,"endOffset":1549602,"count":0}],"isBlockCoverage":false},{"functionName":"_formatError","ranges":[{"startOffset":1549640,"endOffset":1552436,"count":0}],"isBlockCoverage":false},{"functionName":"_warnIncompatibleMethod","ranges":[{"startOffset":1552439,"endOffset":1552756,"count":0}],"isBlockCoverage":false},{"functionName":"ResolveIdContext","ranges":[{"startOffset":1552808,"endOffset":1552940,"count":1652}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1552989,"endOffset":1553261,"count":190}],"isBlockCoverage":true},{"functionName":"LoadPluginContext","ranges":[{"startOffset":1553017,"endOffset":1553083,"count":190}],"isBlockCoverage":true},{"functionName":"addWatchFile","ranges":[{"startOffset":1553086,"endOffset":1553259,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1553317,"endOffset":1555575,"count":95}],"isBlockCoverage":true},{"functionName":"TransformPluginContext","ranges":[{"startOffset":1553422,"endOffset":1553689,"count":95},{"startOffset":1553565,"endOffset":1553685,"count":0}],"isBlockCoverage":true},{"functionName":"_getCombinedSourcemap","ranges":[{"startOffset":1553692,"endOffset":1555118,"count":95},{"startOffset":1553748,"endOffset":1553778,"count":0},{"startOffset":1553779,"endOffset":1553833,"count":0},{"startOffset":1553835,"endOffset":1554040,"count":0},{"startOffset":1554101,"endOffset":1554131,"count":0},{"startOffset":1554132,"endOffset":1554162,"count":0},{"startOffset":1554164,"endOffset":1554235,"count":0},{"startOffset":1554275,"endOffset":1554959,"count":102},{"startOffset":1554310,"endOffset":1554328,"count":0},{"startOffset":1554358,"endOffset":1554512,"count":1},{"startOffset":1554461,"endOffset":1554512,"count":0},{"startOffset":1554512,"endOffset":1554537,"count":101},{"startOffset":1554537,"endOffset":1554824,"count":93},{"startOffset":1554597,"endOffset":1554614,"count":92},{"startOffset":1554616,"endOffset":1554771,"count":0},{"startOffset":1554824,"endOffset":1554953,"count":8},{"startOffset":1555002,"endOffset":1555085,"count":94}],"isBlockCoverage":true},{"functionName":"getCombinedSourcemap","ranges":[{"startOffset":1555121,"endOffset":1555448,"count":0}],"isBlockCoverage":false},{"functionName":"_updateActiveInfo","ranges":[{"startOffset":1555451,"endOffset":1555573,"count":1805}],"isBlockCoverage":true},{"functionName":"scanImports","ranges":[{"startOffset":1555810,"endOffset":1558376,"count":0}],"isBlockCoverage":false},{"functionName":"computeEntries","ranges":[{"startOffset":1558377,"endOffset":1559314,"count":0}],"isBlockCoverage":false},{"functionName":"prepareEsbuildScanner","ranges":[{"startOffset":1559315,"endOffset":1560364,"count":0}],"isBlockCoverage":false},{"functionName":"orderedDependencies","ranges":[{"startOffset":1560365,"endOffset":1560536,"count":0}],"isBlockCoverage":false},{"functionName":"globEntries","ranges":[{"startOffset":1560537,"endOffset":1561171,"count":0}],"isBlockCoverage":false},{"functionName":"esbuildScanPlugin","ranges":[{"startOffset":1561648,"endOffset":1571067,"count":0}],"isBlockCoverage":false},{"functionName":"extractImportPaths","ranges":[{"startOffset":1571068,"endOffset":1571336,"count":0}],"isBlockCoverage":false},{"functionName":"shouldExternalizeDep","ranges":[{"startOffset":1571337,"endOffset":1571546,"count":0}],"isBlockCoverage":false},{"functionName":"isScannable","ranges":[{"startOffset":1571547,"endOffset":1571695,"count":0}],"isBlockCoverage":false},{"functionName":"createOptimizeDepsIncludeResolver","ranges":[{"startOffset":1571697,"endOffset":1572479,"count":0}],"isBlockCoverage":false},{"functionName":"expandGlobIds","ranges":[{"startOffset":1572480,"endOffset":1574893,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstExportStringValue","ranges":[{"startOffset":1574894,"endOffset":1575140,"count":0}],"isBlockCoverage":false},{"functionName":"nestedResolveBasedir","ranges":[{"startOffset":1575141,"endOffset":1575400,"count":0}],"isBlockCoverage":false},{"functionName":"getDepsOptimizer","ranges":[{"startOffset":1575589,"endOffset":1575703,"count":3245},{"startOffset":1575644,"endOffset":1575668,"count":3244},{"startOffset":1575669,"endOffset":1575687,"count":1}],"isBlockCoverage":true},{"functionName":"initDepsOptimizer","ranges":[{"startOffset":1575704,"endOffset":1575849,"count":0}],"isBlockCoverage":false},{"functionName":"initDevSsrDepsOptimizer","ranges":[{"startOffset":1575879,"endOffset":1576417,"count":0}],"isBlockCoverage":false},{"functionName":"createDepsOptimizer","ranges":[{"startOffset":1576418,"endOffset":1591828,"count":0}],"isBlockCoverage":false},{"functionName":"createDevSsrDepsOptimizer","ranges":[{"startOffset":1591829,"endOffset":1592571,"count":0}],"isBlockCoverage":false},{"functionName":"findInteropMismatches","ranges":[{"startOffset":1592572,"endOffset":1593100,"count":0}],"isBlockCoverage":false},{"functionName":"optimizeDeps","ranges":[{"startOffset":1593219,"endOffset":1593995,"count":0}],"isBlockCoverage":false},{"functionName":"optimizeServerSsrDeps","ranges":[{"startOffset":1593996,"endOffset":1594516,"count":0}],"isBlockCoverage":false},{"functionName":"initDepsOptimizerMetadata","ranges":[{"startOffset":1594517,"endOffset":1594847,"count":0}],"isBlockCoverage":false},{"functionName":"addOptimizedDepInfo","ranges":[{"startOffset":1594848,"endOffset":1595001,"count":0}],"isBlockCoverage":false},{"functionName":"loadCachedDepOptimizationMetadata","ranges":[{"startOffset":1595053,"endOffset":1596474,"count":0}],"isBlockCoverage":false},{"functionName":"discoverProjectDependencies","ranges":[{"startOffset":1596475,"endOffset":1597079,"count":0}],"isBlockCoverage":false},{"functionName":"toDiscoveredDependencies","ranges":[{"startOffset":1597080,"endOffset":1597536,"count":0}],"isBlockCoverage":false},{"functionName":"depsLogString","ranges":[{"startOffset":1597537,"endOffset":1597628,"count":0}],"isBlockCoverage":false},{"functionName":"runOptimizeDeps","ranges":[{"startOffset":1597629,"endOffset":1603584,"count":0}],"isBlockCoverage":false},{"functionName":"prepareEsbuildOptimizerRun","ranges":[{"startOffset":1603585,"endOffset":1605986,"count":0}],"isBlockCoverage":false},{"functionName":"addManuallyIncludedOptimizeDeps","ranges":[{"startOffset":1605987,"endOffset":1607399,"count":0}],"isBlockCoverage":false},{"functionName":"depsFromOptimizedDepInfo","ranges":[{"startOffset":1607400,"endOffset":1607549,"count":0}],"isBlockCoverage":false},{"functionName":"getOptimizedDepPath","ranges":[{"startOffset":1607550,"endOffset":1607702,"count":0}],"isBlockCoverage":false},{"functionName":"getDepsCacheSuffix","ranges":[{"startOffset":1607703,"endOffset":1607767,"count":0}],"isBlockCoverage":false},{"functionName":"getDepsCacheDir","ranges":[{"startOffset":1607768,"endOffset":1607875,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessingDepsCacheDir","ranges":[{"startOffset":1607876,"endOffset":1608011,"count":0}],"isBlockCoverage":false},{"functionName":"getTempSuffix","ranges":[{"startOffset":1608012,"endOffset":1608159,"count":0}],"isBlockCoverage":false},{"functionName":"getDepsCacheDirPrefix","ranges":[{"startOffset":1608160,"endOffset":1608269,"count":0}],"isBlockCoverage":false},{"functionName":"createIsOptimizedDepFile","ranges":[{"startOffset":1608270,"endOffset":1608427,"count":0}],"isBlockCoverage":false},{"functionName":"createIsOptimizedDepUrl","ranges":[{"startOffset":1608428,"endOffset":1609163,"count":0}],"isBlockCoverage":false},{"functionName":"parseDepsOptimizerMetadata","ranges":[{"startOffset":1609164,"endOffset":1610104,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyDepsOptimizerMetadata","ranges":[{"startOffset":1610105,"endOffset":1610988,"count":0}],"isBlockCoverage":false},{"functionName":"esbuildOutputFromId","ranges":[{"startOffset":1610989,"endOffset":1611494,"count":0}],"isBlockCoverage":false},{"functionName":"extractExportsData","ranges":[{"startOffset":1611495,"endOffset":1612811,"count":0}],"isBlockCoverage":false},{"functionName":"needsInterop","ranges":[{"startOffset":1612812,"endOffset":1613283,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleDefaultExport","ranges":[{"startOffset":1613284,"endOffset":1613386,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1613739,"endOffset":1613836,"count":6},{"startOffset":1613825,"endOffset":1613828,"count":3},{"startOffset":1613829,"endOffset":1613833,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1613881,"endOffset":1613894,"count":4}],"isBlockCoverage":true},{"functionName":"getConfigHash","ranges":[{"startOffset":1613897,"endOffset":1614797,"count":0}],"isBlockCoverage":false},{"functionName":"getLockfileHash","ranges":[{"startOffset":1614798,"endOffset":1615425,"count":0}],"isBlockCoverage":false},{"functionName":"getDepHash","ranges":[{"startOffset":1615426,"endOffset":1615669,"count":0}],"isBlockCoverage":false},{"functionName":"getOptimizedBrowserHash","ranges":[{"startOffset":1615670,"endOffset":1615793,"count":0}],"isBlockCoverage":false},{"functionName":"optimizedDepInfoFromId","ranges":[{"startOffset":1615794,"endOffset":1615926,"count":0}],"isBlockCoverage":false},{"functionName":"optimizedDepInfoFromFile","ranges":[{"startOffset":1615927,"endOffset":1616052,"count":0}],"isBlockCoverage":false},{"functionName":"findOptimizedDepInfoInRecord","ranges":[{"startOffset":1616053,"endOffset":1616273,"count":0}],"isBlockCoverage":false},{"functionName":"optimizedDepNeedsInterop","ranges":[{"startOffset":1616274,"endOffset":1616696,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupDepsCacheStaleDirs","ranges":[{"startOffset":1616745,"endOffset":1617557,"count":0}],"isBlockCoverage":false},{"functionName":"gracefulRename","ranges":[{"startOffset":1617626,"endOffset":1618180,"count":0}],"isBlockCoverage":false},{"functionName":"totalist","ranges":[{"startOffset":1619324,"endOffset":1619657,"count":0}],"isBlockCoverage":false},{"functionName":"parse$5","ranges":[{"startOffset":1619875,"endOffset":1620347,"count":0}],"isBlockCoverage":false},{"functionName":"noop$2","ranges":[{"startOffset":1620364,"endOffset":1620372,"count":0}],"isBlockCoverage":false},{"functionName":"isMatch","ranges":[{"startOffset":1620375,"endOffset":1620483,"count":0}],"isBlockCoverage":false},{"functionName":"toAssume","ranges":[{"startOffset":1620485,"endOffset":1620793,"count":0}],"isBlockCoverage":false},{"functionName":"viaCache","ranges":[{"startOffset":1620795,"endOffset":1620952,"count":0}],"isBlockCoverage":false},{"functionName":"viaLocal","ranges":[{"startOffset":1620954,"endOffset":1621499,"count":0}],"isBlockCoverage":false},{"functionName":"is404","ranges":[{"startOffset":1621501,"endOffset":1621569,"count":0}],"isBlockCoverage":false},{"functionName":"send$1","ranges":[{"startOffset":1621571,"endOffset":1622507,"count":0}],"isBlockCoverage":false},{"functionName":"toHeaders","ranges":[{"startOffset":1622562,"endOffset":1623017,"count":0}],"isBlockCoverage":false},{"functionName":"sirv","ranges":[{"startOffset":1623019,"endOffset":1625491,"count":3},{"startOffset":1623071,"endOffset":1623077,"count":0},{"startOffset":1623158,"endOffset":1623167,"count":0},{"startOffset":1623204,"endOffset":1623222,"count":0},{"startOffset":1623247,"endOffset":1623293,"count":0},{"startOffset":1623320,"endOffset":1623366,"count":0},{"startOffset":1623503,"endOffset":1623617,"count":0},{"startOffset":1623755,"endOffset":1623778,"count":0},{"startOffset":1623942,"endOffset":1623976,"count":0},{"startOffset":1623986,"endOffset":1624003,"count":0},{"startOffset":1624005,"endOffset":1624024,"count":0},{"startOffset":1624038,"endOffset":1624058,"count":0},{"startOffset":1624060,"endOffset":1624085,"count":0},{"startOffset":1624103,"endOffset":1624448,"count":0},{"startOffset":1624505,"endOffset":1624530,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1623265,"endOffset":1623279,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1623338,"endOffset":1623352,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1623858,"endOffset":1623905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1624121,"endOffset":1624443,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1624541,"endOffset":1625488,"count":0}],"isBlockCoverage":false},{"functionName":"sirvOptions","ranges":[{"startOffset":1625562,"endOffset":1625972,"count":3}],"isBlockCoverage":true},{"functionName":"setHeaders","ranges":[{"startOffset":1625652,"endOffset":1625965,"count":0}],"isBlockCoverage":false},{"functionName":"servePublicMiddleware","ranges":[{"startOffset":1625974,"endOffset":1626736,"count":1}],"isBlockCoverage":true},{"functionName":"getHeaders","ranges":[{"startOffset":1626134,"endOffset":1626168,"count":0}],"isBlockCoverage":false},{"functionName":"toFilePath","ranges":[{"startOffset":1626202,"endOffset":1626416,"count":0}],"isBlockCoverage":false},{"functionName":"viteServePublicMiddleware","ranges":[{"startOffset":1626427,"endOffset":1626733,"count":0}],"isBlockCoverage":false},{"functionName":"serveStaticMiddleware","ranges":[{"startOffset":1626737,"endOffset":1628343,"count":1}],"isBlockCoverage":true},{"functionName":"getHeaders","ranges":[{"startOffset":1626879,"endOffset":1626913,"count":0}],"isBlockCoverage":false},{"functionName":"viteServeStaticMiddleware","ranges":[{"startOffset":1626935,"endOffset":1628340,"count":0}],"isBlockCoverage":false},{"functionName":"serveRawFsMiddleware","ranges":[{"startOffset":1628344,"endOffset":1629201,"count":1}],"isBlockCoverage":true},{"functionName":"getHeaders","ranges":[{"startOffset":1628453,"endOffset":1628487,"count":0}],"isBlockCoverage":false},{"functionName":"viteServeRawFsMiddleware","ranges":[{"startOffset":1628505,"endOffset":1629198,"count":0}],"isBlockCoverage":false},{"functionName":"isFileServingAllowed","ranges":[{"startOffset":1629202,"endOffset":1629596,"count":0}],"isBlockCoverage":false},{"functionName":"ensureServingAccess","ranges":[{"startOffset":1629597,"endOffset":1630309,"count":0}],"isBlockCoverage":false},{"functionName":"renderRestrictedErrorHTML","ranges":[{"startOffset":1630310,"endOffset":1630593,"count":0}],"isBlockCoverage":false},{"functionName":"transformRequest","ranges":[{"startOffset":1630838,"endOffset":1631832,"count":95},{"startOffset":1630922,"endOffset":1630937,"count":0},{"startOffset":1630939,"endOffset":1630964,"count":0},{"startOffset":1631006,"endOffset":1631035,"count":0},{"startOffset":1631148,"endOffset":1631477,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1631240,"endOffset":1631471,"count":0}],"isBlockCoverage":false},{"functionName":"clearCache","ranges":[{"startOffset":1631586,"endOffset":1631693,"count":95}],"isBlockCoverage":true},{"functionName":"doTransform","ranges":[{"startOffset":1631833,"endOffset":1633138,"count":95},{"startOffset":1632056,"endOffset":1632112,"count":0},{"startOffset":1632193,"endOffset":1632353,"count":70},{"startOffset":1632335,"endOffset":1632349,"count":0},{"startOffset":1632380,"endOffset":1632388,"count":70},{"startOffset":1632389,"endOffset":1632454,"count":25},{"startOffset":1632445,"endOffset":1632454,"count":0},{"startOffset":1632475,"endOffset":1632479,"count":70},{"startOffset":1632480,"endOffset":1632495,"count":25},{"startOffset":1632496,"endOffset":1632502,"count":0},{"startOffset":1632569,"endOffset":1632807,"count":70},{"startOffset":1632789,"endOffset":1632803,"count":0},{"startOffset":1632942,"endOffset":1633119,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1633095,"endOffset":1633107,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedTransformResult","ranges":[{"startOffset":1633139,"endOffset":1633723,"count":140},{"startOffset":1633251,"endOffset":1633289,"count":0},{"startOffset":1633453,"endOffset":1633550,"count":0},{"startOffset":1633611,"endOffset":1633635,"count":0},{"startOffset":1633652,"endOffset":1633721,"count":0}],"isBlockCoverage":true},{"functionName":"loadAndTransform","ranges":[{"startOffset":1633724,"endOffset":1638342,"count":95},{"startOffset":1633946,"endOffset":1633977,"count":0},{"startOffset":1634109,"endOffset":1634130,"count":0},{"startOffset":1634247,"endOffset":1634271,"count":0},{"startOffset":1634273,"endOffset":1634299,"count":0},{"startOffset":1634320,"endOffset":1634357,"count":0},{"startOffset":1634440,"endOffset":1634486,"count":0},{"startOffset":1634496,"endOffset":1634676,"count":0},{"startOffset":1634900,"endOffset":1634975,"count":0},{"startOffset":1634984,"endOffset":1635110,"count":0},{"startOffset":1635120,"endOffset":1635332,"count":0},{"startOffset":1635353,"endOffset":1636200,"count":0},{"startOffset":1636230,"endOffset":1636237,"count":0},{"startOffset":1636239,"endOffset":1636264,"count":0},{"startOffset":1636341,"endOffset":1636382,"count":25},{"startOffset":1636382,"endOffset":1636403,"count":0},{"startOffset":1636632,"endOffset":1636739,"count":0},{"startOffset":1636765,"endOffset":1636811,"count":0},{"startOffset":1636933,"endOffset":1636975,"count":0},{"startOffset":1636990,"endOffset":1637020,"count":94},{"startOffset":1637020,"endOffset":1637057,"count":1},{"startOffset":1637078,"endOffset":1637107,"count":94},{"startOffset":1637108,"endOffset":1637119,"count":93},{"startOffset":1637121,"endOffset":1637927,"count":93},{"startOffset":1637155,"endOffset":1637229,"count":92},{"startOffset":1637563,"endOffset":1637917,"count":92},{"startOffset":1637957,"endOffset":1637964,"count":0},{"startOffset":1637966,"endOffset":1637991,"count":0},{"startOffset":1638129,"endOffset":1638210,"count":0}],"isBlockCoverage":true},{"functionName":"handleModuleSoftInvalidation","ranges":[{"startOffset":1638343,"endOffset":1640422,"count":140},{"startOffset":1638475,"endOffset":1638498,"count":0},{"startOffset":1638545,"endOffset":1638584,"count":0},{"startOffset":1638608,"endOffset":1638649,"count":0},{"startOffset":1638658,"endOffset":1638693,"count":0},{"startOffset":1638694,"endOffset":1638715,"count":0},{"startOffset":1638717,"endOffset":1640421,"count":0}],"isBlockCoverage":true},{"functionName":"analyzeImportedModDifference","ranges":[{"startOffset":1640424,"endOffset":1641331,"count":0}],"isBlockCoverage":false},{"functionName":"extract_names","ranges":[{"startOffset":1641404,"endOffset":1641498,"count":56}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1641475,"endOffset":1641494,"count":56}],"isBlockCoverage":true},{"functionName":"extract_identifiers","ranges":[{"startOffset":1641640,"endOffset":1642526,"count":56},{"startOffset":1641769,"endOffset":1641972,"count":0},{"startOffset":1641976,"endOffset":1642206,"count":0},{"startOffset":1642210,"endOffset":1642343,"count":0},{"startOffset":1642347,"endOffset":1642423,"count":0},{"startOffset":1642427,"endOffset":1642505,"count":0}],"isBlockCoverage":true},{"functionName":"WalkerBase","ranges":[{"startOffset":1642718,"endOffset":1643094,"count":455}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":1642960,"endOffset":1642991,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":1643004,"endOffset":1643037,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":1643051,"endOffset":1643086,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":1643299,"endOffset":1643515,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":1643697,"endOffset":1643911,"count":0}],"isBlockCoverage":false},{"functionName":"SyncWalker","ranges":[{"startOffset":1644358,"endOffset":1644886,"count":455}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":1644624,"endOffset":1644655,"count":291}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":1644668,"endOffset":1644701,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":1644715,"endOffset":1644750,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":1645079,"endOffset":1647054,"count":27262},{"startOffset":1645463,"endOffset":1645546,"count":0},{"startOffset":1645576,"endOffset":1645622,"count":0},{"startOffset":1645836,"endOffset":1645848,"count":291},{"startOffset":1645848,"endOffset":1645866,"count":26971},{"startOffset":1645866,"endOffset":1645878,"count":0},{"startOffset":1645883,"endOffset":1645948,"count":26971},{"startOffset":1645948,"endOffset":1646452,"count":138995},{"startOffset":1646021,"endOffset":1646049,"count":123053},{"startOffset":1646051,"endOffset":1646447,"count":24054},{"startOffset":1646084,"endOffset":1646366,"count":5931},{"startOffset":1646193,"endOffset":1646359,"count":8848},{"startOffset":1646297,"endOffset":1646342,"count":0},{"startOffset":1646366,"endOffset":1646441,"count":18123},{"startOffset":1646391,"endOffset":1646441,"count":17959},{"startOffset":1646452,"endOffset":1646473,"count":26971},{"startOffset":1646473,"endOffset":1647031,"count":26611},{"startOffset":1646716,"endOffset":1646799,"count":0},{"startOffset":1646829,"endOffset":1646875,"count":0},{"startOffset":1647014,"endOffset":1647026,"count":0},{"startOffset":1647035,"endOffset":1647053,"count":26971}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":1647143,"endOffset":1647282,"count":26971},{"startOffset":1647243,"endOffset":1647276,"count":26807}],"isBlockCoverage":true},{"functionName":"walk$1","ranges":[{"startOffset":1647584,"endOffset":1647709,"count":455}],"isBlockCoverage":true},{"functionName":"ssrTransform","ranges":[{"startOffset":1647999,"endOffset":1648234,"count":95},{"startOffset":1648089,"endOffset":1648100,"count":0},{"startOffset":1648101,"endOffset":1648122,"count":0},{"startOffset":1648124,"endOffset":1648171,"count":0}],"isBlockCoverage":true},{"functionName":"ssrTransformJSON","ranges":[{"startOffset":1648235,"endOffset":1648427,"count":0}],"isBlockCoverage":false},{"functionName":"ssrTransformScript","ranges":[{"startOffset":1648428,"endOffset":1656085,"count":95},{"startOffset":1648591,"endOffset":1648823,"count":0},{"startOffset":1649074,"endOffset":1649079,"count":0},{"startOffset":1649900,"endOffset":1650149,"count":671},{"startOffset":1649945,"endOffset":1649978,"count":291},{"startOffset":1649978,"endOffset":1650145,"count":380},{"startOffset":1650027,"endOffset":1650070,"count":323},{"startOffset":1650071,"endOffset":1650110,"count":266},{"startOffset":1650112,"endOffset":1650145,"count":114},{"startOffset":1650180,"endOffset":1651453,"count":291},{"startOffset":1650752,"endOffset":1651449,"count":404},{"startOffset":1650797,"endOffset":1651248,"count":178},{"startOffset":1650978,"endOffset":1651240,"count":0},{"startOffset":1651248,"endOffset":1651443,"count":226},{"startOffset":1651374,"endOffset":1651443,"count":0},{"startOffset":1651484,"endOffset":1654376,"count":114},{"startOffset":1651534,"endOffset":1653310,"count":57},{"startOffset":1651626,"endOffset":1651673,"count":56},{"startOffset":1651675,"endOffset":1651746,"count":1},{"startOffset":1651746,"endOffset":1651999,"count":56},{"startOffset":1652061,"endOffset":1653304,"count":0},{"startOffset":1653361,"endOffset":1654022,"count":57},{"startOffset":1653471,"endOffset":1653493,"count":0},{"startOffset":1653494,"endOffset":1653545,"count":0},{"startOffset":1653547,"endOffset":1653878,"count":0},{"startOffset":1654069,"endOffset":1654372,"count":0},{"startOffset":1655839,"endOffset":1655856,"count":94},{"startOffset":1655857,"endOffset":1655878,"count":92},{"startOffset":1655879,"endOffset":1655906,"count":92},{"startOffset":1655908,"endOffset":1655979,"count":92}],"isBlockCoverage":true},{"functionName":"defineImport","ranges":[{"startOffset":1649095,"endOffset":1649589,"count":291},{"startOffset":1649312,"endOffset":1649344,"count":1},{"startOffset":1649378,"endOffset":1649411,"count":290},{"startOffset":1649412,"endOffset":1649416,"count":1}],"isBlockCoverage":true},{"functionName":"defineExport","ranges":[{"startOffset":1649592,"endOffset":1649824,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1650290,"endOffset":1650648,"count":404},{"startOffset":1650353,"endOffset":1650567,"count":178},{"startOffset":1650413,"endOffset":1650566,"count":0},{"startOffset":1650567,"endOffset":1650640,"count":226}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1652295,"endOffset":1652316,"count":0}],"isBlockCoverage":false},{"functionName":"onIdentifier","ranges":[{"startOffset":1654395,"endOffset":1655371,"count":1904},{"startOffset":1654547,"endOffset":1654572,"count":875},{"startOffset":1654572,"endOffset":1654608,"count":1029},{"startOffset":1654608,"endOffset":1654627,"count":6},{"startOffset":1654629,"endOffset":1654788,"count":0},{"startOffset":1654788,"endOffset":1655365,"count":1029},{"startOffset":1654835,"endOffset":1654871,"count":0},{"startOffset":1654910,"endOffset":1654937,"count":0},{"startOffset":1654939,"endOffset":1655178,"count":0},{"startOffset":1655282,"endOffset":1655301,"count":0}],"isBlockCoverage":true},{"functionName":"onImportMeta","ranges":[{"startOffset":1655377,"endOffset":1655459,"count":0}],"isBlockCoverage":false},{"functionName":"onDynamicImport","ranges":[{"startOffset":1655465,"endOffset":1655691,"count":29}],"isBlockCoverage":true},{"functionName":"setIsNodeInPattern","ranges":[{"startOffset":1656175,"endOffset":1656217,"count":163}],"isBlockCoverage":true},{"functionName":"isNodeInPattern","ranges":[{"startOffset":1656243,"endOffset":1656285,"count":4837}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":1656287,"endOffset":1660785,"count":95}],"isBlockCoverage":true},{"functionName":"setScope","ranges":[{"startOffset":1656506,"endOffset":1656759,"count":1186},{"startOffset":1656580,"endOffset":1656601,"count":560},{"startOffset":1656603,"endOffset":1656624,"count":0},{"startOffset":1656644,"endOffset":1656731,"count":626}],"isBlockCoverage":true},{"functionName":"isInScope","ranges":[{"startOffset":1656763,"endOffset":1656876,"count":12324}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1656823,"endOffset":1656870,"count":112482},{"startOffset":1656859,"endOffset":1656864,"count":14410}],"isBlockCoverage":true},{"functionName":"handlePattern","ranges":[{"startOffset":1656879,"endOffset":1657688,"count":894},{"startOffset":1656953,"endOffset":1656997,"count":814},{"startOffset":1656997,"endOffset":1657684,"count":80},{"startOffset":1657033,"endOffset":1657086,"count":0},{"startOffset":1657124,"endOffset":1657369,"count":64},{"startOffset":1657369,"endOffset":1657684,"count":16},{"startOffset":1657406,"endOffset":1657543,"count":0},{"startOffset":1657634,"endOffset":1657684,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1657153,"endOffset":1657361,"count":129},{"startOffset":1657214,"endOffset":1657282,"count":11},{"startOffset":1657282,"endOffset":1657353,"count":118}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1657433,"endOffset":1657535,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":1657710,"endOffset":1660411,"count":26902},{"startOffset":1657777,"endOffset":1657814,"count":291},{"startOffset":1657814,"endOffset":1657832,"count":26611},{"startOffset":1657832,"endOffset":1657896,"count":26516},{"startOffset":1657867,"endOffset":1657895,"count":331},{"startOffset":1657898,"endOffset":1657944,"count":26495},{"startOffset":1657944,"endOffset":1657992,"count":26611},{"startOffset":1657992,"endOffset":1658042,"count":862},{"startOffset":1658042,"endOffset":1658082,"count":26611},{"startOffset":1658082,"endOffset":1658112,"count":0},{"startOffset":1658114,"endOffset":1658151,"count":0},{"startOffset":1658151,"endOffset":1658235,"count":26611},{"startOffset":1658195,"endOffset":1658235,"count":29},{"startOffset":1658235,"endOffset":1658274,"count":26611},{"startOffset":1658274,"endOffset":1658447,"count":10420},{"startOffset":1658323,"endOffset":1658368,"count":6780},{"startOffset":1658370,"endOffset":1658439,"count":1904},{"startOffset":1658447,"endOffset":1660405,"count":16191},{"startOffset":1658477,"endOffset":1659629,"count":515},{"startOffset":1658528,"endOffset":1658689,"count":6},{"startOffset":1658617,"endOffset":1658679,"count":1},{"startOffset":1658737,"endOffset":1658747,"count":131},{"startOffset":1658749,"endOffset":1658800,"count":0},{"startOffset":1659629,"endOffset":1660405,"count":15676},{"startOffset":1659673,"endOffset":1659824,"count":22},{"startOffset":1659758,"endOffset":1659816,"count":0},{"startOffset":1659824,"endOffset":1660405,"count":15654},{"startOffset":1659866,"endOffset":1659876,"count":0},{"startOffset":1659878,"endOffset":1659925,"count":0},{"startOffset":1659960,"endOffset":1659994,"count":1827},{"startOffset":1659996,"endOffset":1660039,"count":163},{"startOffset":1660039,"endOffset":1660405,"count":15491},{"startOffset":1660085,"endOffset":1660302,"count":862},{"startOffset":1660233,"endOffset":1660294,"count":689},{"startOffset":1660302,"endOffset":1660405,"count":14629},{"startOffset":1660340,"endOffset":1660353,"count":71},{"startOffset":1660355,"endOffset":1660405,"count":71}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1658829,"endOffset":1659619,"count":360},{"startOffset":1658909,"endOffset":1658978,"count":0},{"startOffset":1659027,"endOffset":1659035,"count":1},{"startOffset":1659036,"endOffset":1659039,"count":359}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":1659055,"endOffset":1659595,"count":360},{"startOffset":1659104,"endOffset":1659110,"count":0},{"startOffset":1659135,"endOffset":1659162,"count":0},{"startOffset":1659164,"endOffset":1659217,"count":0},{"startOffset":1659265,"endOffset":1659272,"count":0},{"startOffset":1659328,"endOffset":1659335,"count":0},{"startOffset":1659361,"endOffset":1659367,"count":0},{"startOffset":1659390,"endOffset":1659429,"count":0},{"startOffset":1659440,"endOffset":1659446,"count":0},{"startOffset":1659468,"endOffset":1659496,"count":0},{"startOffset":1659498,"endOffset":1659539,"count":0}],"isBlockCoverage":true},{"functionName":"leave","ranges":[{"startOffset":1660417,"endOffset":1660653,"count":26611},{"startOffset":1660456,"endOffset":1660520,"count":26516},{"startOffset":1660491,"endOffset":1660519,"count":331},{"startOffset":1660522,"endOffset":1660560,"count":26495},{"startOffset":1660608,"endOffset":1660647,"count":862}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1660682,"endOffset":1660781,"count":1904}],"isBlockCoverage":true},{"functionName":"isRefIdentifier","ranges":[{"startOffset":1660786,"endOffset":1661741,"count":6780},{"startOffset":1660915,"endOffset":1660952,"count":6612},{"startOffset":1660954,"endOffset":1660973,"count":190},{"startOffset":1660975,"endOffset":1660998,"count":182},{"startOffset":1660998,"endOffset":1661027,"count":6598},{"startOffset":1661027,"endOffset":1661150,"count":10},{"startOffset":1661055,"endOffset":1661119,"count":5},{"startOffset":1661119,"endOffset":1661146,"count":0},{"startOffset":1661150,"endOffset":1661192,"count":6593},{"startOffset":1661192,"endOffset":1661211,"count":130},{"startOffset":1661213,"endOffset":1661236,"count":130},{"startOffset":1661236,"endOffset":1661276,"count":6463},{"startOffset":1661276,"endOffset":1661299,"count":1626},{"startOffset":1661299,"endOffset":1661330,"count":4837},{"startOffset":1661330,"endOffset":1661352,"count":45},{"startOffset":1661354,"endOffset":1661377,"count":45},{"startOffset":1661377,"endOffset":1661415,"count":4792},{"startOffset":1661415,"endOffset":1661467,"count":0},{"startOffset":1661469,"endOffset":1661492,"count":0},{"startOffset":1661492,"endOffset":1661534,"count":4792},{"startOffset":1661534,"endOffset":1661559,"count":3744},{"startOffset":1661560,"endOffset":1661579,"count":2888},{"startOffset":1661581,"endOffset":1661604,"count":2888},{"startOffset":1661604,"endOffset":1661646,"count":1904},{"startOffset":1661646,"endOffset":1661669,"count":0},{"startOffset":1661669,"endOffset":1661701,"count":1904},{"startOffset":1661701,"endOffset":1661724,"count":0},{"startOffset":1661724,"endOffset":1661740,"count":1904}],"isBlockCoverage":true},{"functionName":"isStaticProperty","ranges":[{"startOffset":1661767,"endOffset":1661827,"count":7852},{"startOffset":1661782,"endOffset":1661809,"count":7492},{"startOffset":1661810,"endOffset":1661827,"count":1719}],"isBlockCoverage":true},{"functionName":"isStaticPropertyKey","ranges":[{"startOffset":1661857,"endOffset":1661922,"count":6823},{"startOffset":1661900,"endOffset":1661922,"count":1713}],"isBlockCoverage":true},{"functionName":"isFunction$1","ranges":[{"startOffset":1661998,"endOffset":1662074,"count":22789}],"isBlockCoverage":true},{"functionName":"isBlock","ranges":[{"startOffset":1662144,"endOffset":1662212,"count":1809}],"isBlockCoverage":true},{"functionName":"findParentScope","ranges":[{"startOffset":1662213,"endOffset":1662328,"count":890},{"startOffset":1662300,"endOffset":1662314,"count":0}],"isBlockCoverage":true},{"functionName":"isInDestructuringAssignment","ranges":[{"startOffset":1662329,"endOffset":1662563,"count":0}],"isBlockCoverage":false},{"functionName":"calculateOffsetOnce","ranges":[{"startOffset":1662577,"endOffset":1662828,"count":0}],"isBlockCoverage":false},{"functionName":"ssrRewriteStacktrace","ranges":[{"startOffset":1662829,"endOffset":1664069,"count":0}],"isBlockCoverage":false},{"functionName":"rebindErrorStacktrace","ranges":[{"startOffset":1664070,"endOffset":1664434,"count":0}],"isBlockCoverage":false},{"functionName":"ssrFixStacktrace","ranges":[{"startOffset":1664493,"endOffset":1664737,"count":0}],"isBlockCoverage":false},{"functionName":"ssrLoadModule","ranges":[{"startOffset":1664905,"endOffset":1665300,"count":0}],"isBlockCoverage":false},{"functionName":"instantiateModule","ranges":[{"startOffset":1665301,"endOffset":1669485,"count":0}],"isBlockCoverage":false},{"functionName":"addPendingModuleDependency","ranges":[{"startOffset":1669486,"endOffset":1669757,"count":0}],"isBlockCoverage":false},{"functionName":"checkModuleDependencyExists","ranges":[{"startOffset":1669758,"endOffset":1670353,"count":0}],"isBlockCoverage":false},{"functionName":"nodeImport","ranges":[{"startOffset":1670354,"endOffset":1671311,"count":0}],"isBlockCoverage":false},{"functionName":"proxyESM","ranges":[{"startOffset":1671312,"endOffset":1671797,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":1671798,"endOffset":1671906,"count":0}],"isBlockCoverage":false},{"functionName":"hasDockerEnv","ranges":[{"startOffset":1671990,"endOffset":1672105,"count":0}],"isBlockCoverage":false},{"functionName":"hasDockerCGroup","ranges":[{"startOffset":1672107,"endOffset":1672254,"count":0}],"isBlockCoverage":false},{"functionName":"isDocker_1","ranges":[{"startOffset":1672273,"endOffset":1672391,"count":0}],"isBlockCoverage":false},{"functionName":"isWsl$1","ranges":[{"startOffset":1672499,"endOffset":1672842,"count":1},{"startOffset":1672562,"endOffset":1672797,"count":0},{"startOffset":1672798,"endOffset":1672805,"count":0},{"startOffset":1672810,"endOffset":1672840,"count":0}],"isBlockCoverage":true},{"functionName":"defineLazyProp","ranges":[{"startOffset":1673008,"endOffset":1673379,"count":3}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":1673056,"endOffset":1673151,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1673245,"endOffset":1673317,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1673321,"endOffset":1673355,"count":0}],"isBlockCoverage":false},{"functionName":"hasContainerEnv","ranges":[{"startOffset":1673790,"endOffset":1673890,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideContainer","ranges":[{"startOffset":1673911,"endOffset":1674054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1674183,"endOffset":1675106,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1674362,"endOffset":1675103,"count":0}],"isBlockCoverage":false},{"functionName":"pTryEach","ranges":[{"startOffset":1675129,"endOffset":1675355,"count":0}],"isBlockCoverage":false},{"functionName":"baseOpen","ranges":[{"startOffset":1675375,"endOffset":1679142,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":1679158,"endOffset":1679314,"count":0}],"isBlockCoverage":false},{"functionName":"openApp","ranges":[{"startOffset":1679333,"endOffset":1679738,"count":0}],"isBlockCoverage":false},{"functionName":"detectArchBinary","ranges":[{"startOffset":1679741,"endOffset":1679989,"count":0}],"isBlockCoverage":false},{"functionName":"detectPlatformBinary","ranges":[{"startOffset":1679991,"endOffset":1680239,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1680294,"endOffset":1680658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1680698,"endOffset":1680888,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1680925,"endOffset":1681128,"count":0}],"isBlockCoverage":false},{"functionName":"requireWindows","ranges":[{"startOffset":1681326,"endOffset":1682371,"count":1},{"startOffset":1681380,"endOffset":1681395,"count":0}],"isBlockCoverage":true},{"functionName":"checkPathExt","ranges":[{"startOffset":1681493,"endOffset":1681955,"count":0}],"isBlockCoverage":false},{"functionName":"checkStat","ranges":[{"startOffset":1681958,"endOffset":1682115,"count":0}],"isBlockCoverage":false},{"functionName":"isexe","ranges":[{"startOffset":1682118,"endOffset":1682261,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1682264,"endOffset":1682352,"count":0}],"isBlockCoverage":false},{"functionName":"requireMode","ranges":[{"startOffset":1682405,"endOffset":1683455,"count":0}],"isBlockCoverage":false},{"functionName":"isexe$1","ranges":[{"startOffset":1683645,"endOffset":1684375,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1684377,"endOffset":1684638,"count":0}],"isBlockCoverage":false},{"functionName":"getNotFoundError","ranges":[{"startOffset":1684880,"endOffset":1684956,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":1684979,"endOffset":1685792,"count":0}],"isBlockCoverage":false},{"functionName":"which$1","ranges":[{"startOffset":1685811,"endOffset":1686939,"count":0}],"isBlockCoverage":false},{"functionName":"whichSync","ranges":[{"startOffset":1686960,"endOffset":1687788,"count":0}],"isBlockCoverage":false},{"functionName":"pathKey","ranges":[{"startOffset":1687889,"endOffset":1688162,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCommandAttempt","ranges":[{"startOffset":1688409,"endOffset":1689699,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCommand$1","ranges":[{"startOffset":1689701,"endOffset":1689819,"count":0}],"isBlockCoverage":false},{"functionName":"escapeCommand","ranges":[{"startOffset":1689988,"endOffset":1690108,"count":0}],"isBlockCoverage":false},{"functionName":"escapeArgument","ranges":[{"startOffset":1690110,"endOffset":1690955,"count":0}],"isBlockCoverage":false},{"functionName":"shebangCommand$1","ranges":[{"startOffset":1691120,"endOffset":1691426,"count":0}],"isBlockCoverage":false},{"functionName":"readShebang$1","ranges":[{"startOffset":1691503,"endOffset":1691929,"count":0}],"isBlockCoverage":false},{"functionName":"detectShebang","ranges":[{"startOffset":1692258,"endOffset":1692563,"count":0}],"isBlockCoverage":false},{"functionName":"parseNonShell","ranges":[{"startOffset":1692565,"endOffset":1694277,"count":0}],"isBlockCoverage":false},{"functionName":"parse$4","ranges":[{"startOffset":1694279,"endOffset":1694951,"count":0}],"isBlockCoverage":false},{"functionName":"notFoundError","ranges":[{"startOffset":1695022,"endOffset":1695320,"count":0}],"isBlockCoverage":false},{"functionName":"hookChildProcess","ranges":[{"startOffset":1695322,"endOffset":1695976,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENT","ranges":[{"startOffset":1695978,"endOffset":1696148,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENTSync","ranges":[{"startOffset":1696150,"endOffset":1696328,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":1696508,"endOffset":1696968,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":1696970,"endOffset":1697419,"count":0}],"isBlockCoverage":false},{"functionName":"openBrowser","ranges":[{"startOffset":1697712,"endOffset":1698097,"count":0}],"isBlockCoverage":false},{"functionName":"executeNodeScript","ranges":[{"startOffset":1698098,"endOffset":1698606,"count":0}],"isBlockCoverage":false},{"functionName":"startBrowserProcess","ranges":[{"startOffset":1698803,"endOffset":1700153,"count":0}],"isBlockCoverage":false},{"functionName":"execAsync","ranges":[{"startOffset":1700154,"endOffset":1700401,"count":0}],"isBlockCoverage":false},{"functionName":"bindCLIShortcuts","ranges":[{"startOffset":1700403,"endOffset":1701915,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":1702006,"endOffset":1702077,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":1702141,"endOffset":1702226,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":1702290,"endOffset":1702340,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":1702402,"endOffset":1702473,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":1702526,"endOffset":1702646,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":1702745,"endOffset":1703019,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":1703072,"endOffset":1703192,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedOutDirs","ranges":[{"startOffset":1703201,"endOffset":1703517,"count":1},{"startOffset":1703386,"endOffset":1703516,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1703443,"endOffset":1703504,"count":0}],"isBlockCoverage":false},{"functionName":"resolveEmptyOutDir","ranges":[{"startOffset":1703518,"endOffset":1704039,"count":1},{"startOffset":1703630,"endOffset":1704038,"count":0}],"isBlockCoverage":true},{"functionName":"resolveChokidarOptions","ranges":[{"startOffset":1704040,"endOffset":1704667,"count":1},{"startOffset":1704183,"endOffset":1704188,"count":0},{"startOffset":1704395,"endOffset":1704504,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1704449,"endOffset":1704492,"count":0}],"isBlockCoverage":false},{"functionName":"NoopWatcher","ranges":[{"startOffset":1704713,"endOffset":1704780,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1704783,"endOffset":1704811,"count":94}],"isBlockCoverage":true},{"functionName":"unwatch","ranges":[{"startOffset":1704814,"endOffset":1704846,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":1704849,"endOffset":1704882,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":1704885,"endOffset":1704913,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":1704916,"endOffset":1704946,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1704949,"endOffset":1704968,"count":2}],"isBlockCoverage":true},{"functionName":"createNoopWatcher","ranges":[{"startOffset":1704971,"endOffset":1705045,"count":1}],"isBlockCoverage":true},{"functionName":"fetchModule","ranges":[{"startOffset":1705047,"endOffset":1707167,"count":0}],"isBlockCoverage":false},{"functionName":"inlineSourceMap","ranges":[{"startOffset":1707304,"endOffset":1707881,"count":0}],"isBlockCoverage":false},{"functionName":"ssrFetchModule","ranges":[{"startOffset":1707883,"endOffset":1708151,"count":0}],"isBlockCoverage":false},{"functionName":"NOOP","ranges":[{"startOffset":1708674,"endOffset":1708682,"count":0}],"isBlockCoverage":false},{"functionName":"concat$1","ranges":[{"startOffset":1709026,"endOffset":1709475,"count":0}],"isBlockCoverage":false},{"functionName":"_mask","ranges":[{"startOffset":1709805,"endOffset":1709952,"count":0}],"isBlockCoverage":false},{"functionName":"_unmask","ranges":[{"startOffset":1710105,"endOffset":1710217,"count":0}],"isBlockCoverage":false},{"functionName":"toArrayBuffer$1","ranges":[{"startOffset":1710370,"endOffset":1710549,"count":0}],"isBlockCoverage":false},{"functionName":"toBuffer$2","ranges":[{"startOffset":1710700,"endOffset":1711094,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUtil$1.exports.mask","ranges":[{"startOffset":1711389,"endOffset":1711578,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUtil$1.exports.unmask","ranges":[{"startOffset":1711615,"endOffset":1711743,"count":0}],"isBlockCoverage":false},{"functionName":"Limiter","ranges":[{"startOffset":1712225,"endOffset":1712420,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":1712526,"endOffset":1712583,"count":0}],"isBlockCoverage":false},{"functionName":"Limiter$1","ranges":[{"startOffset":1712677,"endOffset":1712861,"count":0}],"isBlockCoverage":false},{"functionName":"PerMessageDeflate","ranges":[{"startOffset":1714979,"endOffset":1715526,"count":0}],"isBlockCoverage":false},{"functionName":"get extensionName","ranges":[{"startOffset":1715569,"endOffset":1715627,"count":0}],"isBlockCoverage":false},{"functionName":"offer","ranges":[{"startOffset":1715748,"endOffset":1716363,"count":0}],"isBlockCoverage":false},{"functionName":"accept","ranges":[{"startOffset":1716571,"endOffset":1716806,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":1716891,"endOffset":1717301,"count":0}],"isBlockCoverage":false},{"functionName":"acceptAsServer","ranges":[{"startOffset":1717486,"endOffset":1718830,"count":0}],"isBlockCoverage":false},{"functionName":"acceptAsClient","ranges":[{"startOffset":1719022,"endOffset":1719815,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParams","ranges":[{"startOffset":1720021,"endOffset":1721561,"count":0}],"isBlockCoverage":false},{"functionName":"decompress","ranges":[{"startOffset":1721798,"endOffset":1721985,"count":0}],"isBlockCoverage":false},{"functionName":"compress","ranges":[{"startOffset":1722230,"endOffset":1722413,"count":0}],"isBlockCoverage":false},{"functionName":"_decompress","ranges":[{"startOffset":1722630,"endOffset":1724090,"count":0}],"isBlockCoverage":false},{"functionName":"_compress","ranges":[{"startOffset":1724315,"endOffset":1725748,"count":0}],"isBlockCoverage":false},{"functionName":"deflateOnData","ranges":[{"startOffset":1725927,"endOffset":1726028,"count":0}],"isBlockCoverage":false},{"functionName":"inflateOnData","ranges":[{"startOffset":1726158,"endOffset":1726630,"count":0}],"isBlockCoverage":false},{"functionName":"inflateOnError","ranges":[{"startOffset":1726760,"endOffset":1727013,"count":0}],"isBlockCoverage":false},{"functionName":"isValidStatusCode$2","ranges":[{"startOffset":1728073,"endOffset":1728275,"count":0}],"isBlockCoverage":false},{"functionName":"_isValidUTF8","ranges":[{"startOffset":1728563,"endOffset":1729888,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob$2","ranges":[{"startOffset":1730064,"endOffset":1730372,"count":0}],"isBlockCoverage":false},{"functionName":"validation.exports.isValidUTF8","ranges":[{"startOffset":1730568,"endOffset":1730650,"count":0}],"isBlockCoverage":false},{"functionName":"validation.exports.isValidUTF8","ranges":[{"startOffset":1730825,"endOffset":1730916,"count":0}],"isBlockCoverage":false},{"functionName":"Receiver","ranges":[{"startOffset":1732549,"endOffset":1733444,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1733679,"endOffset":1733880,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1734058,"endOffset":1734927,"count":0}],"isBlockCoverage":false},{"functionName":"startLoop","ranges":[{"startOffset":1735027,"endOffset":1735657,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1735770,"endOffset":1739444,"count":0}],"isBlockCoverage":false},{"functionName":"getPayloadLength16","ranges":[{"startOffset":1739556,"endOffset":1739750,"count":0}],"isBlockCoverage":false},{"functionName":"getPayloadLength64","ranges":[{"startOffset":1739862,"endOffset":1740579,"count":0}],"isBlockCoverage":false},{"functionName":"haveLength","ranges":[{"startOffset":1740684,"endOffset":1741215,"count":0}],"isBlockCoverage":false},{"functionName":"getMask","ranges":[{"startOffset":1741273,"endOffset":1741432,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":1741525,"endOffset":1742412,"count":0}],"isBlockCoverage":false},{"functionName":"decompress","ranges":[{"startOffset":1742548,"endOffset":1743293,"count":0}],"isBlockCoverage":false},{"functionName":"dataMessage","ranges":[{"startOffset":1743392,"endOffset":1745105,"count":0}],"isBlockCoverage":false},{"functionName":"controlMessage","ranges":[{"startOffset":1745274,"endOffset":1746741,"count":0}],"isBlockCoverage":false},{"functionName":"createError","ranges":[{"startOffset":1747175,"endOffset":1747527,"count":0}],"isBlockCoverage":false},{"functionName":"Sender","ranges":[{"startOffset":1748536,"endOffset":1748973,"count":0}],"isBlockCoverage":false},{"functionName":"frame","ranges":[{"startOffset":1749851,"endOffset":1752359,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1752693,"endOffset":1753845,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":1754077,"endOffset":1755176,"count":0}],"isBlockCoverage":false},{"functionName":"pong","ranges":[{"startOffset":1755408,"endOffset":1756507,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1757095,"endOffset":1758765,"count":0}],"isBlockCoverage":false},{"functionName":"getBlobData","ranges":[{"startOffset":1759678,"endOffset":1760876,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":1761787,"endOffset":1762557,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":1762630,"endOffset":1762862,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":1762983,"endOffset":1763085,"count":0}],"isBlockCoverage":false},{"functionName":"sendFrame","ranges":[{"startOffset":1763223,"endOffset":1763465,"count":0}],"isBlockCoverage":false},{"functionName":"callCallbacks","ranges":[{"startOffset":1763710,"endOffset":1763991,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":1764178,"endOffset":1764272,"count":0}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":1764867,"endOffset":1764940,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":1764971,"endOffset":1765015,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":1765051,"endOffset":1765091,"count":0}],"isBlockCoverage":false},{"functionName":"CloseEvent","ranges":[{"startOffset":1765908,"endOffset":1766181,"count":0}],"isBlockCoverage":false},{"functionName":"get code","ranges":[{"startOffset":1766217,"endOffset":1766257,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":1766293,"endOffset":1766337,"count":0}],"isBlockCoverage":false},{"functionName":"get wasClean","ranges":[{"startOffset":1766374,"endOffset":1766422,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorEvent","ranges":[{"startOffset":1767123,"endOffset":1767324,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":1767355,"endOffset":1767397,"count":0}],"isBlockCoverage":false},{"functionName":"get message","ranges":[{"startOffset":1767433,"endOffset":1767479,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":1768031,"endOffset":1768154,"count":0}],"isBlockCoverage":false},{"functionName":"get data","ranges":[{"startOffset":1768185,"endOffset":1768225,"count":0}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":1768989,"endOffset":1770646,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":1770848,"endOffset":1771097,"count":0}],"isBlockCoverage":false},{"functionName":"callListener","ranges":[{"startOffset":1771445,"endOffset":1771656,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":1772048,"endOffset":1772166,"count":0}],"isBlockCoverage":false},{"functionName":"parse$2","ranges":[{"startOffset":1772348,"endOffset":1776880,"count":0}],"isBlockCoverage":false},{"functionName":"format$1","ranges":[{"startOffset":1777101,"endOffset":1777810,"count":0}],"isBlockCoverage":false},{"functionName":"WebSocket","ranges":[{"startOffset":1779282,"endOffset":1780347,"count":0}],"isBlockCoverage":false},{"functionName":"get binaryType","ranges":[{"startOffset":1780493,"endOffset":1780544,"count":0}],"isBlockCoverage":false},{"functionName":"set binaryType","ranges":[{"startOffset":1780548,"endOffset":1780772,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferedAmount","ranges":[{"startOffset":1780808,"endOffset":1780964,"count":0}],"isBlockCoverage":false},{"functionName":"get extensions","ranges":[{"startOffset":1781000,"endOffset":1781071,"count":0}],"isBlockCoverage":false},{"functionName":"get isPaused","ranges":[{"startOffset":1781108,"endOffset":1781153,"count":0}],"isBlockCoverage":false},{"functionName":"get onclose","ranges":[{"startOffset":1781220,"endOffset":1781256,"count":0}],"isBlockCoverage":false},{"functionName":"get onerror","ranges":[{"startOffset":1781323,"endOffset":1781359,"count":0}],"isBlockCoverage":false},{"functionName":"get onopen","ranges":[{"startOffset":1781426,"endOffset":1781461,"count":0}],"isBlockCoverage":false},{"functionName":"get onmessage","ranges":[{"startOffset":1781528,"endOffset":1781566,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":1781602,"endOffset":1781649,"count":0}],"isBlockCoverage":false},{"functionName":"get readyState","ranges":[{"startOffset":1781685,"endOffset":1781736,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":1781772,"endOffset":1781809,"count":0}],"isBlockCoverage":false},{"functionName":"setSocket","ranges":[{"startOffset":1782602,"endOffset":1783960,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":1784026,"endOffset":1784477,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1785321,"endOffset":1786340,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":1786397,"endOffset":1786592,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":1786830,"endOffset":1787440,"count":0}],"isBlockCoverage":false},{"functionName":"pong","ranges":[{"startOffset":1787678,"endOffset":1788288,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":1788346,"endOffset":1788590,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1789176,"endOffset":1789898,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":1789968,"endOffset":1790342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1791929,"endOffset":1792026,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1792234,"endOffset":1792870,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1792338,"endOffset":1792506,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1792512,"endOffset":1792862,"count":0}],"isBlockCoverage":false},{"functionName":"initAsClient","ranges":[{"startOffset":1794676,"endOffset":1805261,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorAndClose","ranges":[{"startOffset":1805421,"endOffset":1805707,"count":0}],"isBlockCoverage":false},{"functionName":"netConnect","ranges":[{"startOffset":1805908,"endOffset":1806008,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnect","ranges":[{"startOffset":1806215,"endOffset":1806439,"count":0}],"isBlockCoverage":false},{"functionName":"abortHandshake$1","ranges":[{"startOffset":1806721,"endOffset":1807506,"count":0}],"isBlockCoverage":false},{"functionName":"sendAfterClose","ranges":[{"startOffset":1807797,"endOffset":1808532,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnConclude","ranges":[{"startOffset":1808700,"endOffset":1809140,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnDrain","ranges":[{"startOffset":1809216,"endOffset":1809342,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnError","ranges":[{"startOffset":1809471,"endOffset":1810007,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnFinish","ranges":[{"startOffset":1810084,"endOffset":1810149,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnMessage","ranges":[{"startOffset":1810361,"endOffset":1810461,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnPing","ranges":[{"startOffset":1810596,"endOffset":1810776,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnPong","ranges":[{"startOffset":1810911,"endOffset":1810985,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":1811086,"endOffset":1811132,"count":0}],"isBlockCoverage":false},{"functionName":"senderOnError","ranges":[{"startOffset":1811222,"endOffset":1811851,"count":0}],"isBlockCoverage":false},{"functionName":"setCloseTimer","ranges":[{"startOffset":1811999,"endOffset":1812151,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":1812223,"endOffset":1813631,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":1813743,"endOffset":1813849,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":1813919,"endOffset":1814076,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError$1","ranges":[{"startOffset":1814148,"endOffset":1814389,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1814630,"endOffset":1815838,"count":0}],"isBlockCoverage":false},{"functionName":"WebSocketServer","ranges":[{"startOffset":1818249,"endOffset":1820232,"count":1},{"startOffset":1818817,"endOffset":1818837,"count":0},{"startOffset":1818870,"endOffset":1818909,"count":0},{"startOffset":1818963,"endOffset":1819113,"count":0},{"startOffset":1819145,"endOffset":1819533,"count":0},{"startOffset":1820032,"endOffset":1820063,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1819188,"endOffset":1819403,"count":0}],"isBlockCoverage":false},{"functionName":"upgrade","ranges":[{"startOffset":1819871,"endOffset":1819970,"count":0}],"isBlockCoverage":false},{"functionName":"address","ranges":[{"startOffset":1820583,"endOffset":1820778,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1821012,"endOffset":1822091,"count":1},{"startOffset":1821056,"endOffset":1821244,"count":0},{"startOffset":1821316,"endOffset":1821323,"count":0},{"startOffset":1821643,"endOffset":1821700,"count":0},{"startOffset":1821708,"endOffset":1821766,"count":0},{"startOffset":1821772,"endOffset":1822087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1821101,"endOffset":1821172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1822039,"endOffset":1822079,"count":0}],"isBlockCoverage":false},{"functionName":"shouldHandle","ranges":[{"startOffset":1822329,"endOffset":1822577,"count":0}],"isBlockCoverage":false},{"functionName":"handleUpgrade","ranges":[{"startOffset":1822883,"endOffset":1826254,"count":0}],"isBlockCoverage":false},{"functionName":"completeUpgrade","ranges":[{"startOffset":1826804,"endOffset":1829055,"count":0}],"isBlockCoverage":false},{"functionName":"addListeners","ranges":[{"startOffset":1829411,"endOffset":1829661,"count":1},{"startOffset":1829488,"endOffset":1829517,"count":3}],"isBlockCoverage":true},{"functionName":"removeListeners","ranges":[{"startOffset":1829528,"endOffset":1829658,"count":1},{"startOffset":1829599,"endOffset":1829654,"count":3}],"isBlockCoverage":true},{"functionName":"emitClose","ranges":[{"startOffset":1829784,"endOffset":1829864,"count":1}],"isBlockCoverage":true},{"functionName":"socketOnError","ranges":[{"startOffset":1829914,"endOffset":1829960,"count":0}],"isBlockCoverage":false},{"functionName":"abortHandshake","ranges":[{"startOffset":1830275,"endOffset":1831227,"count":0}],"isBlockCoverage":false},{"functionName":"abortHandshakeOrEmitwsClientError","ranges":[{"startOffset":1831665,"endOffset":1832010,"count":0}],"isBlockCoverage":false},{"functionName":"noop$1","ranges":[{"startOffset":1832398,"endOffset":1832419,"count":0}],"isBlockCoverage":false},{"functionName":"createWebSocketServer","ranges":[{"startOffset":1832420,"endOffset":1837978,"count":1},{"startOffset":1832517,"endOffset":1832742,"count":0},{"startOffset":1832827,"endOffset":1832847,"count":0},{"startOffset":1832873,"endOffset":1832886,"count":0},{"startOffset":1832910,"endOffset":1832921,"count":0},{"startOffset":1832961,"endOffset":1832994,"count":0},{"startOffset":1833242,"endOffset":1833253,"count":0},{"startOffset":1833281,"endOffset":1833808,"count":0},{"startOffset":1834191,"endOffset":1834256,"count":0}],"isBlockCoverage":true},{"functionName":"get clients","ranges":[{"startOffset":1832556,"endOffset":1832621,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1832629,"endOffset":1832652,"count":0}],"isBlockCoverage":false},{"functionName":"hmrServerWsListener","ranges":[{"startOffset":1833517,"endOffset":1833754,"count":0}],"isBlockCoverage":false},{"functionName":"route","ranges":[{"startOffset":1833834,"endOffset":1834167,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1834401,"endOffset":1835216,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1835237,"endOffset":1835562,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketClient","ranges":[{"startOffset":1835567,"endOffset":1836082,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":1836150,"endOffset":1836203,"count":1}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":1836213,"endOffset":1836479,"count":1},{"startOffset":1836272,"endOffset":1836290,"count":0}],"isBlockCoverage":true},{"functionName":"off","ranges":[{"startOffset":1836490,"endOffset":1836655,"count":0}],"isBlockCoverage":false},{"functionName":"get clients","ranges":[{"startOffset":1836661,"endOffset":1836750,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1836756,"endOffset":1837296,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1837302,"endOffset":1837971,"count":1},{"startOffset":1837342,"endOffset":1837353,"count":0},{"startOffset":1837355,"endOffset":1837418,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1837444,"endOffset":1837963,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1837495,"endOffset":1837548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1837569,"endOffset":1837953,"count":1},{"startOffset":1837599,"endOffset":1837637,"count":0},{"startOffset":1837885,"endOffset":1837931,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1837710,"endOffset":1837869,"count":1},{"startOffset":1837748,"endOffset":1837799,"count":0}],"isBlockCoverage":true},{"functionName":"baseMiddleware","ranges":[{"startOffset":1837980,"endOffset":1839173,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1839246,"endOffset":1848647,"count":1}],"isBlockCoverage":true},{"functionName":"Events","ranges":[{"startOffset":1839510,"endOffset":1839530,"count":1}],"isBlockCoverage":true},{"functionName":"EE","ranges":[{"startOffset":1840465,"endOffset":1840574,"count":0}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":1840983,"endOffset":1841494,"count":0}],"isBlockCoverage":false},{"functionName":"clearEvent","ranges":[{"startOffset":1841674,"endOffset":1841818,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":1841966,"endOffset":1842052,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":1842229,"endOffset":1842599,"count":0}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":1842817,"endOffset":1843124,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":1843354,"endOffset":1843560,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1843805,"endOffset":1845529,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":1845831,"endOffset":1845923,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":1846236,"endOffset":1846329,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":1846737,"endOffset":1847714,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":1847936,"endOffset":1848195,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":1849072,"endOffset":1849476,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1849480,"endOffset":1856278,"count":1}],"isBlockCoverage":true},{"functionName":"common.setupOutgoing","ranges":[{"startOffset":1850371,"endOffset":1852764,"count":0}],"isBlockCoverage":false},{"functionName":"common.setupSocket","ranges":[{"startOffset":1853116,"endOffset":1853243,"count":0}],"isBlockCoverage":false},{"functionName":"common.getPort","ranges":[{"startOffset":1853470,"endOffset":1853646,"count":0}],"isBlockCoverage":false},{"functionName":"common.hasEncryptedConnection","ranges":[{"startOffset":1853889,"endOffset":1853975,"count":0}],"isBlockCoverage":false},{"functionName":"common.urlJoin","ranges":[{"startOffset":1854150,"endOffset":1855011,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteCookieProperty","ranges":[{"startOffset":1855317,"endOffset":1856050,"count":0}],"isBlockCoverage":false},{"functionName":"hasPort","ranges":[{"startOffset":1856218,"endOffset":1856277,"count":0}],"isBlockCoverage":false},{"functionName":"removeChunked","ranges":[{"startOffset":1856882,"endOffset":1857025,"count":0}],"isBlockCoverage":false},{"functionName":"setConnection","ranges":[{"startOffset":1857382,"endOffset":1857696,"count":0}],"isBlockCoverage":false},{"functionName":"setRedirectHostRewrite","ranges":[{"startOffset":1857725,"endOffset":1858515,"count":0}],"isBlockCoverage":false},{"functionName":"writeHeaders","ranges":[{"startOffset":1858921,"endOffset":1860641,"count":0}],"isBlockCoverage":false},{"functionName":"writeStatusCode","ranges":[{"startOffset":1860918,"endOffset":1861243,"count":0}],"isBlockCoverage":false},{"functionName":"debug_1","ranges":[{"startOffset":1861317,"endOffset":1861607,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1862379,"endOffset":1862513,"count":6}],"isBlockCoverage":true},{"functionName":"eventHandlers.<computed>","ranges":[{"startOffset":1862423,"endOffset":1862510,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest","ranges":[{"startOffset":1863237,"endOffset":1864051,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.abort","ranges":[{"startOffset":1864158,"endOffset":1864267,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.destroy","ranges":[{"startOffset":1864310,"endOffset":1864421,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.write","ranges":[{"startOffset":1864516,"endOffset":1865591,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.end","ranges":[{"startOffset":1865665,"endOffset":1866281,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.setHeader","ranges":[{"startOffset":1866379,"endOffset":1866491,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.removeHeader","ranges":[{"startOffset":1866594,"endOffset":1866694,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.setTimeout","ranges":[{"startOffset":1866786,"endOffset":1868394,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1868526,"endOffset":1868659,"count":4}],"isBlockCoverage":true},{"functionName":"RedirectableRequest.<computed>","ranges":[{"startOffset":1868588,"endOffset":1868656,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1868752,"endOffset":1868913,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1868850,"endOffset":1868904,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest._sanitizeOptions","ranges":[{"startOffset":1868966,"endOffset":1869787,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest._performRequest","ranges":[{"startOffset":1869897,"endOffset":1872045,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest._processResponse","ranges":[{"startOffset":1872153,"endOffset":1876439,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":1876513,"endOffset":1878513,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1876730,"endOffset":1878491,"count":2}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":1876982,"endOffset":1877970,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1878027,"endOffset":1878208,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1878515,"endOffset":1878546,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":1878548,"endOffset":1878882,"count":0}],"isBlockCoverage":false},{"functionName":"resolveUrl","ranges":[{"startOffset":1878884,"endOffset":1879043,"count":0}],"isBlockCoverage":false},{"functionName":"validateUrl","ranges":[{"startOffset":1879045,"endOffset":1879387,"count":0}],"isBlockCoverage":false},{"functionName":"spreadUrlObject","ranges":[{"startOffset":1879389,"endOffset":1879887,"count":0}],"isBlockCoverage":false},{"functionName":"removeMatchingHeaders","ranges":[{"startOffset":1879889,"endOffset":1880203,"count":0}],"isBlockCoverage":false},{"functionName":"createErrorType","ranges":[{"startOffset":1880205,"endOffset":1880864,"count":5},{"startOffset":1880613,"endOffset":1880621,"count":3}],"isBlockCoverage":true},{"functionName":"CustomError","ranges":[{"startOffset":1880284,"endOffset":1880519,"count":1},{"startOffset":1880467,"endOffset":1880504,"count":0}],"isBlockCoverage":true},{"functionName":"destroyRequest","ranges":[{"startOffset":1880866,"endOffset":1881055,"count":0}],"isBlockCoverage":false},{"functionName":"isSubdomain","ranges":[{"startOffset":1881057,"endOffset":1881275,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":1881277,"endOffset":1881368,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":1881370,"endOffset":1881438,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":1881440,"endOffset":1881527,"count":0}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":1881529,"endOffset":1881596,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1881967,"endOffset":1882007,"count":5}],"isBlockCoverage":true},{"functionName":"deleteLength","ranges":[{"startOffset":1882562,"endOffset":1882809,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":1883092,"endOffset":1883211,"count":0}],"isBlockCoverage":false},{"functionName":"XHeaders","ranges":[{"startOffset":1883485,"endOffset":1884155,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":1884523,"endOffset":1887642,"count":0}],"isBlockCoverage":false},{"functionName":"checkMethodAndHeader","ranges":[{"startOffset":1888200,"endOffset":1888464,"count":0}],"isBlockCoverage":false},{"functionName":"XHeaders","ranges":[{"startOffset":1888720,"endOffset":1889239,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":1889561,"endOffset":1892189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1892195,"endOffset":1897071,"count":1}],"isBlockCoverage":true},{"functionName":"createRightProxy","ranges":[{"startOffset":1892836,"endOffset":1894536,"count":0}],"isBlockCoverage":false},{"functionName":"ProxyServer","ranges":[{"startOffset":1894587,"endOffset":1895141,"count":0}],"isBlockCoverage":false},{"functionName":"ProxyServer.onError","ranges":[{"startOffset":1895219,"endOffset":1895422,"count":0}],"isBlockCoverage":false},{"functionName":"ProxyServer.listen","ranges":[{"startOffset":1895457,"endOffset":1895878,"count":0}],"isBlockCoverage":false},{"functionName":"ProxyServer.close","ranges":[{"startOffset":1895912,"endOffset":1896211,"count":0}],"isBlockCoverage":false},{"functionName":"ProxyServer.before","ranges":[{"startOffset":1896246,"endOffset":1896639,"count":0}],"isBlockCoverage":false},{"functionName":"ProxyServer.after","ranges":[{"startOffset":1896672,"endOffset":1897067,"count":0}],"isBlockCoverage":false},{"functionName":"createProxyServer","ranges":[{"startOffset":1897595,"endOffset":1899447,"count":0}],"isBlockCoverage":false},{"functionName":"rewriteOriginHeader","ranges":[{"startOffset":1900196,"endOffset":1900705,"count":0}],"isBlockCoverage":false},{"functionName":"proxyMiddleware","ranges":[{"startOffset":1900707,"endOffset":1904190,"count":0}],"isBlockCoverage":false},{"functionName":"doesProxyContextMatchUrl","ranges":[{"startOffset":1904191,"endOffset":1904331,"count":0}],"isBlockCoverage":false},{"functionName":"htmlFallbackMiddleware","ranges":[{"startOffset":1904387,"endOffset":1906096,"count":1}],"isBlockCoverage":true},{"functionName":"viteHtmlFallbackMiddleware","ranges":[{"startOffset":1904474,"endOffset":1906093,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1906283,"endOffset":1907646,"count":0}],"isBlockCoverage":false},{"functionName":"cachedTransformMiddleware","ranges":[{"startOffset":1907769,"endOffset":1908395,"count":1}],"isBlockCoverage":true},{"functionName":"viteCachedTransformMiddleware","ranges":[{"startOffset":1907823,"endOffset":1908392,"count":0}],"isBlockCoverage":false},{"functionName":"transformMiddleware","ranges":[{"startOffset":1908396,"endOffset":1914495,"count":1}],"isBlockCoverage":true},{"functionName":"viteTransformMiddleware","ranges":[{"startOffset":1908619,"endOffset":1913429,"count":0}],"isBlockCoverage":false},{"functionName":"warnAboutExplicitPublicPathInUrl","ranges":[{"startOffset":1913433,"endOffset":1914493,"count":0}],"isBlockCoverage":false},{"functionName":"createDevHtmlTransformFn","ranges":[{"startOffset":1914497,"endOffset":1915126,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1914924,"endOffset":1915123,"count":0}],"isBlockCoverage":false},{"functionName":"getHtmlFilename","ranges":[{"startOffset":1915127,"endOffset":1915375,"count":0}],"isBlockCoverage":false},{"functionName":"shouldPreTransform","ranges":[{"startOffset":1915376,"endOffset":1915503,"count":0}],"isBlockCoverage":false},{"functionName":"isBareRelative","ranges":[{"startOffset":1915529,"endOffset":1915617,"count":0}],"isBlockCoverage":false},{"functionName":"isSrcSet","ranges":[{"startOffset":1915635,"endOffset":1915693,"count":0}],"isBlockCoverage":false},{"functionName":"processNodeUrl","ranges":[{"startOffset":1915718,"endOffset":1917539,"count":0}],"isBlockCoverage":false},{"functionName":"devHtmlHook","ranges":[{"startOffset":1917561,"endOffset":1923391,"count":0}],"isBlockCoverage":false},{"functionName":"indexHtmlMiddleware","ranges":[{"startOffset":1923393,"endOffset":1924455,"count":1}],"isBlockCoverage":true},{"functionName":"viteIndexHtmlMiddleware","ranges":[{"startOffset":1923529,"endOffset":1924452,"count":0}],"isBlockCoverage":false},{"functionName":"preTransformRequest","ranges":[{"startOffset":1924456,"endOffset":1924678,"count":0}],"isBlockCoverage":false},{"functionName":"timeMiddleware","ranges":[{"startOffset":1924725,"endOffset":1925036,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1925055,"endOffset":1927389,"count":95}],"isBlockCoverage":true},{"functionName":"ModuleNode","ranges":[{"startOffset":1926974,"endOffset":1927171,"count":95},{"startOffset":1927080,"endOffset":1927087,"count":0}],"isBlockCoverage":true},{"functionName":"get importedModules","ranges":[{"startOffset":1927174,"endOffset":1927387,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1927408,"endOffset":1937303,"count":1}],"isBlockCoverage":true},{"functionName":"ModuleGraph","ranges":[{"startOffset":1927412,"endOffset":1927472,"count":1}],"isBlockCoverage":true},{"functionName":"getModuleByUrl","ranges":[{"startOffset":1928037,"endOffset":1928334,"count":95},{"startOffset":1928209,"endOffset":1928234,"count":70},{"startOffset":1928234,"endOffset":1928333,"count":25}],"isBlockCoverage":true},{"functionName":"getModuleById","ranges":[{"startOffset":1928337,"endOffset":1928421,"count":1795}],"isBlockCoverage":true},{"functionName":"getModulesByFile","ranges":[{"startOffset":1928424,"endOffset":1928496,"count":250}],"isBlockCoverage":true},{"functionName":"onFileChange","ranges":[{"startOffset":1928499,"endOffset":1928719,"count":0}],"isBlockCoverage":false},{"functionName":"onFileDelete","ranges":[{"startOffset":1928722,"endOffset":1928966,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateModule","ranges":[{"startOffset":1928969,"endOffset":1930520,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateAll","ranges":[{"startOffset":1930523,"endOffset":1930723,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleInfo","ranges":[{"startOffset":1931131,"endOffset":1933284,"count":91},{"startOffset":1931368,"endOffset":1931395,"count":0},{"startOffset":1931574,"endOffset":1931962,"count":164},{"startOffset":1931858,"endOffset":1931956,"count":0},{"startOffset":1931995,"endOffset":1932044,"count":73},{"startOffset":1932158,"endOffset":1932218,"count":0},{"startOffset":1932663,"endOffset":1932978,"count":0},{"startOffset":1933011,"endOffset":1933060,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1931735,"endOffset":1931838,"count":164}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1932243,"endOffset":1932521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1932824,"endOffset":1932891,"count":0}],"isBlockCoverage":false},{"functionName":"ensureEntryFromUrl","ranges":[{"startOffset":1933287,"endOffset":1933427,"count":164}],"isBlockCoverage":true},{"functionName":"_ensureEntryFromUrl","ranges":[{"startOffset":1933457,"endOffset":1934717,"count":259},{"startOffset":1933669,"endOffset":1933694,"count":164},{"startOffset":1933694,"endOffset":1934716,"count":95}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1933719,"endOffset":1934625,"count":95},{"startOffset":1933989,"endOffset":1934005,"count":0},{"startOffset":1934452,"endOffset":1934545,"count":0}],"isBlockCoverage":true},{"functionName":"createFileOnlyEntry","ranges":[{"startOffset":1934979,"endOffset":1935514,"count":0}],"isBlockCoverage":false},{"functionName":"resolveUrl","ranges":[{"startOffset":1935733,"endOffset":1935991,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleTransformResult","ranges":[{"startOffset":1935994,"endOffset":1936331,"count":95},{"startOffset":1936101,"endOffset":1936327,"count":0}],"isBlockCoverage":true},{"functionName":"getModuleByEtag","ranges":[{"startOffset":1936334,"endOffset":1936404,"count":0}],"isBlockCoverage":false},{"functionName":"_getUnresolvedUrlToModule","ranges":[{"startOffset":1936434,"endOffset":1936571,"count":354},{"startOffset":1936524,"endOffset":1936556,"count":0}],"isBlockCoverage":true},{"functionName":"_setUnresolvedUrlToModule","ranges":[{"startOffset":1936601,"endOffset":1936741,"count":190},{"startOffset":1936689,"endOffset":1936721,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveUrl","ranges":[{"startOffset":1936771,"endOffset":1937301,"count":120},{"startOffset":1936855,"endOffset":1936890,"count":95},{"startOffset":1936891,"endOffset":1936923,"count":95},{"startOffset":1936928,"endOffset":1936934,"count":0},{"startOffset":1936963,"endOffset":1936985,"count":72},{"startOffset":1936986,"endOffset":1937016,"count":72},{"startOffset":1937018,"endOffset":1937251,"count":72},{"startOffset":1937165,"endOffset":1937237,"count":2}],"isBlockCoverage":true},{"functionName":"notFoundMiddleware","ranges":[{"startOffset":1937305,"endOffset":1937430,"count":1}],"isBlockCoverage":true},{"functionName":"vite404Middleware","ranges":[{"startOffset":1937346,"endOffset":1937427,"count":0}],"isBlockCoverage":false},{"functionName":"hasWorkspacePackageJSON","ranges":[{"startOffset":1937755,"endOffset":1938049,"count":12},{"startOffset":1937870,"endOffset":1937893,"count":8},{"startOffset":1937893,"endOffset":1937974,"count":4},{"startOffset":1937974,"endOffset":1937979,"count":0},{"startOffset":1938018,"endOffset":1938047,"count":0}],"isBlockCoverage":true},{"functionName":"hasRootFile","ranges":[{"startOffset":1938050,"endOffset":1938160,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1938104,"endOffset":1938156,"count":24}],"isBlockCoverage":true},{"functionName":"hasPackageJSON","ranges":[{"startOffset":1938161,"endOffset":1938278,"count":2}],"isBlockCoverage":true},{"functionName":"searchForPackageRoot","ranges":[{"startOffset":1938279,"endOffset":1938504,"count":2},{"startOffset":1938382,"endOffset":1938446,"count":0},{"startOffset":1938448,"endOffset":1938503,"count":0}],"isBlockCoverage":true},{"functionName":"searchForWorkspaceRoot","ranges":[{"startOffset":1938505,"endOffset":1938809,"count":12},{"startOffset":1938614,"endOffset":1938629,"count":0},{"startOffset":1938670,"endOffset":1938685,"count":0},{"startOffset":1938751,"endOffset":1938763,"count":2},{"startOffset":1938763,"endOffset":1938808,"count":10}],"isBlockCoverage":true},{"functionName":"warmupFiles","ranges":[{"startOffset":1938811,"endOffset":1939300,"count":1},{"startOffset":1938937,"endOffset":1938958,"count":0},{"startOffset":1938960,"endOffset":1939114,"count":0},{"startOffset":1939128,"endOffset":1939146,"count":0},{"startOffset":1939148,"endOffset":1939298,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1939007,"endOffset":1939108,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1939192,"endOffset":1939292,"count":0}],"isBlockCoverage":false},{"functionName":"warmupFile","ranges":[{"startOffset":1939301,"endOffset":1939914,"count":0}],"isBlockCoverage":false},{"functionName":"htmlFileToUrl","ranges":[{"startOffset":1939915,"endOffset":1940063,"count":0}],"isBlockCoverage":false},{"functionName":"fileToUrl","ranges":[{"startOffset":1940064,"endOffset":1940270,"count":0}],"isBlockCoverage":false},{"functionName":"mapFiles","ranges":[{"startOffset":1940271,"endOffset":1940368,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":1940370,"endOffset":1940473,"count":1}],"isBlockCoverage":true},{"functionName":"_createServer","ranges":[{"startOffset":1940474,"endOffset":1953434,"count":1},{"startOffset":1941326,"endOffset":1941392,"count":0},{"startOffset":1941393,"endOffset":1941627,"count":0},{"startOffset":1941629,"endOffset":1941712,"count":0},{"startOffset":1941815,"endOffset":1941874,"count":0},{"startOffset":1941958,"endOffset":1942356,"count":0},{"startOffset":1948546,"endOffset":1948597,"count":0},{"startOffset":1949875,"endOffset":1949886,"count":0},{"startOffset":1950686,"endOffset":1950699,"count":0},{"startOffset":1950701,"endOffset":1950808,"count":0},{"startOffset":1950902,"endOffset":1950953,"count":7},{"startOffset":1950979,"endOffset":1951027,"count":0},{"startOffset":1951146,"endOffset":1951150,"count":0},{"startOffset":1951266,"endOffset":1951446,"count":0},{"startOffset":1951474,"endOffset":1951550,"count":0},{"startOffset":1952079,"endOffset":1952106,"count":0},{"startOffset":1952327,"endOffset":1952354,"count":0},{"startOffset":1953013,"endOffset":1953026,"count":0},{"startOffset":1953028,"endOffset":1953325,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1941670,"endOffset":1941706,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1942443,"endOffset":1942498,"count":95}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1942780,"endOffset":1942838,"count":0}],"isBlockCoverage":false},{"functionName":"waitForRequestsIdle","ranges":[{"startOffset":1942843,"endOffset":1942946,"count":0}],"isBlockCoverage":false},{"functionName":"_registerRequestProcessing","ranges":[{"startOffset":1942949,"endOffset":1943056,"count":0}],"isBlockCoverage":false},{"functionName":"_onCrawlEnd","ranges":[{"startOffset":1943059,"endOffset":1943123,"count":0}],"isBlockCoverage":false},{"functionName":"ssrTransform","ranges":[{"startOffset":1943322,"endOffset":1943455,"count":95}],"isBlockCoverage":true},{"functionName":"transformRequest","ranges":[{"startOffset":1943461,"endOffset":1943554,"count":95}],"isBlockCoverage":true},{"functionName":"warmupRequest","ranges":[{"startOffset":1943560,"endOffset":1943944,"count":0}],"isBlockCoverage":false},{"functionName":"transformIndexHtml","ranges":[{"startOffset":1943950,"endOffset":1944065,"count":0}],"isBlockCoverage":false},{"functionName":"ssrLoadModule","ranges":[{"startOffset":1944071,"endOffset":1944171,"count":0}],"isBlockCoverage":false},{"functionName":"ssrFetchModule","ranges":[{"startOffset":1944177,"endOffset":1944272,"count":0}],"isBlockCoverage":false},{"functionName":"ssrFixStacktrace","ranges":[{"startOffset":1944278,"endOffset":1944345,"count":0}],"isBlockCoverage":false},{"functionName":"ssrRewriteStacktrace","ranges":[{"startOffset":1944351,"endOffset":1944441,"count":0}],"isBlockCoverage":false},{"functionName":"reloadModule","ranges":[{"startOffset":1944447,"endOffset":1944610,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":1944616,"endOffset":1944943,"count":0}],"isBlockCoverage":false},{"functionName":"openBrowser","ranges":[{"startOffset":1944949,"endOffset":1945946,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1945952,"endOffset":1946587,"count":1},{"startOffset":1945995,"endOffset":1946057,"count":0},{"startOffset":1946237,"endOffset":1946244,"count":0},{"startOffset":1946293,"endOffset":1946300,"count":0},{"startOffset":1946387,"endOffset":1946547,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1946488,"endOffset":1946516,"count":0}],"isBlockCoverage":false},{"functionName":"printUrls","ranges":[{"startOffset":1946593,"endOffset":1947006,"count":0}],"isBlockCoverage":false},{"functionName":"bindCLIShortcuts","ranges":[{"startOffset":1947012,"endOffset":1947088,"count":0}],"isBlockCoverage":false},{"functionName":"restart","ranges":[{"startOffset":1947094,"endOffset":1947444,"count":0}],"isBlockCoverage":false},{"functionName":"_setInternalServer","ranges":[{"startOffset":1947524,"endOffset":1947583,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1947990,"endOffset":1948052,"count":3},{"startOffset":1948025,"endOffset":1948034,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1948238,"endOffset":1948293,"count":3994}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1948304,"endOffset":1948386,"count":0}],"isBlockCoverage":false},{"functionName":"closeServerAndExit","ranges":[{"startOffset":1948422,"endOffset":1948521,"count":0}],"isBlockCoverage":false},{"functionName":"onHMRUpdate","ranges":[{"startOffset":1948620,"endOffset":1948873,"count":0}],"isBlockCoverage":false},{"functionName":"onFileAddUnlink","ranges":[{"startOffset":1948901,"endOffset":1949625,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1949650,"endOffset":1949840,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1949908,"endOffset":1949957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1949983,"endOffset":1950031,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1950062,"endOffset":1950661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1950736,"endOffset":1950802,"count":0}],"isBlockCoverage":false},{"functionName":"viteHMRPingMiddleware","ranges":[{"startOffset":1951637,"endOffset":1951810,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1952275,"endOffset":1952293,"count":7},{"startOffset":1952286,"endOffset":1952293,"count":0}],"isBlockCoverage":true},{"functionName":"initServer","ranges":[{"startOffset":1952593,"endOffset":1952989,"count":1},{"startOffset":1952629,"endOffset":1952636,"count":0},{"startOffset":1952660,"endOffset":1952681,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1952702,"endOffset":1952956,"count":1},{"startOffset":1952808,"endOffset":1952866,"count":0}],"isBlockCoverage":true},{"functionName":"httpServer.listen","ranges":[{"startOffset":1953109,"endOffset":1953320,"count":0}],"isBlockCoverage":false},{"functionName":"startServer","ranges":[{"startOffset":1953435,"endOffset":1954149,"count":0}],"isBlockCoverage":false},{"functionName":"createServerCloseFn","ranges":[{"startOffset":1954150,"endOffset":1954826,"count":1},{"startOffset":1954245,"endOffset":1954825,"count":0}],"isBlockCoverage":true},{"functionName":"hasListened","ranges":[{"startOffset":1954217,"endOffset":1954240,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1954348,"endOffset":1954467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1954497,"endOffset":1954532,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1954544,"endOffset":1954823,"count":0}],"isBlockCoverage":false},{"functionName":"resolvedAllowDir","ranges":[{"startOffset":1954827,"endOffset":1954920,"count":4}],"isBlockCoverage":true},{"functionName":"resolveServerOptions","ranges":[{"startOffset":1954921,"endOffset":1956530,"count":1},{"startOffset":1955095,"endOffset":1955108,"count":0},{"startOffset":1955198,"endOffset":1955206,"count":0},{"startOffset":1955335,"endOffset":1955388,"count":0},{"startOffset":1955417,"endOffset":1955878,"count":0},{"startOffset":1956081,"endOffset":1956125,"count":0},{"startOffset":1956279,"endOffset":1956289,"count":0},{"startOffset":1956296,"endOffset":1956511,"count":0}],"isBlockCoverage":true},{"functionName":"server.sourcemapIgnoreList","ranges":[{"startOffset":1955097,"endOffset":1955108,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1955907,"endOffset":1955939,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1956028,"endOffset":1956078,"count":1}],"isBlockCoverage":true},{"functionName":"restartServer","ranges":[{"startOffset":1956531,"endOffset":1957909,"count":0}],"isBlockCoverage":false},{"functionName":"restartServerWithUrls","ranges":[{"startOffset":1957910,"endOffset":1958444,"count":0}],"isBlockCoverage":false},{"functionName":"setupOnCrawlEnd","ranges":[{"startOffset":1958483,"endOffset":1959987,"count":1}],"isBlockCoverage":true},{"functionName":"cancel","ranges":[{"startOffset":1958731,"endOffset":1958776,"count":1}],"isBlockCoverage":true},{"functionName":"callOnCrawlEnd","ranges":[{"startOffset":1958809,"endOffset":1958982,"count":0}],"isBlockCoverage":false},{"functionName":"registerRequestProcessing","ranges":[{"startOffset":1958985,"endOffset":1959190,"count":0}],"isBlockCoverage":false},{"functionName":"waitForRequestsIdle","ranges":[{"startOffset":1959193,"endOffset":1959427,"count":0}],"isBlockCoverage":false},{"functionName":"markIdAsDone","ranges":[{"startOffset":1959430,"endOffset":1959526,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfCrawlEndAfterTimeout","ranges":[{"startOffset":1959529,"endOffset":1959779,"count":0}],"isBlockCoverage":false},{"functionName":"callOnCrawlEndWhenIdle","ranges":[{"startOffset":1959782,"endOffset":1959902,"count":0}],"isBlockCoverage":false},{"functionName":"getShortName","ranges":[{"startOffset":1960348,"endOffset":1960479,"count":0}],"isBlockCoverage":false},{"functionName":"handleHMRUpdate","ranges":[{"startOffset":1960480,"endOffset":1962903,"count":0}],"isBlockCoverage":false},{"functionName":"updateModules","ranges":[{"startOffset":1962904,"endOffset":1964949,"count":0}],"isBlockCoverage":false},{"functionName":"populateSSRImporters","ranges":[{"startOffset":1964950,"endOffset":1965349,"count":0}],"isBlockCoverage":false},{"functionName":"getSSRInvalidatedImporters","ranges":[{"startOffset":1965350,"endOffset":1965493,"count":0}],"isBlockCoverage":false},{"functionName":"areAllImportsAccepted","ranges":[{"startOffset":1965494,"endOffset":1965693,"count":0}],"isBlockCoverage":false},{"functionName":"propagateUpdate","ranges":[{"startOffset":1965694,"endOffset":1967728,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeWithinCircularImports","ranges":[{"startOffset":1967729,"endOffset":1968778,"count":0}],"isBlockCoverage":false},{"functionName":"handlePrunedModules","ranges":[{"startOffset":1968779,"endOffset":1969089,"count":0}],"isBlockCoverage":false},{"functionName":"lexAcceptedHmrDeps","ranges":[{"startOffset":1969090,"endOffset":1971467,"count":0}],"isBlockCoverage":false},{"functionName":"lexAcceptedHmrExports","ranges":[{"startOffset":1971468,"endOffset":1971697,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeHmrUrl","ranges":[{"startOffset":1971698,"endOffset":1971816,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":1971817,"endOffset":1971995,"count":0}],"isBlockCoverage":false},{"functionName":"readModifiedFile","ranges":[{"startOffset":1971996,"endOffset":1972441,"count":0}],"isBlockCoverage":false},{"functionName":"createHMRBroadcaster","ranges":[{"startOffset":1972442,"endOffset":1973730,"count":1}],"isBlockCoverage":true},{"functionName":"get channels","ranges":[{"startOffset":1972582,"endOffset":1972632,"count":0}],"isBlockCoverage":false},{"functionName":"addChannel","ranges":[{"startOffset":1972638,"endOffset":1972866,"count":2},{"startOffset":1972717,"endOffset":1972804,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1972684,"endOffset":1972714,"count":1}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":1972872,"endOffset":1973331,"count":1},{"startOffset":1972928,"endOffset":1973245,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1973008,"endOffset":1973210,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1973269,"endOffset":1973309,"count":2}],"isBlockCoverage":true},{"functionName":"off","ranges":[{"startOffset":1973337,"endOffset":1973446,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":1973452,"endOffset":1973533,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":1973539,"endOffset":1973610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1973573,"endOffset":1973602,"count":2}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1973616,"endOffset":1973701,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1973664,"endOffset":1973692,"count":2}],"isBlockCoverage":true},{"functionName":"createServerHMRChannel","ranges":[{"startOffset":1973731,"endOffset":1974558,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":1973891,"endOffset":1974173,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":1974179,"endOffset":1974248,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":1974258,"endOffset":1974326,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1974332,"endOffset":1974431,"count":1}],"isBlockCoverage":true},{"functionName":"listen","ranges":[{"startOffset":1974437,"endOffset":1974492,"count":1}],"isBlockCoverage":true},{"functionName":"canSkipImportAnalysis","ranges":[{"startOffset":1974734,"endOffset":1974783,"count":95},{"startOffset":1974758,"endOffset":1974783,"count":94}],"isBlockCoverage":true},{"functionName":"isExplicitImportRequired","ranges":[{"startOffset":1975032,"endOffset":1975124,"count":0}],"isBlockCoverage":false},{"functionName":"extractImportedBindings","ranges":[{"startOffset":1975125,"endOffset":1976209,"count":0}],"isBlockCoverage":false},{"functionName":"importAnalysisPlugin","ranges":[{"startOffset":1976210,"endOffset":1992823,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":1976572,"endOffset":1977274,"count":0}],"isBlockCoverage":false},{"functionName":"configureServer","ranges":[{"startOffset":1977324,"endOffset":1977380,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":1977386,"endOffset":1992816,"count":95},{"startOffset":1977450,"endOffset":1977480,"count":0},{"startOffset":1977565,"endOffset":1977672,"count":1},{"startOffset":1977582,"endOffset":1977642,"count":0},{"startOffset":1977672,"endOffset":1977705,"count":94},{"startOffset":1977705,"endOffset":1977726,"count":0},{"startOffset":1977727,"endOffset":1977730,"count":94},{"startOffset":1977749,"endOffset":1977890,"count":94},{"startOffset":1977890,"endOffset":1978106,"count":0},{"startOffset":1978106,"endOffset":1978297,"count":94},{"startOffset":1978297,"endOffset":1978346,"count":0},{"startOffset":1978346,"endOffset":1978373,"count":94},{"startOffset":1978373,"endOffset":1978395,"count":3},{"startOffset":1978397,"endOffset":1978629,"count":3},{"startOffset":1978462,"endOffset":1978597,"count":0},{"startOffset":1978629,"endOffset":1978926,"count":91},{"startOffset":1978926,"endOffset":1978953,"count":0},{"startOffset":1978954,"endOffset":1978960,"count":91},{"startOffset":1989644,"endOffset":1990101,"count":91},{"startOffset":1990101,"endOffset":1990137,"count":0},{"startOffset":1990156,"endOffset":1990175,"count":0},{"startOffset":1990177,"endOffset":1990222,"count":0},{"startOffset":1990222,"endOffset":1990240,"count":91},{"startOffset":1990240,"endOffset":1990247,"count":0},{"startOffset":1990248,"endOffset":1990267,"count":0},{"startOffset":1990269,"endOffset":1990756,"count":0},{"startOffset":1990756,"endOffset":1990790,"count":91},{"startOffset":1990790,"endOffset":1991046,"count":0},{"startOffset":1991046,"endOffset":1991165,"count":91},{"startOffset":1991165,"endOffset":1991442,"count":0},{"startOffset":1991442,"endOffset":1991477,"count":91},{"startOffset":1991477,"endOffset":1991511,"count":0},{"startOffset":1991513,"endOffset":1992484,"count":91},{"startOffset":1991592,"endOffset":1991759,"count":0},{"startOffset":1991811,"endOffset":1991856,"count":0},{"startOffset":1991914,"endOffset":1991955,"count":0},{"startOffset":1991956,"endOffset":1992005,"count":0},{"startOffset":1992007,"endOffset":1992052,"count":0},{"startOffset":1992266,"endOffset":1992283,"count":0},{"startOffset":1992393,"endOffset":1992409,"count":0},{"startOffset":1992411,"endOffset":1992476,"count":0},{"startOffset":1992484,"endOffset":1992498,"count":91},{"startOffset":1992498,"endOffset":1992689,"count":0},{"startOffset":1992704,"endOffset":1992772,"count":73},{"startOffset":1992772,"endOffset":1992810,"count":18}],"isBlockCoverage":true},{"functionName":"str","ranges":[{"startOffset":1978789,"endOffset":1978829,"count":164},{"startOffset":1978797,"endOffset":1978829,"count":73}],"isBlockCoverage":true},{"functionName":"toAbsoluteUrl","ranges":[{"startOffset":1978990,"endOffset":1979066,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeUrl","ranges":[{"startOffset":1979095,"endOffset":1982193,"count":164},{"startOffset":1979351,"endOffset":1979731,"count":0},{"startOffset":1979834,"endOffset":1979862,"count":0},{"startOffset":1979864,"endOffset":1980291,"count":0},{"startOffset":1980332,"endOffset":1980388,"count":0},{"startOffset":1980473,"endOffset":1980512,"count":56},{"startOffset":1980634,"endOffset":1981166,"count":0},{"startOffset":1981213,"endOffset":1981263,"count":0},{"startOffset":1981282,"endOffset":1982150,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1982458,"endOffset":1989634,"count":320},{"startOffset":1982830,"endOffset":1984046,"count":0},{"startOffset":1984088,"endOffset":1984250,"count":0},{"startOffset":1984335,"endOffset":1984357,"count":291},{"startOffset":1984359,"endOffset":1984415,"count":0},{"startOffset":1984520,"endOffset":1984557,"count":0},{"startOffset":1984679,"endOffset":1984720,"count":156},{"startOffset":1984720,"endOffset":1984761,"count":164},{"startOffset":1984761,"endOffset":1984802,"count":0},{"startOffset":1984816,"endOffset":1984865,"count":164},{"startOffset":1984865,"endOffset":1984902,"count":0},{"startOffset":1984902,"endOffset":1984940,"count":164},{"startOffset":1984940,"endOffset":1985012,"count":0},{"startOffset":1985013,"endOffset":1985050,"count":0},{"startOffset":1985052,"endOffset":1985463,"count":0},{"startOffset":1985463,"endOffset":1985571,"count":164},{"startOffset":1985693,"endOffset":1987539,"count":164},{"startOffset":1985765,"endOffset":1985785,"count":0},{"startOffset":1985798,"endOffset":1985838,"count":0},{"startOffset":1985840,"endOffset":1986823,"count":0},{"startOffset":1986865,"endOffset":1986911,"count":0},{"startOffset":1986913,"endOffset":1987183,"count":0},{"startOffset":1987319,"endOffset":1987326,"count":9},{"startOffset":1987327,"endOffset":1987338,"count":155},{"startOffset":1987382,"endOffset":1987387,"count":9},{"startOffset":1987388,"endOffset":1987397,"count":155},{"startOffset":1987539,"endOffset":1987679,"count":164},{"startOffset":1987712,"endOffset":1987815,"count":164},{"startOffset":1987815,"endOffset":1987834,"count":0},{"startOffset":1987836,"endOffset":1988025,"count":0},{"startOffset":1988025,"endOffset":1988059,"count":164},{"startOffset":1988059,"endOffset":1988075,"count":155},{"startOffset":1988076,"endOffset":1988113,"count":155},{"startOffset":1988115,"endOffset":1988235,"count":0},{"startOffset":1988247,"endOffset":1989624,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1989852,"endOffset":1989886,"count":164}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1991659,"endOffset":1991692,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1991715,"endOffset":1991747,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1991973,"endOffset":1992004,"count":0}],"isBlockCoverage":false},{"functionName":"mergeAcceptedUrls","ranges":[{"startOffset":1992824,"endOffset":1993056,"count":182},{"startOffset":1992950,"endOffset":1993031,"count":640},{"startOffset":1992976,"endOffset":1993031,"count":0}],"isBlockCoverage":true},{"functionName":"createParseErrorInfo","ranges":[{"startOffset":1993057,"endOffset":1993969,"count":0}],"isBlockCoverage":false},{"functionName":"interopHelper","ranges":[{"startOffset":1993992,"endOffset":1994116,"count":0}],"isBlockCoverage":false},{"functionName":"interopNamedImports","ranges":[{"startOffset":1994118,"endOffset":1995146,"count":0}],"isBlockCoverage":false},{"functionName":"getLineBreaks","ranges":[{"startOffset":1995147,"endOffset":1995254,"count":0}],"isBlockCoverage":false},{"functionName":"transformCjsImport","ranges":[{"startOffset":1995255,"endOffset":1998135,"count":0}],"isBlockCoverage":false},{"functionName":"__vite__injectQuery","ranges":[{"startOffset":1998136,"endOffset":1998449,"count":0}],"isBlockCoverage":false},{"functionName":"toRelativePath","ranges":[{"startOffset":1998970,"endOffset":1999156,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfMatchInSlice","ranges":[{"startOffset":1999157,"endOffset":1999293,"count":0}],"isBlockCoverage":false},{"functionName":"detectScriptRel","ranges":[{"startOffset":1999294,"endOffset":1999522,"count":0}],"isBlockCoverage":false},{"functionName":"preload","ranges":[{"startOffset":1999523,"endOffset":2001657,"count":0}],"isBlockCoverage":false},{"functionName":"buildImportAnalysisPlugin","ranges":[{"startOffset":2001658,"endOffset":2017290,"count":0}],"isBlockCoverage":false},{"functionName":"ssrManifestPlugin","ranges":[{"startOffset":2017292,"endOffset":2020326,"count":0}],"isBlockCoverage":false},{"functionName":"loadFallbackPlugin","ranges":[{"startOffset":2020328,"endOffset":2020754,"count":0}],"isBlockCoverage":false},{"functionName":"completeSystemWrapPlugin","ranges":[{"startOffset":2020756,"endOffset":2021192,"count":0}],"isBlockCoverage":false},{"functionName":"resolveBuildOptions","ranges":[{"startOffset":2021194,"endOffset":2023914,"count":1},{"startOffset":2021447,"endOffset":2021565,"count":0},{"startOffset":2021616,"endOffset":2021647,"count":0},{"startOffset":2021649,"endOffset":2021703,"count":0},{"startOffset":2022033,"endOffset":2022040,"count":0},{"startOffset":2022401,"endOffset":2022422,"count":0},{"startOffset":2022879,"endOffset":2022886,"count":0},{"startOffset":2022923,"endOffset":2022986,"count":0},{"startOffset":2023103,"endOffset":2023590,"count":0},{"startOffset":2023701,"endOffset":2023735,"count":0},{"startOffset":2023771,"endOffset":2023809,"count":0}],"isBlockCoverage":true},{"functionName":"resolveBuildPlugins","ranges":[{"startOffset":2023915,"endOffset":2024937,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2024938,"endOffset":2032888,"count":0}],"isBlockCoverage":false},{"functionName":"prepareOutDir","ranges":[{"startOffset":2032889,"endOffset":2034022,"count":0}],"isBlockCoverage":false},{"functionName":"getPkgName","ranges":[{"startOffset":2034023,"endOffset":2034108,"count":0}],"isBlockCoverage":false},{"functionName":"resolveOutputJsExtension","ranges":[{"startOffset":2034109,"endOffset":2034322,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLibFilename","ranges":[{"startOffset":2034323,"endOffset":2035056,"count":0}],"isBlockCoverage":false},{"functionName":"resolveBuildOutputs","ranges":[{"startOffset":2035057,"endOffset":2036419,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":2036588,"endOffset":2036749,"count":0}],"isBlockCoverage":false},{"functionName":"onRollupWarning","ranges":[{"startOffset":2036750,"endOffset":2038225,"count":0}],"isBlockCoverage":false},{"functionName":"resolveUserExternal","ranges":[{"startOffset":2038226,"endOffset":2038507,"count":0}],"isBlockCoverage":false},{"functionName":"isExternal","ranges":[{"startOffset":2038508,"endOffset":2038640,"count":0}],"isBlockCoverage":false},{"functionName":"injectSsrFlagToHooks","ranges":[{"startOffset":2038641,"endOffset":2038878,"count":0}],"isBlockCoverage":false},{"functionName":"wrapSsrResolveId","ranges":[{"startOffset":2038879,"endOffset":2039202,"count":0}],"isBlockCoverage":false},{"functionName":"wrapSsrLoad","ranges":[{"startOffset":2039203,"endOffset":2039501,"count":0}],"isBlockCoverage":false},{"functionName":"wrapSsrTransform","ranges":[{"startOffset":2039502,"endOffset":2039829,"count":0}],"isBlockCoverage":false},{"functionName":"injectSsrFlag","ranges":[{"startOffset":2039830,"endOffset":2039907,"count":0}],"isBlockCoverage":false},{"functionName":"escapeId","ranges":[{"startOffset":2040040,"endOffset":2040190,"count":0}],"isBlockCoverage":false},{"functionName":"getResolveUrl","ranges":[{"startOffset":2040213,"endOffset":2040264,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativeUrlFromDocument","ranges":[{"startOffset":2040301,"endOffset":2040603,"count":0}],"isBlockCoverage":false},{"functionName":"getFileUrlFromFullPath","ranges":[{"startOffset":2040636,"endOffset":2040697,"count":0}],"isBlockCoverage":false},{"functionName":"getFileUrlFromRelativePath","ranges":[{"startOffset":2040734,"endOffset":2040804,"count":0}],"isBlockCoverage":false},{"functionName":"amd","ranges":[{"startOffset":2040845,"endOffset":2041039,"count":0}],"isBlockCoverage":false},{"functionName":"cjs","ranges":[{"startOffset":2041048,"endOffset":2041201,"count":0}],"isBlockCoverage":false},{"functionName":"es","ranges":[{"startOffset":2041209,"endOffset":2041318,"count":0}],"isBlockCoverage":false},{"functionName":"iife","ranges":[{"startOffset":2041328,"endOffset":2041386,"count":0}],"isBlockCoverage":false},{"functionName":"system","ranges":[{"startOffset":2041451,"endOffset":2041560,"count":0}],"isBlockCoverage":false},{"functionName":"umd","ranges":[{"startOffset":2041569,"endOffset":2041763,"count":0}],"isBlockCoverage":false},{"functionName":"worker-iife","ranges":[{"startOffset":2041850,"endOffset":2041962,"count":0}],"isBlockCoverage":false},{"functionName":"toOutputFilePathInJS","ranges":[{"startOffset":2041966,"endOffset":2042722,"count":0}],"isBlockCoverage":false},{"functionName":"createToImportMetaURLBasedRelativeRuntime","ranges":[{"startOffset":2042723,"endOffset":2043079,"count":0}],"isBlockCoverage":false},{"functionName":"toOutputFilePathWithoutRuntime","ranges":[{"startOffset":2043080,"endOffset":2043958,"count":0}],"isBlockCoverage":false},{"functionName":"areSeparateFolders","ranges":[{"startOffset":2044084,"endOffset":2044289,"count":0}],"isBlockCoverage":false},{"functionName":"NOOP","ranges":[{"startOffset":2044926,"endOffset":2044934,"count":0}],"isBlockCoverage":false},{"functionName":"getChunkSize","ranges":[{"startOffset":2045064,"endOffset":2045152,"count":0}],"isBlockCoverage":false},{"functionName":"compression","ranges":[{"startOffset":2045265,"endOffset":2048359,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePreviewOptions","ranges":[{"startOffset":2048361,"endOffset":2048774,"count":1},{"startOffset":2048441,"endOffset":2048447,"count":0},{"startOffset":2048473,"endOffset":2048485,"count":0},{"startOffset":2048526,"endOffset":2048532,"count":0},{"startOffset":2048568,"endOffset":2048575,"count":0},{"startOffset":2048611,"endOffset":2048617,"count":0},{"startOffset":2048653,"endOffset":2048660,"count":0},{"startOffset":2048696,"endOffset":2048702,"count":0},{"startOffset":2048740,"endOffset":2048749,"count":0}],"isBlockCoverage":true},{"functionName":"preview","ranges":[{"startOffset":2048775,"endOffset":2052437,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSSROptions","ranges":[{"startOffset":2052544,"endOffset":2052923,"count":1},{"startOffset":2052650,"endOffset":2052655,"count":0}],"isBlockCoverage":true},{"functionName":"defineConfig","ranges":[{"startOffset":2053033,"endOffset":2053083,"count":0}],"isBlockCoverage":false},{"functionName":"checkBadCharactersInPath","ranges":[{"startOffset":2053084,"endOffset":2053721,"count":1},{"startOffset":2053185,"endOffset":2053214,"count":0},{"startOffset":2053242,"endOffset":2053271,"count":0},{"startOffset":2053299,"endOffset":2053719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2053337,"endOffset":2053352,"count":0}],"isBlockCoverage":false},{"functionName":"resolveConfig","ranges":[{"startOffset":2053722,"endOffset":2065812,"count":1},{"startOffset":2053951,"endOffset":2053965,"count":0},{"startOffset":2054085,"endOffset":2054133,"count":0},{"startOffset":2054215,"endOffset":2054237,"count":0},{"startOffset":2054684,"endOffset":2054698,"count":0},{"startOffset":2054699,"endOffset":2054706,"count":0},{"startOffset":2055065,"endOffset":2055070,"count":0},{"startOffset":2055507,"endOffset":2055536,"count":0},{"startOffset":2056052,"endOffset":2056074,"count":0},{"startOffset":2056119,"endOffset":2056124,"count":0},{"startOffset":2056417,"endOffset":2056465,"count":0},{"startOffset":2056470,"endOffset":2056791,"count":0},{"startOffset":2056823,"endOffset":2056885,"count":0},{"startOffset":2057077,"endOffset":2057091,"count":0},{"startOffset":2057093,"endOffset":2057469,"count":0},{"startOffset":2057690,"endOffset":2057734,"count":0},{"startOffset":2057782,"endOffset":2057788,"count":0},{"startOffset":2058024,"endOffset":2058071,"count":0},{"startOffset":2058125,"endOffset":2058161,"count":0},{"startOffset":2058211,"endOffset":2058283,"count":0},{"startOffset":2058284,"endOffset":2058320,"count":0},{"startOffset":2059695,"endOffset":2059706,"count":0},{"startOffset":2059728,"endOffset":2059732,"count":0},{"startOffset":2059931,"endOffset":2059936,"count":0},{"startOffset":2060032,"endOffset":2060041,"count":0},{"startOffset":2060089,"endOffset":2060331,"count":0},{"startOffset":2061452,"endOffset":2061460,"count":0},{"startOffset":2061538,"endOffset":2061553,"count":0},{"startOffset":2061685,"endOffset":2061693,"count":0},{"startOffset":2062220,"endOffset":2062227,"count":0},{"startOffset":2063689,"endOffset":2063871,"count":0},{"startOffset":2063907,"endOffset":2063929,"count":0},{"startOffset":2063930,"endOffset":2063965,"count":0},{"startOffset":2063967,"endOffset":2064227,"count":0},{"startOffset":2064278,"endOffset":2064286,"count":0},{"startOffset":2064466,"endOffset":2064905,"count":0},{"startOffset":2064973,"endOffset":2065004,"count":0},{"startOffset":2065080,"endOffset":2065355,"count":0},{"startOffset":2065567,"endOffset":2065791,"count":0}],"isBlockCoverage":true},{"functionName":"filterPlugin","ranges":[{"startOffset":2054756,"endOffset":2055003,"count":10},{"startOffset":2054777,"endOffset":2054804,"count":0},{"startOffset":2054850,"endOffset":2054999,"count":0}],"isBlockCoverage":true},{"functionName":"assetsFilter","ranges":[{"startOffset":2058323,"endOffset":2058334,"count":766}],"isBlockCoverage":true},{"functionName":"createResolver","ranges":[{"startOffset":2058361,"endOffset":2059498,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2058438,"endOffset":2059493,"count":0}],"isBlockCoverage":false},{"functionName":"createUserWorkerPlugins","ranges":[{"startOffset":2060121,"endOffset":2060149,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerPlugins","ranges":[{"startOffset":2060362,"endOffset":2061391,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2061757,"endOffset":2061804,"count":1}],"isBlockCoverage":true},{"functionName":"assetsInclude","ranges":[{"startOffset":2062534,"endOffset":2062626,"count":766}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2063467,"endOffset":2063491,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2063774,"endOffset":2063787,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2064386,"endOffset":2064419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2064594,"endOffset":2064652,"count":0}],"isBlockCoverage":false},{"functionName":"resolveBaseUrl","ranges":[{"startOffset":2065813,"endOffset":2066492,"count":1},{"startOffset":2065891,"endOffset":2066115,"count":0},{"startOffset":2066196,"endOffset":2066326,"count":0},{"startOffset":2066342,"endOffset":2066356,"count":0},{"startOffset":2066439,"endOffset":2066471,"count":0}],"isBlockCoverage":true},{"functionName":"sortUserPlugins","ranges":[{"startOffset":2066493,"endOffset":2066868,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2066652,"endOffset":2066809,"count":10},{"startOffset":2066692,"endOffset":2066803,"count":5},{"startOffset":2066749,"endOffset":2066769,"count":3},{"startOffset":2066769,"endOffset":2066803,"count":2}],"isBlockCoverage":true},{"functionName":"loadConfigFromFile","ranges":[{"startOffset":2066869,"endOffset":2068339,"count":1},{"startOffset":2067180,"endOffset":2067408,"count":0},{"startOffset":2067430,"endOffset":2067490,"count":0},{"startOffset":2067778,"endOffset":2067826,"count":0},{"startOffset":2067887,"endOffset":2067910,"count":0},{"startOffset":2067955,"endOffset":2068028,"count":0},{"startOffset":2068151,"endOffset":2068337,"count":0}],"isBlockCoverage":true},{"functionName":"getTime","ranges":[{"startOffset":2067035,"endOffset":2067088,"count":0}],"isBlockCoverage":false},{"functionName":"bundleConfigFile","ranges":[{"startOffset":2068340,"endOffset":2072828,"count":1},{"startOffset":2068816,"endOffset":2068823,"count":0},{"startOffset":2072817,"endOffset":2072821,"count":0}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":2069188,"endOffset":2071958,"count":1}],"isBlockCoverage":true},{"functionName":"resolveByViteResolver","ranges":[{"startOffset":2069302,"endOffset":2069962,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2070039,"endOffset":2071935,"count":3},{"startOffset":2070122,"endOffset":2070146,"count":2},{"startOffset":2070147,"endOffset":2070167,"count":2},{"startOffset":2070169,"endOffset":2070210,"count":1},{"startOffset":2070210,"endOffset":2070244,"count":2},{"startOffset":2070244,"endOffset":2070304,"count":0},{"startOffset":2070304,"endOffset":2070342,"count":2},{"startOffset":2070342,"endOffset":2070370,"count":0},{"startOffset":2070511,"endOffset":2071311,"count":0},{"startOffset":2071311,"endOffset":2071350,"count":2},{"startOffset":2071352,"endOffset":2071466,"count":2},{"startOffset":2071467,"endOffset":2071507,"count":0},{"startOffset":2071509,"endOffset":2071818,"count":0},{"startOffset":2071818,"endOffset":2071934,"count":2}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":2072029,"endOffset":2072655,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2072098,"endOffset":2072643,"count":1},{"startOffset":2072561,"endOffset":2072567,"count":0}],"isBlockCoverage":true},{"functionName":"loadConfigFromBundledFile","ranges":[{"startOffset":2072880,"endOffset":2074018,"count":1},{"startOffset":2073352,"endOffset":2074016,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2073325,"endOffset":2073340,"count":1}],"isBlockCoverage":true},{"functionName":"_require.extensions.<computed>","ranges":[{"startOffset":2073641,"endOffset":2073821,"count":0}],"isBlockCoverage":false},{"functionName":"runConfigHook","ranges":[{"startOffset":2074019,"endOffset":2074390,"count":1},{"startOffset":2074160,"endOffset":2074373,"count":2},{"startOffset":2074315,"endOffset":2074363,"count":1}],"isBlockCoverage":true},{"functionName":"getDepOptimizationConfig","ranges":[{"startOffset":2074391,"endOffset":2074503,"count":262},{"startOffset":2074453,"endOffset":2074478,"count":260},{"startOffset":2074479,"endOffset":2074500,"count":2}],"isBlockCoverage":true},{"functionName":"isDepsOptimizerEnabled","ranges":[{"startOffset":2074504,"endOffset":2074685,"count":98}],"isBlockCoverage":true},{"functionName":"optimizeDepsDisabledBackwardCompatibility","ranges":[{"startOffset":2074686,"endOffset":2076331,"count":2},{"startOffset":2074879,"endOffset":2076329,"count":0}],"isBlockCoverage":true}]},{"scriptId":"353","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/utils/dist/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35873,"count":1}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":144,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1205,"endOffset":1286,"count":0}],"isBlockCoverage":true},{"functionName":"diff_commonPrefix","ranges":[{"startOffset":1313,"endOffset":1897,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonSuffix","ranges":[{"startOffset":1925,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonOverlap_","ranges":[{"startOffset":2621,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupSemantic","ranges":[{"startOffset":3456,"endOffset":6343,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupSemanticLossless","ranges":[{"startOffset":6539,"endOffset":9464,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupMerge","ranges":[{"startOffset":9465,"endOffset":13018,"count":0}],"isBlockCoverage":false},{"functionName":"formatTrailingSpaces","ranges":[{"startOffset":13237,"endOffset":13373,"count":0}],"isBlockCoverage":false},{"functionName":"printDiffLine","ranges":[{"startOffset":13374,"endOffset":13777,"count":0}],"isBlockCoverage":false},{"functionName":"printDeleteLine","ranges":[{"startOffset":13778,"endOffset":14078,"count":0}],"isBlockCoverage":false},{"functionName":"printInsertLine","ranges":[{"startOffset":14079,"endOffset":14379,"count":0}],"isBlockCoverage":false},{"functionName":"printCommonLine","ranges":[{"startOffset":14380,"endOffset":14700,"count":0}],"isBlockCoverage":false},{"functionName":"createPatchMark","ranges":[{"startOffset":14701,"endOffset":14875,"count":0}],"isBlockCoverage":false},{"functionName":"joinAlignedDiffsNoExpand","ranges":[{"startOffset":14876,"endOffset":18741,"count":0}],"isBlockCoverage":false},{"functionName":"joinAlignedDiffsExpand","ranges":[{"startOffset":18742,"endOffset":19218,"count":0}],"isBlockCoverage":false},{"functionName":"noColor","ranges":[{"startOffset":19236,"endOffset":19254,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultOptions","ranges":[{"startOffset":19331,"endOffset":20071,"count":0}],"isBlockCoverage":false},{"functionName":"getCompareKeys","ranges":[{"startOffset":20072,"endOffset":20194,"count":0}],"isBlockCoverage":false},{"functionName":"getContextLines","ranges":[{"startOffset":20195,"endOffset":20377,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeDiffOptions","ranges":[{"startOffset":20378,"endOffset":20595,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyString","ranges":[{"startOffset":20597,"endOffset":20684,"count":0}],"isBlockCoverage":false},{"functionName":"countChanges","ranges":[{"startOffset":20685,"endOffset":20937,"count":0}],"isBlockCoverage":false},{"functionName":"printAnnotation","ranges":[{"startOffset":20938,"endOffset":22044,"count":0}],"isBlockCoverage":false},{"functionName":"printDiffLines","ranges":[{"startOffset":22045,"endOffset":22345,"count":0}],"isBlockCoverage":false},{"functionName":"diffLinesUnified","ranges":[{"startOffset":22346,"endOffset":22689,"count":0}],"isBlockCoverage":false},{"functionName":"diffLinesUnified2","ranges":[{"startOffset":22690,"endOffset":23769,"count":0}],"isBlockCoverage":false},{"functionName":"diffLinesRaw","ranges":[{"startOffset":23770,"endOffset":25147,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineSymbol","ranges":[{"startOffset":25149,"endOffset":25236,"count":0}],"isBlockCoverage":false},{"functionName":"diffStrings","ranges":[{"startOffset":25237,"endOffset":26893,"count":0}],"isBlockCoverage":false},{"functionName":"concatenateRelevantDiffs","ranges":[{"startOffset":26895,"endOffset":27129,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":27149,"endOffset":28544,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":28564,"endOffset":30195,"count":0}],"isBlockCoverage":true},{"functionName":"getAlignedDiffs","ranges":[{"startOffset":30196,"endOffset":30739,"count":0}],"isBlockCoverage":false},{"functionName":"hasCommonDiff","ranges":[{"startOffset":30741,"endOffset":31012,"count":0}],"isBlockCoverage":false},{"functionName":"diffStringsUnified","ranges":[{"startOffset":31013,"endOffset":31670,"count":0}],"isBlockCoverage":false},{"functionName":"diffStringsRaw","ranges":[{"startOffset":31671,"endOffset":31856,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonMessage","ranges":[{"startOffset":31858,"endOffset":31993,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":32380,"endOffset":33824,"count":0}],"isBlockCoverage":false},{"functionName":"comparePrimitive","ranges":[{"startOffset":33825,"endOffset":34064,"count":0}],"isBlockCoverage":false},{"functionName":"sortMap","ranges":[{"startOffset":34065,"endOffset":34142,"count":0}],"isBlockCoverage":false},{"functionName":"sortSet","ranges":[{"startOffset":34143,"endOffset":34219,"count":0}],"isBlockCoverage":false},{"functionName":"compareObjects","ranges":[{"startOffset":34220,"endOffset":34959,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOptions","ranges":[{"startOffset":34960,"endOffset":35124,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectsDifference","ranges":[{"startOffset":35125,"endOffset":35723,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/rollup/dist/es/shared/parseAst.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83134,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1277,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"convertAnnotations","ranges":[{"startOffset":2299,"endOffset":2594,"count":3783},{"startOffset":2355,"endOffset":2374,"count":3740},{"startOffset":2374,"endOffset":2593,"count":43}],"isBlockCoverage":true},{"functionName":"convertAnnotation","ranges":[{"startOffset":2622,"endOffset":2804,"count":43}],"isBlockCoverage":true},{"functionName":"rangeContains","ranges":[{"startOffset":2937,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"getLocator","ranges":[{"startOffset":3112,"endOffset":4049,"count":0}],"isBlockCoverage":false},{"functionName":"locate","ranges":[{"startOffset":4203,"endOffset":4323,"count":0}],"isBlockCoverage":false},{"functionName":"spaces","ranges":[{"startOffset":4325,"endOffset":4434,"count":0}],"isBlockCoverage":false},{"functionName":"tabsToSpaces","ranges":[{"startOffset":4435,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeFrame","ranges":[{"startOffset":4647,"endOffset":6081,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":6474,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":6547,"endOffset":6619,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":6651,"endOffset":6726,"count":0}],"isBlockCoverage":false},{"functionName":"printQuotedStringList","ranges":[{"startOffset":6728,"endOffset":7110,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":7145,"endOffset":7757,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasName","ranges":[{"startOffset":7759,"endOffset":7892,"count":0}],"isBlockCoverage":false},{"functionName":"relativeId","ranges":[{"startOffset":7893,"endOffset":8000,"count":0}],"isBlockCoverage":false},{"functionName":"isPathFragment","ranges":[{"startOffset":8001,"endOffset":8190,"count":0}],"isBlockCoverage":false},{"functionName":"getImportPath","ranges":[{"startOffset":8234,"endOffset":9005,"count":0}],"isBlockCoverage":false},{"functionName":"isValidUrl","ranges":[{"startOffset":9007,"endOffset":9130,"count":0}],"isBlockCoverage":false},{"functionName":"getRollupUrl","ranges":[{"startOffset":9131,"endOffset":9211,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailingSlashIfMissed","ranges":[{"startOffset":9212,"endOffset":9332,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":11490,"endOffset":11577,"count":0}],"isBlockCoverage":false},{"functionName":"getRollupError","ranges":[{"startOffset":11578,"endOffset":11850,"count":0}],"isBlockCoverage":false},{"functionName":"augmentCodeLocation","ranges":[{"startOffset":11851,"endOffset":12467,"count":0}],"isBlockCoverage":false},{"functionName":"augmentLogMessage","ranges":[{"startOffset":12513,"endOffset":13119,"count":0}],"isBlockCoverage":false},{"functionName":"logAddonNotGenerated","ranges":[{"startOffset":16595,"endOffset":16818,"count":0}],"isBlockCoverage":false},{"functionName":"logAlreadyClosed","ranges":[{"startOffset":16819,"endOffset":16997,"count":0}],"isBlockCoverage":false},{"functionName":"logAmbiguousExternalNamespaces","ranges":[{"startOffset":16998,"endOffset":17492,"count":0}],"isBlockCoverage":false},{"functionName":"logAnonymousPluginCache","ranges":[{"startOffset":17493,"endOffset":17699,"count":0}],"isBlockCoverage":false},{"functionName":"logAssetNotFinalisedForFileName","ranges":[{"startOffset":17700,"endOffset":18143,"count":0}],"isBlockCoverage":false},{"functionName":"logAssetReferenceIdNotFoundForSetSource","ranges":[{"startOffset":18144,"endOffset":18365,"count":0}],"isBlockCoverage":false},{"functionName":"logAssetSourceAlreadySet","ranges":[{"startOffset":18366,"endOffset":18554,"count":0}],"isBlockCoverage":false},{"functionName":"logNoAssetSourceSet","ranges":[{"startOffset":18555,"endOffset":18739,"count":0}],"isBlockCoverage":false},{"functionName":"logBadLoader","ranges":[{"startOffset":18740,"endOffset":18951,"count":0}],"isBlockCoverage":false},{"functionName":"logCannotCallNamespace","ranges":[{"startOffset":18952,"endOffset":19106,"count":0}],"isBlockCoverage":false},{"functionName":"logCannotEmitFromOptionsHook","ranges":[{"startOffset":19107,"endOffset":19338,"count":0}],"isBlockCoverage":false},{"functionName":"logChunkNotGeneratedForFileName","ranges":[{"startOffset":19339,"endOffset":19621,"count":0}],"isBlockCoverage":false},{"functionName":"logChunkInvalid","ranges":[{"startOffset":19622,"endOffset":19921,"count":0}],"isBlockCoverage":false},{"functionName":"logCircularDependency","ranges":[{"startOffset":19922,"endOffset":20128,"count":0}],"isBlockCoverage":false},{"functionName":"logCircularReexport","ranges":[{"startOffset":20129,"endOffset":20383,"count":0}],"isBlockCoverage":false},{"functionName":"logCyclicCrossChunkReexport","ranges":[{"startOffset":20384,"endOffset":21259,"count":0}],"isBlockCoverage":false},{"functionName":"logDeprecation","ranges":[{"startOffset":21260,"endOffset":21459,"count":0}],"isBlockCoverage":false},{"functionName":"logConstVariableReassignError","ranges":[{"startOffset":21460,"endOffset":21622,"count":0}],"isBlockCoverage":false},{"functionName":"logDuplicateArgumentNameError","ranges":[{"startOffset":21623,"endOffset":21783,"count":0}],"isBlockCoverage":false},{"functionName":"logDuplicateExportError","ranges":[{"startOffset":21784,"endOffset":21904,"count":0}],"isBlockCoverage":false},{"functionName":"logDuplicatePluginName","ranges":[{"startOffset":21905,"endOffset":22204,"count":0}],"isBlockCoverage":false},{"functionName":"logEmptyChunk","ranges":[{"startOffset":22205,"endOffset":22379,"count":0}],"isBlockCoverage":false},{"functionName":"logEval","ranges":[{"startOffset":22380,"endOffset":22647,"count":0}],"isBlockCoverage":false},{"functionName":"logExternalSyntheticExports","ranges":[{"startOffset":22648,"endOffset":22907,"count":0}],"isBlockCoverage":false},{"functionName":"logFileNameConflict","ranges":[{"startOffset":22908,"endOffset":23109,"count":0}],"isBlockCoverage":false},{"functionName":"logFileReferenceIdNotFoundForFilename","ranges":[{"startOffset":23110,"endOffset":23326,"count":0}],"isBlockCoverage":false},{"functionName":"logFirstSideEffect","ranges":[{"startOffset":23327,"endOffset":23564,"count":0}],"isBlockCoverage":false},{"functionName":"logIllegalIdentifierAsName","ranges":[{"startOffset":23565,"endOffset":23841,"count":0}],"isBlockCoverage":false},{"functionName":"logIllegalImportReassignment","ranges":[{"startOffset":23842,"endOffset":24051,"count":0}],"isBlockCoverage":false},{"functionName":"logInconsistentImportAttributes","ranges":[{"startOffset":24052,"endOffset":24534,"count":0}],"isBlockCoverage":false},{"functionName":"formatAttributes","ranges":[{"startOffset":24560,"endOffset":24755,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidAnnotation","ranges":[{"startOffset":24757,"endOffset":25183,"count":0}],"isBlockCoverage":false},{"functionName":"logInputHookInOutputPlugin","ranges":[{"startOffset":25184,"endOffset":25568,"count":0}],"isBlockCoverage":false},{"functionName":"logCannotAssignModuleToChunk","ranges":[{"startOffset":25569,"endOffset":25838,"count":0}],"isBlockCoverage":false},{"functionName":"tweakStackMessage","ranges":[{"startOffset":25839,"endOffset":26024,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidExportOptionValue","ranges":[{"startOffset":26025,"endOffset":26331,"count":0}],"isBlockCoverage":false},{"functionName":"logIncompatibleExportOptionValue","ranges":[{"startOffset":26332,"endOffset":26689,"count":0}],"isBlockCoverage":false},{"functionName":"logInternalIdCannotBeExternal","ranges":[{"startOffset":26690,"endOffset":26944,"count":0}],"isBlockCoverage":false},{"functionName":"logImportOptionsAreInvalid","ranges":[{"startOffset":26945,"endOffset":27257,"count":0}],"isBlockCoverage":false},{"functionName":"logImportAttributeIsInvalid","ranges":[{"startOffset":27258,"endOffset":27579,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidLogPosition","ranges":[{"startOffset":27580,"endOffset":27848,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidOption","ranges":[{"startOffset":27849,"endOffset":28138,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidAddonPluginHook","ranges":[{"startOffset":28139,"endOffset":28440,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidFunctionPluginHook","ranges":[{"startOffset":28441,"endOffset":28725,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidRollupPhaseForChunkEmission","ranges":[{"startOffset":28726,"endOffset":28907,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidSetAssetSourceCall","ranges":[{"startOffset":28908,"endOffset":29162,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidFormatForTopLevelAwait","ranges":[{"startOffset":29163,"endOffset":29413,"count":0}],"isBlockCoverage":false},{"functionName":"logMissingEntryExport","ranges":[{"startOffset":29414,"endOffset":29700,"count":0}],"isBlockCoverage":false},{"functionName":"logMissingExport","ranges":[{"startOffset":29701,"endOffset":30188,"count":0}],"isBlockCoverage":false},{"functionName":"logMissingGlobalName","ranges":[{"startOffset":30189,"endOffset":30510,"count":0}],"isBlockCoverage":false},{"functionName":"logImplicitDependantCannotBeExternal","ranges":[{"startOffset":30511,"endOffset":30816,"count":0}],"isBlockCoverage":false},{"functionName":"logUnresolvedImplicitDependant","ranges":[{"startOffset":30817,"endOffset":31119,"count":0}],"isBlockCoverage":false},{"functionName":"logImplicitDependantIsNotIncluded","ranges":[{"startOffset":31120,"endOffset":31715,"count":0}],"isBlockCoverage":false},{"functionName":"logMissingJsxExport","ranges":[{"startOffset":31716,"endOffset":32123,"count":0}],"isBlockCoverage":false},{"functionName":"logMissingNameOptionForIifeExport","ranges":[{"startOffset":32124,"endOffset":32403,"count":0}],"isBlockCoverage":false},{"functionName":"logMissingNameOptionForUmdExport","ranges":[{"startOffset":32404,"endOffset":32725,"count":0}],"isBlockCoverage":false},{"functionName":"logMissingNodeBuiltins","ranges":[{"startOffset":32726,"endOffset":33084,"count":0}],"isBlockCoverage":false},{"functionName":"logMissingFileOrDirOption","ranges":[{"startOffset":33085,"endOffset":33299,"count":0}],"isBlockCoverage":false},{"functionName":"logMixedExport","ranges":[{"startOffset":33300,"endOffset":33774,"count":0}],"isBlockCoverage":false},{"functionName":"logModuleLevelDirective","ranges":[{"startOffset":33775,"endOffset":34017,"count":0}],"isBlockCoverage":false},{"functionName":"logNamespaceConflict","ranges":[{"startOffset":34018,"endOffset":34443,"count":0}],"isBlockCoverage":false},{"functionName":"logNoTransformMapOrAstWithoutCode","ranges":[{"startOffset":34444,"endOffset":34713,"count":0}],"isBlockCoverage":false},{"functionName":"logOptimizeChunkStatus","ranges":[{"startOffset":34714,"endOffset":34987,"count":0}],"isBlockCoverage":false},{"functionName":"logParseError","ranges":[{"startOffset":34988,"endOffset":35076,"count":0}],"isBlockCoverage":false},{"functionName":"logRedeclarationError","ranges":[{"startOffset":35077,"endOffset":35238,"count":0}],"isBlockCoverage":false},{"functionName":"logReservedNamespace","ranges":[{"startOffset":35239,"endOffset":35408,"count":0}],"isBlockCoverage":false},{"functionName":"logModuleParseError","ranges":[{"startOffset":35409,"endOffset":35958,"count":0}],"isBlockCoverage":false},{"functionName":"logPluginError","ranges":[{"startOffset":35959,"endOffset":36378,"count":0}],"isBlockCoverage":false},{"functionName":"logShimmedExport","ranges":[{"startOffset":36379,"endOffset":36605,"count":0}],"isBlockCoverage":false},{"functionName":"logSourcemapBroken","ranges":[{"startOffset":36606,"endOffset":36985,"count":0}],"isBlockCoverage":false},{"functionName":"logConflictingSourcemapSources","ranges":[{"startOffset":36986,"endOffset":37173,"count":0}],"isBlockCoverage":false},{"functionName":"logInvalidSourcemapForError","ranges":[{"startOffset":37174,"endOffset":37514,"count":0}],"isBlockCoverage":false},{"functionName":"logSyntheticNamedExportsNeedNamespaceExport","ranges":[{"startOffset":37515,"endOffset":38126,"count":0}],"isBlockCoverage":false},{"functionName":"logThisIsUndefined","ranges":[{"startOffset":38127,"endOffset":38387,"count":0}],"isBlockCoverage":false},{"functionName":"logUnexpectedNamedImport","ranges":[{"startOffset":38388,"endOffset":38895,"count":0}],"isBlockCoverage":false},{"functionName":"logUnexpectedNamespaceReexport","ranges":[{"startOffset":38896,"endOffset":39405,"count":0}],"isBlockCoverage":false},{"functionName":"logUnknownOption","ranges":[{"startOffset":39406,"endOffset":39643,"count":0}],"isBlockCoverage":false},{"functionName":"logEntryCannotBeExternal","ranges":[{"startOffset":39644,"endOffset":39829,"count":0}],"isBlockCoverage":false},{"functionName":"logExternalModulesCannotBeIncludedInManualChunks","ranges":[{"startOffset":39830,"endOffset":40135,"count":0}],"isBlockCoverage":false},{"functionName":"logExternalModulesCannotBeTransformedToModules","ranges":[{"startOffset":40136,"endOffset":40525,"count":0}],"isBlockCoverage":false},{"functionName":"logUnresolvedEntry","ranges":[{"startOffset":40526,"endOffset":40704,"count":0}],"isBlockCoverage":false},{"functionName":"logUnresolvedImport","ranges":[{"startOffset":40705,"endOffset":40936,"count":0}],"isBlockCoverage":false},{"functionName":"logUnresolvedImportTreatedAsExternal","ranges":[{"startOffset":40937,"endOffset":41316,"count":0}],"isBlockCoverage":false},{"functionName":"logUnusedExternalImports","ranges":[{"startOffset":41317,"endOffset":41750,"count":0}],"isBlockCoverage":false},{"functionName":"logFailedValidation","ranges":[{"startOffset":41751,"endOffset":41860,"count":0}],"isBlockCoverage":false},{"functionName":"warnDeprecation","ranges":[{"startOffset":41861,"endOffset":42069,"count":0}],"isBlockCoverage":false},{"functionName":"warnDeprecationWithOptions","ranges":[{"startOffset":42070,"endOffset":42424,"count":0}],"isBlockCoverage":false},{"functionName":"convertProgram","ranges":[{"startOffset":42525,"endOffset":42914,"count":103},{"startOffset":42633,"endOffset":42732,"count":0},{"startOffset":42741,"endOffset":42852,"count":0}],"isBlockCoverage":true},{"functionName":"panicError","ranges":[{"startOffset":42975,"endOffset":43220,"count":0}],"isBlockCoverage":false},{"functionName":"parseError","ranges":[{"startOffset":43226,"endOffset":43471,"count":0}],"isBlockCoverage":false},{"functionName":"arrayExpression","ranges":[{"startOffset":43477,"endOffset":43736,"count":156}],"isBlockCoverage":true},{"functionName":"arrayPattern","ranges":[{"startOffset":43742,"endOffset":43995,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionExpression","ranges":[{"startOffset":44001,"endOffset":44684,"count":519},{"startOffset":44476,"endOffset":44511,"count":0}],"isBlockCoverage":true},{"functionName":"assignmentExpression","ranges":[{"startOffset":44690,"endOffset":45072,"count":122}],"isBlockCoverage":true},{"functionName":"assignmentPattern","ranges":[{"startOffset":45078,"endOffset":45395,"count":17}],"isBlockCoverage":true},{"functionName":"awaitExpression","ranges":[{"startOffset":45401,"endOffset":45656,"count":644}],"isBlockCoverage":true},{"functionName":"binaryExpression","ranges":[{"startOffset":45662,"endOffset":46036,"count":66}],"isBlockCoverage":true},{"functionName":"blockStatement","ranges":[{"startOffset":46042,"endOffset":46295,"count":839}],"isBlockCoverage":true},{"functionName":"breakStatement","ranges":[{"startOffset":46301,"endOffset":46625,"count":0}],"isBlockCoverage":false},{"functionName":"callExpression","ranges":[{"startOffset":46631,"endOffset":47197,"count":2706},{"startOffset":47006,"endOffset":47041,"count":0}],"isBlockCoverage":true},{"functionName":"catchClause","ranges":[{"startOffset":47203,"endOffset":47594,"count":71},{"startOffset":47469,"endOffset":47475,"count":0}],"isBlockCoverage":true},{"functionName":"chainExpression","ranges":[{"startOffset":47600,"endOffset":47857,"count":76}],"isBlockCoverage":true},{"functionName":"classBody","ranges":[{"startOffset":47863,"endOffset":48106,"count":22}],"isBlockCoverage":true},{"functionName":"classDeclaration","ranges":[{"startOffset":48112,"endOffset":48716,"count":22},{"startOffset":48499,"endOffset":48505,"count":0},{"startOffset":48597,"endOffset":48638,"count":0}],"isBlockCoverage":true},{"functionName":"classExpression","ranges":[{"startOffset":48722,"endOffset":49324,"count":0}],"isBlockCoverage":false},{"functionName":"conditionalExpression","ranges":[{"startOffset":49330,"endOffset":49726,"count":13}],"isBlockCoverage":true},{"functionName":"continueStatement","ranges":[{"startOffset":49732,"endOffset":50062,"count":0}],"isBlockCoverage":false},{"functionName":"debuggerStatement","ranges":[{"startOffset":50068,"endOffset":50262,"count":0}],"isBlockCoverage":false},{"functionName":"decorator","ranges":[{"startOffset":50268,"endOffset":50513,"count":0}],"isBlockCoverage":false},{"functionName":"directive","ranges":[{"startOffset":50519,"endOffset":50841,"count":0}],"isBlockCoverage":false},{"functionName":"doWhileStatement","ranges":[{"startOffset":50847,"endOffset":51161,"count":0}],"isBlockCoverage":false},{"functionName":"emptyStatement","ranges":[{"startOffset":51167,"endOffset":51355,"count":0}],"isBlockCoverage":false},{"functionName":"exportAllDeclaration","ranges":[{"startOffset":51361,"endOffset":51843,"count":0}],"isBlockCoverage":false},{"functionName":"exportDefaultDeclaration","ranges":[{"startOffset":51849,"endOffset":52125,"count":57}],"isBlockCoverage":true},{"functionName":"exportNamedDeclaration","ranges":[{"startOffset":52131,"endOffset":52777,"count":57},{"startOffset":52550,"endOffset":52587,"count":0},{"startOffset":52711,"endOffset":52717,"count":0}],"isBlockCoverage":true},{"functionName":"exportSpecifier","ranges":[{"startOffset":52783,"endOffset":53213,"count":0}],"isBlockCoverage":false},{"functionName":"expressionStatement","ranges":[{"startOffset":53219,"endOffset":53484,"count":1327}],"isBlockCoverage":true},{"functionName":"forInStatement","ranges":[{"startOffset":53490,"endOffset":53862,"count":0}],"isBlockCoverage":false},{"functionName":"forOfStatement","ranges":[{"startOffset":53868,"endOffset":54322,"count":0}],"isBlockCoverage":false},{"functionName":"forStatement","ranges":[{"startOffset":54328,"endOffset":54977,"count":3},{"startOffset":54689,"endOffset":54695,"count":0},{"startOffset":54770,"endOffset":54776,"count":0},{"startOffset":54855,"endOffset":54861,"count":0}],"isBlockCoverage":true},{"functionName":"functionDeclaration","ranges":[{"startOffset":54983,"endOffset":55748,"count":6},{"startOffset":55456,"endOffset":55491,"count":0},{"startOffset":55532,"endOffset":55538,"count":0}],"isBlockCoverage":true},{"functionName":"functionExpression","ranges":[{"startOffset":55754,"endOffset":56517,"count":131},{"startOffset":56225,"endOffset":56260,"count":0},{"startOffset":56308,"endOffset":56341,"count":0}],"isBlockCoverage":true},{"functionName":"identifier","ranges":[{"startOffset":56523,"endOffset":56765,"count":12284}],"isBlockCoverage":true},{"functionName":"ifStatement","ranges":[{"startOffset":56771,"endOffset":57233,"count":159},{"startOffset":57169,"endOffset":57175,"count":138},{"startOffset":57176,"endOffset":57216,"count":21}],"isBlockCoverage":true},{"functionName":"importAttribute","ranges":[{"startOffset":57239,"endOffset":57551,"count":0}],"isBlockCoverage":false},{"functionName":"importDeclaration","ranges":[{"startOffset":57557,"endOffset":57956,"count":320}],"isBlockCoverage":true},{"functionName":"importDefaultSpecifier","ranges":[{"startOffset":57962,"endOffset":58228,"count":246}],"isBlockCoverage":true},{"functionName":"importExpression","ranges":[{"startOffset":58234,"endOffset":58633,"count":29},{"startOffset":58578,"endOffset":58616,"count":0}],"isBlockCoverage":true},{"functionName":"importNamespaceSpecifier","ranges":[{"startOffset":58639,"endOffset":58909,"count":1}],"isBlockCoverage":true},{"functionName":"importSpecifier","ranges":[{"startOffset":58915,"endOffset":59345,"count":218},{"startOffset":59270,"endOffset":59309,"count":0}],"isBlockCoverage":true},{"functionName":"jsxAttribute","ranges":[{"startOffset":59351,"endOffset":59732,"count":0}],"isBlockCoverage":false},{"functionName":"jsxClosingElement","ranges":[{"startOffset":59738,"endOffset":59993,"count":0}],"isBlockCoverage":false},{"functionName":"jsxClosingFragment","ranges":[{"startOffset":59999,"endOffset":60195,"count":0}],"isBlockCoverage":false},{"functionName":"jsxElement","ranges":[{"startOffset":60201,"endOffset":60693,"count":0}],"isBlockCoverage":false},{"functionName":"jsxEmptyExpression","ranges":[{"startOffset":60699,"endOffset":60895,"count":0}],"isBlockCoverage":false},{"functionName":"jsxExpressionContainer","ranges":[{"startOffset":60901,"endOffset":61172,"count":0}],"isBlockCoverage":false},{"functionName":"jsxFragment","ranges":[{"startOffset":61178,"endOffset":61573,"count":0}],"isBlockCoverage":false},{"functionName":"jsxIdentifier","ranges":[{"startOffset":61579,"endOffset":61827,"count":0}],"isBlockCoverage":false},{"functionName":"jsxMemberExpression","ranges":[{"startOffset":61833,"endOffset":62159,"count":0}],"isBlockCoverage":false},{"functionName":"jsxNamespacedName","ranges":[{"startOffset":62165,"endOffset":62486,"count":0}],"isBlockCoverage":false},{"functionName":"jsxOpeningElement","ranges":[{"startOffset":62492,"endOffset":62906,"count":0}],"isBlockCoverage":false},{"functionName":"jsxOpeningFragment","ranges":[{"startOffset":62912,"endOffset":63168,"count":0}],"isBlockCoverage":false},{"functionName":"jsxSpreadAttribute","ranges":[{"startOffset":63174,"endOffset":63435,"count":0}],"isBlockCoverage":false},{"functionName":"jsxSpreadChild","ranges":[{"startOffset":63441,"endOffset":63696,"count":0}],"isBlockCoverage":false},{"functionName":"jsxText","ranges":[{"startOffset":63702,"endOffset":64000,"count":0}],"isBlockCoverage":false},{"functionName":"labeledStatement","ranges":[{"startOffset":64006,"endOffset":64321,"count":0}],"isBlockCoverage":false},{"functionName":"literalBigInt","ranges":[{"startOffset":64327,"endOffset":64690,"count":0}],"isBlockCoverage":false},{"functionName":"literalBoolean","ranges":[{"startOffset":64696,"endOffset":65024,"count":119},{"startOffset":64989,"endOffset":64997,"count":106},{"startOffset":64998,"endOffset":65007,"count":13}],"isBlockCoverage":true},{"functionName":"literalNull","ranges":[{"startOffset":65030,"endOffset":65258,"count":15}],"isBlockCoverage":true},{"functionName":"literalNumber","ranges":[{"startOffset":65264,"endOffset":65664,"count":567},{"startOffset":65514,"endOffset":65525,"count":0}],"isBlockCoverage":true},{"functionName":"literalRegExp","ranges":[{"startOffset":65670,"endOffset":66111,"count":4}],"isBlockCoverage":true},{"functionName":"literalString","ranges":[{"startOffset":66117,"endOffset":66494,"count":1710},{"startOffset":66430,"endOffset":66441,"count":0}],"isBlockCoverage":true},{"functionName":"logicalExpression","ranges":[{"startOffset":66500,"endOffset":66876,"count":22}],"isBlockCoverage":true},{"functionName":"memberExpression","ranges":[{"startOffset":66882,"endOffset":67328,"count":3445}],"isBlockCoverage":true},{"functionName":"metaProperty","ranges":[{"startOffset":67334,"endOffset":67644,"count":0}],"isBlockCoverage":false},{"functionName":"methodDefinition","ranges":[{"startOffset":67650,"endOffset":68214,"count":130}],"isBlockCoverage":true},{"functionName":"newExpression","ranges":[{"startOffset":68220,"endOffset":68699,"count":318},{"startOffset":68508,"endOffset":68543,"count":43},{"startOffset":68544,"endOffset":68548,"count":275}],"isBlockCoverage":true},{"functionName":"objectExpression","ranges":[{"startOffset":68705,"endOffset":68968,"count":716}],"isBlockCoverage":true},{"functionName":"objectPattern","ranges":[{"startOffset":68974,"endOffset":69231,"count":77}],"isBlockCoverage":true},{"functionName":"privateIdentifier","ranges":[{"startOffset":69237,"endOffset":69493,"count":0}],"isBlockCoverage":false},{"functionName":"program","ranges":[{"startOffset":69499,"endOffset":69961,"count":103},{"startOffset":69854,"endOffset":69904,"count":0}],"isBlockCoverage":true},{"functionName":"property","ranges":[{"startOffset":69967,"endOffset":70584,"count":2171},{"startOffset":70444,"endOffset":70458,"count":206},{"startOffset":70459,"endOffset":70493,"count":1965}],"isBlockCoverage":true},{"functionName":"propertyDefinition","ranges":[{"startOffset":70590,"endOffset":71177,"count":0}],"isBlockCoverage":false},{"functionName":"restElement","ranges":[{"startOffset":71183,"endOffset":71430,"count":11}],"isBlockCoverage":true},{"functionName":"returnStatement","ranges":[{"startOffset":71436,"endOffset":71774,"count":189},{"startOffset":71711,"endOffset":71717,"count":0}],"isBlockCoverage":true},{"functionName":"sequenceExpression","ranges":[{"startOffset":71780,"endOffset":72048,"count":0}],"isBlockCoverage":false},{"functionName":"spreadElement","ranges":[{"startOffset":72054,"endOffset":72305,"count":24}],"isBlockCoverage":true},{"functionName":"staticBlock","ranges":[{"startOffset":72311,"endOffset":72558,"count":0}],"isBlockCoverage":false},{"functionName":"superElement","ranges":[{"startOffset":72564,"endOffset":72741,"count":0}],"isBlockCoverage":false},{"functionName":"switchCase","ranges":[{"startOffset":72747,"endOffset":73130,"count":16},{"startOffset":73000,"endOffset":73006,"count":2},{"startOffset":73007,"endOffset":73042,"count":14}],"isBlockCoverage":true},{"functionName":"switchStatement","ranges":[{"startOffset":73136,"endOffset":73461,"count":2}],"isBlockCoverage":true},{"functionName":"taggedTemplateExpression","ranges":[{"startOffset":73467,"endOffset":73797,"count":0}],"isBlockCoverage":false},{"functionName":"templateElement","ranges":[{"startOffset":73803,"endOffset":74323,"count":164},{"startOffset":73989,"endOffset":74000,"count":0}],"isBlockCoverage":true},{"functionName":"templateLiteral","ranges":[{"startOffset":74329,"endOffset":74658,"count":82}],"isBlockCoverage":true},{"functionName":"thisExpression","ranges":[{"startOffset":74664,"endOffset":74852,"count":150}],"isBlockCoverage":true},{"functionName":"throwStatement","ranges":[{"startOffset":74858,"endOffset":75111,"count":82}],"isBlockCoverage":true},{"functionName":"tryStatement","ranges":[{"startOffset":75117,"endOffset":75659,"count":71},{"startOffset":75501,"endOffset":75507,"count":0},{"startOffset":75602,"endOffset":75642,"count":0}],"isBlockCoverage":true},{"functionName":"unaryExpression","ranges":[{"startOffset":75665,"endOffset":76005,"count":105}],"isBlockCoverage":true},{"functionName":"updateExpression","ranges":[{"startOffset":76011,"endOffset":76410,"count":4}],"isBlockCoverage":true},{"functionName":"variableDeclaration","ranges":[{"startOffset":76416,"endOffset":76742,"count":989}],"isBlockCoverage":true},{"functionName":"variableDeclarator","ranges":[{"startOffset":76748,"endOffset":77135,"count":989},{"startOffset":77076,"endOffset":77082,"count":63},{"startOffset":77083,"endOffset":77118,"count":926}],"isBlockCoverage":true},{"functionName":"whileStatement","ranges":[{"startOffset":77141,"endOffset":77451,"count":0}],"isBlockCoverage":false},{"functionName":"yieldExpression","ranges":[{"startOffset":77457,"endOffset":77880,"count":0}],"isBlockCoverage":false},{"functionName":"convertNode","ranges":[{"startOffset":77884,"endOffset":78271,"count":32386},{"startOffset":78134,"endOffset":78225,"count":0}],"isBlockCoverage":true},{"functionName":"convertNodeList","ranges":[{"startOffset":78272,"endOffset":78647,"count":7670},{"startOffset":78349,"endOffset":78368,"count":1698},{"startOffset":78368,"endOffset":78493,"count":5972},{"startOffset":78493,"endOffset":78628,"count":10818},{"startOffset":78615,"endOffset":78621,"count":0},{"startOffset":78628,"endOffset":78646,"count":5972}],"isBlockCoverage":true},{"functionName":"getAstBuffer","ranges":[{"startOffset":78649,"endOffset":79425,"count":103},{"startOffset":79066,"endOffset":79371,"count":0}],"isBlockCoverage":true},{"functionName":"convertString","ranges":[{"startOffset":78856,"endOffset":79059,"count":16607}],"isBlockCoverage":true},{"functionName":"convertString","ranges":[{"startOffset":79149,"endOffset":79364,"count":0}],"isBlockCoverage":false},{"functionName":"parseAst","ranges":[{"startOffset":79444,"endOffset":79588,"count":8}],"isBlockCoverage":true},{"functionName":"parseAstAsync","ranges":[{"startOffset":79612,"endOffset":79789,"count":95}],"isBlockCoverage":true}]},{"scriptId":"355","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/diff-sequences/build/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27386,"count":1}],"isBlockCoverage":true},{"functionName":"countCommonItemsF","ranges":[{"startOffset":3060,"endOffset":3269,"count":0}],"isBlockCoverage":false},{"functionName":"countCommonItemsR","ranges":[{"startOffset":3439,"endOffset":3658,"count":0}],"isBlockCoverage":false},{"functionName":"extendPathsF","ranges":[{"startOffset":3807,"endOffset":5294,"count":0}],"isBlockCoverage":false},{"functionName":"extendPathsR","ranges":[{"startOffset":5443,"endOffset":6990,"count":0}],"isBlockCoverage":false},{"functionName":"extendOverlappablePathsF","ranges":[{"startOffset":7183,"endOffset":11833,"count":0}],"isBlockCoverage":false},{"functionName":"extendOverlappablePathsR","ranges":[{"startOffset":12020,"endOffset":16882,"count":0}],"isBlockCoverage":false},{"functionName":"divide","ranges":[{"startOffset":17150,"endOffset":20489,"count":0}],"isBlockCoverage":false},{"functionName":"findSubsequences","ranges":[{"startOffset":20965,"endOffset":23574,"count":0}],"isBlockCoverage":false},{"functionName":"validateLength","ranges":[{"startOffset":23599,"endOffset":23956,"count":0}],"isBlockCoverage":false},{"functionName":"validateCallback","ranges":[{"startOffset":23983,"endOffset":24138,"count":0}],"isBlockCoverage":false},{"functionName":"diffSequence","ranges":[{"startOffset":24401,"endOffset":27385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/pkg-types/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5022,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":332,"endOffset":451,"count":0}],"isBlockCoverage":false},{"functionName":"findFile","ranges":[{"startOffset":455,"endOffset":1657,"count":0}],"isBlockCoverage":false},{"functionName":"findNearestFile","ranges":[{"startOffset":1658,"endOffset":1750,"count":0}],"isBlockCoverage":false},{"functionName":"findFarthestFile","ranges":[{"startOffset":1751,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"definePackageJSON","ranges":[{"startOffset":1868,"endOffset":1927,"count":0}],"isBlockCoverage":false},{"functionName":"defineTSConfig","ranges":[{"startOffset":1928,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJSON","ranges":[{"startOffset":2030,"endOffset":2544,"count":0}],"isBlockCoverage":false},{"functionName":"writePackageJSON","ranges":[{"startOffset":2545,"endOffset":2655,"count":0}],"isBlockCoverage":false},{"functionName":"readTSConfig","ranges":[{"startOffset":2656,"endOffset":3100,"count":0}],"isBlockCoverage":false},{"functionName":"writeTSConfig","ranges":[{"startOffset":3101,"endOffset":3209,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageJSON","ranges":[{"startOffset":3210,"endOffset":3454,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTSConfig","ranges":[{"startOffset":3455,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLockfile","ranges":[{"startOffset":3818,"endOffset":4156,"count":0}],"isBlockCoverage":false},{"functionName":"findWorkspaceDir","ranges":[{"startOffset":4157,"endOffset":4793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/acorn/dist/acorn.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226577,"count":1},{"startOffset":19870,"endOffset":19952,"count":0},{"startOffset":19983,"endOffset":20060,"count":0},{"startOffset":155780,"endOffset":155846,"count":6}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":12117,"endOffset":12354,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":12418,"endOffset":12812,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":12875,"endOffset":13376,"count":0}],"isBlockCoverage":false},{"functionName":"TokenType","ranges":[{"startOffset":14353,"endOffset":14750,"count":77},{"startOffset":14412,"endOffset":14422,"count":8},{"startOffset":14711,"endOffset":14718,"count":62}],"isBlockCoverage":true},{"functionName":"binop","ranges":[{"startOffset":14753,"endOffset":14845,"count":12}],"isBlockCoverage":true},{"functionName":"kw","ranges":[{"startOffset":15022,"endOffset":15176,"count":35},{"startOffset":15079,"endOffset":15092,"count":12}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":19215,"endOffset":19317,"count":0}],"isBlockCoverage":false},{"functionName":"nextLineBreak","ranges":[{"startOffset":19319,"endOffset":19612,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19874,"endOffset":19951,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19987,"endOffset":20059,"count":0}],"isBlockCoverage":true},{"functionName":"wordsRegexp","ranges":[{"startOffset":20103,"endOffset":20241,"count":24},{"startOffset":20161,"endOffset":20239,"count":12}],"isBlockCoverage":true},{"functionName":"codePointToString","ranges":[{"startOffset":20243,"endOffset":20454,"count":0}],"isBlockCoverage":false},{"functionName":"Position","ranges":[{"startOffset":20670,"endOffset":20743,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":20774,"endOffset":20847,"count":0}],"isBlockCoverage":false},{"functionName":"SourceLocation","ranges":[{"startOffset":20871,"endOffset":21014,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":21277,"endOffset":21509,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":26770,"endOffset":27893,"count":0}],"isBlockCoverage":false},{"functionName":"pushComment","ranges":[{"startOffset":27895,"endOffset":28305,"count":0}],"isBlockCoverage":false},{"functionName":"functionFlags","ranges":[{"startOffset":28668,"endOffset":28800,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":29226,"endOffset":32464,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":32864,"endOffset":32994,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inFunction.get","ranges":[{"startOffset":33033,"endOffset":33107,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inGenerator.get","ranges":[{"startOffset":33147,"endOffset":33266,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inAsync.get","ranges":[{"startOffset":33302,"endOffset":33417,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.canAwait.get","ranges":[{"startOffset":33454,"endOffset":33840,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowSuper.get","ranges":[{"startOffset":33879,"endOffset":34102,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowDirectSuper.get","ranges":[{"startOffset":34147,"endOffset":34226,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.treatFunctionsAsVar.get","ranges":[{"startOffset":34274,"endOffset":34349,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowNewDotTarget.get","ranges":[{"startOffset":34395,"endOffset":34610,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inClassStaticBlock.get","ranges":[{"startOffset":34657,"endOffset":34743,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":34762,"endOffset":34987,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":35005,"endOffset":35082,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":35112,"endOffset":35266,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":35288,"endOffset":35361,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.strictDirective","ranges":[{"startOffset":35575,"endOffset":36537,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.eat","ranges":[{"startOffset":36666,"endOffset":36777,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.isContextual","ranges":[{"startOffset":36856,"endOffset":36954,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.eatContextual","ranges":[{"startOffset":37023,"endOffset":37119,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.expectContextual","ranges":[{"startOffset":37208,"endOffset":37282,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.canInsertSemicolon","ranges":[{"startOffset":37381,"endOffset":37535,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.insertSemicolon","ranges":[{"startOffset":37561,"endOffset":37753,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.semicolon","ranges":[{"startOffset":37896,"endOffset":37991,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.afterTrailingComma","ranges":[{"startOffset":38020,"endOffset":38261,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.expect","ranges":[{"startOffset":38383,"endOffset":38440,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.unexpected","ranges":[{"startOffset":38498,"endOffset":38581,"count":0}],"isBlockCoverage":false},{"functionName":"DestructuringErrors","ranges":[{"startOffset":38610,"endOffset":38777,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.checkPatternErrors","ranges":[{"startOffset":38806,"endOffset":39288,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.checkExpressionErrors","ranges":[{"startOffset":39320,"endOffset":39849,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.checkYieldAwaitInDefaultParams","ranges":[{"startOffset":39890,"endOffset":40161,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.isSimpleAssignTarget","ranges":[{"startOffset":40192,"endOffset":40387,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseTopLevel","ranges":[{"startOffset":40716,"endOffset":41344,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isLet","ranges":[{"startOffset":41425,"endOffset":42508,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isAsyncFunction","ranges":[{"startOffset":42663,"endOffset":43157,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseStatement","ranges":[{"startOffset":43427,"endOffset":46943,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseBreakContinueStatement","ranges":[{"startOffset":46981,"endOffset":47790,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseDebuggerStatement","ranges":[{"startOffset":47823,"endOffset":47928,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseDoStatement","ranges":[{"startOffset":47955,"endOffset":48308,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseForStatement","ranges":[{"startOffset":48753,"endOffset":51182,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFunctionStatement","ranges":[{"startOffset":51215,"endOffset":51397,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseIfStatement","ranges":[{"startOffset":51424,"endOffset":51746,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseReturnStatement","ranges":[{"startOffset":51777,"endOffset":52302,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseSwitchStatement","ranges":[{"startOffset":52333,"endOffset":53583,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseThrowStatement","ranges":[{"startOffset":53613,"endOffset":53894,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseCatchClauseParam","ranges":[{"startOffset":54013,"endOffset":54284,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseTryStatement","ranges":[{"startOffset":54312,"endOffset":55070,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVarStatement","ranges":[{"startOffset":55098,"endOffset":55297,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseWhileStatement","ranges":[{"startOffset":55327,"endOffset":55548,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseWithStatement","ranges":[{"startOffset":55577,"endOffset":55818,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseEmptyStatement","ranges":[{"startOffset":55848,"endOffset":55930,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseLabeledStatement","ranges":[{"startOffset":55962,"endOffset":56905,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExpressionStatement","ranges":[{"startOffset":56940,"endOffset":57064,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseBlock","ranges":[{"startOffset":57235,"endOffset":57784,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFor","ranges":[{"startOffset":57944,"endOffset":58359,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseForIn","ranges":[{"startOffset":58476,"endOffset":59257,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVar","ranges":[{"startOffset":59319,"endOffset":60181,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVarId","ranges":[{"startOffset":60202,"endOffset":60346,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFunction","ranges":[{"startOffset":60616,"endOffset":62285,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFunctionParams","ranges":[{"startOffset":62315,"endOffset":62498,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClass","ranges":[{"startOffset":62607,"endOffset":63898,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassElement","ranges":[{"startOffset":63926,"endOffset":66278,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isClassElementNameStart","ranges":[{"startOffset":66312,"endOffset":66543,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassElementName","ranges":[{"startOffset":66575,"endOffset":66893,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassMethod","ranges":[{"startOffset":66920,"endOffset":68005,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassField","ranges":[{"startOffset":68031,"endOffset":68766,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassStaticBlock","ranges":[{"startOffset":68798,"endOffset":69167,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassId","ranges":[{"startOffset":69190,"endOffset":69467,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassSuper","ranges":[{"startOffset":69493,"endOffset":69606,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.enterClassBody","ranges":[{"startOffset":69631,"endOffset":69769,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.exitClassBody","ranges":[{"startOffset":69793,"endOffset":70366,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateNameConflicted","ranges":[{"startOffset":70369,"endOffset":71077,"count":0}],"isBlockCoverage":false},{"functionName":"checkKeyName","ranges":[{"startOffset":71079,"endOffset":71301,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportAllDeclaration","ranges":[{"startOffset":71374,"endOffset":71940,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExport","ranges":[{"startOffset":71962,"endOffset":73747,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportDeclaration","ranges":[{"startOffset":73780,"endOffset":73833,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportDefaultDeclaration","ranges":[{"startOffset":73873,"endOffset":74388,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkExport","ranges":[{"startOffset":74410,"endOffset":74693,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkPatternExport","ranges":[{"startOffset":74722,"endOffset":75536,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkVariableExport","ranges":[{"startOffset":75566,"endOffset":75760,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.shouldParseExportStatement","ranges":[{"startOffset":75797,"endOffset":76012,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportSpecifier","ranges":[{"startOffset":76096,"endOffset":76414,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportSpecifiers","ranges":[{"startOffset":76446,"endOffset":76822,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImport","ranges":[{"startOffset":76875,"endOffset":77389,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportSpecifier","ranges":[{"startOffset":77473,"endOffset":77826,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportDefaultSpecifier","ranges":[{"startOffset":77864,"endOffset":78099,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportNamespaceSpecifier","ranges":[{"startOffset":78139,"endOffset":78373,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportSpecifiers","ranges":[{"startOffset":78405,"endOffset":78982,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseWithClause","ranges":[{"startOffset":79008,"endOffset":79691,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportAttribute","ranges":[{"startOffset":79722,"endOffset":80073,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseModuleExportName","ranges":[{"startOffset":80105,"endOffset":80453,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.adaptDirectivePrologue","ranges":[{"startOffset":80559,"endOffset":80752,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isDirectiveCandidate","ranges":[{"startOffset":80782,"endOffset":81125,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.toAssignable","ranges":[{"startOffset":81253,"endOffset":84025,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.toAssignableList","ranges":[{"startOffset":84106,"endOffset":84533,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseSpread","ranges":[{"startOffset":84582,"endOffset":84784,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseRestBinding","ranges":[{"startOffset":84811,"endOffset":85128,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseBindingAtom","ranges":[{"startOffset":85192,"endOffset":85573,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseBindingList","ranges":[{"startOffset":85600,"endOffset":86379,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseAssignableListItem","ranges":[{"startOffset":86413,"endOffset":86554,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseBindingListItem","ranges":[{"startOffset":86585,"endOffset":86619,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseMaybeDefault","ranges":[{"startOffset":86708,"endOffset":87028,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.checkLValSimple","ranges":[{"startOffset":89914,"endOffset":91319,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.checkLValPattern","ranges":[{"startOffset":91346,"endOffset":91979,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.checkLValInnerPattern","ranges":[{"startOffset":92011,"endOffset":92569,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":92784,"endOffset":93006,"count":10}],"isBlockCoverage":true},{"functionName":"types.q_tmpl","ranges":[{"startOffset":93254,"endOffset":93303,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.initialContext","ranges":[{"startOffset":93580,"endOffset":93618,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.curContext","ranges":[{"startOffset":93639,"endOffset":93700,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.braceIsBlock","ranges":[{"startOffset":93723,"endOffset":94678,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.inGeneratorContext","ranges":[{"startOffset":94707,"endOffset":94903,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.updateContext","ranges":[{"startOffset":94927,"endOffset":95191,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.overrideContext","ranges":[{"startOffset":95324,"endOffset":95444,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.parenR.updateContext.types$1.braceR.updateContext","ranges":[{"startOffset":95548,"endOffset":95813,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.braceL.updateContext","ranges":[{"startOffset":95847,"endOffset":95976,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.dollarBraceL.updateContext","ranges":[{"startOffset":96016,"endOffset":96092,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.parenL.updateContext","ranges":[{"startOffset":96126,"endOffset":96383,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.incDec.updateContext","ranges":[{"startOffset":96417,"endOffset":96467,"count":0}],"isBlockCoverage":false},{"functionName":"types$1._function.updateContext.types$1._class.updateContext","ranges":[{"startOffset":96535,"endOffset":97023,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.colon.updateContext","ranges":[{"startOffset":97056,"endOffset":97167,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.backQuote.updateContext","ranges":[{"startOffset":97204,"endOffset":97364,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.star.updateContext","ranges":[{"startOffset":97396,"endOffset":97680,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.name.updateContext","ranges":[{"startOffset":97712,"endOffset":97997,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkPropClash","ranges":[{"startOffset":99255,"endOffset":100622,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExpression","ranges":[{"startOffset":101379,"endOffset":101861,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMaybeAssign","ranges":[{"startOffset":101978,"endOffset":104413,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMaybeConditional","ranges":[{"startOffset":104494,"endOffset":105052,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprOps","ranges":[{"startOffset":105108,"endOffset":105505,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprOp","ranges":[{"startOffset":105854,"endOffset":107182,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.buildBinary","ranges":[{"startOffset":107204,"endOffset":107596,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMaybeUnary","ranges":[{"startOffset":107674,"endOffset":109837,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalVariableAccess","ranges":[{"startOffset":109840,"endOffset":110015,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateFieldAccess","ranges":[{"startOffset":110017,"endOffset":110322,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprSubscripts","ranges":[{"startOffset":110404,"endOffset":111217,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseSubscripts","ranges":[{"startOffset":111243,"endOffset":112105,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.shouldParseAsyncArrow","ranges":[{"startOffset":112137,"endOffset":112214,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseSubscriptAsyncArrow","ranges":[{"startOffset":112249,"endOffset":112398,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseSubscript","ranges":[{"startOffset":112423,"endOffset":115295,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprAtom","ranges":[{"startOffset":115533,"endOffset":119578,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprAtomDefault","ranges":[{"startOffset":119609,"endOffset":119644,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprImport","ranges":[{"startOffset":119670,"endOffset":120367,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseDynamicImport","ranges":[{"startOffset":120396,"endOffset":121383,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseImportMeta","ranges":[{"startOffset":121409,"endOffset":122024,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseLiteral","ranges":[{"startOffset":122047,"endOffset":122344,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenExpression","ranges":[{"startOffset":122375,"endOffset":122500,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.shouldParseArrow","ranges":[{"startOffset":122527,"endOffset":122585,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenAndDistinguishExpression","ranges":[{"startOffset":122630,"endOffset":125170,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenItem","ranges":[{"startOffset":125195,"endOffset":125227,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenArrowList","ranges":[{"startOffset":125257,"endOffset":125407,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseNew","ranges":[{"startOffset":125734,"endOffset":127052,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseTemplateElement","ranges":[{"startOffset":127114,"endOffset":127706,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseTemplate","ranges":[{"startOffset":127730,"endOffset":128410,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.isAsyncProp","ranges":[{"startOffset":128432,"endOffset":128824,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseObj","ranges":[{"startOffset":128891,"endOffset":129524,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseProperty","ranges":[{"startOffset":129548,"endOffset":131189,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseGetterSetter","ranges":[{"startOffset":131217,"endOffset":131842,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parsePropertyValue","ranges":[{"startOffset":131871,"endOffset":133711,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parsePropertyName","ranges":[{"startOffset":133739,"endOffset":134174,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.initFunction","ranges":[{"startOffset":134233,"endOffset":134413,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMethod","ranges":[{"startOffset":134469,"endOffset":135384,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseArrowExpression","ranges":[{"startOffset":135474,"endOffset":136117,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseFunctionBody","ranges":[{"startOffset":136191,"endOffset":137904,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.isSimpleParamList","ranges":[{"startOffset":137932,"endOffset":138114,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkParams","ranges":[{"startOffset":138260,"endOffset":138516,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprList","ranges":[{"startOffset":138829,"endOffset":139614,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkUnreserved","ranges":[{"startOffset":139640,"endOffset":140854,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseIdent","ranges":[{"startOffset":141025,"endOffset":141310,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseIdentNode","ranges":[{"startOffset":141335,"endOffset":142167,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parsePrivateIdent","ranges":[{"startOffset":142195,"endOffset":142754,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseYield","ranges":[{"startOffset":142821,"endOffset":143279,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseAwait","ranges":[{"startOffset":143300,"endOffset":143540,"count":0}],"isBlockCoverage":false},{"functionName":"pp$4.raise","ranges":[{"startOffset":143860,"endOffset":144090,"count":0}],"isBlockCoverage":false},{"functionName":"pp$4.curPosition","ranges":[{"startOffset":144149,"endOffset":144264,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":144309,"endOffset":144734,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.enterScope","ranges":[{"startOffset":144887,"endOffset":144948,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.exitScope","ranges":[{"startOffset":144968,"endOffset":145007,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.treatFunctionsAsVarInScope","ranges":[{"startOffset":145210,"endOffset":145316,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.declareName","ranges":[{"startOffset":145338,"endOffset":146834,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.checkLocalExport","ranges":[{"startOffset":146861,"endOffset":147106,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentScope","ranges":[{"startOffset":147129,"endOffset":147196,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentVarScope","ranges":[{"startOffset":147222,"endOffset":147377,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentThisScope","ranges":[{"startOffset":147501,"endOffset":147688,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":147702,"endOffset":148033,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.startNode","ranges":[{"startOffset":148132,"endOffset":148197,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.startNodeAt","ranges":[{"startOffset":148219,"endOffset":148275,"count":0}],"isBlockCoverage":false},{"functionName":"finishNodeAt","ranges":[{"startOffset":148338,"endOffset":148551,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.finishNode","ranges":[{"startOffset":148571,"endOffset":148677,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.finishNodeAt","ranges":[{"startOffset":148734,"endOffset":148823,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.copyNode","ranges":[{"startOffset":148842,"endOffset":148993,"count":0}],"isBlockCoverage":false},{"functionName":"buildUnicodeData","ranges":[{"startOffset":155101,"endOffset":155705,"count":6}],"isBlockCoverage":true},{"functionName":"BranchID","ranges":[{"startOffset":156026,"endOffset":156189,"count":0}],"isBlockCoverage":false},{"functionName":"separatedFrom","ranges":[{"startOffset":156227,"endOffset":156582,"count":0}],"isBlockCoverage":false},{"functionName":"sibling","ranges":[{"startOffset":156614,"endOffset":156683,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpValidationState","ranges":[{"startOffset":156714,"endOffset":157499,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":157542,"endOffset":158066,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":158109,"endOffset":158250,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":158477,"endOffset":158861,"count":0}],"isBlockCoverage":false},{"functionName":"nextIndex","ranges":[{"startOffset":158908,"endOffset":159276,"count":0}],"isBlockCoverage":false},{"functionName":"current","ranges":[{"startOffset":159321,"endOffset":159431,"count":0}],"isBlockCoverage":false},{"functionName":"lookahead","ranges":[{"startOffset":159478,"endOffset":159614,"count":0}],"isBlockCoverage":false},{"functionName":"advance","ranges":[{"startOffset":159659,"endOffset":159781,"count":0}],"isBlockCoverage":false},{"functionName":"eat","ranges":[{"startOffset":159822,"endOffset":159995,"count":0}],"isBlockCoverage":false},{"functionName":"eatChars","ranges":[{"startOffset":160041,"endOffset":160410,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.validateRegExpFlags","ranges":[{"startOffset":160593,"endOffset":161213,"count":0}],"isBlockCoverage":false},{"functionName":"hasProp","ranges":[{"startOffset":161216,"endOffset":161293,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.validateRegExpPattern","ranges":[{"startOffset":161479,"endOffset":162044,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_pattern","ranges":[{"startOffset":162134,"endOffset":163052,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_disjunction","ranges":[{"startOffset":163150,"endOffset":163765,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_alternative","ranges":[{"startOffset":163863,"endOffset":163957,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatTerm","ranges":[{"startOffset":164051,"endOffset":164674,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAssertion","ranges":[{"startOffset":164778,"endOffset":165633,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatQuantifier","ranges":[{"startOffset":165732,"endOffset":165927,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatQuantifierPrefix","ranges":[{"startOffset":166038,"endOffset":166226,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatBracedQuantifier","ranges":[{"startOffset":166262,"endOffset":166981,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAtom","ranges":[{"startOffset":167068,"endOffset":167365,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatReverseSolidusAtomEscape","ranges":[{"startOffset":167409,"endOffset":167596,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUncapturingGroup","ranges":[{"startOffset":167632,"endOffset":169135,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCapturingGroup","ranges":[{"startOffset":169169,"endOffset":169586,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatModifiers","ranges":[{"startOffset":169719,"endOffset":169935,"count":0}],"isBlockCoverage":false},{"functionName":"isRegularExpressionModifier","ranges":[{"startOffset":169993,"endOffset":170112,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatExtendedAtom","ranges":[{"startOffset":170221,"endOffset":170578,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatInvalidBracedQuantifier","ranges":[{"startOffset":170710,"endOffset":170840,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatSyntaxCharacter","ranges":[{"startOffset":170949,"endOffset":171112,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxCharacter","ranges":[{"startOffset":171114,"endOffset":171385,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatPatternCharacters","ranges":[{"startOffset":171514,"endOffset":171694,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatExtendedPatternCharacter","ranges":[{"startOffset":171828,"endOffset":172171,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_groupSpecifier","ranges":[{"startOffset":172256,"endOffset":173040,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatGroupName","ranges":[{"startOffset":173196,"endOffset":173449,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierName","ranges":[{"startOffset":173667,"endOffset":174005,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierStart","ranges":[{"startOffset":174154,"endOffset":174551,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierStart","ranges":[{"startOffset":174553,"endOffset":174676,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierPart","ranges":[{"startOffset":174848,"endOffset":175244,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierPart","ranges":[{"startOffset":175246,"endOffset":175426,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAtomEscape","ranges":[{"startOffset":175531,"endOffset":175985,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatBackReference","ranges":[{"startOffset":176018,"endOffset":176471,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatKGroupName","ranges":[{"startOffset":176501,"endOffset":176743,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterEscape","ranges":[{"startOffset":176859,"endOffset":177241,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCControlLetter","ranges":[{"startOffset":177275,"endOffset":177465,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatZero","ranges":[{"startOffset":177489,"endOffset":177672,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatControlEscape","ranges":[{"startOffset":177777,"endOffset":178389,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatControlLetter","ranges":[{"startOffset":178494,"endOffset":178662,"count":0}],"isBlockCoverage":false},{"functionName":"isControlLetter","ranges":[{"startOffset":178664,"endOffset":178808,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpUnicodeEscapeSequence","ranges":[{"startOffset":178940,"endOffset":180058,"count":0}],"isBlockCoverage":false},{"functionName":"isValidUnicode","ranges":[{"startOffset":180060,"endOffset":180126,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatIdentityEscape","ranges":[{"startOffset":180239,"endOffset":180662,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatDecimalEscape","ranges":[{"startOffset":180767,"endOffset":181106,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterClassEscape","ranges":[{"startOffset":181509,"endOffset":182223,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterClassEscape","ranges":[{"startOffset":182226,"endOffset":182439,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyValueExpression","ranges":[{"startOffset":182612,"endOffset":183294,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_validateUnicodePropertyNameAndValue","ranges":[{"startOffset":183347,"endOffset":183588,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_validateUnicodePropertyNameOrValue","ranges":[{"startOffset":183640,"endOffset":183896,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyName","ranges":[{"startOffset":183997,"endOffset":184240,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyNameCharacter","ranges":[{"startOffset":184243,"endOffset":184342,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyValue","ranges":[{"startOffset":184445,"endOffset":184689,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyValueCharacter","ranges":[{"startOffset":184691,"endOffset":184805,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatLoneUnicodePropertyNameOrValue","ranges":[{"startOffset":184928,"endOffset":184999,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterClass","ranges":[{"startOffset":185106,"endOffset":185489,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classContents","ranges":[{"startOffset":185636,"endOffset":185847,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_nonEmptyClassRanges","ranges":[{"startOffset":186044,"endOffset":186503,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassAtom","ranges":[{"startOffset":186673,"endOffset":187241,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassEscape","ranges":[{"startOffset":187349,"endOffset":187862,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classSetExpression","ranges":[{"startOffset":188095,"endOffset":189415,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetRange","ranges":[{"startOffset":189496,"endOffset":189933,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetOperand","ranges":[{"startOffset":190018,"endOffset":190196,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatNestedClass","ranges":[{"startOffset":190273,"endOffset":190840,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassStringDisjunction","ranges":[{"startOffset":190939,"endOffset":191337,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classStringDisjunctionContents","ranges":[{"startOffset":191449,"endOffset":191657,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classString","ranges":[{"startOffset":191784,"endOffset":191932,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetCharacter","ranges":[{"startOffset":192021,"endOffset":192640,"count":0}],"isBlockCoverage":false},{"functionName":"isClassSetReservedDoublePunctuatorCharacter","ranges":[{"startOffset":192709,"endOffset":193060,"count":0}],"isBlockCoverage":false},{"functionName":"isClassSetSyntaxCharacter","ranges":[{"startOffset":193119,"endOffset":193377,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetReservedPunctuator","ranges":[{"startOffset":193483,"endOffset":193657,"count":0}],"isBlockCoverage":false},{"functionName":"isClassSetReservedPunctuator","ranges":[{"startOffset":193720,"endOffset":194068,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassControlLetter","ranges":[{"startOffset":194189,"endOffset":194379,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatHexEscapeSequence","ranges":[{"startOffset":194492,"endOffset":194754,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatDecimalDigits","ranges":[{"startOffset":194859,"endOffset":195118,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalDigit","ranges":[{"startOffset":195120,"endOffset":195201,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatHexDigits","ranges":[{"startOffset":195297,"endOffset":195545,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":195547,"endOffset":195736,"count":0}],"isBlockCoverage":false},{"functionName":"hexToInt","ranges":[{"startOffset":195737,"endOffset":195969,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatLegacyOctalEscapeSequence","ranges":[{"startOffset":196153,"endOffset":196601,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatOctalDigit","ranges":[{"startOffset":196700,"endOffset":196899,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":196901,"endOffset":196980,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatFixedHexDigits","ranges":[{"startOffset":197248,"endOffset":197574,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":197784,"endOffset":198049,"count":0}],"isBlockCoverage":false},{"functionName":"pp.next","ranges":[{"startOffset":198134,"endOffset":198586,"count":0}],"isBlockCoverage":false},{"functionName":"pp.getToken","ranges":[{"startOffset":198603,"endOffset":198657,"count":0}],"isBlockCoverage":false},{"functionName":"pp.<computed>","ranges":[{"startOffset":198778,"endOffset":199008,"count":0}],"isBlockCoverage":false},{"functionName":"pp.nextToken","ranges":[{"startOffset":199234,"endOffset":199648,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken","ranges":[{"startOffset":199666,"endOffset":199952,"count":0}],"isBlockCoverage":false},{"functionName":"pp.fullCharCodeAtPos","ranges":[{"startOffset":199978,"endOffset":200227,"count":0}],"isBlockCoverage":false},{"functionName":"pp.skipBlockComment","ranges":[{"startOffset":200252,"endOffset":200886,"count":0}],"isBlockCoverage":false},{"functionName":"pp.skipLineComment","ranges":[{"startOffset":200910,"endOffset":201374,"count":0}],"isBlockCoverage":false},{"functionName":"pp.skipSpace","ranges":[{"startOffset":201491,"endOffset":202381,"count":0}],"isBlockCoverage":false},{"functionName":"pp.finishToken","ranges":[{"startOffset":202612,"endOffset":202827,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_dot","ranges":[{"startOffset":203118,"endOffset":203521,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_slash","ranges":[{"startOffset":203545,"endOffset":203785,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_mult_modulo_exp","ranges":[{"startOffset":203819,"endOffset":204293,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_pipe_amp","ranges":[{"startOffset":204320,"endOffset":204821,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_caret","ranges":[{"startOffset":204845,"endOffset":205025,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_plus_min","ranges":[{"startOffset":205052,"endOffset":205611,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_lt_gt","ranges":[{"startOffset":205635,"endOffset":206385,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_eq_excl","ranges":[{"startOffset":206411,"endOffset":206813,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_question","ranges":[{"startOffset":206840,"endOffset":207450,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_numberSign","ranges":[{"startOffset":207479,"endOffset":207876,"count":0}],"isBlockCoverage":false},{"functionName":"pp.getTokenFromCode","ranges":[{"startOffset":207901,"endOffset":210516,"count":0}],"isBlockCoverage":false},{"functionName":"pp.finishOp","ranges":[{"startOffset":210533,"endOffset":210671,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readRegexp","ranges":[{"startOffset":210690,"endOffset":212039,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readInt","ranges":[{"startOffset":212258,"endOffset":213983,"count":0}],"isBlockCoverage":false},{"functionName":"stringToNumber","ranges":[{"startOffset":213986,"endOffset":214258,"count":0}],"isBlockCoverage":false},{"functionName":"stringToBigInt","ranges":[{"startOffset":214260,"endOffset":214474,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readRadixNumber","ranges":[{"startOffset":214497,"endOffset":215008,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readNumber","ranges":[{"startOffset":215089,"endOffset":216451,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readCodePoint","ranges":[{"startOffset":216530,"endOffset":216956,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readString","ranges":[{"startOffset":216975,"endOffset":217872,"count":0}],"isBlockCoverage":false},{"functionName":"pp.tryReadTemplateToken","ranges":[{"startOffset":217976,"endOffset":218237,"count":0}],"isBlockCoverage":false},{"functionName":"pp.invalidStringToken","ranges":[{"startOffset":218264,"endOffset":218450,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readTmplToken","ranges":[{"startOffset":218472,"endOffset":219869,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readInvalidTemplateToken","ranges":[{"startOffset":219991,"endOffset":220615,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readEscapedChar","ranges":[{"startOffset":220675,"endOffset":222648,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readHexChar","ranges":[{"startOffset":222732,"endOffset":222908,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readWord1","ranges":[{"startOffset":223148,"endOffset":224130,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readWord","ranges":[{"startOffset":224237,"endOffset":224412,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":225694,"endOffset":225766,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":225935,"endOffset":226041,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":226179,"endOffset":226259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/ufo/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19705,"count":1}],"isBlockCoverage":true},{"functionName":"s","ranges":[{"startOffset":228,"endOffset":277,"count":0}],"isBlockCoverage":false},{"functionName":"c","ranges":[{"startOffset":288,"endOffset":362,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":374,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"toASCII","ranges":[{"startOffset":557,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":2984,"endOffset":3066,"count":0}],"isBlockCoverage":false},{"functionName":"encodeHash","ranges":[{"startOffset":3067,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"encodeQueryValue","ranges":[{"startOffset":3212,"endOffset":3510,"count":0}],"isBlockCoverage":false},{"functionName":"encodeQueryKey","ranges":[{"startOffset":3511,"endOffset":3602,"count":0}],"isBlockCoverage":false},{"functionName":"encodePath","ranges":[{"startOffset":3603,"endOffset":3787,"count":0}],"isBlockCoverage":false},{"functionName":"encodeParam","ranges":[{"startOffset":3788,"endOffset":3870,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":3871,"endOffset":3989,"count":0}],"isBlockCoverage":false},{"functionName":"decodePath","ranges":[{"startOffset":3990,"endOffset":4073,"count":0}],"isBlockCoverage":false},{"functionName":"decodeQueryKey","ranges":[{"startOffset":4074,"endOffset":4152,"count":0}],"isBlockCoverage":false},{"functionName":"decodeQueryValue","ranges":[{"startOffset":4153,"endOffset":4233,"count":0}],"isBlockCoverage":false},{"functionName":"encodeHost","ranges":[{"startOffset":4234,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"parseQuery","ranges":[{"startOffset":4294,"endOffset":4992,"count":0}],"isBlockCoverage":false},{"functionName":"encodeQueryItem","ranges":[{"startOffset":4993,"endOffset":5375,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyQuery","ranges":[{"startOffset":5376,"endOffset":5541,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":5873,"endOffset":5984,"count":0}],"isBlockCoverage":false},{"functionName":"hasProtocol","ranges":[{"startOffset":5985,"endOffset":6306,"count":0}],"isBlockCoverage":false},{"functionName":"isScriptProtocol","ranges":[{"startOffset":6307,"endOffset":6404,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingSlash","ranges":[{"startOffset":6405,"endOffset":6581,"count":0}],"isBlockCoverage":false},{"functionName":"withoutTrailingSlash","ranges":[{"startOffset":6582,"endOffset":7216,"count":0}],"isBlockCoverage":false},{"functionName":"withTrailingSlash","ranges":[{"startOffset":7217,"endOffset":7802,"count":6},{"startOffset":7348,"endOffset":7355,"count":1},{"startOffset":7356,"endOffset":7369,"count":5},{"startOffset":7374,"endOffset":7782,"count":0},{"startOffset":7783,"endOffset":7787,"count":0}],"isBlockCoverage":true},{"functionName":"hasLeadingSlash","ranges":[{"startOffset":7803,"endOffset":7875,"count":0}],"isBlockCoverage":false},{"functionName":"withoutLeadingSlash","ranges":[{"startOffset":7876,"endOffset":7987,"count":0}],"isBlockCoverage":false},{"functionName":"withLeadingSlash","ranges":[{"startOffset":7988,"endOffset":8084,"count":0}],"isBlockCoverage":false},{"functionName":"cleanDoubleSlashes","ranges":[{"startOffset":8085,"endOffset":8219,"count":0}],"isBlockCoverage":false},{"functionName":"withBase","ranges":[{"startOffset":8220,"endOffset":8455,"count":0}],"isBlockCoverage":false},{"functionName":"withoutBase","ranges":[{"startOffset":8456,"endOffset":8741,"count":0}],"isBlockCoverage":false},{"functionName":"withQuery","ranges":[{"startOffset":8742,"endOffset":8962,"count":0}],"isBlockCoverage":false},{"functionName":"getQuery","ranges":[{"startOffset":8963,"endOffset":9036,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyURL","ranges":[{"startOffset":9037,"endOffset":9095,"count":0}],"isBlockCoverage":false},{"functionName":"isNonEmptyURL","ranges":[{"startOffset":9096,"endOffset":9156,"count":10},{"startOffset":9139,"endOffset":9153,"count":6}],"isBlockCoverage":true},{"functionName":"joinURL","ranges":[{"startOffset":9157,"endOffset":9475,"count":10},{"startOffset":9209,"endOffset":9214,"count":0},{"startOffset":9285,"endOffset":9459,"count":6},{"startOffset":9421,"endOffset":9455,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9253,"endOffset":9282,"count":10}],"isBlockCoverage":true},{"functionName":"joinRelativeURL","ranges":[{"startOffset":9476,"endOffset":10667,"count":0}],"isBlockCoverage":false},{"functionName":"withHttp","ranges":[{"startOffset":10668,"endOffset":10737,"count":0}],"isBlockCoverage":false},{"functionName":"withHttps","ranges":[{"startOffset":10738,"endOffset":10809,"count":0}],"isBlockCoverage":false},{"functionName":"withoutProtocol","ranges":[{"startOffset":10810,"endOffset":10879,"count":0}],"isBlockCoverage":false},{"functionName":"withProtocol","ranges":[{"startOffset":10880,"endOffset":11120,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeURL","ranges":[{"startOffset":11121,"endOffset":11444,"count":0}],"isBlockCoverage":false},{"functionName":"resolveURL","ranges":[{"startOffset":11445,"endOffset":12530,"count":0}],"isBlockCoverage":false},{"functionName":"isSamePath","ranges":[{"startOffset":12531,"endOffset":12642,"count":0}],"isBlockCoverage":false},{"functionName":"isEqual","ranges":[{"startOffset":12643,"endOffset":12959,"count":0}],"isBlockCoverage":false},{"functionName":"withFragment","ranges":[{"startOffset":12960,"endOffset":13181,"count":0}],"isBlockCoverage":false},{"functionName":"withoutFragment","ranges":[{"startOffset":13182,"endOffset":13280,"count":0}],"isBlockCoverage":false},{"functionName":"withoutHost","ranges":[{"startOffset":13281,"endOffset":13411,"count":0}],"isBlockCoverage":false},{"functionName":"parseURL","ranges":[{"startOffset":13474,"endOffset":14581,"count":0}],"isBlockCoverage":false},{"functionName":"parsePath","ranges":[{"startOffset":14582,"endOffset":14776,"count":0}],"isBlockCoverage":false},{"functionName":"parseAuth","ranges":[{"startOffset":14777,"endOffset":14939,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":14940,"endOffset":15109,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyParsedURL","ranges":[{"startOffset":15110,"endOffset":15566,"count":0}],"isBlockCoverage":false},{"functionName":"parseFilename","ranges":[{"startOffset":15655,"endOffset":15884,"count":0}],"isBlockCoverage":false},{"functionName":"__defNormalProp","ranges":[{"startOffset":15947,"endOffset":16084,"count":0}],"isBlockCoverage":false},{"functionName":"__publicField","ranges":[{"startOffset":16106,"endOffset":16219,"count":0}],"isBlockCoverage":false},{"functionName":"$URL","ranges":[{"startOffset":16236,"endOffset":16913,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":16916,"endOffset":16978,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":16981,"endOffset":17041,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":17044,"endOffset":17106,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":17109,"endOffset":17177,"count":0}],"isBlockCoverage":false},{"functionName":"get hasProtocol","ranges":[{"startOffset":17180,"endOffset":17236,"count":0}],"isBlockCoverage":false},{"functionName":"get isAbsolute","ranges":[{"startOffset":17239,"endOffset":17318,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":17321,"endOffset":17421,"count":0}],"isBlockCoverage":false},{"functionName":"get searchParams","ranges":[{"startOffset":17424,"endOffset":17822,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":17825,"endOffset":17923,"count":0}],"isBlockCoverage":false},{"functionName":"get fullpath","ranges":[{"startOffset":17926,"endOffset":18022,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedAuth","ranges":[{"startOffset":18025,"endOffset":18246,"count":0}],"isBlockCoverage":false},{"functionName":"get href","ranges":[{"startOffset":18249,"endOffset":18520,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":18523,"endOffset":18851,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":18854,"endOffset":18890,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":18893,"endOffset":18931,"count":0}],"isBlockCoverage":false},{"functionName":"createURL","ranges":[{"startOffset":18934,"endOffset":18989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/estree-walker/src/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3418,"count":1}],"isBlockCoverage":true},{"functionName":"SyncWalker","ranges":[{"startOffset":493,"endOffset":1021,"count":15}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":759,"endOffset":790,"count":29}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":803,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":850,"endOffset":885,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":1214,"endOffset":3189,"count":4490},{"startOffset":1598,"endOffset":1681,"count":0},{"startOffset":1711,"endOffset":1757,"count":0},{"startOffset":1971,"endOffset":1983,"count":29},{"startOffset":1983,"endOffset":2001,"count":4461},{"startOffset":2001,"endOffset":2013,"count":0},{"startOffset":2018,"endOffset":2083,"count":4461},{"startOffset":2083,"endOffset":2587,"count":23364},{"startOffset":2156,"endOffset":2184,"count":20430},{"startOffset":2186,"endOffset":2582,"count":4077},{"startOffset":2219,"endOffset":2501,"count":1142},{"startOffset":2328,"endOffset":2494,"count":1548},{"startOffset":2432,"endOffset":2477,"count":0},{"startOffset":2501,"endOffset":2576,"count":2935},{"startOffset":2526,"endOffset":2576,"count":2927},{"startOffset":2587,"endOffset":2608,"count":4461},{"startOffset":2608,"endOffset":3166,"count":4454},{"startOffset":2851,"endOffset":2934,"count":0},{"startOffset":2964,"endOffset":3010,"count":0},{"startOffset":3149,"endOffset":3161,"count":0},{"startOffset":3170,"endOffset":3188,"count":4461}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":3278,"endOffset":3417,"count":4483},{"startOffset":3378,"endOffset":3411,"count":4475}],"isBlockCoverage":true}]},{"scriptId":"360","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/vendor/date.Ns1pGd_X.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1274,"count":1}],"isBlockCoverage":true},{"functionName":"MockDate","ranges":[{"startOffset":75,"endOffset":666,"count":0}],"isBlockCoverage":false},{"functionName":"MockDate.now","ranges":[{"startOffset":713,"endOffset":762,"count":0}],"isBlockCoverage":false},{"functionName":"MockDate.parse","ranges":[{"startOffset":781,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"MockDate.toString","ranges":[{"startOffset":864,"endOffset":908,"count":0}],"isBlockCoverage":false},{"functionName":"mockDate","ranges":[{"startOffset":910,"endOffset":1160,"count":0}],"isBlockCoverage":false},{"functionName":"resetDate","ranges":[{"startOffset":1161,"endOffset":1215,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/estree-walker/src/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3474,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncWalker","ranges":[{"startOffset":506,"endOffset":1036,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":1238,"endOffset":3245,"count":0}],"isBlockCoverage":false},{"functionName":"isNode","ranges":[{"startOffset":3334,"endOffset":3473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/confbox/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":299,"count":1}],"isBlockCoverage":true}]},{"scriptId":"363","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/estree-walker/src/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1393,"count":1}],"isBlockCoverage":true},{"functionName":"WalkerBase","ranges":[{"startOffset":197,"endOffset":573,"count":15}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":439,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":483,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":530,"endOffset":565,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":778,"endOffset":994,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":1176,"endOffset":1390,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/confbox/dist/shared/confbox.f9f03f05.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10146,"count":1}],"isBlockCoverage":true},{"functionName":"$","ranges":[{"startOffset":50,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"J","ranges":[{"startOffset":3051,"endOffset":3086,"count":0}],"isBlockCoverage":false},{"functionName":"r","ranges":[{"startOffset":3086,"endOffset":3122,"count":0}],"isBlockCoverage":false},{"functionName":"L","ranges":[{"startOffset":3122,"endOffset":3156,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3163,"endOffset":4573,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4612,"endOffset":4632,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4671,"endOffset":4695,"count":200}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4722,"endOffset":4747,"count":200}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4774,"endOffset":4800,"count":200}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4827,"endOffset":4851,"count":200}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4878,"endOffset":4903,"count":200}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4930,"endOffset":4956,"count":200}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4965,"endOffset":5011,"count":1}],"isBlockCoverage":true},{"functionName":"S","ranges":[{"startOffset":5024,"endOffset":5429,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":5429,"endOffset":8055,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8062,"endOffset":8391,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8411,"endOffset":9036,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9066,"endOffset":9823,"count":1}],"isBlockCoverage":true},{"functionName":"x","ranges":[{"startOffset":9836,"endOffset":9903,"count":0}],"isBlockCoverage":false},{"functionName":"z","ranges":[{"startOffset":9903,"endOffset":10020,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":10020,"endOffset":10079,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":10079,"endOffset":10109,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/confbox/dist/json5.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27440,"count":1}],"isBlockCoverage":true},{"functionName":"X","ranges":[{"startOffset":59,"endOffset":159,"count":2},{"startOffset":95,"endOffset":156,"count":0}],"isBlockCoverage":true},{"functionName":"isSpaceSeparator","ranges":[{"startOffset":15913,"endOffset":15986,"count":0}],"isBlockCoverage":false},{"functionName":"isIdStartChar","ranges":[{"startOffset":15987,"endOffset":16102,"count":0}],"isBlockCoverage":false},{"functionName":"isIdContinueChar","ranges":[{"startOffset":16103,"endOffset":16268,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":16269,"endOffset":16323,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":16324,"endOffset":16387,"count":0}],"isBlockCoverage":false},{"functionName":"Cu","ranges":[{"startOffset":16428,"endOffset":16593,"count":0}],"isBlockCoverage":false},{"functionName":"T","ranges":[{"startOffset":16594,"endOffset":16998,"count":0}],"isBlockCoverage":false},{"functionName":"ru","ranges":[{"startOffset":17012,"endOffset":17095,"count":0}],"isBlockCoverage":false},{"functionName":"b","ranges":[{"startOffset":17095,"endOffset":17162,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":17162,"endOffset":17249,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":17258,"endOffset":17504,"count":0}],"isBlockCoverage":false},{"functionName":"comment","ranges":[{"startOffset":17505,"endOffset":17619,"count":0}],"isBlockCoverage":false},{"functionName":"multiLineComment","ranges":[{"startOffset":17620,"endOffset":17726,"count":0}],"isBlockCoverage":false},{"functionName":"multiLineCommentAsterisk","ranges":[{"startOffset":17727,"endOffset":17864,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineComment","ranges":[{"startOffset":17865,"endOffset":17997,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":17998,"endOffset":18577,"count":0}],"isBlockCoverage":false},{"functionName":"identifierNameStartEscape","ranges":[{"startOffset":18578,"endOffset":18749,"count":0}],"isBlockCoverage":false},{"functionName":"identifierName","ranges":[{"startOffset":18750,"endOffset":18943,"count":0}],"isBlockCoverage":false},{"functionName":"identifierNameEscape","ranges":[{"startOffset":18944,"endOffset":19139,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":19140,"endOffset":19446,"count":0}],"isBlockCoverage":false},{"functionName":"zero","ranges":[{"startOffset":19447,"endOffset":19623,"count":0}],"isBlockCoverage":false},{"functionName":"decimalInteger","ranges":[{"startOffset":19624,"endOffset":19803,"count":0}],"isBlockCoverage":false},{"functionName":"decimalPointLeading","ranges":[{"startOffset":19804,"endOffset":19890,"count":0}],"isBlockCoverage":false},{"functionName":"decimalPoint","ranges":[{"startOffset":19891,"endOffset":20049,"count":0}],"isBlockCoverage":false},{"functionName":"decimalFraction","ranges":[{"startOffset":20050,"endOffset":20191,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponent","ranges":[{"startOffset":20192,"endOffset":20345,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponentSign","ranges":[{"startOffset":20346,"endOffset":20439,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponentInteger","ranges":[{"startOffset":20440,"endOffset":20528,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimal","ranges":[{"startOffset":20529,"endOffset":20613,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimalInteger","ranges":[{"startOffset":20614,"endOffset":20701,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":20702,"endOffset":20954,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":20955,"endOffset":21026,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyName","ranges":[{"startOffset":21027,"endOffset":21306,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyName","ranges":[{"startOffset":21307,"endOffset":21378,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyValue","ranges":[{"startOffset":21379,"endOffset":21411,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyValue","ranges":[{"startOffset":21412,"endOffset":21499,"count":0}],"isBlockCoverage":false},{"functionName":"beforeArrayValue","ranges":[{"startOffset":21500,"endOffset":21567,"count":0}],"isBlockCoverage":false},{"functionName":"afterArrayValue","ranges":[{"startOffset":21568,"endOffset":21652,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":21653,"endOffset":21672,"count":0}],"isBlockCoverage":false},{"functionName":"i","ranges":[{"startOffset":21674,"endOffset":21729,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":21729,"endOffset":21790,"count":0}],"isBlockCoverage":false},{"functionName":"Au","ranges":[{"startOffset":21790,"endOffset":22266,"count":0}],"isBlockCoverage":false},{"functionName":"Eu","ranges":[{"startOffset":22266,"endOffset":22412,"count":0}],"isBlockCoverage":false},{"functionName":"Z","ranges":[{"startOffset":22412,"endOffset":22548,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":22558,"endOffset":22598,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyName","ranges":[{"startOffset":22599,"endOffset":22753,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyName","ranges":[{"startOffset":22754,"endOffset":22826,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyValue","ranges":[{"startOffset":22827,"endOffset":22881,"count":0}],"isBlockCoverage":false},{"functionName":"beforeArrayValue","ranges":[{"startOffset":22882,"endOffset":22985,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyValue","ranges":[{"startOffset":22986,"endOffset":23102,"count":0}],"isBlockCoverage":false},{"functionName":"afterArrayValue","ranges":[{"startOffset":23103,"endOffset":23214,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":23215,"endOffset":23222,"count":0}],"isBlockCoverage":false},{"functionName":"K","ranges":[{"startOffset":23224,"endOffset":23761,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":23761,"endOffset":23880,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":23880,"endOffset":24008,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":24008,"endOffset":24074,"count":0}],"isBlockCoverage":false},{"functionName":"W","ranges":[{"startOffset":24074,"endOffset":24153,"count":0}],"isBlockCoverage":false},{"functionName":"iu","ranges":[{"startOffset":24153,"endOffset":24255,"count":0}],"isBlockCoverage":false},{"functionName":"Y","ranges":[{"startOffset":24255,"endOffset":24542,"count":0}],"isBlockCoverage":false},{"functionName":"J","ranges":[{"startOffset":24542,"endOffset":24624,"count":0}],"isBlockCoverage":false},{"functionName":"Bu","ranges":[{"startOffset":24650,"endOffset":27209,"count":0}],"isBlockCoverage":false},{"functionName":"ou","ranges":[{"startOffset":27225,"endOffset":27286,"count":0}],"isBlockCoverage":false},{"functionName":"cu","ranges":[{"startOffset":27286,"endOffset":27393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/confbox/dist/toml.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24489,"count":1}],"isBlockCoverage":true},{"functionName":"V","ranges":[{"startOffset":34,"endOffset":115,"count":0}],"isBlockCoverage":false},{"functionName":"O","ranges":[{"startOffset":122,"endOffset":167,"count":0}],"isBlockCoverage":false},{"functionName":"L","ranges":[{"startOffset":170,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":229,"endOffset":293,"count":0}],"isBlockCoverage":false},{"functionName":"T","ranges":[{"startOffset":296,"endOffset":428,"count":0}],"isBlockCoverage":false},{"functionName":"w","ranges":[{"startOffset":431,"endOffset":502,"count":0}],"isBlockCoverage":false},{"functionName":"U","ranges":[{"startOffset":2186,"endOffset":2276,"count":0}],"isBlockCoverage":false},{"functionName":"X","ranges":[{"startOffset":2276,"endOffset":2494,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":2516,"endOffset":2716,"count":0}],"isBlockCoverage":false},{"functionName":"x","ranges":[{"startOffset":4333,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":4421,"endOffset":4656,"count":0}],"isBlockCoverage":false},{"functionName":"g","ranges":[{"startOffset":4656,"endOffset":4789,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":4789,"endOffset":5062,"count":0}],"isBlockCoverage":false},{"functionName":"v","ranges":[{"startOffset":5062,"endOffset":5294,"count":0}],"isBlockCoverage":false},{"functionName":"b","ranges":[{"startOffset":7030,"endOffset":7336,"count":0}],"isBlockCoverage":false},{"functionName":"isDateTime","ranges":[{"startOffset":7336,"endOffset":7377,"count":0}],"isBlockCoverage":false},{"functionName":"isLocal","ranges":[{"startOffset":7377,"endOffset":7428,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":7428,"endOffset":7466,"count":0}],"isBlockCoverage":false},{"functionName":"isTime","ranges":[{"startOffset":7466,"endOffset":7504,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":7504,"endOffset":7542,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString","ranges":[{"startOffset":7542,"endOffset":7882,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAsOffsetDateTime","ranges":[{"startOffset":7889,"endOffset":7952,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAsLocalDateTime","ranges":[{"startOffset":7959,"endOffset":8018,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAsLocalDate","ranges":[{"startOffset":8025,"endOffset":8090,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAsLocalTime","ranges":[{"startOffset":8097,"endOffset":8162,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":10049,"endOffset":11024,"count":0}],"isBlockCoverage":false},{"functionName":"H","ranges":[{"startOffset":11024,"endOffset":11612,"count":0}],"isBlockCoverage":false},{"functionName":"Q","ranges":[{"startOffset":13228,"endOffset":13463,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":13463,"endOffset":14115,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":15762,"endOffset":16702,"count":0}],"isBlockCoverage":false},{"functionName":"ee","ranges":[{"startOffset":16702,"endOffset":17655,"count":0}],"isBlockCoverage":false},{"functionName":"ne","ranges":[{"startOffset":17655,"endOffset":17966,"count":0}],"isBlockCoverage":false},{"functionName":"M","ranges":[{"startOffset":19582,"endOffset":20268,"count":0}],"isBlockCoverage":false},{"functionName":"te","ranges":[{"startOffset":20268,"endOffset":20938,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":22579,"endOffset":22702,"count":0}],"isBlockCoverage":false},{"functionName":"ie","ranges":[{"startOffset":22702,"endOffset":22794,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":22794,"endOffset":22860,"count":0}],"isBlockCoverage":false},{"functionName":"N","ranges":[{"startOffset":22860,"endOffset":23211,"count":0}],"isBlockCoverage":false},{"functionName":"le","ranges":[{"startOffset":23211,"endOffset":23391,"count":0}],"isBlockCoverage":false},{"functionName":"re","ranges":[{"startOffset":23391,"endOffset":23610,"count":0}],"isBlockCoverage":false},{"functionName":"fe","ranges":[{"startOffset":23610,"endOffset":23708,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":23708,"endOffset":24155,"count":0}],"isBlockCoverage":false},{"functionName":"oe","ranges":[{"startOffset":24155,"endOffset":24268,"count":0}],"isBlockCoverage":false},{"functionName":"ae","ranges":[{"startOffset":24268,"endOffset":24338,"count":0}],"isBlockCoverage":false},{"functionName":"ue","ranges":[{"startOffset":24338,"endOffset":24444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/confbox/dist/yaml.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39516,"count":1},{"startOffset":13974,"endOffset":14002,"count":256},{"startOffset":13985,"endOffset":13987,"count":18},{"startOffset":13987,"endOffset":13989,"count":238}],"isBlockCoverage":true},{"functionName":"oe","ranges":[{"startOffset":126,"endOffset":171,"count":0}],"isBlockCoverage":false},{"functionName":"We","ranges":[{"startOffset":171,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"$e","ranges":[{"startOffset":222,"endOffset":276,"count":0}],"isBlockCoverage":false},{"functionName":"Qe","ranges":[{"startOffset":276,"endOffset":381,"count":0}],"isBlockCoverage":false},{"functionName":"Ve","ranges":[{"startOffset":381,"endOffset":440,"count":0}],"isBlockCoverage":false},{"functionName":"Xe","ranges":[{"startOffset":440,"endOffset":500,"count":0}],"isBlockCoverage":false},{"functionName":"ue","ranges":[{"startOffset":618,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"M","ranges":[{"startOffset":837,"endOffset":1051,"count":0}],"isBlockCoverage":false},{"functionName":"M.toString","ranges":[{"startOffset":1141,"endOffset":1186,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":1195,"endOffset":1389,"count":0}],"isBlockCoverage":false},{"functionName":"Q","ranges":[{"startOffset":1389,"endOffset":1439,"count":0}],"isBlockCoverage":false},{"functionName":"ln","ranges":[{"startOffset":1439,"endOffset":2455,"count":0}],"isBlockCoverage":false},{"functionName":"cn","ranges":[{"startOffset":2625,"endOffset":2747,"count":13},{"startOffset":2664,"endOffset":2744,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2689,"endOffset":2743,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2714,"endOffset":2741,"count":8}],"isBlockCoverage":true},{"functionName":"an","ranges":[{"startOffset":2747,"endOffset":3413,"count":13},{"startOffset":2770,"endOffset":2774,"count":0},{"startOffset":2957,"endOffset":2963,"count":0},{"startOffset":2986,"endOffset":3008,"count":3},{"startOffset":3035,"endOffset":3058,"count":1},{"startOffset":3087,"endOffset":3093,"count":12},{"startOffset":3120,"endOffset":3126,"count":8},{"startOffset":3153,"endOffset":3159,"count":7},{"startOffset":3233,"endOffset":3239,"count":9},{"startOffset":3298,"endOffset":3304,"count":12},{"startOffset":3333,"endOffset":3412,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2798,"endOffset":2913,"count":52},{"startOffset":2832,"endOffset":2912,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2988,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":3037,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"fe","ranges":[{"startOffset":3422,"endOffset":3589,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3468,"endOffset":3585,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3505,"endOffset":3576,"count":48},{"startOffset":3532,"endOffset":3575,"count":0}],"isBlockCoverage":true},{"functionName":"pn","ranges":[{"startOffset":3589,"endOffset":3892,"count":3},{"startOffset":3859,"endOffset":3883,"count":6}],"isBlockCoverage":true},{"functionName":"l","ranges":[{"startOffset":3713,"endOffset":3823,"count":23},{"startOffset":3734,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"V","ranges":[{"startOffset":3892,"endOffset":3928,"count":1}],"isBlockCoverage":true},{"functionName":"V.extend","ranges":[{"startOffset":3947,"endOffset":5144,"count":3},{"startOffset":3991,"endOffset":4001,"count":0},{"startOffset":4026,"endOffset":4040,"count":0},{"startOffset":4077,"endOffset":4104,"count":1},{"startOffset":4116,"endOffset":4142,"count":2},{"startOffset":4153,"endOffset":4179,"count":2},{"startOffset":4180,"endOffset":4313,"count":0},{"startOffset":4953,"endOffset":4957,"count":1},{"startOffset":4994,"endOffset":4998,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4323,"endOffset":4743,"count":6},{"startOffset":4356,"endOffset":4454,"count":0},{"startOffset":4467,"endOffset":4490,"count":0},{"startOffset":4491,"endOffset":4618,"count":0},{"startOffset":4629,"endOffset":4742,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4755,"endOffset":4886,"count":7},{"startOffset":4788,"endOffset":4885,"count":0}],"isBlockCoverage":true},{"functionName":"construct","ranges":[{"startOffset":5212,"endOffset":5245,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5308,"endOffset":5341,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5403,"endOffset":5436,"count":0}],"isBlockCoverage":false},{"functionName":"mn","ranges":[{"startOffset":5472,"endOffset":5590,"count":0}],"isBlockCoverage":false},{"functionName":"gn","ranges":[{"startOffset":5590,"endOffset":5616,"count":0}],"isBlockCoverage":false},{"functionName":"An","ranges":[{"startOffset":5616,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"canonical","ranges":[{"startOffset":5758,"endOffset":5779,"count":0}],"isBlockCoverage":false},{"functionName":"lowercase","ranges":[{"startOffset":5790,"endOffset":5814,"count":0}],"isBlockCoverage":false},{"functionName":"uppercase","ranges":[{"startOffset":5825,"endOffset":5849,"count":0}],"isBlockCoverage":false},{"functionName":"camelcase","ranges":[{"startOffset":5860,"endOffset":5884,"count":0}],"isBlockCoverage":false},{"functionName":"empty","ranges":[{"startOffset":5891,"endOffset":5911,"count":0}],"isBlockCoverage":false},{"functionName":"yn","ranges":[{"startOffset":5940,"endOffset":6090,"count":0}],"isBlockCoverage":false},{"functionName":"Cn","ranges":[{"startOffset":6090,"endOffset":6147,"count":0}],"isBlockCoverage":false},{"functionName":"_n","ranges":[{"startOffset":6147,"endOffset":6224,"count":0}],"isBlockCoverage":false},{"functionName":"lowercase","ranges":[{"startOffset":6335,"endOffset":6371,"count":0}],"isBlockCoverage":false},{"functionName":"uppercase","ranges":[{"startOffset":6382,"endOffset":6418,"count":0}],"isBlockCoverage":false},{"functionName":"camelcase","ranges":[{"startOffset":6429,"endOffset":6465,"count":0}],"isBlockCoverage":false},{"functionName":"bn","ranges":[{"startOffset":6494,"endOffset":6558,"count":0}],"isBlockCoverage":false},{"functionName":"Fn","ranges":[{"startOffset":6558,"endOffset":6593,"count":0}],"isBlockCoverage":false},{"functionName":"Sn","ranges":[{"startOffset":6593,"endOffset":6628,"count":0}],"isBlockCoverage":false},{"functionName":"En","ranges":[{"startOffset":6628,"endOffset":7201,"count":0}],"isBlockCoverage":false},{"functionName":"Tn","ranges":[{"startOffset":7201,"endOffset":7534,"count":0}],"isBlockCoverage":false},{"functionName":"On","ranges":[{"startOffset":7534,"endOffset":7641,"count":0}],"isBlockCoverage":false},{"functionName":"binary","ranges":[{"startOffset":7748,"endOffset":7820,"count":0}],"isBlockCoverage":false},{"functionName":"octal","ranges":[{"startOffset":7827,"endOffset":7899,"count":0}],"isBlockCoverage":false},{"functionName":"decimal","ranges":[{"startOffset":7908,"endOffset":7942,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimal","ranges":[{"startOffset":7955,"endOffset":8057,"count":0}],"isBlockCoverage":false},{"functionName":"Ln","ranges":[{"startOffset":8328,"endOffset":8395,"count":0}],"isBlockCoverage":false},{"functionName":"Nn","ranges":[{"startOffset":8395,"endOffset":8617,"count":0}],"isBlockCoverage":false},{"functionName":"Dn","ranges":[{"startOffset":8640,"endOffset":9141,"count":0}],"isBlockCoverage":false},{"functionName":"Mn","ranges":[{"startOffset":9141,"endOffset":9249,"count":0}],"isBlockCoverage":false},{"functionName":"jn","ranges":[{"startOffset":9687,"endOffset":9758,"count":0}],"isBlockCoverage":false},{"functionName":"Hn","ranges":[{"startOffset":9758,"endOffset":10181,"count":0}],"isBlockCoverage":false},{"functionName":"Un","ranges":[{"startOffset":10181,"endOffset":10219,"count":0}],"isBlockCoverage":false},{"functionName":"qn","ranges":[{"startOffset":10332,"endOffset":10373,"count":0}],"isBlockCoverage":false},{"functionName":"Wn","ranges":[{"startOffset":10513,"endOffset":10665,"count":0}],"isBlockCoverage":false},{"functionName":"$n","ranges":[{"startOffset":10665,"endOffset":11007,"count":0}],"isBlockCoverage":false},{"functionName":"Qn","ranges":[{"startOffset":11007,"endOffset":11346,"count":0}],"isBlockCoverage":false},{"functionName":"Vn","ranges":[{"startOffset":11346,"endOffset":11426,"count":0}],"isBlockCoverage":false},{"functionName":"Jn","ranges":[{"startOffset":11597,"endOffset":11861,"count":0}],"isBlockCoverage":false},{"functionName":"ei","ranges":[{"startOffset":11861,"endOffset":11897,"count":0}],"isBlockCoverage":false},{"functionName":"ri","ranges":[{"startOffset":12007,"endOffset":12224,"count":0}],"isBlockCoverage":false},{"functionName":"li","ranges":[{"startOffset":12224,"endOffset":12381,"count":0}],"isBlockCoverage":false},{"functionName":"fi","ranges":[{"startOffset":12498,"endOffset":12602,"count":0}],"isBlockCoverage":false},{"functionName":"ci","ranges":[{"startOffset":12602,"endOffset":12638,"count":0}],"isBlockCoverage":false},{"functionName":"me","ranges":[{"startOffset":13131,"endOffset":13187,"count":0}],"isBlockCoverage":false},{"functionName":"S","ranges":[{"startOffset":13187,"endOffset":13223,"count":0}],"isBlockCoverage":false},{"functionName":"I","ranges":[{"startOffset":13223,"endOffset":13258,"count":0}],"isBlockCoverage":false},{"functionName":"b","ranges":[{"startOffset":13258,"endOffset":13309,"count":0}],"isBlockCoverage":false},{"functionName":"k","ranges":[{"startOffset":13309,"endOffset":13371,"count":0}],"isBlockCoverage":false},{"functionName":"si","ranges":[{"startOffset":13371,"endOffset":13451,"count":0}],"isBlockCoverage":false},{"functionName":"xi","ranges":[{"startOffset":13451,"endOffset":13504,"count":0}],"isBlockCoverage":false},{"functionName":"mi","ranges":[{"startOffset":13504,"endOffset":13547,"count":0}],"isBlockCoverage":false},{"functionName":"ge","ranges":[{"startOffset":13547,"endOffset":13800,"count":512},{"startOffset":13575,"endOffset":13580,"count":2},{"startOffset":13580,"endOffset":13799,"count":510},{"startOffset":13587,"endOffset":13594,"count":2},{"startOffset":13594,"endOffset":13799,"count":508},{"startOffset":13601,"endOffset":13606,"count":2},{"startOffset":13606,"endOffset":13799,"count":506},{"startOffset":13614,"endOffset":13621,"count":504},{"startOffset":13621,"endOffset":13625,"count":4},{"startOffset":13625,"endOffset":13799,"count":502},{"startOffset":13633,"endOffset":13637,"count":2},{"startOffset":13637,"endOffset":13799,"count":500},{"startOffset":13645,"endOffset":13650,"count":2},{"startOffset":13650,"endOffset":13799,"count":498},{"startOffset":13658,"endOffset":13663,"count":2},{"startOffset":13663,"endOffset":13799,"count":496},{"startOffset":13671,"endOffset":13676,"count":2},{"startOffset":13676,"endOffset":13799,"count":494},{"startOffset":13684,"endOffset":13691,"count":2},{"startOffset":13691,"endOffset":13799,"count":492},{"startOffset":13698,"endOffset":13702,"count":2},{"startOffset":13702,"endOffset":13799,"count":490},{"startOffset":13709,"endOffset":13713,"count":2},{"startOffset":13713,"endOffset":13799,"count":488},{"startOffset":13720,"endOffset":13724,"count":2},{"startOffset":13724,"endOffset":13799,"count":486},{"startOffset":13731,"endOffset":13736,"count":2},{"startOffset":13736,"endOffset":13799,"count":484},{"startOffset":13743,"endOffset":13750,"count":2},{"startOffset":13750,"endOffset":13799,"count":482},{"startOffset":13757,"endOffset":13764,"count":2},{"startOffset":13764,"endOffset":13799,"count":480},{"startOffset":13771,"endOffset":13780,"count":2},{"startOffset":13780,"endOffset":13799,"count":478},{"startOffset":13787,"endOffset":13796,"count":2},{"startOffset":13796,"endOffset":13799,"count":476}],"isBlockCoverage":true},{"functionName":"gi","ranges":[{"startOffset":13800,"endOffset":13916,"count":0}],"isBlockCoverage":false},{"functionName":"Ai","ranges":[{"startOffset":14002,"endOffset":14412,"count":0}],"isBlockCoverage":false},{"functionName":"ye","ranges":[{"startOffset":14412,"endOffset":14576,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":14576,"endOffset":14606,"count":0}],"isBlockCoverage":false},{"functionName":"K","ranges":[{"startOffset":14606,"endOffset":14666,"count":0}],"isBlockCoverage":false},{"functionName":"YAML","ranges":[{"startOffset":14679,"endOffset":15116,"count":0}],"isBlockCoverage":false},{"functionName":"TAG","ranges":[{"startOffset":15121,"endOffset":15554,"count":0}],"isBlockCoverage":false},{"functionName":"O","ranges":[{"startOffset":15556,"endOffset":15813,"count":0}],"isBlockCoverage":false},{"functionName":"_e","ranges":[{"startOffset":15813,"endOffset":16019,"count":0}],"isBlockCoverage":false},{"functionName":"N","ranges":[{"startOffset":16019,"endOffset":16759,"count":0}],"isBlockCoverage":false},{"functionName":"z","ranges":[{"startOffset":16759,"endOffset":16989,"count":0}],"isBlockCoverage":false},{"functionName":"v","ranges":[{"startOffset":16989,"endOffset":17453,"count":0}],"isBlockCoverage":false},{"functionName":"q","ranges":[{"startOffset":17453,"endOffset":17640,"count":0}],"isBlockCoverage":false},{"functionName":"J","ranges":[{"startOffset":17640,"endOffset":17711,"count":0}],"isBlockCoverage":false},{"functionName":"vi","ranges":[{"startOffset":17711,"endOffset":18587,"count":0}],"isBlockCoverage":false},{"functionName":"yi","ranges":[{"startOffset":18587,"endOffset":19142,"count":0}],"isBlockCoverage":false},{"functionName":"Ci","ranges":[{"startOffset":19142,"endOffset":19982,"count":0}],"isBlockCoverage":false},{"functionName":"_i","ranges":[{"startOffset":19982,"endOffset":21056,"count":0}],"isBlockCoverage":false},{"functionName":"wi","ranges":[{"startOffset":21056,"endOffset":22242,"count":0}],"isBlockCoverage":false},{"functionName":"we","ranges":[{"startOffset":22242,"endOffset":22951,"count":0}],"isBlockCoverage":false},{"functionName":"bi","ranges":[{"startOffset":22951,"endOffset":24580,"count":0}],"isBlockCoverage":false},{"functionName":"Fi","ranges":[{"startOffset":24580,"endOffset":25723,"count":0}],"isBlockCoverage":false},{"functionName":"Si","ranges":[{"startOffset":25723,"endOffset":26093,"count":0}],"isBlockCoverage":false},{"functionName":"Ei","ranges":[{"startOffset":26093,"endOffset":26491,"count":0}],"isBlockCoverage":false},{"functionName":"R","ranges":[{"startOffset":26491,"endOffset":28296,"count":0}],"isBlockCoverage":false},{"functionName":"Ti","ranges":[{"startOffset":28296,"endOffset":29707,"count":0}],"isBlockCoverage":false},{"functionName":"be","ranges":[{"startOffset":29707,"endOffset":30109,"count":0}],"isBlockCoverage":false},{"functionName":"Oi","ranges":[{"startOffset":30109,"endOffset":30272,"count":0}],"isBlockCoverage":false},{"functionName":"Ii","ranges":[{"startOffset":30272,"endOffset":30421,"count":0}],"isBlockCoverage":false},{"functionName":"zi","ranges":[{"startOffset":31004,"endOffset":31289,"count":0}],"isBlockCoverage":false},{"functionName":"Ji","ranges":[{"startOffset":31289,"endOffset":31546,"count":0}],"isBlockCoverage":false},{"functionName":"nr","ranges":[{"startOffset":31559,"endOffset":32274,"count":0}],"isBlockCoverage":false},{"functionName":"Le","ranges":[{"startOffset":32274,"endOffset":32459,"count":0}],"isBlockCoverage":false},{"functionName":"ie","ranges":[{"startOffset":32459,"endOffset":32511,"count":0}],"isBlockCoverage":false},{"functionName":"ir","ranges":[{"startOffset":32511,"endOffset":32635,"count":0}],"isBlockCoverage":false},{"functionName":"W","ranges":[{"startOffset":32635,"endOffset":32671,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":32671,"endOffset":32794,"count":0}],"isBlockCoverage":false},{"functionName":"Ne","ranges":[{"startOffset":32794,"endOffset":32844,"count":0}],"isBlockCoverage":false},{"functionName":"Re","ranges":[{"startOffset":32844,"endOffset":32994,"count":0}],"isBlockCoverage":false},{"functionName":"rr","ranges":[{"startOffset":32994,"endOffset":33195,"count":0}],"isBlockCoverage":false},{"functionName":"lr","ranges":[{"startOffset":33195,"endOffset":33229,"count":0}],"isBlockCoverage":false},{"functionName":"j","ranges":[{"startOffset":33229,"endOffset":33382,"count":0}],"isBlockCoverage":false},{"functionName":"De","ranges":[{"startOffset":33382,"endOffset":33428,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":33456,"endOffset":33900,"count":0}],"isBlockCoverage":false},{"functionName":"ur","ranges":[{"startOffset":33900,"endOffset":34567,"count":0}],"isBlockCoverage":false},{"functionName":"Pe","ranges":[{"startOffset":34567,"endOffset":34699,"count":0}],"isBlockCoverage":false},{"functionName":"je","ranges":[{"startOffset":34699,"endOffset":34757,"count":0}],"isBlockCoverage":false},{"functionName":"fr","ranges":[{"startOffset":34757,"endOffset":35022,"count":0}],"isBlockCoverage":false},{"functionName":"He","ranges":[{"startOffset":35022,"endOffset":35272,"count":0}],"isBlockCoverage":false},{"functionName":"cr","ranges":[{"startOffset":35272,"endOffset":35417,"count":0}],"isBlockCoverage":false},{"functionName":"ar","ranges":[{"startOffset":35417,"endOffset":35670,"count":0}],"isBlockCoverage":false},{"functionName":"Ue","ranges":[{"startOffset":35670,"endOffset":35973,"count":0}],"isBlockCoverage":false},{"functionName":"pr","ranges":[{"startOffset":35973,"endOffset":36333,"count":0}],"isBlockCoverage":false},{"functionName":"tr","ranges":[{"startOffset":36333,"endOffset":36936,"count":0}],"isBlockCoverage":false},{"functionName":"Ke","ranges":[{"startOffset":36936,"endOffset":37513,"count":0}],"isBlockCoverage":false},{"functionName":"E","ranges":[{"startOffset":37513,"endOffset":38654,"count":0}],"isBlockCoverage":false},{"functionName":"hr","ranges":[{"startOffset":38654,"endOffset":38784,"count":0}],"isBlockCoverage":false},{"functionName":"le","ranges":[{"startOffset":38784,"endOffset":39041,"count":0}],"isBlockCoverage":false},{"functionName":"dr","ranges":[{"startOffset":39041,"endOffset":39189,"count":0}],"isBlockCoverage":false},{"functionName":"Ar","ranges":[{"startOffset":39234,"endOffset":39286,"count":0}],"isBlockCoverage":false},{"functionName":"vr","ranges":[{"startOffset":39286,"endOffset":39471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/confbox/dist/shared/confbox.9388d834.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1535,"count":1}],"isBlockCoverage":true},{"functionName":"g","ranges":[{"startOffset":42,"endOffset":400,"count":0}],"isBlockCoverage":false},{"functionName":"T","ranges":[{"startOffset":400,"endOffset":448,"count":0}],"isBlockCoverage":false},{"functionName":"w","ranges":[{"startOffset":448,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"E","ranges":[{"startOffset":530,"endOffset":623,"count":0}],"isBlockCoverage":false},{"functionName":"S","ranges":[{"startOffset":623,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":671,"endOffset":894,"count":0}],"isBlockCoverage":false},{"functionName":"x","ranges":[{"startOffset":954,"endOffset":1174,"count":0}],"isBlockCoverage":false},{"functionName":"N","ranges":[{"startOffset":1174,"endOffset":1300,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1300,"endOffset":1512,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":44,"count":0}],"isBlockCoverage":true}]},{"scriptId":"370","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":699,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1080,"endOffset":1107,"count":0},{"startOffset":1109,"endOffset":1125,"count":0},{"startOffset":1184,"endOffset":1202,"count":0},{"startOffset":1570,"endOffset":1573,"count":0},{"startOffset":1578,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"372","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-node/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":105}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":3},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3225,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3422,"endOffset":3679,"count":1},{"startOffset":3467,"endOffset":3505,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3796,"endOffset":3842,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4007,"endOffset":4210,"count":3},{"startOffset":4143,"endOffset":4208,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4375,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4624,"endOffset":4726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-node/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6289,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":3},{"startOffset":1108,"endOffset":1213,"count":71}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":3}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":96},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":96},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4609,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4602,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4695,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5063,"endOffset":5450,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5568,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5793,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6021,"endOffset":6197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-node/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"node:internal/navigator","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3555,"count":1}],"isBlockCoverage":false},{"functionName":"getNavigatorPlatform","ranges":[{"startOffset":694,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2039,"endOffset":3209,"count":1}],"isBlockCoverage":false},{"functionName":"Navigator","ranges":[{"startOffset":2178,"endOffset":2303,"count":1},{"startOffset":2256,"endOffset":2302,"count":0}],"isBlockCoverage":true},{"functionName":"get hardwareConcurrency","ranges":[{"startOffset":2346,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"get language","ranges":[{"startOffset":2524,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"get languages","ranges":[{"startOffset":2733,"endOffset":2840,"count":0}],"isBlockCoverage":false},{"functionName":"get userAgent","ranges":[{"startOffset":2883,"endOffset":3052,"count":1}],"isBlockCoverage":true},{"functionName":"get platform","ranges":[{"startOffset":3095,"endOffset":3206,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/strip-literal/node_modules/js-tokens/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12622,"count":1}],"isBlockCoverage":true},{"functionName":"jsTokens","ranges":[{"startOffset":2185,"endOffset":12620,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/vitest.config.ts.timestamp-1745965140471-9b033673c260b.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2600,"count":1}],"isBlockCoverage":true}]},{"scriptId":"379","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-tsconfig-paths/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11747,"count":1},{"startOffset":1331,"endOffset":1351,"count":0},{"startOffset":1404,"endOffset":1427,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePathMappings","ranges":[{"startOffset":309,"endOffset":811,"count":1},{"startOffset":523,"endOffset":790,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":407,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":732,"endOffset":777,"count":2}],"isBlockCoverage":true},{"functionName":"getPrefixLength","ranges":[{"startOffset":812,"endOffset":943,"count":2}],"isBlockCoverage":true},{"functionName":"escapeStringRegexp","ranges":[{"startOffset":944,"endOffset":1061,"count":2}],"isBlockCoverage":true},{"functionName":"resolve2","ranges":[{"startOffset":1273,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"src_default","ranges":[{"startOffset":1638,"endOffset":10160,"count":1}],"isBlockCoverage":true},{"functionName":"configResolved","ranges":[{"startOffset":1745,"endOffset":5315,"count":1},{"startOffset":1881,"endOffset":1934,"count":0},{"startOffset":2163,"endOffset":2230,"count":0},{"startOffset":2317,"endOffset":2496,"count":0},{"startOffset":2971,"endOffset":3385,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2337,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":2624,"endOffset":2860,"count":59},{"startOffset":2692,"endOffset":2730,"count":2},{"startOffset":2730,"endOffset":2778,"count":57},{"startOffset":2778,"endOffset":2826,"count":0},{"startOffset":2826,"endOffset":2859,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3578,"endOffset":4561,"count":1},{"startOffset":3637,"endOffset":3742,"count":0},{"startOffset":3780,"endOffset":3830,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3883,"endOffset":4547,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4638,"endOffset":5307,"count":1},{"startOffset":4675,"endOffset":4704,"count":0},{"startOffset":4737,"endOffset":4981,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4776,"endOffset":4849,"count":0}],"isBlockCoverage":false},{"functionName":"resolveId","ranges":[{"startOffset":5321,"endOffset":6437,"count":1042},{"startOffset":5411,"endOffset":5429,"count":922},{"startOffset":5431,"endOffset":6431,"count":802},{"startOffset":5812,"endOffset":5843,"count":7219},{"startOffset":5845,"endOffset":6423,"count":6473},{"startOffset":5946,"endOffset":6320,"count":802},{"startOffset":6171,"endOffset":6225,"count":56},{"startOffset":6225,"endOffset":6255,"count":746},{"startOffset":6255,"endOffset":6304,"count":0},{"startOffset":6320,"endOffset":6423,"count":6417}],"isBlockCoverage":true},{"functionName":"viteResolve","ranges":[{"startOffset":5524,"endOffset":5680,"count":608},{"startOffset":5653,"endOffset":5661,"count":575},{"startOffset":5662,"endOffset":5669,"count":33}],"isBlockCoverage":true},{"functionName":"createResolver","ranges":[{"startOffset":6445,"endOffset":10158,"count":1},{"startOffset":6727,"endOffset":6738,"count":0},{"startOffset":6745,"endOffset":6801,"count":0},{"startOffset":6803,"endOffset":6974,"count":0},{"startOffset":7018,"endOffset":7023,"count":0},{"startOffset":7082,"endOffset":7091,"count":0},{"startOffset":7093,"endOffset":7182,"count":0},{"startOffset":7296,"endOffset":7304,"count":0},{"startOffset":7439,"endOffset":7460,"count":0},{"startOffset":8406,"endOffset":8459,"count":0},{"startOffset":8465,"endOffset":8516,"count":0},{"startOffset":8628,"endOffset":8679,"count":0},{"startOffset":8760,"endOffset":8768,"count":0},{"startOffset":8852,"endOffset":8860,"count":0},{"startOffset":8965,"endOffset":8970,"count":0},{"startOffset":9037,"endOffset":9047,"count":0}],"isBlockCoverage":true},{"functionName":"resolveWithBaseUrl","ranges":[{"startOffset":7224,"endOffset":7295,"count":608}],"isBlockCoverage":true},{"functionName":"resolveWithPaths","ranges":[{"startOffset":7501,"endOffset":8143,"count":608},{"startOffset":7584,"endOffset":8135,"count":1216},{"startOffset":7694,"endOffset":8135,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7835,"endOffset":7970,"count":0}],"isBlockCoverage":false},{"functionName":"resolveId","ranges":[{"startOffset":8197,"endOffset":8397,"count":608}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8277,"endOffset":8396,"count":608},{"startOffset":8327,"endOffset":8337,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8778,"endOffset":8813,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8870,"endOffset":8905,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9132,"endOffset":10153,"count":802},{"startOffset":9215,"endOffset":9248,"count":0},{"startOffset":9397,"endOffset":9430,"count":171},{"startOffset":9430,"endOffset":9554,"count":631},{"startOffset":9554,"endOffset":9587,"count":0},{"startOffset":9587,"endOffset":9650,"count":631},{"startOffset":9651,"endOffset":9659,"count":0},{"startOffset":9679,"endOffset":9730,"count":0},{"startOffset":9730,"endOffset":9792,"count":631},{"startOffset":9792,"endOffset":10084,"count":608},{"startOffset":9874,"endOffset":9911,"count":575},{"startOffset":9911,"endOffset":10084,"count":33},{"startOffset":10084,"endOffset":10114,"count":56},{"startOffset":10115,"endOffset":10131,"count":0},{"startOffset":10132,"endOffset":10139,"count":56}],"isBlockCoverage":true},{"functionName":"getIncluder","ranges":[{"startOffset":10376,"endOffset":11092,"count":1},{"startOffset":10563,"endOffset":10585,"count":0},{"startOffset":11069,"endOffset":11091,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10816,"endOffset":11064,"count":631}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":10971,"endOffset":10997,"count":1893}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11079,"endOffset":11089,"count":0}],"isBlockCoverage":false},{"functionName":"addCompiledGlob","ranges":[{"startOffset":11093,"endOffset":11470,"count":5},{"startOffset":11237,"endOffset":11243,"count":2},{"startOffset":11244,"endOffset":11257,"count":3},{"startOffset":11279,"endOffset":11326,"count":2},{"startOffset":11326,"endOffset":11468,"count":3},{"startOffset":11413,"endOffset":11464,"count":1}],"isBlockCoverage":true},{"functionName":"compileGlob","ranges":[{"startOffset":11471,"endOffset":11577,"count":6}],"isBlockCoverage":true},{"functionName":"ensureRelative","ranges":[{"startOffset":11578,"endOffset":11676,"count":4},{"startOffset":11643,"endOffset":11665,"count":0}],"isBlockCoverage":true}]},{"scriptId":"380","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3379,"count":1},{"startOffset":211,"endOffset":219,"count":0},{"startOffset":1609,"endOffset":1617,"count":0},{"startOffset":1633,"endOffset":1652,"count":0}],"isBlockCoverage":true},{"functionName":"defineConfig","ranges":[{"startOffset":3075,"endOffset":3125,"count":1}],"isBlockCoverage":true},{"functionName":"defineProject","ranges":[{"startOffset":3126,"endOffset":3177,"count":0}],"isBlockCoverage":false},{"functionName":"defineWorkspace","ranges":[{"startOffset":3178,"endOffset":3231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-tsconfig-paths/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"382","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14,"count":2}],"isBlockCoverage":true}]},{"scriptId":"383","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":2}],"isBlockCoverage":true}]},{"scriptId":"384","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5,"count":2}],"isBlockCoverage":true}]},{"scriptId":"385","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":3}],"isBlockCoverage":true}]},{"scriptId":"386","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/globrex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7901,"count":1},{"startOffset":72,"endOffset":79,"count":0},{"startOffset":112,"endOffset":117,"count":0}],"isBlockCoverage":true},{"functionName":"globrex","ranges":[{"startOffset":882,"endOffset":7873,"count":6},{"startOffset":2034,"endOffset":7238,"count":73},{"startOffset":2135,"endOffset":2195,"count":11},{"startOffset":2195,"endOffset":2220,"count":62},{"startOffset":2220,"endOffset":2347,"count":11},{"startOffset":2290,"endOffset":2300,"count":0},{"startOffset":2302,"endOffset":2315,"count":0},{"startOffset":2347,"endOffset":2372,"count":51},{"startOffset":2372,"endOffset":2526,"count":0},{"startOffset":2526,"endOffset":2551,"count":51},{"startOffset":2551,"endOffset":2965,"count":0},{"startOffset":2965,"endOffset":2998,"count":51},{"startOffset":2998,"endOffset":3152,"count":0},{"startOffset":3152,"endOffset":3177,"count":51},{"startOffset":3177,"endOffset":3347,"count":0},{"startOffset":3347,"endOffset":3371,"count":51},{"startOffset":3371,"endOffset":3382,"count":0},{"startOffset":3384,"endOffset":3493,"count":0},{"startOffset":3493,"endOffset":3518,"count":51},{"startOffset":3518,"endOffset":3956,"count":0},{"startOffset":3956,"endOffset":3981,"count":51},{"startOffset":3981,"endOffset":4248,"count":0},{"startOffset":4248,"endOffset":4273,"count":51},{"startOffset":4273,"endOffset":4864,"count":0},{"startOffset":4864,"endOffset":4889,"count":51},{"startOffset":4889,"endOffset":5074,"count":0},{"startOffset":5074,"endOffset":5099,"count":51},{"startOffset":5099,"endOffset":5285,"count":0},{"startOffset":5285,"endOffset":5310,"count":51},{"startOffset":5310,"endOffset":5497,"count":0},{"startOffset":5497,"endOffset":5522,"count":51},{"startOffset":5522,"endOffset":5675,"count":0},{"startOffset":5675,"endOffset":5700,"count":51},{"startOffset":5700,"endOffset":7215,"count":6},{"startOffset":5728,"endOffset":5739,"count":0},{"startOffset":5741,"endOffset":5811,"count":0},{"startOffset":6030,"endOffset":6095,"count":4},{"startOffset":6163,"endOffset":6280,"count":0},{"startOffset":6438,"endOffset":6523,"count":4},{"startOffset":6497,"endOffset":6522,"count":0},{"startOffset":6524,"endOffset":6624,"count":4},{"startOffset":6598,"endOffset":6623,"count":3},{"startOffset":6687,"endOffset":6960,"count":4},{"startOffset":6960,"endOffset":7169,"count":2},{"startOffset":7215,"endOffset":7238,"count":45},{"startOffset":7457,"endOffset":7488,"count":0},{"startOffset":7598,"endOffset":7851,"count":0}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1391,"endOffset":1976,"count":79},{"startOffset":1464,"endOffset":1477,"count":73},{"startOffset":1499,"endOffset":1518,"count":0},{"startOffset":1520,"endOffset":1970,"count":0}],"isBlockCoverage":true}]},{"scriptId":"387","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-tsconfig-paths/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":108}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":1},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3225,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3422,"endOffset":3679,"count":1},{"startOffset":3467,"endOffset":3505,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3796,"endOffset":3842,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4007,"endOffset":4210,"count":1},{"startOffset":4143,"endOffset":4208,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4375,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4624,"endOffset":4726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-tsconfig-paths/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6289,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":1},{"startOffset":1108,"endOffset":1213,"count":19}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":39},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":39},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4609,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4602,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4695,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5063,"endOffset":5450,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5568,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5793,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6021,"endOffset":6197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-tsconfig-paths/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tsconfck/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":336,"count":1}],"isBlockCoverage":true}]},{"scriptId":"391","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tsconfck/src/find.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2182,"count":1}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":436,"endOffset":1054,"count":0}],"isBlockCoverage":false},{"functionName":"findUp","ranges":[{"startOffset":1279,"endOffset":2181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tsconfck/src/to-json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4465,"count":1}],"isBlockCoverage":true},{"functionName":"toJson","ranges":[{"startOffset":501,"endOffset":787,"count":1},{"startOffset":643,"endOffset":756,"count":0}],"isBlockCoverage":true},{"functionName":"stripDanglingComma","ranges":[{"startOffset":978,"endOffset":1838,"count":1},{"startOffset":1157,"endOffset":1789,"count":760},{"startOffset":1233,"endOffset":1341,"count":66},{"startOffset":1362,"endOffset":1408,"count":443},{"startOffset":1408,"endOffset":1441,"count":317},{"startOffset":1441,"endOffset":1484,"count":19},{"startOffset":1484,"endOffset":1509,"count":298},{"startOffset":1509,"endOffset":1786,"count":137},{"startOffset":1572,"endOffset":1706,"count":0},{"startOffset":1747,"endOffset":1782,"count":0}],"isBlockCoverage":true},{"functionName":"isEscaped","ranges":[{"startOffset":1965,"endOffset":2188,"count":132},{"startOffset":2107,"endOffset":2148,"count":0}],"isBlockCoverage":true},{"functionName":"strip","ranges":[{"startOffset":2277,"endOffset":2369,"count":0}],"isBlockCoverage":false},{"functionName":"stripJsonComments","ranges":[{"startOffset":2523,"endOffset":4119,"count":1},{"startOffset":2747,"endOffset":4019,"count":760},{"startOffset":2895,"endOffset":3011,"count":66},{"startOffset":3035,"endOffset":3053,"count":443},{"startOffset":3053,"endOffset":3122,"count":317},{"startOffset":3124,"endOffset":3242,"count":0},{"startOffset":3242,"endOffset":4016,"count":317},{"startOffset":3286,"endOffset":3332,"count":0},{"startOffset":3334,"endOffset":3445,"count":0},{"startOffset":3489,"endOffset":3517,"count":0},{"startOffset":3519,"endOffset":3618,"count":0},{"startOffset":3691,"endOffset":3808,"count":0},{"startOffset":3851,"endOffset":3895,"count":0},{"startOffset":3897,"endOffset":4016,"count":0},{"startOffset":4055,"endOffset":4088,"count":0}],"isBlockCoverage":true},{"functionName":"stripBom","ranges":[{"startOffset":4222,"endOffset":4447,"count":1},{"startOffset":4399,"endOffset":4429,"count":0}],"isBlockCoverage":true}]},{"scriptId":"393","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tsconfck/src/find-all.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1899,"count":1}],"isBlockCoverage":true},{"functionName":"findAll","ranges":[{"startOffset":680,"endOffset":1020,"count":1},{"startOffset":858,"endOffset":878,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":903,"endOffset":1016,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":959,"endOffset":1011,"count":1},{"startOffset":980,"endOffset":993,"count":0}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":1163,"endOffset":1898,"count":58},{"startOffset":1213,"endOffset":1227,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1283,"endOffset":1894,"count":58},{"startOffset":1325,"endOffset":1341,"count":0},{"startOffset":1398,"endOffset":1474,"count":0},{"startOffset":1476,"endOffset":1516,"count":0},{"startOffset":1554,"endOffset":1794,"count":292},{"startOffset":1582,"endOffset":1608,"count":59},{"startOffset":1610,"endOffset":1668,"count":57},{"startOffset":1668,"endOffset":1789,"count":235},{"startOffset":1691,"endOffset":1730,"count":233},{"startOffset":1732,"endOffset":1789,"count":1},{"startOffset":1823,"endOffset":1887,"count":1}],"isBlockCoverage":true}]},{"scriptId":"394","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tsconfck/src/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11518,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":771,"endOffset":1867,"count":1},{"startOffset":933,"endOffset":987,"count":0},{"startOffset":1242,"endOffset":1276,"count":0},{"startOffset":1299,"endOffset":1353,"count":0},{"startOffset":1400,"endOffset":1438,"count":0},{"startOffset":1440,"endOffset":1508,"count":0},{"startOffset":1821,"endOffset":1848,"count":0}],"isBlockCoverage":true},{"functionName":"getParsedDeep","ranges":[{"startOffset":2102,"endOffset":2540,"count":0}],"isBlockCoverage":false},{"functionName":"parseFile","ranges":[{"startOffset":2784,"endOffset":3624,"count":1},{"startOffset":2862,"endOffset":2902,"count":0},{"startOffset":2903,"endOffset":2956,"count":0},{"startOffset":2960,"endOffset":3009,"count":0},{"startOffset":3454,"endOffset":3549,"count":0},{"startOffset":3553,"endOffset":3605,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3089,"endOffset":3284,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3295,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeTSConfig","ranges":[{"startOffset":3792,"endOffset":4083,"count":1}],"isBlockCoverage":true},{"functionName":"parseReferences","ranges":[{"startOffset":4254,"endOffset":4710,"count":1},{"startOffset":4352,"endOffset":4709,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4488,"endOffset":4529,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4569,"endOffset":4611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4635,"endOffset":4673,"count":0}],"isBlockCoverage":false},{"functionName":"parseExtends","ranges":[{"startOffset":4865,"endOffset":6930,"count":1},{"startOffset":4955,"endOffset":6929,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5996,"endOffset":6046,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6103,"endOffset":6159,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6554,"endOffset":6586,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtends","ranges":[{"startOffset":7016,"endOffset":7537,"count":0}],"isBlockCoverage":false},{"functionName":"extendTSConfig","ranges":[{"startOffset":7913,"endOffset":9197,"count":0}],"isBlockCoverage":false},{"functionName":"rebaseRelative","ranges":[{"startOffset":9601,"endOffset":9845,"count":0}],"isBlockCoverage":false},{"functionName":"rebasePath","ranges":[{"startOffset":9935,"endOffset":10191,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10239,"endOffset":10949,"count":0}],"isBlockCoverage":true},{"functionName":"applyDefaults","ranges":[{"startOffset":11019,"endOffset":11213,"count":1},{"startOffset":11099,"endOffset":11211,"count":0}],"isBlockCoverage":true},{"functionName":"isJSConfig","ranges":[{"startOffset":11419,"endOffset":11517,"count":1}],"isBlockCoverage":true}]},{"scriptId":"395","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tsconfck/src/find-native.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2199,"count":1}],"isBlockCoverage":true},{"functionName":"findNative","ranges":[{"startOffset":480,"endOffset":1258,"count":0}],"isBlockCoverage":false},{"functionName":"is_out_of_root","ranges":[{"startOffset":1327,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"cache_result","ranges":[{"startOffset":1737,"endOffset":2198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tsconfck/src/parse-native.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9124,"count":1}],"isBlockCoverage":true},{"functionName":"parseNative","ranges":[{"startOffset":765,"endOffset":1923,"count":0}],"isBlockCoverage":false},{"functionName":"parseFile","ranges":[{"startOffset":2156,"endOffset":3338,"count":0}],"isBlockCoverage":false},{"functionName":"parseReferences","ranges":[{"startOffset":3512,"endOffset":3858,"count":0}],"isBlockCoverage":false},{"functionName":"checkErrors","ranges":[{"startOffset":4238,"endOffset":4706,"count":0}],"isBlockCoverage":false},{"functionName":"result2tsconfig","ranges":[{"startOffset":5123,"endOffset":7984,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8038,"endOffset":8993,"count":0}],"isBlockCoverage":true}]},{"scriptId":"397","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tsconfck/src/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3146,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":46,"endOffset":3145,"count":1}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":174,"endOffset":239,"count":0}],"isBlockCoverage":false},{"functionName":"hasConfigPath","ranges":[{"startOffset":393,"endOffset":502,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigPath","ranges":[{"startOffset":733,"endOffset":969,"count":0}],"isBlockCoverage":false},{"functionName":"hasParseResult","ranges":[{"startOffset":1063,"endOffset":1121,"count":2}],"isBlockCoverage":true},{"functionName":"getParseResult","ranges":[{"startOffset":1270,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"setParseResult","ranges":[{"startOffset":1700,"endOffset":2263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2044,"endOffset":2150,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2162,"endOffset":2258,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigPath","ranges":[{"startOffset":2419,"endOffset":2823,"count":0}],"isBlockCoverage":false}]},{"scriptId":"398","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/tsconfck/src/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9940,"count":1},{"startOffset":2085,"endOffset":2126,"count":0},{"startOffset":2454,"endOffset":2478,"count":0},{"startOffset":2827,"endOffset":2851,"count":0},{"startOffset":3247,"endOffset":3328,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":524,"endOffset":549,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":627,"endOffset":652,"count":8}],"isBlockCoverage":true},{"functionName":"makePromise","ranges":[{"startOffset":836,"endOffset":1005,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":912,"endOffset":963,"count":1}],"isBlockCoverage":true},{"functionName":"loadTS","ranges":[{"startOffset":1102,"endOffset":1294,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTSConfigJson","ranges":[{"startOffset":1429,"endOffset":1914,"count":1},{"startOffset":1524,"endOffset":1572,"count":0},{"startOffset":1661,"endOffset":1694,"count":0},{"startOffset":1720,"endOffset":1913,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1752,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2087,"endOffset":2126,"count":0}],"isBlockCoverage":false},{"functionName":"isInNodeModules","ranges":[{"startOffset":2130,"endOffset":2174,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2456,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"posix2native","ranges":[{"startOffset":2482,"endOffset":2536,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2829,"endOffset":2851,"count":0}],"isBlockCoverage":false},{"functionName":"native2posix","ranges":[{"startOffset":2855,"endOffset":2916,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3249,"endOffset":3328,"count":0}],"isBlockCoverage":false},{"functionName":"resolve2posix","ranges":[{"startOffset":3332,"endOffset":3487,"count":1},{"startOffset":3444,"endOffset":3482,"count":0}],"isBlockCoverage":true},{"functionName":"resolveReferencedTSConfigFiles","ranges":[{"startOffset":3661,"endOffset":3987,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSolutionTSConfig","ranges":[{"startOffset":4153,"endOffset":4633,"count":1},{"startOffset":4293,"endOffset":4310,"count":0},{"startOffset":4354,"endOffset":4407,"count":0},{"startOffset":4408,"endOffset":4442,"count":0},{"startOffset":4446,"endOffset":4615,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4375,"endOffset":4406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4498,"endOffset":4549,"count":0}],"isBlockCoverage":false},{"functionName":"isIncluded","ranges":[{"startOffset":4759,"endOffset":5425,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobMatch","ranges":[{"startOffset":5885,"endOffset":8767,"count":0}],"isBlockCoverage":false},{"functionName":"pattern2regex","ranges":[{"startOffset":8861,"endOffset":9624,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTokens","ranges":[{"startOffset":9749,"endOffset":9939,"count":1}],"isBlockCoverage":true}]},{"scriptId":"399","url":"node:cluster","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1405,"count":1}],"isBlockCoverage":false}]},{"scriptId":"400","url":"node:internal/cluster/primary","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10458,"count":1}],"isBlockCoverage":false},{"functionName":"cluster.setupPrimary","ranges":[{"startOffset":1899,"endOffset":3564,"count":0}],"isBlockCoverage":false},{"functionName":"setupSettingsNT","ranges":[{"startOffset":3666,"endOffset":3741,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerProcess","ranges":[{"startOffset":3745,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"removeWorker","ranges":[{"startOffset":4576,"endOffset":4819,"count":0}],"isBlockCoverage":false},{"functionName":"removeHandlesForWorker","ranges":[{"startOffset":4823,"endOffset":5003,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.fork","ranges":[{"startOffset":5022,"endOffset":6689,"count":0}],"isBlockCoverage":false},{"functionName":"emitForkNT","ranges":[{"startOffset":6694,"endOffset":6759,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.disconnect","ranges":[{"startOffset":6784,"endOffset":7150,"count":0}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":7270,"endOffset":7446,"count":0}],"isBlockCoverage":false},{"functionName":"online","ranges":[{"startOffset":7450,"endOffset":7567,"count":0}],"isBlockCoverage":false},{"functionName":"exitedAfterDisconnect","ranges":[{"startOffset":7571,"endOffset":7702,"count":0}],"isBlockCoverage":false},{"functionName":"queryServer","ranges":[{"startOffset":7706,"endOffset":9333,"count":0}],"isBlockCoverage":false},{"functionName":"listening","ranges":[{"startOffset":9337,"endOffset":9629,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9788,"endOffset":9956,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":9960,"endOffset":10066,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.disconnect","ranges":[{"startOffset":10172,"endOffset":10335,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.destroy","ranges":[{"startOffset":10367,"endOffset":10455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"node:internal/cluster/round_robin_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3592,"count":1}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle","ranges":[{"startOffset":392,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.add","ranges":[{"startOffset":1401,"endOffset":2055,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.remove","ranges":[{"startOffset":2096,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.distribute","ranges":[{"startOffset":2520,"endOffset":2954,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.handoff","ranges":[{"startOffset":2996,"endOffset":3589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"node:internal/cluster/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1105,"count":1}],"isBlockCoverage":false},{"functionName":"sendHelper","ranges":[{"startOffset":179,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"internal","ranges":[{"startOffset":676,"endOffset":1103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"node:internal/cluster/shared_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1156,"count":1}],"isBlockCoverage":false},{"functionName":"SharedHandle","ranges":[{"startOffset":209,"endOffset":703,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.add","ranges":[{"startOffset":736,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.remove","ranges":[{"startOffset":921,"endOffset":1153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"node:internal/cluster/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1436,"count":1}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":294,"endOffset":911,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.kill","ranges":[{"startOffset":1051,"endOffset":1114,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.send","ranges":[{"startOffset":1143,"endOffset":1226,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isDead","ranges":[{"startOffset":1257,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isConnected","ranges":[{"startOffset":1384,"endOffset":1433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/coverage-v8/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1357,"count":1}],"isBlockCoverage":true},{"functionName":"startCoverage","ranges":[{"startOffset":118,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"takeCoverage","ranges":[{"startOffset":299,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"stopCoverage","ranges":[{"startOffset":668,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"filterResult","ranges":[{"startOffset":804,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"getProvider","ranges":[{"startOffset":1172,"endOffset":1323,"count":1}],"isBlockCoverage":true}]},{"scriptId":"406","url":"node:inspector","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5833,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1130,"endOffset":4009,"count":1}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":1304,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"connectToMainThread","ranges":[{"startOffset":1615,"endOffset":1941,"count":0}],"isBlockCoverage":false},{"functionName":"#onMessage","ranges":[{"startOffset":1947,"endOffset":2603,"count":0}],"isBlockCoverage":false},{"functionName":"post","ranges":[{"startOffset":2807,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"disconnect","ranges":[{"startOffset":3633,"endOffset":4006,"count":0}],"isBlockCoverage":false},{"functionName":"inspectorOpen","ranges":[{"startOffset":4167,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"inspectorWaitForDebugger","ranges":[{"startOffset":4959,"endOffset":5069,"count":0}],"isBlockCoverage":false},{"functionName":"broadcastToFrontend","ranges":[{"startOffset":5073,"endOffset":5291,"count":0}],"isBlockCoverage":false},{"functionName":"requestWillBeSent","ranges":[{"startOffset":5335,"endOffset":5403,"count":0}],"isBlockCoverage":false},{"functionName":"responseReceived","ranges":[{"startOffset":5426,"endOffset":5493,"count":0}],"isBlockCoverage":false},{"functionName":"loadingFinished","ranges":[{"startOffset":5515,"endOffset":5581,"count":0}],"isBlockCoverage":false},{"functionName":"loadingFailed","ranges":[{"startOffset":5601,"endOffset":5665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/coverage-v8/dist/provider.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":94915,"count":1},{"startOffset":1153,"endOffset":1276,"count":0},{"startOffset":65408,"endOffset":65439,"count":0},{"startOffset":81686,"endOffset":81692,"count":0},{"startOffset":81754,"endOffset":81775,"count":0},{"startOffset":81776,"endOffset":81782,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultExportFromCjs","ranges":[{"startOffset":1279,"endOffset":1419,"count":1},{"startOffset":1344,"endOffset":1397,"count":0},{"startOffset":1398,"endOffset":1412,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1452,"endOffset":8204,"count":1},{"startOffset":2268,"endOffset":2327,"count":0},{"startOffset":2330,"endOffset":2380,"count":0},{"startOffset":4030,"endOffset":4105,"count":0},{"startOffset":4108,"endOffset":4174,"count":0}],"isBlockCoverage":true},{"functionName":"getCommentRegex","ranges":[{"startOffset":1532,"endOffset":1782,"count":0}],"isBlockCoverage":false},{"functionName":"getMapFileCommentRegex","ranges":[{"startOffset":1855,"endOffset":2108,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithBufferFrom","ranges":[{"startOffset":2383,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithNewBuffer","ranges":[{"startOffset":2486,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithAtob","ranges":[{"startOffset":2705,"endOffset":2799,"count":0}],"isBlockCoverage":false},{"functionName":"stripComment","ranges":[{"startOffset":2802,"endOffset":2863,"count":0}],"isBlockCoverage":false},{"functionName":"readFromFileMap","ranges":[{"startOffset":2866,"endOffset":3408,"count":0}],"isBlockCoverage":false},{"functionName":"Converter","ranges":[{"startOffset":3411,"endOffset":3769,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toJSON","ranges":[{"startOffset":3801,"endOffset":3877,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithBufferFrom","ranges":[{"startOffset":4177,"endOffset":4304,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithNewBuffer","ranges":[{"startOffset":4307,"endOffset":4548,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithBtoa","ranges":[{"startOffset":4551,"endOffset":4668,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toURI","ranges":[{"startOffset":4699,"endOffset":4780,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toComment","ranges":[{"startOffset":4816,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toObject","ranges":[{"startOffset":5305,"endOffset":5358,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.addProperty","ranges":[{"startOffset":5396,"endOffset":5606,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.setProperty","ranges":[{"startOffset":5644,"endOffset":5718,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.getProperty","ranges":[{"startOffset":5756,"endOffset":5806,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromObject","ranges":[{"startOffset":5831,"endOffset":5880,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromJSON","ranges":[{"startOffset":5903,"endOffset":5972,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromURI","ranges":[{"startOffset":5994,"endOffset":6064,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromBase64","ranges":[{"startOffset":6089,"endOffset":6168,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromComment","ranges":[{"startOffset":6194,"endOffset":6470,"count":0}],"isBlockCoverage":false},{"functionName":"makeConverter","ranges":[{"startOffset":6474,"endOffset":6552,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileComment","ranges":[{"startOffset":6584,"endOffset":7062,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromSource","ranges":[{"startOffset":7162,"endOffset":7284,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileSource","ranges":[{"startOffset":7391,"endOffset":7804,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeComments","ranges":[{"startOffset":7833,"endOffset":7901,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeMapFileComments","ranges":[{"startOffset":7937,"endOffset":8012,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateMapFileComment","ranges":[{"startOffset":8049,"endOffset":8200,"count":0}],"isBlockCoverage":false},{"functionName":"requireBranch","ranges":[{"startOffset":8265,"endOffset":8987,"count":1},{"startOffset":8317,"endOffset":8331,"count":0}],"isBlockCoverage":true},{"functionName":"CovBranch","ranges":[{"startOffset":8387,"endOffset":8596,"count":0}],"isBlockCoverage":false},{"functionName":"toIstanbul","ranges":[{"startOffset":8601,"endOffset":8965,"count":0}],"isBlockCoverage":false},{"functionName":"require_function","ranges":[{"startOffset":9031,"endOffset":9757,"count":1},{"startOffset":9089,"endOffset":9106,"count":0}],"isBlockCoverage":true},{"functionName":"CovFunction","ranges":[{"startOffset":9170,"endOffset":9408,"count":0}],"isBlockCoverage":false},{"functionName":"toIstanbul","ranges":[{"startOffset":9413,"endOffset":9732,"count":0}],"isBlockCoverage":false},{"functionName":"requireLine","ranges":[{"startOffset":9791,"endOffset":10937,"count":1},{"startOffset":9839,"endOffset":9851,"count":0}],"isBlockCoverage":true},{"functionName":"CovLine","ranges":[{"startOffset":9901,"endOffset":10706,"count":0}],"isBlockCoverage":false},{"functionName":"toIstanbul","ranges":[{"startOffset":10711,"endOffset":10917,"count":0}],"isBlockCoverage":false},{"functionName":"requireRange","ranges":[{"startOffset":11150,"endOffset":12065,"count":2},{"startOffset":11200,"endOffset":12064,"count":1}],"isBlockCoverage":true},{"functionName":"range.sliceRange","ranges":[{"startOffset":11257,"endOffset":12047,"count":0}],"isBlockCoverage":false},{"functionName":"requireSourcemapCodec_umd","ranges":[{"startOffset":12183,"endOffset":18868,"count":1},{"startOffset":12259,"endOffset":12293,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12332,"endOffset":18779,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12364,"endOffset":12421,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12440,"endOffset":18770,"count":1},{"startOffset":12808,"endOffset":12914,"count":64},{"startOffset":13075,"endOffset":13633,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":13143,"endOffset":13312,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":13366,"endOffset":13616,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":13641,"endOffset":15268,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":15275,"endOffset":15423,"count":0}],"isBlockCoverage":false},{"functionName":"decodeInteger","ranges":[{"startOffset":15430,"endOffset":15980,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":15987,"endOffset":16143,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":16150,"endOffset":16216,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":16223,"endOffset":16292,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":16299,"endOffset":18162,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInteger","ranges":[{"startOffset":18169,"endOffset":18632,"count":0}],"isBlockCoverage":false},{"functionName":"requireResolveUri_umd","ranges":[{"startOffset":18939,"endOffset":29694,"count":1},{"startOffset":19007,"endOffset":19037,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19072,"endOffset":29641,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19104,"endOffset":19171,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19190,"endOffset":29632,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20280,"endOffset":20715,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":20751,"endOffset":20832,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":20839,"endOffset":20925,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":20932,"endOffset":21012,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":21019,"endOffset":21098,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":21105,"endOffset":21180,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":21187,"endOffset":21402,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":21409,"endOffset":21660,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":21667,"endOffset":21951,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":21958,"endOffset":23020,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":23027,"endOffset":23384,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":23391,"endOffset":23867,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":24062,"endOffset":26776,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":26869,"endOffset":29604,"count":0}],"isBlockCoverage":false},{"functionName":"requireTraceMapping_umd","ranges":[{"startOffset":29730,"endOffset":55522,"count":2},{"startOffset":29802,"endOffset":55521,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29871,"endOffset":55439,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29903,"endOffset":30014,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30033,"endOffset":55430,"count":1}],"isBlockCoverage":true},{"functionName":"_interopDefaultLegacy","ranges":[{"startOffset":30088,"endOffset":30202,"count":1},{"startOffset":30159,"endOffset":30176,"count":0},{"startOffset":30177,"endOffset":30180,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":30291,"endOffset":30756,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":30854,"endOffset":31028,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":31255,"endOffset":31903,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":31910,"endOffset":32143,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":32150,"endOffset":32375,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":32382,"endOffset":32527,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":32534,"endOffset":32613,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":33294,"endOffset":33818,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":33825,"endOffset":34060,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":34067,"endOffset":34289,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":34296,"endOffset":34448,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":34668,"endOffset":35504,"count":0}],"isBlockCoverage":false},{"functionName":"buildBySources","ranges":[{"startOffset":35653,"endOffset":37099,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":37106,"endOffset":37290,"count":0}],"isBlockCoverage":false},{"functionName":"buildNullArray","ranges":[{"startOffset":37760,"endOffset":37833,"count":0}],"isBlockCoverage":false},{"functionName":"AnyMap","ranges":[{"startOffset":37856,"endOffset":38532,"count":0}],"isBlockCoverage":false},{"functionName":"recurse","ranges":[{"startOffset":38540,"endOffset":39503,"count":0}],"isBlockCoverage":false},{"functionName":"addSection","ranges":[{"startOffset":39510,"endOffset":42308,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":42315,"endOffset":42435,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":42442,"endOffset":42588,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":44940,"endOffset":46158,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46174,"endOffset":52460,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encodedMappings","ranges":[{"startOffset":46218,"endOffset":46392,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decodedMappings","ranges":[{"startOffset":46430,"endOffset":46545,"count":0}],"isBlockCoverage":false},{"functionName":"exports.traceSegment","ranges":[{"startOffset":46580,"endOffset":47148,"count":0}],"isBlockCoverage":false},{"functionName":"exports.originalPositionFor","ranges":[{"startOffset":47190,"endOffset":48398,"count":0}],"isBlockCoverage":false},{"functionName":"exports.allGeneratedPositionsFor","ranges":[{"startOffset":48445,"endOffset":48693,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generatedPositionFor","ranges":[{"startOffset":48736,"endOffset":48894,"count":0}],"isBlockCoverage":false},{"functionName":"exports.eachMapping","ranges":[{"startOffset":48928,"endOffset":50197,"count":0}],"isBlockCoverage":false},{"functionName":"exports.sourceContentFor","ranges":[{"startOffset":50236,"endOffset":50619,"count":0}],"isBlockCoverage":false},{"functionName":"exports.presortedDecodedMap","ranges":[{"startOffset":50661,"endOffset":50833,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decodedMap","ranges":[{"startOffset":50866,"endOffset":50951,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encodedMap","ranges":[{"startOffset":50984,"endOffset":51069,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPosition","ranges":[{"startOffset":51081,"endOffset":52452,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":52471,"endOffset":52792,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":52799,"endOffset":52903,"count":0}],"isBlockCoverage":false},{"functionName":"GMapping","ranges":[{"startOffset":52910,"endOffset":52986,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":52993,"endOffset":53456,"count":0}],"isBlockCoverage":false},{"functionName":"sliceGeneratedPositions","ranges":[{"startOffset":53463,"endOffset":55176,"count":0}],"isBlockCoverage":false},{"functionName":"requireSource","ranges":[{"startOffset":55560,"endOffset":64507,"count":1},{"startOffset":55612,"endOffset":55626,"count":0}],"isBlockCoverage":true},{"functionName":"CovSource","ranges":[{"startOffset":55964,"endOffset":56291,"count":0}],"isBlockCoverage":false},{"functionName":"_buildLines","ranges":[{"startOffset":56296,"endOffset":57320,"count":0}],"isBlockCoverage":false},{"functionName":"_parseIgnore","ranges":[{"startOffset":57626,"endOffset":58446,"count":0}],"isBlockCoverage":false},{"functionName":"offsetToOriginalRelative","ranges":[{"startOffset":58595,"endOffset":59698,"count":0}],"isBlockCoverage":false},{"functionName":"relativeToOffset","ranges":[{"startOffset":59703,"endOffset":59923,"count":0}],"isBlockCoverage":false},{"functionName":"_parseLinesToCover","ranges":[{"startOffset":59928,"endOffset":60181,"count":0}],"isBlockCoverage":false},{"functionName":"originalEndPositionFor","ranges":[{"startOffset":61219,"endOffset":63089,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionTryBoth","ranges":[{"startOffset":63092,"endOffset":64107,"count":0}],"isBlockCoverage":false},{"functionName":"getShebangLength","ranges":[{"startOffset":64247,"endOffset":64489,"count":0}],"isBlockCoverage":false},{"functionName":"V8ToIstanbul","ranges":[{"startOffset":65490,"endOffset":66349,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":66353,"endOffset":69484,"count":0}],"isBlockCoverage":false},{"functionName":"_readFileFromDir","ranges":[{"startOffset":69488,"endOffset":69595,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesContentFromSources","ranges":[{"startOffset":69599,"endOffset":70003,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":70007,"endOffset":70094,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveSource","ranges":[{"startOffset":70098,"endOffset":70614,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoverage","ranges":[{"startOffset":70618,"endOffset":73660,"count":0}],"isBlockCoverage":false},{"functionName":"_maybeRemapStartColEndCol","ranges":[{"startOffset":73664,"endOffset":75161,"count":0}],"isBlockCoverage":false},{"functionName":"getInnerIstanbul","ranges":[{"startOffset":75165,"endOffset":76058,"count":0}],"isBlockCoverage":false},{"functionName":"toIstanbul","ranges":[{"startOffset":76062,"endOffset":76223,"count":0}],"isBlockCoverage":false},{"functionName":"_statementsToIstanbul","ranges":[{"startOffset":76227,"endOffset":76557,"count":0}],"isBlockCoverage":false},{"functionName":"_branchesToIstanbul","ranges":[{"startOffset":76561,"endOffset":77044,"count":0}],"isBlockCoverage":false},{"functionName":"_functionsToIstanbul","ranges":[{"startOffset":77048,"endOffset":77513,"count":0}],"isBlockCoverage":false},{"functionName":"parsePath","ranges":[{"startOffset":77518,"endOffset":77636,"count":0}],"isBlockCoverage":false},{"functionName":"v8ToIstanbul","ranges":[{"startOffset":77767,"endOffset":77930,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeWindowsPath","ranges":[{"startOffset":78007,"endOffset":78151,"count":52},{"startOffset":78113,"endOffset":78150,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":78318,"endOffset":79019,"count":0}],"isBlockCoverage":false},{"functionName":"cwd","ranges":[{"startOffset":79021,"endOffset":79143,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":79160,"endOffset":79828,"count":26},{"startOffset":79374,"endOffset":79394,"count":78},{"startOffset":79405,"endOffset":79614,"count":52},{"startOffset":79455,"endOffset":79462,"count":0},{"startOffset":79500,"endOffset":79523,"count":0},{"startOffset":79735,"endOffset":79771,"count":0},{"startOffset":79820,"endOffset":79825,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":79216,"endOffset":79260,"count":52}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":79830,"endOffset":81523,"count":26},{"startOffset":80034,"endOffset":81507,"count":2345},{"startOffset":80065,"endOffset":80098,"count":2319},{"startOffset":80098,"endOffset":80173,"count":26},{"startOffset":80142,"endOffset":80173,"count":0},{"startOffset":80173,"endOffset":80196,"count":2319},{"startOffset":80196,"endOffset":81413,"count":232},{"startOffset":80247,"endOffset":80248,"count":1},{"startOffset":80248,"endOffset":81366,"count":231},{"startOffset":80270,"endOffset":81136,"count":0},{"startOffset":81172,"endOffset":81240,"count":205},{"startOffset":81240,"endOffset":81307,"count":26},{"startOffset":81413,"endOffset":81503,"count":2087},{"startOffset":81436,"endOffset":81450,"count":50},{"startOffset":81452,"endOffset":81473,"count":26},{"startOffset":81473,"endOffset":81503,"count":2061}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":81543,"endOffset":81592,"count":78}],"isBlockCoverage":true},{"functionName":"cleanUrl","ranges":[{"startOffset":81834,"endOffset":81915,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":82585,"endOffset":93570,"count":1}],"isBlockCoverage":true},{"functionName":"initialize","ranges":[{"startOffset":82732,"endOffset":84153,"count":1},{"startOffset":83006,"endOffset":83040,"count":0},{"startOffset":83116,"endOffset":83158,"count":0},{"startOffset":83197,"endOffset":83554,"count":0},{"startOffset":83691,"endOffset":83699,"count":0},{"startOffset":84018,"endOffset":84052,"count":0}],"isBlockCoverage":true},{"functionName":"resolveOptions","ranges":[{"startOffset":84156,"endOffset":84203,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":84206,"endOffset":84721,"count":1},{"startOffset":84457,"endOffset":84556,"count":0}],"isBlockCoverage":true},{"functionName":"onAfterSuiteRun","ranges":[{"startOffset":84919,"endOffset":85568,"count":24},{"startOffset":85045,"endOffset":85105,"count":0},{"startOffset":85194,"endOffset":85306,"count":1}],"isBlockCoverage":true},{"functionName":"reportCoverage","ranges":[{"startOffset":85571,"endOffset":89094,"count":0}],"isBlockCoverage":false},{"functionName":"getUntestedFiles","ranges":[{"startOffset":89097,"endOffset":91033,"count":0}],"isBlockCoverage":false},{"functionName":"getSources","ranges":[{"startOffset":91036,"endOffset":92282,"count":0}],"isBlockCoverage":false},{"functionName":"convertCoverage","ranges":[{"startOffset":92285,"endOffset":93568,"count":0}],"isBlockCoverage":false},{"functionName":"transformCoverage","ranges":[{"startOffset":93571,"endOffset":93745,"count":0}],"isBlockCoverage":false},{"functionName":"excludeGeneratedCode","ranges":[{"startOffset":93746,"endOffset":94316,"count":0}],"isBlockCoverage":false},{"functionName":"findLongestFunctionLength","ranges":[{"startOffset":94317,"endOffset":94582,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeTransformResults","ranges":[{"startOffset":94583,"endOffset":94882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-reports/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":536,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":201,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"410","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":986,"count":1}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":481,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultWatermarks","ranges":[{"startOffset":845,"endOffset":915,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"412","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18,"count":1}],"isBlockCoverage":true}]},{"scriptId":"413","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19,"count":1}],"isBlockCoverage":true}]},{"scriptId":"414","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-coverage/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1898,"count":1}],"isBlockCoverage":true},{"functionName":"createCoverageSummary","ranges":[{"startOffset":851,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"createCoverageMap","ranges":[{"startOffset":1233,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"createFileCoverage","ranges":[{"startOffset":1606,"endOffset":1759,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21,"count":1}],"isBlockCoverage":true}]},{"scriptId":"416","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20,"count":1}],"isBlockCoverage":true}]},{"scriptId":"417","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24,"count":1}],"isBlockCoverage":true}]},{"scriptId":"418","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":320,"count":1}],"isBlockCoverage":true},{"functionName":"createSourceMapStore","ranges":[{"startOffset":247,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17,"count":1}],"isBlockCoverage":true}]},{"scriptId":"420","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/coverage-v8/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"421","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2434,"count":1}],"isBlockCoverage":true}]},{"scriptId":"422","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"423","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"424","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"425","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"426","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"427","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14,"count":1}],"isBlockCoverage":true}]},{"scriptId":"428","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@ampproject/remapping/dist/remapping.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8538,"count":1}],"isBlockCoverage":true},{"functionName":"SegmentObject","ranges":[{"startOffset":327,"endOffset":458,"count":1}],"isBlockCoverage":true},{"functionName":"Source","ranges":[{"startOffset":459,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"MapSource","ranges":[{"startOffset":770,"endOffset":856,"count":0}],"isBlockCoverage":false},{"functionName":"OriginalSource","ranges":[{"startOffset":1014,"endOffset":1131,"count":0}],"isBlockCoverage":false},{"functionName":"traceMappings","ranges":[{"startOffset":1296,"endOffset":2939,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":3108,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"asArray","ranges":[{"startOffset":3811,"endOffset":3910,"count":0}],"isBlockCoverage":false},{"functionName":"buildSourceMapTree","ranges":[{"startOffset":4451,"endOffset":5032,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":5033,"endOffset":6850,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMap","ranges":[{"startOffset":6978,"endOffset":7500,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":7505,"endOffset":7560,"count":0}],"isBlockCoverage":false},{"functionName":"remapping","ranges":[{"startOffset":8201,"endOffset":8464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vitest/dist/coverage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7586,"count":1}],"isBlockCoverage":true},{"functionName":"updateThresholds","ranges":[{"startOffset":419,"endOffset":1742,"count":0}],"isBlockCoverage":false},{"functionName":"checkThresholds","ranges":[{"startOffset":1867,"endOffset":3163,"count":0}],"isBlockCoverage":false},{"functionName":"resolveThresholds","ranges":[{"startOffset":3425,"endOffset":4968,"count":0}],"isBlockCoverage":false},{"functionName":"resolveReporters","ranges":[{"startOffset":5041,"endOffset":5449,"count":1},{"startOffset":5124,"endOffset":5155,"count":0},{"startOffset":5234,"endOffset":5415,"count":3},{"startOffset":5271,"endOffset":5346,"count":0}],"isBlockCoverage":true},{"functionName":"hasTerminalReporter","ranges":[{"startOffset":5452,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"toSlices","ranges":[{"startOffset":5641,"endOffset":5981,"count":0}],"isBlockCoverage":false},{"functionName":"resolveGlobThresholds","ranges":[{"startOffset":5984,"endOffset":6569,"count":0}],"isBlockCoverage":false},{"functionName":"assertConfigurationModule","ranges":[{"startOffset":6570,"endOffset":6955,"count":0}],"isBlockCoverage":false},{"functionName":"resolveConfig","ranges":[{"startOffset":6956,"endOffset":7551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/coverage-v8/node_modules/test-exclude/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5211,"count":1}],"isBlockCoverage":true},{"functionName":"TestExclude","ranges":[{"startOffset":292,"endOffset":1487,"count":1},{"startOffset":495,"endOffset":595,"count":6},{"startOffset":643,"endOffset":697,"count":0},{"startOffset":745,"endOffset":799,"count":0},{"startOffset":849,"endOffset":907,"count":0},{"startOffset":946,"endOffset":993,"count":0},{"startOffset":1129,"endOffset":1180,"count":0},{"startOffset":1301,"endOffset":1382,"count":0}],"isBlockCoverage":true},{"functionName":"handleNegation","ranges":[{"startOffset":1722,"endOffset":2337,"count":1}],"isBlockCoverage":true},{"functionName":"noNeg","ranges":[{"startOffset":1763,"endOffset":1787,"count":23}],"isBlockCoverage":true},{"functionName":"onlyNeg","ranges":[{"startOffset":1813,"endOffset":1837,"count":23}],"isBlockCoverage":true},{"functionName":"stripNeg","ranges":[{"startOffset":1864,"endOffset":1879,"count":0}],"isBlockCoverage":false},{"functionName":"shouldInstrument","ranges":[{"startOffset":2343,"endOffset":3245,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":3251,"endOffset":3831,"count":0}],"isBlockCoverage":false},{"functionName":"glob","ranges":[{"startOffset":3837,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"prepGlobPatterns","ranges":[{"startOffset":4425,"endOffset":4932,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4490,"endOffset":4924,"count":11},{"startOffset":4607,"endOffset":4690,"count":6},{"startOffset":4799,"endOffset":4878,"count":6}],"isBlockCoverage":true},{"functionName":"getExtensionPattern","ranges":[{"startOffset":4934,"endOffset":5179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"432","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"433","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20,"count":1}],"isBlockCoverage":true}]},{"scriptId":"434","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18,"count":1}],"isBlockCoverage":true}]},{"scriptId":"435","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magicast/dist/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":292928,"count":1}],"isBlockCoverage":true},{"functionName":"sharedPlugin","ranges":[{"startOffset":135,"endOffset":1416,"count":1}],"isBlockCoverage":true},{"functionName":"geq","ranges":[{"startOffset":298,"endOffset":439,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":347,"endOffset":396,"count":0}],"isBlockCoverage":false},{"functionName":"null","ranges":[{"startOffset":641,"endOffset":678,"count":0}],"isBlockCoverage":false},{"functionName":"emptyArray","ranges":[{"startOffset":698,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"false","ranges":[{"startOffset":748,"endOffset":786,"count":0}],"isBlockCoverage":false},{"functionName":"true","ranges":[{"startOffset":800,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"undefined","ranges":[{"startOffset":856,"endOffset":874,"count":0}],"isBlockCoverage":false},{"functionName":"use strict","ranges":[{"startOffset":894,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1122,"endOffset":1321,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSetModuleExports","ranges":[{"startOffset":1417,"endOffset":1979,"count":28},{"startOffset":1634,"endOffset":1691,"count":0},{"startOffset":1692,"endOffset":1730,"count":0},{"startOffset":1732,"endOffset":1977,"count":0}],"isBlockCoverage":true},{"functionName":"__defNormalProp$2","ranges":[{"startOffset":2046,"endOffset":2185,"count":4369},{"startOffset":2078,"endOffset":2166,"count":0}],"isBlockCoverage":true},{"functionName":"__publicField$2","ranges":[{"startOffset":2209,"endOffset":2324,"count":4369},{"startOffset":2292,"endOffset":2297,"count":0}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":2446,"endOffset":2632,"count":1},{"startOffset":2502,"endOffset":2611,"count":0}],"isBlockCoverage":true},{"functionName":"arrayOf","ranges":[{"startOffset":2635,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayType","ranges":[{"startOffset":2753,"endOffset":2871,"count":103}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2874,"endOffset":2928,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2931,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"IdentityType","ranges":[{"startOffset":3089,"endOffset":3201,"count":239}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":3204,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":3254,"endOffset":3418,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectType","ranges":[{"startOffset":3459,"endOffset":3572,"count":10}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":3575,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":3643,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"OrType","ranges":[{"startOffset":3856,"endOffset":3962,"count":208}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":3965,"endOffset":4016,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":4019,"endOffset":4219,"count":0}],"isBlockCoverage":false},{"functionName":"PredicateType","ranges":[{"startOffset":4263,"endOffset":4416,"count":307}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":4419,"endOffset":4457,"count":7}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":4460,"endOffset":4631,"count":1466},{"startOffset":4545,"endOffset":4574,"count":1352},{"startOffset":4576,"endOffset":4608,"count":0}],"isBlockCoverage":true},{"functionName":"Def","ranges":[{"startOffset":4648,"endOffset":5621,"count":292}],"isBlockCoverage":true},{"functionName":"isSupertypeOf","ranges":[{"startOffset":5624,"endOffset":5910,"count":0}],"isBlockCoverage":false},{"functionName":"checkAllFields","ranges":[{"startOffset":5913,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"bases","ranges":[{"startOffset":6362,"endOffset":6862,"count":289},{"startOffset":6445,"endOffset":6711,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6739,"endOffset":6839,"count":326},{"startOffset":6794,"endOffset":6833,"count":315}],"isBlockCoverage":true},{"functionName":"Field","ranges":[{"startOffset":6881,"endOffset":7070,"count":874}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":7073,"endOffset":7146,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":7149,"endOffset":7378,"count":0}],"isBlockCoverage":false},{"functionName":"shallowStringify","ranges":[{"startOffset":7381,"endOffset":7715,"count":0}],"isBlockCoverage":false},{"functionName":"typesPlugin","ranges":[{"startOffset":7716,"endOffset":21530,"count":1},{"startOffset":10588,"endOffset":10630,"count":0}],"isBlockCoverage":true},{"functionName":"or","ranges":[{"startOffset":7767,"endOffset":7850,"count":208}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7816,"endOffset":7841,"count":588}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":7856,"endOffset":8921,"count":1569},{"startOffset":8004,"endOffset":8037,"count":1338},{"startOffset":8039,"endOffset":8070,"count":255},{"startOffset":8070,"endOffset":8103,"count":1314},{"startOffset":8103,"endOffset":8139,"count":530},{"startOffset":8139,"endOffset":8172,"count":784},{"startOffset":8172,"endOffset":8358,"count":103},{"startOffset":8206,"endOffset":8299,"count":0},{"startOffset":8358,"endOffset":8392,"count":681},{"startOffset":8392,"endOffset":8547,"count":10},{"startOffset":8547,"endOffset":8587,"count":671},{"startOffset":8587,"endOffset":8877,"count":432},{"startOffset":8672,"endOffset":8729,"count":428},{"startOffset":8729,"endOffset":8768,"count":4},{"startOffset":8768,"endOffset":8822,"count":0},{"startOffset":8822,"endOffset":8877,"count":4},{"startOffset":8877,"endOffset":8920,"count":239}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8447,"endOffset":8536,"count":18}],"isBlockCoverage":true},{"functionName":"def","ranges":[{"startOffset":9316,"endOffset":9451,"count":876},{"startOffset":9379,"endOffset":9399,"count":584},{"startOffset":9400,"endOffset":9444,"count":292}],"isBlockCoverage":true},{"functionName":"hasDef","ranges":[{"startOffset":9457,"endOffset":9529,"count":0}],"isBlockCoverage":false},{"functionName":"defBuiltInType","ranges":[{"startOffset":9593,"endOffset":9954,"count":11},{"startOffset":9797,"endOffset":9841,"count":9},{"startOffset":9843,"endOffset":9933,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9731,"endOffset":9773,"count":1466}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10058,"endOffset":10074,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt","ranges":[{"startOffset":10618,"endOffset":10629,"count":0}],"isBlockCoverage":false},{"functionName":"defFromValue","ranges":[{"startOffset":10961,"endOffset":11261,"count":0}],"isBlockCoverage":false},{"functionName":"DefImpl","ranges":[{"startOffset":11296,"endOffset":11443,"count":292}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11369,"endOffset":11409,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":11448,"endOffset":12232,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":12237,"endOffset":14915,"count":284},{"startOffset":12325,"endOffset":12355,"count":12},{"startOffset":12355,"endOffset":14914,"count":272}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12389,"endOffset":12408,"count":0}],"isBlockCoverage":false},{"functionName":"addParam","ranges":[{"startOffset":12463,"endOffset":13421,"count":0}],"isBlockCoverage":false},{"functionName":"builder","ranges":[{"startOffset":13445,"endOffset":14155,"count":0}],"isBlockCoverage":false},{"functionName":"builder.from","ranges":[{"startOffset":14178,"endOffset":14759,"count":0}],"isBlockCoverage":false},{"functionName":"field","ranges":[{"startOffset":15201,"endOffset":15544,"count":856},{"startOffset":15266,"endOffset":15437,"count":0}],"isBlockCoverage":true},{"functionName":"finalize","ranges":[{"startOffset":15549,"endOffset":16838,"count":607},{"startOffset":15589,"endOffset":16832,"count":292},{"startOffset":16294,"endOffset":16447,"count":1524},{"startOffset":16379,"endOffset":16437,"count":968},{"startOffset":16698,"endOffset":16750,"count":272},{"startOffset":16752,"endOffset":16824,"count":61}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15710,"endOffset":16126,"count":315},{"startOffset":15933,"endOffset":16116,"count":0}],"isBlockCoverage":true},{"functionName":"getSupertypeNames","ranges":[{"startOffset":16845,"endOffset":17100,"count":0}],"isBlockCoverage":false},{"functionName":"computeSupertypeLookupTable","ranges":[{"startOffset":17103,"endOffset":17722,"count":0}],"isBlockCoverage":false},{"functionName":"defineMethod","ranges":[{"startOffset":17805,"endOffset":18216,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderName","ranges":[{"startOffset":18219,"endOffset":18656,"count":393}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18294,"endOffset":18650,"count":393},{"startOffset":18391,"endOffset":18419,"count":0},{"startOffset":18428,"endOffset":18483,"count":286},{"startOffset":18492,"endOffset":18636,"count":107}],"isBlockCoverage":true},{"functionName":"getStatementBuilderName","ranges":[{"startOffset":18659,"endOffset":18808,"count":61}],"isBlockCoverage":true},{"functionName":"getFieldNames","ranges":[{"startOffset":18834,"endOffset":19131,"count":0}],"isBlockCoverage":false},{"functionName":"getFieldValue","ranges":[{"startOffset":19134,"endOffset":19382,"count":0}],"isBlockCoverage":false},{"functionName":"eachField","ranges":[{"startOffset":19385,"endOffset":19566,"count":0}],"isBlockCoverage":false},{"functionName":"someField","ranges":[{"startOffset":19569,"endOffset":19761,"count":0}],"isBlockCoverage":false},{"functionName":"wrapExpressionBuilderWithStatement","ranges":[{"startOffset":19764,"endOffset":20294,"count":61},{"startOffset":19914,"endOffset":19921,"count":1},{"startOffset":19921,"endOffset":20000,"count":60},{"startOffset":20000,"endOffset":20007,"count":0},{"startOffset":20007,"endOffset":20293,"count":60}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":20028,"endOffset":20127,"count":0}],"isBlockCoverage":false},{"functionName":"builder.from","ranges":[{"startOffset":20148,"endOffset":20252,"count":0}],"isBlockCoverage":false},{"functionName":"populateSupertypeList","ranges":[{"startOffset":20297,"endOffset":20991,"count":292},{"startOffset":20496,"endOffset":20806,"count":1246},{"startOffset":20592,"endOffset":20630,"count":0},{"startOffset":20676,"endOffset":20726,"count":42},{"startOffset":20878,"endOffset":20965,"count":1246},{"startOffset":20917,"endOffset":20959,"count":1204}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":20994,"endOffset":21130,"count":922}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21054,"endOffset":21107,"count":2805}],"isBlockCoverage":true},{"functionName":"finalize","ranges":[{"startOffset":21133,"endOffset":21250,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21189,"endOffset":21244,"count":292}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21553,"endOffset":21565,"count":1}],"isBlockCoverage":true},{"functionName":"pathPlugin","ranges":[{"startOffset":21630,"endOffset":29452,"count":1}],"isBlockCoverage":true},{"functionName":"Path2","ranges":[{"startOffset":21796,"endOffset":22234,"count":0}],"isBlockCoverage":false},{"functionName":"getChildCache","ranges":[{"startOffset":22265,"endOffset":22390,"count":0}],"isBlockCoverage":false},{"functionName":"getChildPath","ranges":[{"startOffset":22393,"endOffset":22834,"count":0}],"isBlockCoverage":false},{"functionName":"getValueProperty","ranges":[{"startOffset":22859,"endOffset":22925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22938,"endOffset":23121,"count":0}],"isBlockCoverage":false},{"functionName":"each","ranges":[{"startOffset":23135,"endOffset":23541,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":23554,"endOffset":23735,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":23751,"endOffset":23968,"count":0}],"isBlockCoverage":false},{"functionName":"emptyMoves","ranges":[{"startOffset":23972,"endOffset":23999,"count":0}],"isBlockCoverage":false},{"functionName":"getMoves","ranges":[{"startOffset":24002,"endOffset":25296,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":25310,"endOffset":25435,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":25452,"endOffset":25619,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":25633,"endOffset":25784,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":25797,"endOffset":25981,"count":0}],"isBlockCoverage":false},{"functionName":"insertAt","ranges":[{"startOffset":25999,"endOffset":26331,"count":0}],"isBlockCoverage":false},{"functionName":"insertBefore","ranges":[{"startOffset":26353,"endOffset":26608,"count":0}],"isBlockCoverage":false},{"functionName":"insertAfter","ranges":[{"startOffset":26629,"endOffset":26887,"count":0}],"isBlockCoverage":false},{"functionName":"repairRelationshipWithParent","ranges":[{"startOffset":26891,"endOffset":27682,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":27698,"endOffset":29434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29475,"endOffset":29487,"count":1}],"isBlockCoverage":true},{"functionName":"scopePlugin","ranges":[{"startOffset":29539,"endOffset":40388,"count":1}],"isBlockCoverage":true},{"functionName":"Scope2","ranges":[{"startOffset":29823,"endOffset":30591,"count":0}],"isBlockCoverage":false},{"functionName":"Scope.isEstablishedBy","ranges":[{"startOffset":31380,"endOffset":31472,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.declares","ranges":[{"startOffset":31540,"endOffset":31624,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.declaresType","ranges":[{"startOffset":31646,"endOffset":31727,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.declareTemporary","ranges":[{"startOffset":31753,"endOffset":32152,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.injectTemporary","ranges":[{"startOffset":32177,"endOffset":32574,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.scan","ranges":[{"startOffset":32588,"endOffset":32893,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.getBindings","ranges":[{"startOffset":32914,"endOffset":32973,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.getTypes","ranges":[{"startOffset":32991,"endOffset":33047,"count":0}],"isBlockCoverage":false},{"functionName":"scanScope","ranges":[{"startOffset":33051,"endOffset":33605,"count":0}],"isBlockCoverage":false},{"functionName":"recursiveScanScope","ranges":[{"startOffset":33608,"endOffset":35691,"count":0}],"isBlockCoverage":false},{"functionName":"pathHasValue","ranges":[{"startOffset":35694,"endOffset":35944,"count":0}],"isBlockCoverage":false},{"functionName":"recursiveScanChild","ranges":[{"startOffset":35947,"endOffset":37181,"count":0}],"isBlockCoverage":false},{"functionName":"addPattern","ranges":[{"startOffset":37184,"endOffset":39249,"count":0}],"isBlockCoverage":false},{"functionName":"addTypePattern","ranges":[{"startOffset":39252,"endOffset":39599,"count":0}],"isBlockCoverage":false},{"functionName":"addTypeParameter","ranges":[{"startOffset":39602,"endOffset":39912,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.lookup","ranges":[{"startOffset":39927,"endOffset":40068,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.lookupType","ranges":[{"startOffset":40088,"endOffset":40233,"count":0}],"isBlockCoverage":false},{"functionName":"Sp.getGlobalScope","ranges":[{"startOffset":40257,"endOffset":40369,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40411,"endOffset":40423,"count":1}],"isBlockCoverage":true},{"functionName":"nodePathPlugin","ranges":[{"startOffset":40427,"endOffset":51044,"count":1}],"isBlockCoverage":true},{"functionName":"NodePath2","ranges":[{"startOffset":40729,"endOffset":40950,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41200,"endOffset":41401,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41434,"endOffset":41641,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41673,"endOffset":41877,"count":0}],"isBlockCoverage":false},{"functionName":"NPp.replace","ranges":[{"startOffset":41906,"endOffset":42050,"count":0}],"isBlockCoverage":false},{"functionName":"NPp.prune","ranges":[{"startOffset":42066,"endOffset":42197,"count":0}],"isBlockCoverage":false},{"functionName":"NPp._computeNode","ranges":[{"startOffset":42220,"endOffset":42385,"count":0}],"isBlockCoverage":false},{"functionName":"NPp._computeParent","ranges":[{"startOffset":42410,"endOffset":42755,"count":0}],"isBlockCoverage":false},{"functionName":"NPp._computeScope","ranges":[{"startOffset":42779,"endOffset":43020,"count":0}],"isBlockCoverage":false},{"functionName":"NPp.getValueProperty","ranges":[{"startOffset":43047,"endOffset":43117,"count":0}],"isBlockCoverage":false},{"functionName":"NPp.needsParens","ranges":[{"startOffset":43139,"endOffset":46667,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":46671,"endOffset":46778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47016,"endOffset":47105,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47053,"endOffset":47099,"count":23}],"isBlockCoverage":true},{"functionName":"containsCallExpression","ranges":[{"startOffset":47110,"endOffset":47473,"count":0}],"isBlockCoverage":false},{"functionName":"NPp.canBeFirstInStatement","ranges":[{"startOffset":47504,"endOffset":47627,"count":0}],"isBlockCoverage":false},{"functionName":"NPp.firstInStatement","ranges":[{"startOffset":47654,"endOffset":47705,"count":0}],"isBlockCoverage":false},{"functionName":"firstInStatement","ranges":[{"startOffset":47709,"endOffset":49557,"count":0}],"isBlockCoverage":false},{"functionName":"cleanUpNodesAfterPrune","ranges":[{"startOffset":49560,"endOffset":50184,"count":0}],"isBlockCoverage":false},{"functionName":"cleanUpIfStatementAfterPrune","ranges":[{"startOffset":50187,"endOffset":51023,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51067,"endOffset":51079,"count":1}],"isBlockCoverage":true},{"functionName":"pathVisitorPlugin","ranges":[{"startOffset":51131,"endOffset":60305,"count":1}],"isBlockCoverage":true},{"functionName":"PathVisitor2","ranges":[{"startOffset":51422,"endOffset":51931,"count":0}],"isBlockCoverage":false},{"functionName":"computeMethodNameTable","ranges":[{"startOffset":51935,"endOffset":52705,"count":0}],"isBlockCoverage":false},{"functionName":"fromMethodsObject","ranges":[{"startOffset":52740,"endOffset":53409,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":53413,"endOffset":53608,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":53631,"endOffset":53729,"count":0}],"isBlockCoverage":false},{"functionName":"PVp.visit","ranges":[{"startOffset":53780,"endOffset":54627,"count":0}],"isBlockCoverage":false},{"functionName":"AbortRequest","ranges":[{"startOffset":54650,"endOffset":54679,"count":0}],"isBlockCoverage":false},{"functionName":"PVp.abort","ranges":[{"startOffset":54695,"endOffset":54916,"count":0}],"isBlockCoverage":false},{"functionName":"PVp.reset","ranges":[{"startOffset":54932,"endOffset":54953,"count":0}],"isBlockCoverage":false},{"functionName":"PVp.visitWithoutReset","ranges":[{"startOffset":54981,"endOffset":55587,"count":0}],"isBlockCoverage":false},{"functionName":"visitChildren","ranges":[{"startOffset":55591,"endOffset":56605,"count":0}],"isBlockCoverage":false},{"functionName":"PVp.acquireContext","ranges":[{"startOffset":56629,"endOffset":56800,"count":0}],"isBlockCoverage":false},{"functionName":"PVp.releaseContext","ranges":[{"startOffset":56825,"endOffset":57005,"count":0}],"isBlockCoverage":false},{"functionName":"PVp.reportChanged","ranges":[{"startOffset":57029,"endOffset":57078,"count":0}],"isBlockCoverage":false},{"functionName":"PVp.wasChangeReported","ranges":[{"startOffset":57106,"endOffset":57155,"count":0}],"isBlockCoverage":false},{"functionName":"makeContextConstructor","ranges":[{"startOffset":57159,"endOffset":57959,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":58067,"endOffset":58324,"count":0}],"isBlockCoverage":false},{"functionName":"invokeVisitorMethod","ranges":[{"startOffset":58376,"endOffset":59138,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":59179,"endOffset":59594,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":59632,"endOffset":60047,"count":0}],"isBlockCoverage":false},{"functionName":"reportChanged","ranges":[{"startOffset":60093,"endOffset":60157,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":60195,"endOffset":60280,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60328,"endOffset":60340,"count":1}],"isBlockCoverage":true},{"functionName":"equivPlugin","ranges":[{"startOffset":60344,"endOffset":64292,"count":1}],"isBlockCoverage":true},{"functionName":"astNodesAreEquivalent","ranges":[{"startOffset":60716,"endOffset":60929,"count":0}],"isBlockCoverage":false},{"functionName":"astNodesAreEquivalent.assert","ranges":[{"startOffset":60963,"endOffset":61346,"count":0}],"isBlockCoverage":false},{"functionName":"subscriptForProperty","ranges":[{"startOffset":61350,"endOffset":61527,"count":0}],"isBlockCoverage":false},{"functionName":"areEquivalent","ranges":[{"startOffset":61530,"endOffset":62075,"count":0}],"isBlockCoverage":false},{"functionName":"arraysAreEquivalent","ranges":[{"startOffset":62078,"endOffset":62777,"count":0}],"isBlockCoverage":false},{"functionName":"objectsAreEquivalent","ranges":[{"startOffset":62780,"endOffset":64258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":64315,"endOffset":64327,"count":1}],"isBlockCoverage":true},{"functionName":"fork","ranges":[{"startOffset":64331,"endOffset":65154,"count":1}],"isBlockCoverage":true},{"functionName":"createFork","ranges":[{"startOffset":65155,"endOffset":65470,"count":1}],"isBlockCoverage":true},{"functionName":"use","ranges":[{"startOffset":65225,"endOffset":65431,"count":73},{"startOffset":65304,"endOffset":65399,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":65493,"endOffset":65505,"count":1}],"isBlockCoverage":true},{"functionName":"coreOpsDef","ranges":[{"startOffset":65509,"endOffset":66065,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66088,"endOffset":66100,"count":1}],"isBlockCoverage":true},{"functionName":"es2016OpsDef","ranges":[{"startOffset":66104,"endOffset":66387,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66410,"endOffset":66422,"count":1}],"isBlockCoverage":true},{"functionName":"es2020OpsDef","ranges":[{"startOffset":66426,"endOffset":66610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66633,"endOffset":66645,"count":1}],"isBlockCoverage":true},{"functionName":"es2021OpsDef","ranges":[{"startOffset":66649,"endOffset":66934,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66754,"endOffset":66913,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66957,"endOffset":66969,"count":1}],"isBlockCoverage":true},{"functionName":"coreDef","ranges":[{"startOffset":66973,"endOffset":75100,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":69819,"endOffset":69889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":69931,"endOffset":69994,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74329,"endOffset":74515,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":75123,"endOffset":75135,"count":1}],"isBlockCoverage":true},{"functionName":"es6Def","ranges":[{"startOffset":75139,"endOffset":82182,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":80923,"endOffset":80959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82205,"endOffset":82217,"count":1}],"isBlockCoverage":true},{"functionName":"es2016Def","ranges":[{"startOffset":82221,"endOffset":82295,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82318,"endOffset":82330,"count":1}],"isBlockCoverage":true},{"functionName":"es2017Def","ranges":[{"startOffset":82334,"endOffset":82669,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82692,"endOffset":82704,"count":1}],"isBlockCoverage":true},{"functionName":"es2018Def","ranges":[{"startOffset":82708,"endOffset":83545,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":83568,"endOffset":83580,"count":1}],"isBlockCoverage":true},{"functionName":"es2019Def","ranges":[{"startOffset":83584,"endOffset":83865,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":83888,"endOffset":83900,"count":1}],"isBlockCoverage":true},{"functionName":"es2020Def","ranges":[{"startOffset":83904,"endOffset":85069,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":85092,"endOffset":85104,"count":1}],"isBlockCoverage":true},{"functionName":"es2021Def","ranges":[{"startOffset":85108,"endOffset":85185,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":85208,"endOffset":85220,"count":1}],"isBlockCoverage":true},{"functionName":"es2022Def","ranges":[{"startOffset":85224,"endOffset":85435,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":85458,"endOffset":85470,"count":1}],"isBlockCoverage":true},{"functionName":"esProposalsDef","ranges":[{"startOffset":85474,"endOffset":87219,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":86683,"endOffset":86804,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87242,"endOffset":87254,"count":1}],"isBlockCoverage":true},{"functionName":"jsxDef","ranges":[{"startOffset":87258,"endOffset":90512,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89296,"endOffset":89349,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":89387,"endOffset":89447,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":89490,"endOffset":89549,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":90320,"endOffset":90359,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":90535,"endOffset":90547,"count":1}],"isBlockCoverage":true},{"functionName":"typeAnnotationsDef","ranges":[{"startOffset":90551,"endOffset":91957,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91514,"endOffset":91953,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91980,"endOffset":91992,"count":1}],"isBlockCoverage":true},{"functionName":"flowDef","ranges":[{"startOffset":91996,"endOffset":103272,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":101561,"endOffset":101574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103295,"endOffset":103307,"count":1}],"isBlockCoverage":true},{"functionName":"esprimaDef","ranges":[{"startOffset":103311,"endOffset":104820,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":104843,"endOffset":104855,"count":1}],"isBlockCoverage":true},{"functionName":"babelCoreDef","ranges":[{"startOffset":104859,"endOffset":112340,"count":1}],"isBlockCoverage":true},{"functionName":"makeLiteralExtra","ranges":[{"startOffset":106628,"endOffset":106996,"count":5}],"isBlockCoverage":true},{"functionName":"getDefault","ranges":[{"startOffset":106789,"endOffset":106985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107109,"endOffset":107137,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107429,"endOffset":107447,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107564,"endOffset":107582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107890,"endOffset":107955,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108017,"endOffset":108062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108129,"endOffset":108218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":110573,"endOffset":110799,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110664,"endOffset":110678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":110891,"endOffset":111402,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":112363,"endOffset":112375,"count":1}],"isBlockCoverage":true},{"functionName":"babelDef","ranges":[{"startOffset":112379,"endOffset":112663,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":112686,"endOffset":112698,"count":1}],"isBlockCoverage":true},{"functionName":"typescriptDef","ranges":[{"startOffset":112702,"endOffset":126087,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":112998,"endOffset":113246,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":115186,"endOffset":115254,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":115757,"endOffset":115858,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116511,"endOffset":116707,"count":2}],"isBlockCoverage":true},{"functionName":"getDefault","ranges":[{"startOffset":117961,"endOffset":118013,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":121043,"endOffset":121262,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":126110,"endOffset":126122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":126145,"endOffset":126165,"count":1}],"isBlockCoverage":true},{"functionName":"getLineTerminator","ranges":[{"startOffset":126933,"endOffset":126980,"count":1}],"isBlockCoverage":true},{"functionName":"getOption","ranges":[{"startOffset":126981,"endOffset":127131,"count":0}],"isBlockCoverage":false},{"functionName":"getUnionOfKeys","ranges":[{"startOffset":127132,"endOffset":127423,"count":0}],"isBlockCoverage":false},{"functionName":"comparePos","ranges":[{"startOffset":127424,"endOffset":127520,"count":0}],"isBlockCoverage":false},{"functionName":"copyPos","ranges":[{"startOffset":127521,"endOffset":127605,"count":0}],"isBlockCoverage":false},{"functionName":"composeSourceMaps","ranges":[{"startOffset":127606,"endOffset":128789,"count":0}],"isBlockCoverage":false},{"functionName":"getTrueLoc","ranges":[{"startOffset":128790,"endOffset":129516,"count":0}],"isBlockCoverage":false},{"functionName":"expandLoc","ranges":[{"startOffset":129517,"endOffset":129797,"count":0}],"isBlockCoverage":false},{"functionName":"fixFaultyLocations","ranges":[{"startOffset":129798,"endOffset":131136,"count":0}],"isBlockCoverage":false},{"functionName":"fixForLoopHead","ranges":[{"startOffset":131137,"endOffset":131664,"count":0}],"isBlockCoverage":false},{"functionName":"fixTemplateLiteral","ranges":[{"startOffset":131665,"endOffset":133023,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":133024,"endOffset":133361,"count":0}],"isBlockCoverage":false},{"functionName":"getParentExportDeclaration","ranges":[{"startOffset":133362,"endOffset":133569,"count":0}],"isBlockCoverage":false},{"functionName":"isTrailingCommaEnabled","ranges":[{"startOffset":133570,"endOffset":133780,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":134279,"endOffset":135214,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":134344,"endOffset":134438,"count":20},{"startOffset":134403,"endOffset":134417,"count":18},{"startOffset":134418,"endOffset":134433,"count":2}],"isBlockCoverage":true},{"functionName":"Mapping","ranges":[{"startOffset":135234,"endOffset":135398,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":135401,"endOffset":137377,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":137380,"endOffset":137579,"count":0}],"isBlockCoverage":false},{"functionName":"subtract","ranges":[{"startOffset":137582,"endOffset":137796,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":137799,"endOffset":138729,"count":0}],"isBlockCoverage":false},{"functionName":"addPos","ranges":[{"startOffset":138732,"endOffset":138889,"count":0}],"isBlockCoverage":false},{"functionName":"subtractPos","ranges":[{"startOffset":138890,"endOffset":139065,"count":0}],"isBlockCoverage":false},{"functionName":"skipChars","ranges":[{"startOffset":139066,"endOffset":140472,"count":0}],"isBlockCoverage":false},{"functionName":"__defNormalProp$1","ranges":[{"startOffset":140539,"endOffset":140678,"count":5},{"startOffset":140571,"endOffset":140659,"count":0}],"isBlockCoverage":true},{"functionName":"__publicField$1","ranges":[{"startOffset":140702,"endOffset":140817,"count":5},{"startOffset":140785,"endOffset":140790,"count":0}],"isBlockCoverage":true},{"functionName":"Lines","ranges":[{"startOffset":140835,"endOffset":141355,"count":1},{"startOffset":141206,"endOffset":141351,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":141358,"endOffset":141452,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMap","ranges":[{"startOffset":141455,"endOffset":143169,"count":0}],"isBlockCoverage":false},{"functionName":"bootstrapCharAt","ranges":[{"startOffset":143172,"endOffset":143547,"count":0}],"isBlockCoverage":false},{"functionName":"charAt","ranges":[{"startOffset":143550,"endOffset":144012,"count":0}],"isBlockCoverage":false},{"functionName":"stripMargin","ranges":[{"startOffset":144015,"endOffset":144664,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":144667,"endOffset":145179,"count":0}],"isBlockCoverage":false},{"functionName":"indentTail","ranges":[{"startOffset":145182,"endOffset":145768,"count":0}],"isBlockCoverage":false},{"functionName":"lockIndentTail","ranges":[{"startOffset":145771,"endOffset":145960,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentAt","ranges":[{"startOffset":145963,"endOffset":146039,"count":0}],"isBlockCoverage":false},{"functionName":"guessTabWidth","ranges":[{"startOffset":146042,"endOffset":146883,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithComment","ranges":[{"startOffset":147070,"endOffset":147441,"count":0}],"isBlockCoverage":false},{"functionName":"isOnlyWhitespace","ranges":[{"startOffset":147444,"endOffset":147514,"count":0}],"isBlockCoverage":false},{"functionName":"isPrecededOnlyByWhitespace","ranges":[{"startOffset":147517,"endOffset":147901,"count":0}],"isBlockCoverage":false},{"functionName":"getLineLength","ranges":[{"startOffset":147904,"endOffset":148037,"count":0}],"isBlockCoverage":false},{"functionName":"nextPos","ranges":[{"startOffset":148040,"endOffset":148444,"count":0}],"isBlockCoverage":false},{"functionName":"prevPos","ranges":[{"startOffset":148447,"endOffset":148800,"count":0}],"isBlockCoverage":false},{"functionName":"firstPos","ranges":[{"startOffset":148803,"endOffset":148854,"count":0}],"isBlockCoverage":false},{"functionName":"lastPos","ranges":[{"startOffset":148857,"endOffset":148963,"count":0}],"isBlockCoverage":false},{"functionName":"skipSpaces","ranges":[{"startOffset":148966,"endOffset":149590,"count":0}],"isBlockCoverage":false},{"functionName":"trimLeft","ranges":[{"startOffset":149593,"endOffset":149719,"count":0}],"isBlockCoverage":false},{"functionName":"trimRight","ranges":[{"startOffset":149722,"endOffset":149864,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":149867,"endOffset":150152,"count":0}],"isBlockCoverage":false},{"functionName":"eachPos","ranges":[{"startOffset":150155,"endOffset":150509,"count":0}],"isBlockCoverage":false},{"functionName":"bootstrapSlice","ranges":[{"startOffset":150512,"endOffset":150827,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":150830,"endOffset":151664,"count":0}],"isBlockCoverage":false},{"functionName":"bootstrapSliceString","ranges":[{"startOffset":151667,"endOffset":151767,"count":0}],"isBlockCoverage":false},{"functionName":"sliceString","ranges":[{"startOffset":151770,"endOffset":153110,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":153113,"endOffset":153185,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":153188,"endOffset":154985,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":154988,"endOffset":155101,"count":0}],"isBlockCoverage":false},{"functionName":"countSpaces","ranges":[{"startOffset":155206,"endOffset":155743,"count":1},{"startOffset":155325,"endOffset":155725,"count":0}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":155859,"endOffset":156725,"count":1},{"startOffset":155933,"endOffset":155947,"count":0},{"startOffset":155991,"endOffset":156010,"count":0},{"startOffset":156192,"endOffset":156223,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":156294,"endOffset":156608,"count":1}],"isBlockCoverage":true},{"functionName":"isOnlyWhitespace","ranges":[{"startOffset":156726,"endOffset":156792,"count":0}],"isBlockCoverage":false},{"functionName":"sliceInfo","ranges":[{"startOffset":156793,"endOffset":157760,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":157761,"endOffset":157826,"count":0}],"isBlockCoverage":false},{"functionName":"getSortedChildNodes","ranges":[{"startOffset":158022,"endOffset":159078,"count":0}],"isBlockCoverage":false},{"functionName":"decorateComment","ranges":[{"startOffset":159079,"endOffset":160107,"count":0}],"isBlockCoverage":false},{"functionName":"attach","ranges":[{"startOffset":160108,"endOffset":161299,"count":0}],"isBlockCoverage":false},{"functionName":"breakTies","ranges":[{"startOffset":161300,"endOffset":162683,"count":0}],"isBlockCoverage":false},{"functionName":"addCommentHelper","ranges":[{"startOffset":162684,"endOffset":162812,"count":0}],"isBlockCoverage":false},{"functionName":"addLeadingComment","ranges":[{"startOffset":162813,"endOffset":162947,"count":0}],"isBlockCoverage":false},{"functionName":"addDanglingComment","ranges":[{"startOffset":162948,"endOffset":163084,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailingComment","ranges":[{"startOffset":163085,"endOffset":163220,"count":0}],"isBlockCoverage":false},{"functionName":"printLeadingComment","ranges":[{"startOffset":163221,"endOffset":163857,"count":0}],"isBlockCoverage":false},{"functionName":"printTrailingComment","ranges":[{"startOffset":163858,"endOffset":164452,"count":0}],"isBlockCoverage":false},{"functionName":"printComments","ranges":[{"startOffset":164453,"endOffset":165364,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":165468,"endOffset":167320,"count":0}],"isBlockCoverage":false},{"functionName":"TreeCopier2","ranges":[{"startOffset":167340,"endOffset":167551,"count":0}],"isBlockCoverage":false},{"functionName":"TCp.copy","ranges":[{"startOffset":167598,"endOffset":169259,"count":0}],"isBlockCoverage":false},{"functionName":"TCp.findTokenRange","ranges":[{"startOffset":169282,"endOffset":170219,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":170555,"endOffset":170636,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":170590,"endOffset":170632,"count":25}],"isBlockCoverage":true},{"functionName":"FastPath2","ranges":[{"startOffset":170656,"endOffset":170709,"count":0}],"isBlockCoverage":false},{"functionName":"FastPath.from","ranges":[{"startOffset":170759,"endOffset":171124,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":171137,"endOffset":171260,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":171276,"endOffset":171405,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":171422,"endOffset":171495,"count":0}],"isBlockCoverage":false},{"functionName":"FPp.valueIsDuplicate","ranges":[{"startOffset":171520,"endOffset":171653,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeHelper","ranges":[{"startOffset":171655,"endOffset":171880,"count":0}],"isBlockCoverage":false},{"functionName":"getNode","ranges":[{"startOffset":171895,"endOffset":171965,"count":0}],"isBlockCoverage":false},{"functionName":"getParentNode","ranges":[{"startOffset":171987,"endOffset":172067,"count":0}],"isBlockCoverage":false},{"functionName":"getRootValue","ranges":[{"startOffset":172088,"endOffset":172203,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":172216,"endOffset":172550,"count":0}],"isBlockCoverage":false},{"functionName":"each","ranges":[{"startOffset":172563,"endOffset":172992,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":173004,"endOffset":173506,"count":0}],"isBlockCoverage":false},{"functionName":"FPp.hasParens","ranges":[{"startOffset":173524,"endOffset":174033,"count":0}],"isBlockCoverage":false},{"functionName":"FPp.getPrevToken","ranges":[{"startOffset":174054,"endOffset":174439,"count":0}],"isBlockCoverage":false},{"functionName":"FPp.getNextToken","ranges":[{"startOffset":174460,"endOffset":174845,"count":0}],"isBlockCoverage":false},{"functionName":"FPp.needsParens","ranges":[{"startOffset":174865,"endOffset":179463,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":179465,"endOffset":179568,"count":0}],"isBlockCoverage":false},{"functionName":"containsCallExpression","ranges":[{"startOffset":179569,"endOffset":179893,"count":0}],"isBlockCoverage":false},{"functionName":"FPp.canBeFirstInStatement","ranges":[{"startOffset":179922,"endOffset":180169,"count":0}],"isBlockCoverage":false},{"functionName":"FPp.firstInStatement","ranges":[{"startOffset":180194,"endOffset":181544,"count":0}],"isBlockCoverage":false},{"functionName":"Patcher2","ranges":[{"startOffset":181916,"endOffset":182827,"count":0}],"isBlockCoverage":false},{"functionName":"Pp.tryToReprintComments","ranges":[{"startOffset":182885,"endOffset":183765,"count":0}],"isBlockCoverage":false},{"functionName":"getSurroundingComments","ranges":[{"startOffset":183767,"endOffset":184042,"count":0}],"isBlockCoverage":false},{"functionName":"Pp.deleteComments","ranges":[{"startOffset":184063,"endOffset":184606,"count":0}],"isBlockCoverage":false},{"functionName":"getReprinter","ranges":[{"startOffset":184608,"endOffset":186552,"count":0}],"isBlockCoverage":false},{"functionName":"needsLeadingSpace","ranges":[{"startOffset":186553,"endOffset":186954,"count":0}],"isBlockCoverage":false},{"functionName":"needsTrailingSpace","ranges":[{"startOffset":186955,"endOffset":187324,"count":0}],"isBlockCoverage":false},{"functionName":"findReprints","ranges":[{"startOffset":187325,"endOffset":187742,"count":0}],"isBlockCoverage":false},{"functionName":"findAnyReprints","ranges":[{"startOffset":187743,"endOffset":188115,"count":0}],"isBlockCoverage":false},{"functionName":"findArrayReprints","ranges":[{"startOffset":188116,"endOffset":188804,"count":0}],"isBlockCoverage":false},{"functionName":"findObjectReprints","ranges":[{"startOffset":188805,"endOffset":190601,"count":0}],"isBlockCoverage":false},{"functionName":"findChildReprints","ranges":[{"startOffset":190602,"endOffset":191631,"count":0}],"isBlockCoverage":false},{"functionName":"PrintResult2","ranges":[{"startOffset":191762,"endOffset":191930,"count":1},{"startOffset":191865,"endOffset":191928,"count":0}],"isBlockCoverage":true},{"functionName":"PRp.toString","ranges":[{"startOffset":192015,"endOffset":192329,"count":0}],"isBlockCoverage":false},{"functionName":"Printer2","ranges":[{"startOffset":192393,"endOffset":195082,"count":0}],"isBlockCoverage":false},{"functionName":"genericPrint","ranges":[{"startOffset":195084,"endOffset":195774,"count":0}],"isBlockCoverage":false},{"functionName":"genericPrintNoParens","ranges":[{"startOffset":195775,"endOffset":251908,"count":0}],"isBlockCoverage":false},{"functionName":"printDecorators","ranges":[{"startOffset":251909,"endOffset":252594,"count":0}],"isBlockCoverage":false},{"functionName":"printStatementSequence","ranges":[{"startOffset":252595,"endOffset":254621,"count":0}],"isBlockCoverage":false},{"functionName":"maxSpace","ranges":[{"startOffset":254622,"endOffset":254965,"count":0}],"isBlockCoverage":false},{"functionName":"printClassMemberModifiers","ranges":[{"startOffset":254966,"endOffset":255441,"count":0}],"isBlockCoverage":false},{"functionName":"printMethod","ranges":[{"startOffset":255442,"endOffset":256809,"count":0}],"isBlockCoverage":false},{"functionName":"printArgumentsList","ranges":[{"startOffset":256810,"endOffset":257287,"count":0}],"isBlockCoverage":false},{"functionName":"printFunctionParams","ranges":[{"startOffset":257288,"endOffset":258415,"count":0}],"isBlockCoverage":false},{"functionName":"maybePrintImportAssertions","ranges":[{"startOffset":258416,"endOffset":258991,"count":0}],"isBlockCoverage":false},{"functionName":"printExportDeclaration","ranges":[{"startOffset":258992,"endOffset":261719,"count":0}],"isBlockCoverage":false},{"functionName":"printFlowDeclaration","ranges":[{"startOffset":261720,"endOffset":261919,"count":0}],"isBlockCoverage":false},{"functionName":"printVariance","ranges":[{"startOffset":261920,"endOffset":262289,"count":0}],"isBlockCoverage":false},{"functionName":"adjustClause","ranges":[{"startOffset":262290,"endOffset":262468,"count":0}],"isBlockCoverage":false},{"functionName":"lastNonSpaceCharacter","ranges":[{"startOffset":262469,"endOffset":262654,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithBrace","ranges":[{"startOffset":262655,"endOffset":262735,"count":0}],"isBlockCoverage":false},{"functionName":"swapQuotes","ranges":[{"startOffset":262736,"endOffset":262825,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleRaw","ranges":[{"startOffset":262826,"endOffset":263190,"count":0}],"isBlockCoverage":false},{"functionName":"jsSafeStringify","ranges":[{"startOffset":263191,"endOffset":263349,"count":0}],"isBlockCoverage":false},{"functionName":"nodeStr","ranges":[{"startOffset":263350,"endOffset":263781,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAddSemicolon","ranges":[{"startOffset":263782,"endOffset":263951,"count":0}],"isBlockCoverage":false},{"functionName":"print","ranges":[{"startOffset":263953,"endOffset":264029,"count":0}],"isBlockCoverage":false},{"functionName":"getBabelParser","ranges":[{"startOffset":264049,"endOffset":264349,"count":0}],"isBlockCoverage":false},{"functionName":"_getBabelOptions","ranges":[{"startOffset":264350,"endOffset":265427,"count":0}],"isBlockCoverage":false},{"functionName":"__defNormalProp","ranges":[{"startOffset":265490,"endOffset":265627,"count":0}],"isBlockCoverage":false},{"functionName":"__publicField","ranges":[{"startOffset":265649,"endOffset":265762,"count":0}],"isBlockCoverage":false},{"functionName":"MagicastError","ranges":[{"startOffset":265802,"endOffset":266676,"count":0}],"isBlockCoverage":false},{"functionName":"isValidPropName","ranges":[{"startOffset":267010,"endOffset":267086,"count":0}],"isBlockCoverage":false},{"functionName":"literalToAst","ranges":[{"startOffset":267125,"endOffset":268802,"count":0}],"isBlockCoverage":false},{"functionName":"makeProxyUtils","ranges":[{"startOffset":268803,"endOffset":268968,"count":0}],"isBlockCoverage":false},{"functionName":"createProxy","ranges":[{"startOffset":269042,"endOffset":269991,"count":0}],"isBlockCoverage":false},{"functionName":"creatImportProxy","ranges":[{"startOffset":270074,"endOffset":272261,"count":0}],"isBlockCoverage":false},{"functionName":"createImportsProxy","ranges":[{"startOffset":272262,"endOffset":275261,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyArrayElements","ranges":[{"startOffset":275263,"endOffset":277671,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyArray","ranges":[{"startOffset":277672,"endOffset":277819,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyFunctionCall","ranges":[{"startOffset":277821,"endOffset":278519,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyArrowFunctionExpression","ranges":[{"startOffset":278521,"endOffset":278933,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyObject","ranges":[{"startOffset":278959,"endOffset":281631,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyNewExpression","ranges":[{"startOffset":281633,"endOffset":282333,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyIdentifier","ranges":[{"startOffset":282335,"endOffset":282568,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyLogicalExpression","ranges":[{"startOffset":282570,"endOffset":282807,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyMemberExpression","ranges":[{"startOffset":282809,"endOffset":283042,"count":0}],"isBlockCoverage":false},{"functionName":"proxify","ranges":[{"startOffset":283090,"endOffset":284422,"count":0}],"isBlockCoverage":false},{"functionName":"createExportsProxy","ranges":[{"startOffset":284448,"endOffset":287306,"count":0}],"isBlockCoverage":false},{"functionName":"proxifyModule","ranges":[{"startOffset":287308,"endOffset":287819,"count":0}],"isBlockCoverage":false},{"functionName":"detectCodeFormat","ranges":[{"startOffset":287821,"endOffset":290514,"count":0}],"isBlockCoverage":false},{"functionName":"parseModule","ranges":[{"startOffset":290516,"endOffset":290690,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":290691,"endOffset":291149,"count":0}],"isBlockCoverage":false},{"functionName":"generateCode","ranges":[{"startOffset":291150,"endOffset":291456,"count":0}],"isBlockCoverage":false},{"functionName":"loadFile","ranges":[{"startOffset":291457,"endOffset":291674,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":291675,"endOffset":291944,"count":0}],"isBlockCoverage":false},{"functionName":"functionCall","ranges":[{"startOffset":292035,"endOffset":292217,"count":0}],"isBlockCoverage":false},{"functionName":"newExpression","ranges":[{"startOffset":292268,"endOffset":292451,"count":0}],"isBlockCoverage":false},{"functionName":"literal","ranges":[{"startOffset":292519,"endOffset":292571,"count":0}],"isBlockCoverage":false},{"functionName":"raw","ranges":[{"startOffset":292755,"endOffset":292804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"437","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28,"count":1}],"isBlockCoverage":true}]},{"scriptId":"438","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27,"count":1}],"isBlockCoverage":true}]},{"scriptId":"439","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19,"count":1}],"isBlockCoverage":true}]},{"scriptId":"440","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22315,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":113,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":590,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":913,"endOffset":1489,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":1490,"endOffset":1687,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":1688,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":1872,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":1994,"endOffset":2061,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":2634,"endOffset":3056,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":3057,"endOffset":3256,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":3257,"endOffset":3443,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":3444,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":3750,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"buildBySources","ranges":[{"startOffset":4597,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":5919,"endOffset":6073,"count":0}],"isBlockCoverage":false},{"functionName":"buildNullArray","ranges":[{"startOffset":6507,"endOffset":6568,"count":0}],"isBlockCoverage":false},{"functionName":"AnyMap","ranges":[{"startOffset":6585,"endOffset":7175,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7177,"endOffset":7260,"count":0}],"isBlockCoverage":false},{"functionName":"recurse","ranges":[{"startOffset":7261,"endOffset":8140,"count":0}],"isBlockCoverage":false},{"functionName":"addSection","ranges":[{"startOffset":8141,"endOffset":10828,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":10829,"endOffset":10931,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":10932,"endOffset":11054,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":11317,"endOffset":12467,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":12611,"endOffset":12649,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMappings","ranges":[{"startOffset":12734,"endOffset":12914,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMappings","ranges":[{"startOffset":13015,"endOffset":13146,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegment","ranges":[{"startOffset":13330,"endOffset":13824,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":14049,"endOffset":15105,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPositionFor","ranges":[{"startOffset":15210,"endOffset":15401,"count":0}],"isBlockCoverage":false},{"functionName":"allGeneratedPositionsFor","ranges":[{"startOffset":15507,"endOffset":15782,"count":0}],"isBlockCoverage":false},{"functionName":"eachMapping","ranges":[{"startOffset":15845,"endOffset":16823,"count":0}],"isBlockCoverage":false},{"functionName":"sourceIndex","ranges":[{"startOffset":16824,"endOffset":17037,"count":0}],"isBlockCoverage":false},{"functionName":"sourceContentFor","ranges":[{"startOffset":17138,"endOffset":17369,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":17445,"endOffset":17668,"count":0}],"isBlockCoverage":false},{"functionName":"presortedDecodedMap","ranges":[{"startOffset":17786,"endOffset":17949,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMap","ranges":[{"startOffset":18097,"endOffset":18170,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMap","ranges":[{"startOffset":18318,"endOffset":18391,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":18392,"endOffset":18716,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":18717,"endOffset":18809,"count":0}],"isBlockCoverage":false},{"functionName":"GMapping","ranges":[{"startOffset":18810,"endOffset":18874,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":18875,"endOffset":19278,"count":0}],"isBlockCoverage":false},{"functionName":"sliceGeneratedPositions","ranges":[{"startOffset":19279,"endOffset":20836,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPosition","ranges":[{"startOffset":20837,"endOffset":21996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/gen-mapping/dist/gen-mapping.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9129,"count":1}],"isBlockCoverage":true},{"functionName":"GenMapping","ranges":[{"startOffset":402,"endOffset":697,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":841,"endOffset":879,"count":0}],"isBlockCoverage":false},{"functionName":"addSegment","ranges":[{"startOffset":880,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"addMapping","ranges":[{"startOffset":1090,"endOffset":1179,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAddSegment","ranges":[{"startOffset":1491,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAddMapping","ranges":[{"startOffset":1996,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceContent","ranges":[{"startOffset":2144,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"setIgnore","ranges":[{"startOffset":2351,"endOffset":2715,"count":0}],"isBlockCoverage":false},{"functionName":"toDecodedMap","ranges":[{"startOffset":2863,"endOffset":3336,"count":0}],"isBlockCoverage":false},{"functionName":"toEncodedMap","ranges":[{"startOffset":3484,"endOffset":3647,"count":0}],"isBlockCoverage":false},{"functionName":"fromMap","ranges":[{"startOffset":3737,"endOffset":4193,"count":0}],"isBlockCoverage":false},{"functionName":"allMappings","ranges":[{"startOffset":4339,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"addSegmentInternal","ranges":[{"startOffset":5291,"endOffset":6308,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":6309,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"getColumnIndex","ranges":[{"startOffset":6460,"endOffset":6702,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":6703,"endOffset":6857,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmptyFinalLines","ranges":[{"startOffset":6858,"endOffset":7121,"count":0}],"isBlockCoverage":false},{"functionName":"putAll","ranges":[{"startOffset":7122,"endOffset":7230,"count":0}],"isBlockCoverage":false},{"functionName":"skipSourceless","ranges":[{"startOffset":7231,"endOffset":7770,"count":0}],"isBlockCoverage":false},{"functionName":"skipSource","ranges":[{"startOffset":7771,"endOffset":8516,"count":0}],"isBlockCoverage":false},{"functionName":"addMappingInternal","ranges":[{"startOffset":8517,"endOffset":8926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/set-array/dist/set-array.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2028,"count":1}],"isBlockCoverage":true},{"functionName":"SetArray","ranges":[{"startOffset":404,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":639,"endOffset":677,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":774,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"put","ranges":[{"startOffset":975,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":1355,"endOffset":1539,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":1593,"endOffset":1943,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8609,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":912,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":982,"endOffset":1056,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":1057,"endOffset":1125,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":1126,"endOffset":1193,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":1194,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":1258,"endOffset":1455,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":1456,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":1684,"endOffset":1902,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":1903,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":2792,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":3108,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":3683,"endOffset":6079,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":6148,"endOffset":8535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/ascii.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16651,"count":1}],"isBlockCoverage":true},{"functionName":"emitForest","ranges":[{"startOffset":117,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"emitForestLines","ranges":[{"startOffset":227,"endOffset":417,"count":0}],"isBlockCoverage":false},{"functionName":"getColMap","ranges":[{"startOffset":461,"endOffset":1221,"count":0}],"isBlockCoverage":false},{"functionName":"emitTree","ranges":[{"startOffset":1222,"endOffset":1644,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionRanges","ranges":[{"startOffset":1645,"endOffset":1935,"count":0}],"isBlockCoverage":false},{"functionName":"emitTreeLayer","ranges":[{"startOffset":2062,"endOffset":2487,"count":0}],"isBlockCoverage":false},{"functionName":"parseTreeLayer","ranges":[{"startOffset":2488,"endOffset":3181,"count":0}],"isBlockCoverage":false},{"functionName":"emitRange","ranges":[{"startOffset":3182,"endOffset":3465,"count":0}],"isBlockCoverage":false},{"functionName":"emitOffsets","ranges":[{"startOffset":3466,"endOffset":3711,"count":0}],"isBlockCoverage":false},{"functionName":"parseOffsets","ranges":[{"startOffset":3712,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3762,"count":1}],"isBlockCoverage":true},{"functionName":"compareScriptCovs","ranges":[{"startOffset":208,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"compareFunctionCovs","ranges":[{"startOffset":544,"endOffset":637,"count":0}],"isBlockCoverage":false},{"functionName":"compareRangeCovs","ranges":[{"startOffset":882,"endOffset":1071,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5711,"count":1}],"isBlockCoverage":true},{"functionName":"cloneProcessCov","ranges":[{"startOffset":218,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"cloneScriptCov","ranges":[{"startOffset":601,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"cloneFunctionCov","ranges":[{"startOffset":1071,"endOffset":1375,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRangeCov","ranges":[{"startOffset":1557,"endOffset":1726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36320,"count":1}],"isBlockCoverage":true},{"functionName":"mergeProcessCovs","ranges":[{"startOffset":473,"endOffset":1253,"count":0}],"isBlockCoverage":false},{"functionName":"mergeScriptCovs","ranges":[{"startOffset":1708,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyFunctionRootRange","ranges":[{"startOffset":3750,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"mergeFunctionCovs","ranges":[{"startOffset":4354,"endOffset":5256,"count":0}],"isBlockCoverage":false},{"functionName":"mergeRangeTrees","ranges":[{"startOffset":5370,"endOffset":5711,"count":0}],"isBlockCoverage":false},{"functionName":"RangeTreeWithParent","ranges":[{"startOffset":5744,"endOffset":5848,"count":0}],"isBlockCoverage":false},{"functionName":"StartEvent","ranges":[{"startOffset":5874,"endOffset":5966,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5978,"endOffset":6035,"count":0}],"isBlockCoverage":false},{"functionName":"StartEventQueue","ranges":[{"startOffset":6066,"endOffset":6219,"count":0}],"isBlockCoverage":false},{"functionName":"fromParentTrees","ranges":[{"startOffset":6231,"endOffset":6980,"count":0}],"isBlockCoverage":false},{"functionName":"setPendingOffset","ranges":[{"startOffset":6985,"endOffset":7054,"count":0}],"isBlockCoverage":false},{"functionName":"pushPendingTree","ranges":[{"startOffset":7059,"endOffset":7219,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":7224,"endOffset":8196,"count":0}],"isBlockCoverage":false},{"functionName":"mergeRangeTreeChildren","ranges":[{"startOffset":8199,"endOffset":9658,"count":0}],"isBlockCoverage":false},{"functionName":"insertChild","ranges":[{"startOffset":9659,"endOffset":9899,"count":0}],"isBlockCoverage":false},{"functionName":"nextChild","ranges":[{"startOffset":9900,"endOffset":10398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/normalize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7645,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeProcessCov","ranges":[{"startOffset":470,"endOffset":700,"count":0}],"isBlockCoverage":false},{"functionName":"deepNormalizeProcessCov","ranges":[{"startOffset":950,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeScriptCov","ranges":[{"startOffset":1395,"endOffset":1498,"count":0}],"isBlockCoverage":false},{"functionName":"deepNormalizeScriptCov","ranges":[{"startOffset":1744,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFunctionCov","ranges":[{"startOffset":2163,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeRangeTree","ranges":[{"startOffset":2475,"endOffset":2534,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/range-tree.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15968,"count":1}],"isBlockCoverage":true},{"functionName":"RangeTree","ranges":[{"startOffset":99,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"fromSortedRanges","ranges":[{"startOffset":355,"endOffset":1328,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1333,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"split","ranges":[{"startOffset":2934,"endOffset":3830,"count":0}],"isBlockCoverage":false},{"functionName":"toRanges","ranges":[{"startOffset":3956,"endOffset":4465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4021,"count":1}],"isBlockCoverage":true},{"functionName":"defaultSourceLookup","ranges":[{"startOffset":397,"endOffset":593,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeWatermarks","ranges":[{"startOffset":595,"endOffset":895,"count":0}],"isBlockCoverage":false},{"functionName":"Context","ranges":[{"startOffset":1419,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"getWriter","ranges":[{"startOffset":1950,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":2251,"endOffset":2322,"count":0}],"isBlockCoverage":false},{"functionName":"classForPercent","ranges":[{"startOffset":2656,"endOffset":2982,"count":0}],"isBlockCoverage":false},{"functionName":"getXMLWriter","ranges":[{"startOffset":3209,"endOffset":3289,"count":0}],"isBlockCoverage":false},{"functionName":"getVisitor","ranges":[{"startOffset":3582,"endOffset":3665,"count":0}],"isBlockCoverage":false},{"functionName":"getTree","ranges":[{"startOffset":3671,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3843,"endOffset":3989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/lib/file-writer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4943,"count":1}],"isBlockCoverage":true},{"functionName":"colorize","ranges":[{"startOffset":801,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"println","ranges":[{"startOffset":989,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1146,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"FileContentWriter","ranges":[{"startOffset":1348,"endOffset":1411,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":1417,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1477,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":1753,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"colorize","ranges":[{"startOffset":1893,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"FileWriter","ranges":[{"startOffset":2460,"endOffset":2612,"count":0}],"isBlockCoverage":false},{"functionName":"startCapture","ranges":[{"startOffset":2730,"endOffset":2776,"count":0}],"isBlockCoverage":false},{"functionName":"stopCapture","ranges":[{"startOffset":2789,"endOffset":2835,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":2848,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":2903,"endOffset":2945,"count":0}],"isBlockCoverage":false},{"functionName":"writerForDir","ranges":[{"startOffset":3167,"endOffset":3423,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":3786,"endOffset":4258,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4522,"endOffset":4910,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/node_modules/make-dir/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3069,"count":1}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":340,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"processOptions","ranges":[{"startOffset":667,"endOffset":768,"count":0}],"isBlockCoverage":false},{"functionName":"permissionError","ranges":[{"startOffset":795,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"makeDir","ranges":[{"startOffset":1128,"endOffset":2132,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":2184,"endOffset":3067,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":1}],"isBlockCoverage":true}]},{"scriptId":"454","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":1}],"isBlockCoverage":true}]},{"scriptId":"455","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8751,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":311,"endOffset":2238,"count":2},{"startOffset":416,"endOffset":621,"count":0},{"startOffset":660,"endOffset":761,"count":0},{"startOffset":800,"endOffset":900,"count":0},{"startOffset":1239,"endOffset":1252,"count":0},{"startOffset":1280,"endOffset":1344,"count":0},{"startOffset":1531,"endOffset":1589,"count":0},{"startOffset":1648,"endOffset":1706,"count":0},{"startOffset":1765,"endOffset":1823,"count":0},{"startOffset":1918,"endOffset":2170,"count":0},{"startOffset":2194,"endOffset":2211,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1970,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2242,"endOffset":2438,"count":2},{"startOffset":2349,"endOffset":2410,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2442,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2487,"endOffset":2877,"count":1},{"startOffset":2604,"endOffset":2747,"count":0},{"startOffset":2789,"endOffset":2811,"count":0},{"startOffset":2848,"endOffset":2873,"count":0}],"isBlockCoverage":true},{"functionName":"compareMain","ranges":[{"startOffset":2881,"endOffset":3172,"count":1},{"startOffset":2939,"endOffset":2992,"count":0},{"startOffset":3057,"endOffset":3109,"count":0},{"startOffset":3110,"endOffset":3162,"count":0}],"isBlockCoverage":true},{"functionName":"comparePre","ranges":[{"startOffset":3176,"endOffset":4027,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4031,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4721,"endOffset":8723,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":46}],"isBlockCoverage":true}]},{"scriptId":"457","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":859,"count":1},{"startOffset":233,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"458","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7937,"count":1}],"isBlockCoverage":true},{"functionName":"makeSafeRegex","ranges":[{"startOffset":950,"endOffset":1161,"count":43},{"startOffset":1015,"endOffset":1144,"count":129}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1183,"endOffset":1459,"count":43},{"startOffset":1376,"endOffset":1381,"count":5},{"startOffset":1382,"endOffset":1393,"count":38},{"startOffset":1439,"endOffset":1444,"count":5},{"startOffset":1445,"endOffset":1456,"count":38}],"isBlockCoverage":true}]},{"scriptId":"459","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":324,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":153,"endOffset":293,"count":2},{"startOffset":208,"endOffset":292,"count":0}],"isBlockCoverage":true}]},{"scriptId":"460","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":1},{"startOffset":195,"endOffset":198,"count":0},{"startOffset":221,"endOffset":225,"count":0},{"startOffset":248,"endOffset":251,"count":0},{"startOffset":264,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/lib/xml-writer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2415,"count":1}],"isBlockCoverage":true},{"functionName":"attrString","ranges":[{"startOffset":169,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"XMLWriter","ranges":[{"startOffset":485,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":583,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"openTag","ranges":[{"startOffset":849,"endOffset":1004,"count":0}],"isBlockCoverage":false},{"functionName":"closeTag","ranges":[{"startOffset":1185,"endOffset":1619,"count":0}],"isBlockCoverage":false},{"functionName":"inlineTag","ranges":[{"startOffset":1876,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"closeAll","ranges":[{"startOffset":2218,"endOffset":2383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/lib/tree.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3809,"count":1}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":1077,"endOffset":1140,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1205,"endOffset":1218,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1233,"endOffset":1521,"count":5}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":1336,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"CompositeVisitor","ranges":[{"startOffset":1570,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1938,"endOffset":1951,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1966,"endOffset":2207,"count":5}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2050,"endOffset":2189,"count":0}],"isBlockCoverage":false},{"functionName":"isRoot","ranges":[{"startOffset":2232,"endOffset":2282,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":2619,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"BaseTree","ranges":[{"startOffset":3077,"endOffset":3128,"count":0}],"isBlockCoverage":false},{"functionName":"getRoot","ranges":[{"startOffset":3191,"endOffset":3234,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":3453,"endOffset":3721,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/lib/watermarks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":349,"count":1}],"isBlockCoverage":true},{"functionName":"getDefault","ranges":[{"startOffset":170,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/lib/summarizer-factory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7356,"count":1}],"isBlockCoverage":true},{"functionName":"ReportNode","ranges":[{"startOffset":322,"endOffset":503,"count":0}],"isBlockCoverage":false},{"functionName":"createRoot","ranges":[{"startOffset":516,"endOffset":700,"count":0}],"isBlockCoverage":false},{"functionName":"addChild","ranges":[{"startOffset":706,"endOffset":793,"count":0}],"isBlockCoverage":false},{"functionName":"asRelative","ranges":[{"startOffset":799,"endOffset":924,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedName","ranges":[{"startOffset":930,"endOffset":1010,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativeName","ranges":[{"startOffset":1016,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"getParent","ranges":[{"startOffset":1542,"endOffset":1589,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":1595,"endOffset":1646,"count":0}],"isBlockCoverage":false},{"functionName":"isSummary","ranges":[{"startOffset":1652,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"getFileCoverage","ranges":[{"startOffset":1712,"endOffset":1771,"count":0}],"isBlockCoverage":false},{"functionName":"getCoverageSummary","ranges":[{"startOffset":1777,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"ReportTree","ranges":[{"startOffset":2671,"endOffset":3399,"count":0}],"isBlockCoverage":false},{"functionName":"findCommonParent","ranges":[{"startOffset":3403,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"findOrCreateParent","ranges":[{"startOffset":3563,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"toDirParents","ranges":[{"startOffset":3863,"endOffset":4137,"count":0}],"isBlockCoverage":false},{"functionName":"addAllPaths","ranges":[{"startOffset":4139,"endOffset":4536,"count":0}],"isBlockCoverage":false},{"functionName":"foldIntoOneDir","ranges":[{"startOffset":4538,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"pkgSummaryPrefix","ranges":[{"startOffset":4858,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"SummarizerFactory","ranges":[{"startOffset":5123,"endOffset":5771,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultSummarizer","ranges":[{"startOffset":5777,"endOffset":5854,"count":0}],"isBlockCoverage":false},{"functionName":"get flat","ranges":[{"startOffset":5860,"endOffset":6198,"count":0}],"isBlockCoverage":false},{"functionName":"_createPkg","ranges":[{"startOffset":6204,"endOffset":6534,"count":0}],"isBlockCoverage":false},{"functionName":"get pkg","ranges":[{"startOffset":6540,"endOffset":6663,"count":0}],"isBlockCoverage":false},{"functionName":"_createNested","ranges":[{"startOffset":6669,"endOffset":7172,"count":0}],"isBlockCoverage":false},{"functionName":"get nested","ranges":[{"startOffset":7178,"endOffset":7316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-coverage/lib/file-coverage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14049,"count":1}],"isBlockCoverage":true},{"functionName":"emptyCoverage","ranges":[{"startOffset":355,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidObject","ranges":[{"startOffset":678,"endOffset":1059,"count":0}],"isBlockCoverage":false},{"functionName":"keyFromLoc","ranges":[{"startOffset":1080,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"isObj","ranges":[{"startOffset":1178,"endOffset":1211,"count":0}],"isBlockCoverage":false},{"functionName":"isLineCol","ranges":[{"startOffset":1231,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"isLoc","ranges":[{"startOffset":1326,"endOffset":1381,"count":0}],"isBlockCoverage":false},{"functionName":"getLoc","ranges":[{"startOffset":1398,"endOffset":1447,"count":0}],"isBlockCoverage":false},{"functionName":"findNearestContainer","ranges":[{"startOffset":1803,"endOffset":3815,"count":0}],"isBlockCoverage":false},{"functionName":"addHits","ranges":[{"startOffset":3899,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"addNearestContainerHits","ranges":[{"startOffset":4201,"endOffset":4412,"count":0}],"isBlockCoverage":false},{"functionName":"mergeProp","ranges":[{"startOffset":4433,"endOffset":6032,"count":0}],"isBlockCoverage":false},{"functionName":"FileCoverage","ranges":[{"startOffset":6870,"endOffset":7502,"count":0}],"isBlockCoverage":false},{"functionName":"getLineCoverage","ranges":[{"startOffset":7652,"endOffset":8259,"count":0}],"isBlockCoverage":false},{"functionName":"getUncoveredLines","ranges":[{"startOffset":8428,"endOffset":8679,"count":0}],"isBlockCoverage":false},{"functionName":"getBranchCoverageByLine","ranges":[{"startOffset":8903,"endOffset":9661,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":9752,"endOffset":9794,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":10066,"endOffset":11443,"count":0}],"isBlockCoverage":false},{"functionName":"computeSimpleTotals","ranges":[{"startOffset":11449,"endOffset":11855,"count":0}],"isBlockCoverage":false},{"functionName":"computeBranchTotals","ranges":[{"startOffset":11861,"endOffset":12240,"count":0}],"isBlockCoverage":false},{"functionName":"resetHits","ranges":[{"startOffset":12389,"endOffset":13071,"count":0}],"isBlockCoverage":false},{"functionName":"toSummary","ranges":[{"startOffset":13190,"endOffset":13730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-coverage/lib/percent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":367,"count":1}],"isBlockCoverage":true},{"functionName":"percent","ranges":[{"startOffset":165,"endOffset":365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-coverage/lib/data-properties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":283,"count":1}],"isBlockCoverage":true},{"functionName":"dataProperties","ranges":[{"startOffset":32,"endOffset":281,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100,"endOffset":277,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":201,"endOffset":259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-coverage/lib/coverage-summary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2811,"count":1}],"isBlockCoverage":true},{"functionName":"blankSummary","ranges":[{"startOffset":240,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidSummary","ranges":[{"startOffset":613,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"CoverageSummary","ranges":[{"startOffset":1413,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1832,"endOffset":2351,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2472,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":2587,"endOffset":2643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-coverage/lib/coverage-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3478,"count":1}],"isBlockCoverage":true},{"functionName":"maybeConstruct","ranges":[{"startOffset":261,"endOffset":386,"count":0}],"isBlockCoverage":false},{"functionName":"loadMap","ranges":[{"startOffset":388,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"CoverageMap","ranges":[{"startOffset":923,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1346,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":1761,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2035,"endOffset":2077,"count":0}],"isBlockCoverage":false},{"functionName":"files","ranges":[{"startOffset":2219,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"fileCoverageFor","ranges":[{"startOffset":2411,"endOffset":2596,"count":0}],"isBlockCoverage":false},{"functionName":"addFileCoverage","ranges":[{"startOffset":2873,"endOffset":3105,"count":0}],"isBlockCoverage":false},{"functionName":"getCoverageSummary","ranges":[{"startOffset":3244,"endOffset":3436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/lib/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3709,"count":1}],"isBlockCoverage":true},{"functionName":"makeRelativeNormalizedPath","ranges":[{"startOffset":278,"endOffset":1160,"count":0}],"isBlockCoverage":false},{"functionName":"Path","ranges":[{"startOffset":1179,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1558,"endOffset":1609,"count":0}],"isBlockCoverage":false},{"functionName":"hasParent","ranges":[{"startOffset":1615,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"parent","ranges":[{"startOffset":1674,"endOffset":1881,"count":0}],"isBlockCoverage":false},{"functionName":"elements","ranges":[{"startOffset":1887,"endOffset":1936,"count":0}],"isBlockCoverage":false},{"functionName":"name","ranges":[{"startOffset":1942,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":1998,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"ancestorOf","ranges":[{"startOffset":2287,"endOffset":2381,"count":0}],"isBlockCoverage":false},{"functionName":"descendantOf","ranges":[{"startOffset":2387,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefixPath","ranges":[{"startOffset":2489,"endOffset":2855,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2868,"endOffset":3186,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3244,"endOffset":3384,"count":5}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":3308,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3464,"endOffset":3507,"count":0}],"isBlockCoverage":false},{"functionName":"setParserAndSep","ranges":[{"startOffset":3556,"endOffset":3629,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":3635,"endOffset":3705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-report/lib/report-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":362,"count":1}],"isBlockCoverage":true},{"functionName":"ReportBase","ranges":[{"startOffset":159,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":240,"endOffset":329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/lib/map-store.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7424,"count":1}],"isBlockCoverage":true},{"functionName":"MapStore","ranges":[{"startOffset":1045,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"registerURL","ranges":[{"startOffset":1885,"endOffset":2718,"count":0}],"isBlockCoverage":false},{"functionName":"registerMap","ranges":[{"startOffset":3003,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapSync","ranges":[{"startOffset":3590,"endOffset":4281,"count":0}],"isBlockCoverage":false},{"functionName":"addInputSourceMapsSync","ranges":[{"startOffset":4460,"endOffset":4933,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFinder","ranges":[{"startOffset":4939,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"transformCoverage","ranges":[{"startOffset":5639,"endOffset":7252,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":7338,"endOffset":7389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"474","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":112}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":2},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3225,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3422,"endOffset":3679,"count":1},{"startOffset":3467,"endOffset":3505,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3796,"endOffset":3842,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4007,"endOffset":4210,"count":2},{"startOffset":4143,"endOffset":4208,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4375,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4624,"endOffset":4726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"475","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6289,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":2},{"startOffset":1108,"endOffset":1213,"count":20}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":2}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4609,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4602,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4695,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5063,"endOffset":5450,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5568,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5793,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6021,"endOffset":6197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25530,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":488,"count":1},{"startOffset":190,"endOffset":485,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":497,"endOffset":25480,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":565,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":1086,"endOffset":1250,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":1461,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":2090,"endOffset":2311,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":2316,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":2532,"endOffset":2669,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":2674,"endOffset":2749,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":3394,"endOffset":3884,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":3889,"endOffset":4112,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":4117,"endOffset":4327,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":4332,"endOffset":4472,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":4682,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"buildBySources","ranges":[{"startOffset":5621,"endOffset":7038,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7043,"endOffset":7217,"count":0}],"isBlockCoverage":false},{"functionName":"buildNullArray","ranges":[{"startOffset":7675,"endOffset":7744,"count":0}],"isBlockCoverage":false},{"functionName":"AnyMap","ranges":[{"startOffset":7765,"endOffset":8439,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":8445,"endOffset":8536,"count":0}],"isBlockCoverage":false},{"functionName":"recurse","ranges":[{"startOffset":8541,"endOffset":9492,"count":0}],"isBlockCoverage":false},{"functionName":"addSection","ranges":[{"startOffset":9497,"endOffset":12396,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":12401,"endOffset":12515,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":12520,"endOffset":12658,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":12945,"endOffset":14203,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":14371,"endOffset":14417,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMappings","ranges":[{"startOffset":14518,"endOffset":14729,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMappings","ranges":[{"startOffset":14846,"endOffset":15004,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegment","ranges":[{"startOffset":15208,"endOffset":15738,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":15987,"endOffset":17127,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPositionFor","ranges":[{"startOffset":17248,"endOffset":17451,"count":0}],"isBlockCoverage":false},{"functionName":"allGeneratedPositionsFor","ranges":[{"startOffset":17573,"endOffset":17864,"count":0}],"isBlockCoverage":false},{"functionName":"eachMapping","ranges":[{"startOffset":17943,"endOffset":19041,"count":0}],"isBlockCoverage":false},{"functionName":"sourceIndex","ranges":[{"startOffset":19046,"endOffset":19283,"count":0}],"isBlockCoverage":false},{"functionName":"sourceContentFor","ranges":[{"startOffset":19400,"endOffset":19655,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":19747,"endOffset":19994,"count":0}],"isBlockCoverage":false},{"functionName":"presortedDecodedMap","ranges":[{"startOffset":20132,"endOffset":20311,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMap","ranges":[{"startOffset":20479,"endOffset":20560,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMap","ranges":[{"startOffset":20728,"endOffset":20809,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":20814,"endOffset":21182,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":21187,"endOffset":21287,"count":0}],"isBlockCoverage":false},{"functionName":"GMapping","ranges":[{"startOffset":21292,"endOffset":21364,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":21369,"endOffset":21812,"count":0}],"isBlockCoverage":false},{"functionName":"sliceGeneratedPositions","ranges":[{"startOffset":21817,"endOffset":23478,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPosition","ranges":[{"startOffset":23483,"endOffset":24742,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17024,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":314,"count":1},{"startOffset":114,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":323,"endOffset":16972,"count":1},{"startOffset":694,"endOffset":792,"count":64},{"startOffset":2006,"endOffset":2534,"count":0}],"isBlockCoverage":true},{"functionName":"decodeInteger","ranges":[{"startOffset":797,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInteger","ranges":[{"startOffset":1284,"endOffset":1677,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":1682,"endOffset":1819,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2070,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2281,"endOffset":2519,"count":0}],"isBlockCoverage":false},{"functionName":"StringWriter","ranges":[{"startOffset":2569,"endOffset":2700,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2709,"endOffset":2935,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":2944,"endOffset":3087,"count":0}],"isBlockCoverage":false},{"functionName":"StringReader","ranges":[{"startOffset":3127,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":3227,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":3309,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":3389,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"decodeOriginalScopes","ranges":[{"startOffset":3594,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"encodeOriginalScopes","ranges":[{"startOffset":4843,"endOffset":5081,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeOriginalScopes","ranges":[{"startOffset":5086,"endOffset":6229,"count":0}],"isBlockCoverage":false},{"functionName":"decodeGeneratedRanges","ranges":[{"startOffset":6234,"endOffset":10189,"count":0}],"isBlockCoverage":false},{"functionName":"encodeGeneratedRanges","ranges":[{"startOffset":10194,"endOffset":10508,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeGeneratedRanges","ranges":[{"startOffset":10513,"endOffset":13438,"count":0}],"isBlockCoverage":false},{"functionName":"catchupLine","ranges":[{"startOffset":13443,"endOffset":13582,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":13588,"endOffset":15287,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":15292,"endOffset":15354,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":15359,"endOffset":15424,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":15429,"endOffset":16610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9866,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":305,"count":1},{"startOffset":124,"endOffset":302,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":314,"endOffset":9818,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":1351,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":1433,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":1520,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":1601,"endOffset":1676,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":1681,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":1757,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":1971,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":2219,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":2486,"endOffset":3490,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":3495,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":3843,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":4482,"endOffset":7090,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7175,"endOffset":9794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/lib/pathutils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":537,"count":1}],"isBlockCoverage":true},{"functionName":"asAbsolute","ranges":[{"startOffset":230,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTo","ranges":[{"startOffset":385,"endOffset":533,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/lib/transformer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4953,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapTransformer","ranges":[{"startOffset":436,"endOffset":619,"count":0}],"isBlockCoverage":false},{"functionName":"processFile","ranges":[{"startOffset":625,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":3728,"endOffset":4902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/lib/mapped.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2832,"count":1}],"isBlockCoverage":true},{"functionName":"locString","ranges":[{"startOffset":211,"endOffset":363,"count":0}],"isBlockCoverage":false},{"functionName":"MappedCoverage","ranges":[{"startOffset":413,"endOffset":624,"count":0}],"isBlockCoverage":false},{"functionName":"addStatement","ranges":[{"startOffset":630,"endOffset":1078,"count":0}],"isBlockCoverage":false},{"functionName":"addFunction","ranges":[{"startOffset":1084,"endOffset":1693,"count":0}],"isBlockCoverage":false},{"functionName":"addBranch","ranges":[{"startOffset":1699,"endOffset":2418,"count":0}],"isBlockCoverage":false},{"functionName":"cloneLocation","ranges":[{"startOffset":2510,"endOffset":2787,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/lib/get-mapping.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5850,"count":1}],"isBlockCoverage":true},{"functionName":"originalEndPositionFor","ranges":[{"startOffset":1170,"endOffset":3133,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionTryBoth","ranges":[{"startOffset":3349,"endOffset":3748,"count":0}],"isBlockCoverage":false},{"functionName":"isInvalidPosition","ranges":[{"startOffset":3750,"endOffset":3950,"count":0}],"isBlockCoverage":false},{"functionName":"getMapping","ranges":[{"startOffset":4190,"endOffset":5819,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/istanbul-lib-source-maps/lib/transform-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"getUniqueKey","ranges":[{"startOffset":143,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":224,"endOffset":430,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14933,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1148,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1351,"endOffset":2821,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":3359,"endOffset":4311,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":4417,"endOffset":5308,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":6295,"endOffset":9007,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9442,"endOffset":11442,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":11615,"endOffset":13574,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":13634,"endOffset":14103,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":14185,"endOffset":14688,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":14795,"endOffset":14881,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15391,"count":1},{"startOffset":7583,"endOffset":7596,"count":0},{"startOffset":7760,"endOffset":7775,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"lruMemoize","ranges":[{"startOffset":1922,"endOffset":2385,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1975,"endOffset":2382,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":2710,"endOffset":4054,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":4735,"endOffset":5603,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":5647,"endOffset":5726,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":5890,"endOffset":6959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7015,"endOffset":7095,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":7101,"endOffset":7138,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":7429,"endOffset":7531,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":7599,"endOffset":7706,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":7778,"endOffset":8560,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":8897,"endOffset":9533,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositionsNoSource","ranges":[{"startOffset":9600,"endOffset":10161,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":10630,"endOffset":11277,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflatedNoLine","ranges":[{"startOffset":11362,"endOffset":11918,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":12015,"endOffset":12270,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":12400,"endOffset":13001,"count":0}],"isBlockCoverage":false},{"functionName":"parseSourceMapInput","ranges":[{"startOffset":13241,"endOffset":13334,"count":0}],"isBlockCoverage":false},{"functionName":"computeSourceURL","ranges":[{"startOffset":13500,"endOffset":15345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41580,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":805,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2628,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2970,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3188,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3567,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4634,"endOffset":5903,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6989,"endOffset":9613,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":11147,"endOffset":13591,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer._findSourceIndex","ranges":[{"startOffset":13876,"endOffset":14404,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":14741,"endOffset":16752,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16993,"endOffset":17052,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":17119,"endOffset":17295,"count":0}],"isBlockCoverage":false},{"functionName":"sortGenerated","ranges":[{"startOffset":17565,"endOffset":18215,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":18268,"endOffset":21509,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":21708,"endOffset":22527,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":22682,"endOffset":23561,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":24727,"endOffset":25980,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":26153,"endOffset":26410,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":26636,"endOffset":28247,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":29359,"endOffset":30465,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":32413,"endOffset":33907,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34301,"endOffset":34565,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":35384,"endOffset":36563,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":36738,"endOffset":36909,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":37137,"endOffset":37594,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":38357,"endOffset":39268,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":39519,"endOffset":41516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4068,"count":1}],"isBlockCoverage":true},{"functionName":"SortTemplate","ranges":[{"startOffset":868,"endOffset":3370,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSort","ranges":[{"startOffset":3372,"endOffset":3538,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3802,"endOffset":4066,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/source-map-js/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13808,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6512,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6757,"endOffset":7182,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7448,"endOffset":7865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8168,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8763,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9399,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10120,"endOffset":10264,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10508,"endOffset":10922,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11111,"endOffset":11230,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11371,"endOffset":13772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":486948,"count":1}],"isBlockCoverage":true},{"functionName":"_objectWithoutPropertiesLoose","ranges":[{"startOffset":80,"endOffset":291,"count":293},{"startOffset":144,"endOffset":154,"count":0},{"startOffset":188,"endOffset":277,"count":296},{"startOffset":247,"endOffset":256,"count":293},{"startOffset":256,"endOffset":277,"count":3}],"isBlockCoverage":true},{"functionName":"Position","ranges":[{"startOffset":311,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"SourceLocation","ranges":[{"startOffset":518,"endOffset":701,"count":0}],"isBlockCoverage":false},{"functionName":"createPositionWithColumnOffset","ranges":[{"startOffset":704,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"toNodeDescription","ranges":[{"startOffset":2192,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"AccessorIsGenerator","ranges":[{"startOffset":2364,"endOffset":2421,"count":0}],"isBlockCoverage":false},{"functionName":"DeclarationMissingInitializer","ranges":[{"startOffset":3860,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateExport","ranges":[{"startOffset":5290,"endOffset":5399,"count":0}],"isBlockCoverage":false},{"functionName":"DynamicImportPhaseRequiresImportExpressions","ranges":[{"startOffset":5567,"endOffset":5680,"count":0}],"isBlockCoverage":false},{"functionName":"ExportBindingIsString","ranges":[{"startOffset":5822,"endOffset":6022,"count":0}],"isBlockCoverage":false},{"functionName":"ForInOfLoopInitializer","ranges":[{"startOffset":6149,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"IllegalBreakContinue","ranges":[{"startOffset":6631,"endOffset":6717,"count":0}],"isBlockCoverage":false},{"functionName":"ImportBindingIsString","ranges":[{"startOffset":7122,"endOffset":7260,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidDigit","ranges":[{"startOffset":8049,"endOffset":8106,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidEscapedReservedWord","ranges":[{"startOffset":8270,"endOffset":8343,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidIdentifier","ranges":[{"startOffset":8366,"endOffset":8435,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidLhs","ranges":[{"startOffset":8451,"endOffset":8534,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidLhsBinding","ranges":[{"startOffset":8557,"endOffset":8648,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidLhsOptionalChaining","ranges":[{"startOffset":8680,"endOffset":8788,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidOrUnexpectedToken","ranges":[{"startOffset":8948,"endOffset":9013,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidPrivateFieldResolution","ranges":[{"startOffset":9127,"endOffset":9206,"count":0}],"isBlockCoverage":false},{"functionName":"LabelRedeclaration","ranges":[{"startOffset":9461,"endOffset":9529,"count":0}],"isBlockCoverage":false},{"functionName":"MissingPlugin","ranges":[{"startOffset":9930,"endOffset":10085,"count":0}],"isBlockCoverage":false},{"functionName":"MissingOneOfPlugins","ranges":[{"startOffset":10110,"endOffset":10285,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleAttributesWithDuplicateKeys","ranges":[{"startOffset":10690,"endOffset":10770,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleExportNameHasLoneSurrogate","ranges":[{"startOffset":10808,"endOffset":10936,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleExportUndefined","ranges":[{"startOffset":10963,"endOffset":11027,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateInExpectedIn","ranges":[{"startOffset":11957,"endOffset":12127,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateNameRedeclaration","ranges":[{"startOffset":12157,"endOffset":12231,"count":0}],"isBlockCoverage":false},{"functionName":"UnexpectedKeyword","ranges":[{"startOffset":14552,"endOffset":14609,"count":0}],"isBlockCoverage":false},{"functionName":"UnexpectedReservedWord","ranges":[{"startOffset":15063,"endOffset":15136,"count":0}],"isBlockCoverage":false},{"functionName":"UnexpectedToken","ranges":[{"startOffset":15234,"endOffset":15377,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedMetaProperty","ranges":[{"startOffset":15984,"endOffset":16116,"count":0}],"isBlockCoverage":false},{"functionName":"VarRedeclaration","ranges":[{"startOffset":16837,"endOffset":16926,"count":0}],"isBlockCoverage":false},{"functionName":"StrictEvalArguments","ranges":[{"startOffset":17280,"endOffset":17358,"count":0}],"isBlockCoverage":false},{"functionName":"StrictEvalArgumentsBinding","ranges":[{"startOffset":17390,"endOffset":17459,"count":0}],"isBlockCoverage":false},{"functionName":"PipeTopicUnconfiguredToken","ranges":[{"startOffset":18380,"endOffset":18581,"count":0}],"isBlockCoverage":false},{"functionName":"PipeUnparenthesizedBody","ranges":[{"startOffset":18736,"endOffset":18876,"count":0}],"isBlockCoverage":false},{"functionName":"defineHidden","ranges":[{"startOffset":19577,"endOffset":19718,"count":0}],"isBlockCoverage":false},{"functionName":"toParseErrorConstructor","ranges":[{"startOffset":19719,"endOffset":21669,"count":293},{"startOffset":19867,"endOffset":19906,"count":292},{"startOffset":20521,"endOffset":20575,"count":6}],"isBlockCoverage":true},{"functionName":"constructor","ranges":[{"startOffset":20589,"endOffset":21666,"count":0}],"isBlockCoverage":false},{"functionName":"ParseErrorEnum","ranges":[{"startOffset":21670,"endOffset":22581,"count":13},{"startOffset":21751,"endOffset":21840,"count":5},{"startOffset":21840,"endOffset":21928,"count":8},{"startOffset":21928,"endOffset":22546,"count":293},{"startOffset":22019,"endOffset":22062,"count":226},{"startOffset":22063,"endOffset":22144,"count":67},{"startOffset":22096,"endOffset":22133,"count":64},{"startOffset":22134,"endOffset":22144,"count":3},{"startOffset":22297,"endOffset":22312,"count":3},{"startOffset":22313,"endOffset":22322,"count":290},{"startOffset":22500,"endOffset":22528,"count":131},{"startOffset":22529,"endOffset":22533,"count":162},{"startOffset":22546,"endOffset":22580,"count":8}],"isBlockCoverage":true},{"functionName":"ParseErrorEnum.ParseErrorConstructors","ranges":[{"startOffset":21764,"endOffset":21835,"count":5}],"isBlockCoverage":true},{"functionName":"message","ranges":[{"startOffset":22040,"endOffset":22054,"count":0}],"isBlockCoverage":false},{"functionName":"ParseErrorEnum.toMessage","ranges":[{"startOffset":22299,"endOffset":22312,"count":0}],"isBlockCoverage":false},{"functionName":"toUnenumerable","ranges":[{"startOffset":22830,"endOffset":22962,"count":0}],"isBlockCoverage":false},{"functionName":"toESTreeLocation","ranges":[{"startOffset":22964,"endOffset":23098,"count":0}],"isBlockCoverage":false},{"functionName":"estree","ranges":[{"startOffset":23112,"endOffset":33657,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":33680,"endOffset":33843,"count":5}],"isBlockCoverage":true},{"functionName":"ExportedTokenType","ranges":[{"startOffset":34228,"endOffset":34975,"count":145},{"startOffset":34906,"endOffset":34918,"count":21},{"startOffset":34919,"endOffset":34925,"count":124}],"isBlockCoverage":true},{"functionName":"createKeyword","ranges":[{"startOffset":35008,"endOffset":35171,"count":35}],"isBlockCoverage":true},{"functionName":"createBinop","ranges":[{"startOffset":35172,"endOffset":35270,"count":15}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":35453,"endOffset":36100,"count":106},{"startOffset":35685,"endOffset":35701,"count":21},{"startOffset":35702,"endOffset":35706,"count":85},{"startOffset":35784,"endOffset":35805,"count":54},{"startOffset":35806,"endOffset":35813,"count":52},{"startOffset":35891,"endOffset":35912,"count":41},{"startOffset":35913,"endOffset":35920,"count":65},{"startOffset":35987,"endOffset":36004,"count":8},{"startOffset":36005,"endOffset":36012,"count":98}],"isBlockCoverage":true},{"functionName":"createKeywordLike","ranges":[{"startOffset":36101,"endOffset":36810,"count":39},{"startOffset":36386,"endOffset":36403,"count":0},{"startOffset":36487,"endOffset":36509,"count":0},{"startOffset":36619,"endOffset":36626,"count":0},{"startOffset":36694,"endOffset":36712,"count":0}],"isBlockCoverage":true},{"functionName":"tokenIsIdentifier","ranges":[{"startOffset":44770,"endOffset":44845,"count":0}],"isBlockCoverage":false},{"functionName":"tokenKeywordOrIdentifierIsKeyword","ranges":[{"startOffset":44846,"endOffset":44921,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsKeywordOrIdentifier","ranges":[{"startOffset":44922,"endOffset":45006,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsLiteralPropertyName","ranges":[{"startOffset":45007,"endOffset":45091,"count":0}],"isBlockCoverage":false},{"functionName":"tokenComesBeforeExpression","ranges":[{"startOffset":45092,"endOffset":45172,"count":0}],"isBlockCoverage":false},{"functionName":"tokenCanStartExpression","ranges":[{"startOffset":45173,"endOffset":45250,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsAssignment","ranges":[{"startOffset":45251,"endOffset":45325,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsFlowInterfaceOrTypeOrOpaque","ranges":[{"startOffset":45326,"endOffset":45419,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsLoop","ranges":[{"startOffset":45420,"endOffset":45488,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsKeyword","ranges":[{"startOffset":45489,"endOffset":45560,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsOperator","ranges":[{"startOffset":45561,"endOffset":45633,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsPostfix","ranges":[{"startOffset":45634,"endOffset":45691,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsPrefix","ranges":[{"startOffset":45692,"endOffset":45756,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsTSTypeOperator","ranges":[{"startOffset":45757,"endOffset":45837,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsTSDeclarationStart","ranges":[{"startOffset":45838,"endOffset":45922,"count":0}],"isBlockCoverage":false},{"functionName":"tokenLabelName","ranges":[{"startOffset":45923,"endOffset":45986,"count":0}],"isBlockCoverage":false},{"functionName":"tokenOperatorPrecedence","ranges":[{"startOffset":45987,"endOffset":46059,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsRightAssociative","ranges":[{"startOffset":46060,"endOffset":46126,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsTemplate","ranges":[{"startOffset":46127,"endOffset":46199,"count":0}],"isBlockCoverage":false},{"functionName":"getExportedToken","ranges":[{"startOffset":46200,"endOffset":46264,"count":145}],"isBlockCoverage":true},{"functionName":"tokenTypes.<computed>.updateContext","ranges":[{"startOffset":46299,"endOffset":46334,"count":0}],"isBlockCoverage":false},{"functionName":"tokenTypes.<computed>.updateContext.tokenTypes.<computed>.updateContext.tokenTypes.<computed>.updateContext","ranges":[{"startOffset":46429,"endOffset":46476,"count":0}],"isBlockCoverage":false},{"functionName":"tokenTypes.<computed>.updateContext","ranges":[{"startOffset":46511,"endOffset":46661,"count":0}],"isBlockCoverage":false},{"functionName":"tokenTypes.<computed>.updateContext","ranges":[{"startOffset":46697,"endOffset":46759,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":57363,"endOffset":57612,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":57613,"endOffset":57956,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":57957,"endOffset":58401,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWord","ranges":[{"startOffset":59086,"endOffset":59187,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":59188,"endOffset":59314,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":59315,"endOffset":59409,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":59410,"endOffset":59548,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":59549,"endOffset":59606,"count":0}],"isBlockCoverage":false},{"functionName":"isIteratorStart","ranges":[{"startOffset":59607,"endOffset":59725,"count":0}],"isBlockCoverage":false},{"functionName":"canBeReservedWord","ranges":[{"startOffset":60218,"endOffset":60294,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":60311,"endOffset":60439,"count":0}],"isBlockCoverage":false},{"functionName":"ScopeHandler","ranges":[{"startOffset":60465,"endOffset":60675,"count":0}],"isBlockCoverage":false},{"functionName":"get inTopLevel","ranges":[{"startOffset":60678,"endOffset":60748,"count":0}],"isBlockCoverage":false},{"functionName":"get inFunction","ranges":[{"startOffset":60751,"endOffset":60823,"count":0}],"isBlockCoverage":false},{"functionName":"get allowSuper","ranges":[{"startOffset":60826,"endOffset":60900,"count":0}],"isBlockCoverage":false},{"functionName":"get allowDirectSuper","ranges":[{"startOffset":60903,"endOffset":60983,"count":0}],"isBlockCoverage":false},{"functionName":"get inClass","ranges":[{"startOffset":60986,"endOffset":61057,"count":0}],"isBlockCoverage":false},{"functionName":"get inClassAndNotInNonArrowFunction","ranges":[{"startOffset":61060,"endOffset":61201,"count":0}],"isBlockCoverage":false},{"functionName":"get inStaticBlock","ranges":[{"startOffset":61204,"endOffset":61462,"count":0}],"isBlockCoverage":false},{"functionName":"get inNonArrowFunction","ranges":[{"startOffset":61465,"endOffset":61546,"count":0}],"isBlockCoverage":false},{"functionName":"get treatFunctionsAsVar","ranges":[{"startOffset":61549,"endOffset":61645,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":61648,"endOffset":61701,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":61704,"endOffset":61773,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":61776,"endOffset":61853,"count":0}],"isBlockCoverage":false},{"functionName":"treatFunctionsAsVarInScope","ranges":[{"startOffset":61856,"endOffset":61979,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":61982,"endOffset":62997,"count":0}],"isBlockCoverage":false},{"functionName":"maybeExportDefined","ranges":[{"startOffset":63000,"endOffset":63136,"count":0}],"isBlockCoverage":false},{"functionName":"checkRedeclarationInScope","ranges":[{"startOffset":63139,"endOffset":63364,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":63367,"endOffset":63838,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":63841,"endOffset":64049,"count":0}],"isBlockCoverage":false},{"functionName":"currentScope","ranges":[{"startOffset":64052,"endOffset":64128,"count":0}],"isBlockCoverage":false},{"functionName":"currentVarScopeFlags","ranges":[{"startOffset":64131,"endOffset":64331,"count":0}],"isBlockCoverage":false},{"functionName":"currentThisScopeFlags","ranges":[{"startOffset":64334,"endOffset":64558,"count":0}],"isBlockCoverage":false},{"functionName":"FlowScope","ranges":[{"startOffset":64595,"endOffset":64680,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":64731,"endOffset":64788,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":64791,"endOffset":65121,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":65124,"endOffset":65429,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":65432,"endOffset":65559,"count":0}],"isBlockCoverage":false},{"functionName":"BaseParser","ranges":[{"startOffset":65583,"endOffset":65684,"count":0}],"isBlockCoverage":false},{"functionName":"sourceToOffsetPos","ranges":[{"startOffset":65687,"endOffset":65761,"count":0}],"isBlockCoverage":false},{"functionName":"offsetToSourcePos","ranges":[{"startOffset":65764,"endOffset":65838,"count":0}],"isBlockCoverage":false},{"functionName":"hasPlugin","ranges":[{"startOffset":65841,"endOffset":66370,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginOption","ranges":[{"startOffset":66373,"endOffset":66537,"count":0}],"isBlockCoverage":false},{"functionName":"setTrailingComments","ranges":[{"startOffset":66540,"endOffset":66734,"count":0}],"isBlockCoverage":false},{"functionName":"setLeadingComments","ranges":[{"startOffset":66735,"endOffset":66925,"count":0}],"isBlockCoverage":false},{"functionName":"setInnerComments","ranges":[{"startOffset":66926,"endOffset":67108,"count":0}],"isBlockCoverage":false},{"functionName":"adjustInnerComments","ranges":[{"startOffset":67109,"endOffset":67490,"count":0}],"isBlockCoverage":false},{"functionName":"addComment","ranges":[{"startOffset":67535,"endOffset":67830,"count":0}],"isBlockCoverage":false},{"functionName":"processComment","ranges":[{"startOffset":67833,"endOffset":68628,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeComment","ranges":[{"startOffset":68631,"endOffset":70400,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeRemainingComments","ranges":[{"startOffset":70403,"endOffset":70629,"count":0}],"isBlockCoverage":false},{"functionName":"resetPreviousNodeTrailingComments","ranges":[{"startOffset":70632,"endOffset":70937,"count":0}],"isBlockCoverage":false},{"functionName":"resetPreviousIdentifierLeadingComments","ranges":[{"startOffset":70940,"endOffset":71366,"count":0}],"isBlockCoverage":false},{"functionName":"takeSurroundingComments","ranges":[{"startOffset":71369,"endOffset":71968,"count":0}],"isBlockCoverage":false},{"functionName":"isNewLine","ranges":[{"startOffset":72070,"endOffset":72228,"count":0}],"isBlockCoverage":false},{"functionName":"hasNewLine","ranges":[{"startOffset":72229,"endOffset":72396,"count":0}],"isBlockCoverage":false},{"functionName":"isWhitespace","ranges":[{"startOffset":72532,"endOffset":72985,"count":0}],"isBlockCoverage":false},{"functionName":"State","ranges":[{"startOffset":73002,"endOffset":73781,"count":0}],"isBlockCoverage":false},{"functionName":"get strict","ranges":[{"startOffset":73784,"endOffset":73835,"count":0}],"isBlockCoverage":false},{"functionName":"set strict","ranges":[{"startOffset":73838,"endOffset":73907,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":73910,"endOffset":74292,"count":0}],"isBlockCoverage":false},{"functionName":"get maybeInArrowParameters","ranges":[{"startOffset":74295,"endOffset":74362,"count":0}],"isBlockCoverage":false},{"functionName":"set maybeInArrowParameters","ranges":[{"startOffset":74365,"endOffset":74450,"count":0}],"isBlockCoverage":false},{"functionName":"get inType","ranges":[{"startOffset":74453,"endOffset":74504,"count":0}],"isBlockCoverage":false},{"functionName":"set inType","ranges":[{"startOffset":74507,"endOffset":74576,"count":0}],"isBlockCoverage":false},{"functionName":"get noAnonFunctionType","ranges":[{"startOffset":74579,"endOffset":74642,"count":0}],"isBlockCoverage":false},{"functionName":"set noAnonFunctionType","ranges":[{"startOffset":74645,"endOffset":74726,"count":0}],"isBlockCoverage":false},{"functionName":"get hasFlowComment","ranges":[{"startOffset":74729,"endOffset":74789,"count":0}],"isBlockCoverage":false},{"functionName":"set hasFlowComment","ranges":[{"startOffset":74792,"endOffset":74871,"count":0}],"isBlockCoverage":false},{"functionName":"get isAmbientContext","ranges":[{"startOffset":74874,"endOffset":74936,"count":0}],"isBlockCoverage":false},{"functionName":"set isAmbientContext","ranges":[{"startOffset":74939,"endOffset":75020,"count":0}],"isBlockCoverage":false},{"functionName":"get inAbstractClass","ranges":[{"startOffset":75023,"endOffset":75084,"count":0}],"isBlockCoverage":false},{"functionName":"set inAbstractClass","ranges":[{"startOffset":75087,"endOffset":75167,"count":0}],"isBlockCoverage":false},{"functionName":"get inDisallowConditionalTypesContext","ranges":[{"startOffset":75170,"endOffset":75250,"count":0}],"isBlockCoverage":false},{"functionName":"set inDisallowConditionalTypesContext","ranges":[{"startOffset":75253,"endOffset":75353,"count":0}],"isBlockCoverage":false},{"functionName":"get soloAwait","ranges":[{"startOffset":75356,"endOffset":75412,"count":0}],"isBlockCoverage":false},{"functionName":"set soloAwait","ranges":[{"startOffset":75415,"endOffset":75491,"count":0}],"isBlockCoverage":false},{"functionName":"get inFSharpPipelineDirectBody","ranges":[{"startOffset":75494,"endOffset":75567,"count":0}],"isBlockCoverage":false},{"functionName":"set inFSharpPipelineDirectBody","ranges":[{"startOffset":75570,"endOffset":75663,"count":0}],"isBlockCoverage":false},{"functionName":"get canStartJSXElement","ranges":[{"startOffset":75666,"endOffset":75732,"count":0}],"isBlockCoverage":false},{"functionName":"set canStartJSXElement","ranges":[{"startOffset":75735,"endOffset":75822,"count":0}],"isBlockCoverage":false},{"functionName":"get containsEsc","ranges":[{"startOffset":75825,"endOffset":75884,"count":0}],"isBlockCoverage":false},{"functionName":"set containsEsc","ranges":[{"startOffset":75887,"endOffset":75967,"count":0}],"isBlockCoverage":false},{"functionName":"get hasTopLevelAwait","ranges":[{"startOffset":75970,"endOffset":76034,"count":0}],"isBlockCoverage":false},{"functionName":"set hasTopLevelAwait","ranges":[{"startOffset":76037,"endOffset":76122,"count":0}],"isBlockCoverage":false},{"functionName":"curPosition","ranges":[{"startOffset":76125,"endOffset":76238,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":76241,"endOffset":77351,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":77369,"endOffset":77430,"count":0}],"isBlockCoverage":false},{"functionName":"bin","ranges":[{"startOffset":77621,"endOffset":77649,"count":0}],"isBlockCoverage":false},{"functionName":"oct","ranges":[{"startOffset":77658,"endOffset":77684,"count":0}],"isBlockCoverage":false},{"functionName":"dec","ranges":[{"startOffset":77693,"endOffset":77719,"count":0}],"isBlockCoverage":false},{"functionName":"hex","ranges":[{"startOffset":77728,"endOffset":77803,"count":0}],"isBlockCoverage":false},{"functionName":"readStringContents","ranges":[{"startOffset":77807,"endOffset":79490,"count":0}],"isBlockCoverage":false},{"functionName":"isStringEnd","ranges":[{"startOffset":79491,"endOffset":79689,"count":0}],"isBlockCoverage":false},{"functionName":"readEscapedChar","ranges":[{"startOffset":79690,"endOffset":81780,"count":0}],"isBlockCoverage":false},{"functionName":"readHexChar","ranges":[{"startOffset":81781,"endOffset":82232,"count":0}],"isBlockCoverage":false},{"functionName":"readInt","ranges":[{"startOffset":82233,"endOffset":84277,"count":0}],"isBlockCoverage":false},{"functionName":"readCodePoint","ranges":[{"startOffset":84278,"endOffset":84983,"count":0}],"isBlockCoverage":false},{"functionName":"buildPosition","ranges":[{"startOffset":84984,"endOffset":85089,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":85183,"endOffset":85458,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer","ranges":[{"startOffset":85504,"endOffset":87279,"count":0}],"isBlockCoverage":false},{"functionName":"pushToken","ranges":[{"startOffset":87282,"endOffset":87414,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":87417,"endOffset":87669,"count":0}],"isBlockCoverage":false},{"functionName":"eat","ranges":[{"startOffset":87672,"endOffset":87792,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":87795,"endOffset":87849,"count":0}],"isBlockCoverage":false},{"functionName":"createLookaheadState","ranges":[{"startOffset":87852,"endOffset":88257,"count":0}],"isBlockCoverage":false},{"functionName":"lookahead","ranges":[{"startOffset":88260,"endOffset":88503,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenStart","ranges":[{"startOffset":88506,"endOffset":88581,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenStartSince","ranges":[{"startOffset":88584,"endOffset":88727,"count":0}],"isBlockCoverage":false},{"functionName":"lookaheadCharCode","ranges":[{"startOffset":88730,"endOffset":88812,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenInLineStart","ranges":[{"startOffset":88815,"endOffset":88902,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenInLineStartSince","ranges":[{"startOffset":88905,"endOffset":89072,"count":0}],"isBlockCoverage":false},{"functionName":"lookaheadInLineCharCode","ranges":[{"startOffset":89075,"endOffset":89169,"count":0}],"isBlockCoverage":false},{"functionName":"codePointAtPos","ranges":[{"startOffset":89172,"endOffset":89484,"count":0}],"isBlockCoverage":false},{"functionName":"setStrict","ranges":[{"startOffset":89487,"endOffset":89698,"count":0}],"isBlockCoverage":false},{"functionName":"curContext","ranges":[{"startOffset":89701,"endOffset":89781,"count":0}],"isBlockCoverage":false},{"functionName":"nextToken","ranges":[{"startOffset":89784,"endOffset":90091,"count":0}],"isBlockCoverage":false},{"functionName":"skipBlockComment","ranges":[{"startOffset":90094,"endOffset":91033,"count":0}],"isBlockCoverage":false},{"functionName":"skipLineComment","ranges":[{"startOffset":91036,"endOffset":91839,"count":0}],"isBlockCoverage":false},{"functionName":"skipSpace","ranges":[{"startOffset":91842,"endOffset":94856,"count":0}],"isBlockCoverage":false},{"functionName":"finishToken","ranges":[{"startOffset":94859,"endOffset":95139,"count":0}],"isBlockCoverage":false},{"functionName":"replaceToken","ranges":[{"startOffset":95142,"endOffset":95220,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_numberSign","ranges":[{"startOffset":95223,"endOffset":96321,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_dot","ranges":[{"startOffset":96324,"endOffset":96691,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_slash","ranges":[{"startOffset":96694,"endOffset":96875,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_interpreter","ranges":[{"startOffset":96878,"endOffset":97350,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_mult_modulo","ranges":[{"startOffset":97353,"endOffset":97767,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_pipe_amp","ranges":[{"startOffset":97770,"endOffset":98966,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_caret","ranges":[{"startOffset":98969,"endOffset":99459,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_atSign","ranges":[{"startOffset":99462,"endOffset":99740,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_plus_min","ranges":[{"startOffset":99743,"endOffset":100004,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_lt","ranges":[{"startOffset":100007,"endOffset":100391,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_gt","ranges":[{"startOffset":100394,"endOffset":100857,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_eq_excl","ranges":[{"startOffset":100860,"endOffset":101233,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_question","ranges":[{"startOffset":101236,"endOffset":101704,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenFromCode","ranges":[{"startOffset":101707,"endOffset":105472,"count":0}],"isBlockCoverage":false},{"functionName":"finishOp","ranges":[{"startOffset":105475,"endOffset":105635,"count":0}],"isBlockCoverage":false},{"functionName":"readRegexp","ranges":[{"startOffset":105638,"endOffset":107465,"count":0}],"isBlockCoverage":false},{"functionName":"readInt","ranges":[{"startOffset":107468,"endOffset":107771,"count":0}],"isBlockCoverage":false},{"functionName":"readRadixNumber","ranges":[{"startOffset":107774,"endOffset":108663,"count":0}],"isBlockCoverage":false},{"functionName":"readNumber","ranges":[{"startOffset":108666,"endOffset":111091,"count":0}],"isBlockCoverage":false},{"functionName":"readCodePoint","ranges":[{"startOffset":111094,"endOffset":111349,"count":0}],"isBlockCoverage":false},{"functionName":"readString","ranges":[{"startOffset":111352,"endOffset":111758,"count":0}],"isBlockCoverage":false},{"functionName":"readTemplateContinuation","ranges":[{"startOffset":111761,"endOffset":111909,"count":0}],"isBlockCoverage":false},{"functionName":"readTemplateToken","ranges":[{"startOffset":111912,"endOffset":112790,"count":0}],"isBlockCoverage":false},{"functionName":"recordStrictModeErrors","ranges":[{"startOffset":112793,"endOffset":113052,"count":0}],"isBlockCoverage":false},{"functionName":"readWord1","ranges":[{"startOffset":113055,"endOffset":114392,"count":0}],"isBlockCoverage":false},{"functionName":"readWord","ranges":[{"startOffset":114395,"endOffset":114639,"count":0}],"isBlockCoverage":false},{"functionName":"checkKeywordEscapes","ranges":[{"startOffset":114642,"endOffset":114904,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":114907,"endOffset":115182,"count":0}],"isBlockCoverage":false},{"functionName":"raiseOverwrite","ranges":[{"startOffset":115185,"endOffset":115640,"count":0}],"isBlockCoverage":false},{"functionName":"updateContext","ranges":[{"startOffset":115643,"endOffset":115669,"count":0}],"isBlockCoverage":false},{"functionName":"unexpected","ranges":[{"startOffset":115672,"endOffset":115846,"count":0}],"isBlockCoverage":false},{"functionName":"expectPlugin","ranges":[{"startOffset":115849,"endOffset":116075,"count":0}],"isBlockCoverage":false},{"functionName":"expectOnePlugin","ranges":[{"startOffset":116078,"endOffset":116296,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuilder","ranges":[{"startOffset":116299,"endOffset":116438,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScope","ranges":[{"startOffset":116462,"endOffset":116596,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScopeHandler","ranges":[{"startOffset":116627,"endOffset":116769,"count":0}],"isBlockCoverage":false},{"functionName":"current","ranges":[{"startOffset":116772,"endOffset":116833,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":116836,"endOffset":116888,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":116891,"endOffset":117350,"count":0}],"isBlockCoverage":false},{"functionName":"declarePrivateName","ranges":[{"startOffset":117353,"endOffset":118231,"count":0}],"isBlockCoverage":false},{"functionName":"usePrivateName","ranges":[{"startOffset":118234,"endOffset":118585,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionScope","ranges":[{"startOffset":118614,"endOffset":118663,"count":0}],"isBlockCoverage":false},{"functionName":"canBeArrowParameterDeclaration","ranges":[{"startOffset":118666,"endOffset":118751,"count":0}],"isBlockCoverage":false},{"functionName":"isCertainlyParameterDeclaration","ranges":[{"startOffset":118754,"endOffset":118821,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowHeadParsingScope","ranges":[{"startOffset":118880,"endOffset":118960,"count":0}],"isBlockCoverage":false},{"functionName":"recordDeclarationError","ranges":[{"startOffset":118963,"endOffset":119106,"count":0}],"isBlockCoverage":false},{"functionName":"clearDeclarationError","ranges":[{"startOffset":119109,"endOffset":119185,"count":0}],"isBlockCoverage":false},{"functionName":"iterateErrors","ranges":[{"startOffset":119188,"endOffset":119263,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionScopeHandler","ranges":[{"startOffset":119299,"endOffset":119418,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":119421,"endOffset":119467,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":119470,"endOffset":119504,"count":0}],"isBlockCoverage":false},{"functionName":"recordParameterInitializerError","ranges":[{"startOffset":119507,"endOffset":119976,"count":0}],"isBlockCoverage":false},{"functionName":"recordArrowParameterBindingError","ranges":[{"startOffset":119979,"endOffset":120378,"count":0}],"isBlockCoverage":false},{"functionName":"recordAsyncArrowParametersError","ranges":[{"startOffset":120381,"endOffset":120712,"count":0}],"isBlockCoverage":false},{"functionName":"validateAsPattern","ranges":[{"startOffset":120715,"endOffset":121201,"count":0}],"isBlockCoverage":false},{"functionName":"newParameterDeclarationScope","ranges":[{"startOffset":121204,"endOffset":121280,"count":0}],"isBlockCoverage":false},{"functionName":"newArrowHeadScope","ranges":[{"startOffset":121281,"endOffset":121352,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncArrowScope","ranges":[{"startOffset":121353,"endOffset":121425,"count":0}],"isBlockCoverage":false},{"functionName":"newExpressionScope","ranges":[{"startOffset":121426,"endOffset":121491,"count":0}],"isBlockCoverage":false},{"functionName":"ProductionParameterHandler","ranges":[{"startOffset":121529,"endOffset":121570,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":121573,"endOffset":121620,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":121623,"endOffset":121658,"count":0}],"isBlockCoverage":false},{"functionName":"currentFlags","ranges":[{"startOffset":121661,"endOffset":121729,"count":0}],"isBlockCoverage":false},{"functionName":"get hasAwait","ranges":[{"startOffset":121732,"endOffset":121794,"count":0}],"isBlockCoverage":false},{"functionName":"get hasYield","ranges":[{"startOffset":121797,"endOffset":121859,"count":0}],"isBlockCoverage":false},{"functionName":"get hasReturn","ranges":[{"startOffset":121862,"endOffset":121925,"count":0}],"isBlockCoverage":false},{"functionName":"get hasIn","ranges":[{"startOffset":121928,"endOffset":121987,"count":0}],"isBlockCoverage":false},{"functionName":"functionFlags","ranges":[{"startOffset":121990,"endOffset":122090,"count":0}],"isBlockCoverage":false},{"functionName":"addExtra","ranges":[{"startOffset":122130,"endOffset":122468,"count":0}],"isBlockCoverage":false},{"functionName":"isContextual","ranges":[{"startOffset":122471,"endOffset":122561,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedContextual","ranges":[{"startOffset":122564,"endOffset":122860,"count":0}],"isBlockCoverage":false},{"functionName":"isLookaheadContextual","ranges":[{"startOffset":122863,"endOffset":122986,"count":0}],"isBlockCoverage":false},{"functionName":"eatContextual","ranges":[{"startOffset":122989,"endOffset":123113,"count":0}],"isBlockCoverage":false},{"functionName":"expectContextual","ranges":[{"startOffset":123116,"endOffset":123342,"count":0}],"isBlockCoverage":false},{"functionName":"canInsertSemicolon","ranges":[{"startOffset":123345,"endOffset":123448,"count":0}],"isBlockCoverage":false},{"functionName":"hasPrecedingLineBreak","ranges":[{"startOffset":123451,"endOffset":123589,"count":0}],"isBlockCoverage":false},{"functionName":"hasFollowingLineBreak","ranges":[{"startOffset":123592,"endOffset":123695,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":123698,"endOffset":123776,"count":0}],"isBlockCoverage":false},{"functionName":"semicolon","ranges":[{"startOffset":123779,"endOffset":123945,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":123948,"endOffset":124038,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":124041,"endOffset":125260,"count":0}],"isBlockCoverage":false},{"functionName":"checkExpressionErrors","ranges":[{"startOffset":125263,"endOffset":126075,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralPropertyName","ranges":[{"startOffset":126078,"endOffset":126163,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateName","ranges":[{"startOffset":126166,"endOffset":126231,"count":0}],"isBlockCoverage":false},{"functionName":"getPrivateNameSV","ranges":[{"startOffset":126234,"endOffset":126287,"count":0}],"isBlockCoverage":false},{"functionName":"hasPropertyAsPrivateName","ranges":[{"startOffset":126290,"endOffset":126454,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectProperty","ranges":[{"startOffset":126457,"endOffset":126528,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMethod","ranges":[{"startOffset":126531,"endOffset":126598,"count":0}],"isBlockCoverage":false},{"functionName":"initializeScopes","ranges":[{"startOffset":126601,"endOffset":127659,"count":0}],"isBlockCoverage":false},{"functionName":"enterInitialScopes","ranges":[{"startOffset":127662,"endOffset":127829,"count":0}],"isBlockCoverage":false},{"functionName":"checkDestructuringPrivate","ranges":[{"startOffset":127832,"endOffset":128049,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionErrors","ranges":[{"startOffset":128079,"endOffset":128236,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":128254,"endOffset":128541,"count":0}],"isBlockCoverage":false},{"functionName":"NodePrototype.__clone","ranges":[{"startOffset":128610,"endOffset":128984,"count":0}],"isBlockCoverage":false},{"functionName":"clonePlaceholder","ranges":[{"startOffset":128988,"endOffset":129055,"count":0}],"isBlockCoverage":false},{"functionName":"cloneIdentifier","ranges":[{"startOffset":129056,"endOffset":129483,"count":0}],"isBlockCoverage":false},{"functionName":"cloneStringLiteral","ranges":[{"startOffset":129484,"endOffset":129977,"count":0}],"isBlockCoverage":false},{"functionName":"startNode","ranges":[{"startOffset":130017,"endOffset":130114,"count":0}],"isBlockCoverage":false},{"functionName":"startNodeAt","ranges":[{"startOffset":130117,"endOffset":130182,"count":0}],"isBlockCoverage":false},{"functionName":"startNodeAtNode","ranges":[{"startOffset":130185,"endOffset":130257,"count":0}],"isBlockCoverage":false},{"functionName":"finishNode","ranges":[{"startOffset":130260,"endOffset":130356,"count":0}],"isBlockCoverage":false},{"functionName":"finishNodeAt","ranges":[{"startOffset":130359,"endOffset":130614,"count":0}],"isBlockCoverage":false},{"functionName":"resetStartLocation","ranges":[{"startOffset":130617,"endOffset":130782,"count":0}],"isBlockCoverage":false},{"functionName":"resetEndLocation","ranges":[{"startOffset":130785,"endOffset":130963,"count":0}],"isBlockCoverage":false},{"functionName":"resetStartLocationFromNode","ranges":[{"startOffset":130966,"endOffset":131077,"count":0}],"isBlockCoverage":false},{"functionName":"AssignReservedType","ranges":[{"startOffset":131634,"endOffset":131711,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanMemberNotInitialized","ranges":[{"startOffset":132015,"endOffset":132193,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDuplicateMemberName","ranges":[{"startOffset":132222,"endOffset":132385,"count":0}],"isBlockCoverage":false},{"functionName":"EnumInconsistentMemberValues","ranges":[{"startOffset":132419,"endOffset":132628,"count":0}],"isBlockCoverage":false},{"functionName":"EnumInvalidExplicitType","ranges":[{"startOffset":132657,"endOffset":132837,"count":0}],"isBlockCoverage":false},{"functionName":"EnumInvalidExplicitTypeUnknownSupplied","ranges":[{"startOffset":132881,"endOffset":133026,"count":0}],"isBlockCoverage":false},{"functionName":"EnumInvalidMemberInitializerPrimaryType","ranges":[{"startOffset":133071,"endOffset":133260,"count":0}],"isBlockCoverage":false},{"functionName":"EnumInvalidMemberInitializerSymbolType","ranges":[{"startOffset":133304,"endOffset":133436,"count":0}],"isBlockCoverage":false},{"functionName":"EnumInvalidMemberInitializerUnknownType","ranges":[{"startOffset":133481,"endOffset":133657,"count":0}],"isBlockCoverage":false},{"functionName":"EnumInvalidMemberName","ranges":[{"startOffset":133684,"endOffset":133899,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberMemberNotInitialized","ranges":[{"startOffset":133935,"endOffset":134072,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringMemberInconsistentlyInitialized","ranges":[{"startOffset":134119,"endOffset":134263,"count":0}],"isBlockCoverage":false},{"functionName":"UnexpectedReservedType","ranges":[{"startOffset":136507,"endOffset":136578,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedDeclareExportKind","ranges":[{"startOffset":137247,"endOffset":137394,"count":0}],"isBlockCoverage":false},{"functionName":"isEsModuleType","ranges":[{"startOffset":137564,"endOffset":137853,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeImportKind","ranges":[{"startOffset":137854,"endOffset":137959,"count":0}],"isBlockCoverage":false},{"functionName":"partition","ranges":[{"startOffset":138106,"endOffset":138311,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":138375,"endOffset":215319,"count":0}],"isBlockCoverage":false},{"functionName":"MissingClosingTagElement","ranges":[{"startOffset":220208,"endOffset":220303,"count":0}],"isBlockCoverage":false},{"functionName":"UnexpectedToken","ranges":[{"startOffset":220543,"endOffset":220679,"count":0}],"isBlockCoverage":false},{"functionName":"isFragment","ranges":[{"startOffset":220961,"endOffset":221096,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedJSXName","ranges":[{"startOffset":221097,"endOffset":221520,"count":0}],"isBlockCoverage":false},{"functionName":"jsx","ranges":[{"startOffset":221531,"endOffset":233866,"count":0}],"isBlockCoverage":false},{"functionName":"TypeScriptScope","ranges":[{"startOffset":233908,"endOffset":233984,"count":0}],"isBlockCoverage":false},{"functionName":"TypeScriptScopeHandler","ranges":[{"startOffset":234041,"endOffset":234115,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":234118,"endOffset":234220,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":234223,"endOffset":234337,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":234340,"endOffset":234464,"count":0}],"isBlockCoverage":false},{"functionName":"hasImport","ranges":[{"startOffset":234467,"endOffset":234782,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":234785,"endOffset":235789,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":235792,"endOffset":236407,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":236410,"endOffset":236783,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapParenthesizedExpression","ranges":[{"startOffset":236824,"endOffset":236941,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignable","ranges":[{"startOffset":236982,"endOffset":239630,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableObjectExpressionProp","ranges":[{"startOffset":239633,"endOffset":240193,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableList","ranges":[{"startOffset":240196,"endOffset":240887,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignable","ranges":[{"startOffset":240890,"endOffset":241983,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedList","ranges":[{"startOffset":241986,"endOffset":242060,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedListDeep","ranges":[{"startOffset":242063,"endOffset":242348,"count":0}],"isBlockCoverage":false},{"functionName":"parseSpread","ranges":[{"startOffset":242351,"endOffset":242574,"count":0}],"isBlockCoverage":false},{"functionName":"parseRestBinding","ranges":[{"startOffset":242577,"endOffset":242747,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingAtom","ranges":[{"startOffset":242750,"endOffset":243119,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingList","ranges":[{"startOffset":243122,"endOffset":244210,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingRestProperty","ranges":[{"startOffset":244213,"endOffset":244394,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingProperty","ranges":[{"startOffset":244397,"endOffset":244959,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignableListItem","ranges":[{"startOffset":244962,"endOffset":245296,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionParamType","ranges":[{"startOffset":245299,"endOffset":245352,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDefault","ranges":[{"startOffset":245355,"endOffset":245777,"count":0}],"isBlockCoverage":false},{"functionName":"isValidLVal","ranges":[{"startOffset":245780,"endOffset":246222,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalMemberExpression","ranges":[{"startOffset":246225,"endOffset":246328,"count":0}],"isBlockCoverage":false},{"functionName":"checkLVal","ranges":[{"startOffset":246331,"endOffset":248709,"count":0}],"isBlockCoverage":false},{"functionName":"checkIdentifier","ranges":[{"startOffset":248712,"endOffset":249381,"count":0}],"isBlockCoverage":false},{"functionName":"declareNameFromIdentifier","ranges":[{"startOffset":249384,"endOffset":249512,"count":0}],"isBlockCoverage":false},{"functionName":"checkToRestConversion","ranges":[{"startOffset":249515,"endOffset":249956,"count":0}],"isBlockCoverage":false},{"functionName":"checkCommaAfterRest","ranges":[{"startOffset":249959,"endOffset":250187,"count":0}],"isBlockCoverage":false},{"functionName":"nonNull","ranges":[{"startOffset":250190,"endOffset":250295,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":250296,"endOffset":250370,"count":0}],"isBlockCoverage":false},{"functionName":"AbstractMethodHasImplementation","ranges":[{"startOffset":250452,"endOffset":250563,"count":0}],"isBlockCoverage":false},{"functionName":"AbstractPropertyHasInitializer","ranges":[{"startOffset":250599,"endOffset":250713,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareAccessor","ranges":[{"startOffset":251431,"endOffset":251493,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateAccessibilityModifier","ranges":[{"startOffset":251714,"endOffset":251776,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateModifier","ranges":[{"startOffset":251799,"endOffset":251859,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyHeritageClauseType","ranges":[{"startOffset":251888,"endOffset":251943,"count":0}],"isBlockCoverage":false},{"functionName":"IncompatibleModifiers","ranges":[{"startOffset":252364,"endOffset":252465,"count":0}],"isBlockCoverage":false},{"functionName":"IndexSignatureHasAccessibility","ranges":[{"startOffset":252587,"endOffset":252684,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidModifierOnTypeMember","ranges":[{"startOffset":253066,"endOffset":253146,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidModifierOnTypeParameter","ranges":[{"startOffset":253182,"endOffset":253265,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidModifierOnTypeParameterPositions","ranges":[{"startOffset":253310,"endOffset":253431,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidModifiersOrder","ranges":[{"startOffset":253458,"endOffset":253573,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateElementHasAccessibility","ranges":[{"startOffset":254635,"endOffset":254732,"count":0}],"isBlockCoverage":false},{"functionName":"SingleTypeParameterWithoutTrailingComma","ranges":[{"startOffset":255434,"endOffset":255581,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedSignatureParameterKind","ranges":[{"startOffset":257007,"endOffset":257123,"count":0}],"isBlockCoverage":false},{"functionName":"keywordTypeFromName","ranges":[{"startOffset":257128,"endOffset":257739,"count":0}],"isBlockCoverage":false},{"functionName":"tsIsAccessModifier","ranges":[{"startOffset":257740,"endOffset":257867,"count":0}],"isBlockCoverage":false},{"functionName":"tsIsVarianceAnnotations","ranges":[{"startOffset":257868,"endOffset":257964,"count":0}],"isBlockCoverage":false},{"functionName":"typescript","ranges":[{"startOffset":257982,"endOffset":339938,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyLiteralEnum","ranges":[{"startOffset":339940,"endOffset":340317,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAmbientConstInitializer","ranges":[{"startOffset":340318,"endOffset":341136,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":341137,"endOffset":341394,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativeNumber","ranges":[{"startOffset":341395,"endOffset":341657,"count":0}],"isBlockCoverage":false},{"functionName":"isUncomputedMemberExpressionChain","ranges":[{"startOffset":341658,"endOffset":341925,"count":0}],"isBlockCoverage":false},{"functionName":"placeholders","ranges":[{"startOffset":342112,"endOffset":348876,"count":0}],"isBlockCoverage":false},{"functionName":"v8intrinsic","ranges":[{"startOffset":348896,"endOffset":349579,"count":0}],"isBlockCoverage":false},{"functionName":"validatePlugins","ranges":[{"startOffset":349698,"endOffset":354516,"count":0}],"isBlockCoverage":false},{"functionName":"createDefaultOptions","ranges":[{"startOffset":354664,"endOffset":355283,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":355284,"endOffset":356132,"count":0}],"isBlockCoverage":false},{"functionName":"checkProto","ranges":[{"startOffset":356179,"endOffset":356903,"count":0}],"isBlockCoverage":false},{"functionName":"shouldExitDescending","ranges":[{"startOffset":356906,"endOffset":357067,"count":0}],"isBlockCoverage":false},{"functionName":"getExpression","ranges":[{"startOffset":357070,"endOffset":357441,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":357444,"endOffset":357693,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionBase","ranges":[{"startOffset":357696,"endOffset":358191,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeAssignDisallowIn","ranges":[{"startOffset":358194,"endOffset":358360,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeAssignAllowIn","ranges":[{"startOffset":358363,"endOffset":358523,"count":0}],"isBlockCoverage":false},{"functionName":"setOptionalParametersError","ranges":[{"startOffset":358526,"endOffset":358784,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeAssign","ranges":[{"startOffset":358787,"endOffset":360876,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeConditional","ranges":[{"startOffset":360879,"endOffset":361241,"count":0}],"isBlockCoverage":false},{"functionName":"parseConditional","ranges":[{"startOffset":361244,"endOffset":361609,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeUnaryOrPrivate","ranges":[{"startOffset":361612,"endOffset":361761,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOps","ranges":[{"startOffset":361764,"endOffset":362107,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOp","ranges":[{"startOffset":362110,"endOffset":364025,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOpRightExpr","ranges":[{"startOffset":364028,"endOffset":364973,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOpBaseRightExpr","ranges":[{"startOffset":364976,"endOffset":365177,"count":0}],"isBlockCoverage":false},{"functionName":"parseHackPipeBody","ranges":[{"startOffset":365180,"endOffset":365733,"count":0}],"isBlockCoverage":false},{"functionName":"checkExponentialAfterUnary","ranges":[{"startOffset":365736,"endOffset":365882,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeUnary","ranges":[{"startOffset":365885,"endOffset":367604,"count":0}],"isBlockCoverage":false},{"functionName":"parseUpdate","ranges":[{"startOffset":367607,"endOffset":368374,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprSubscripts","ranges":[{"startOffset":368377,"endOffset":368716,"count":0}],"isBlockCoverage":false},{"functionName":"parseSubscripts","ranges":[{"startOffset":368719,"endOffset":369056,"count":0}],"isBlockCoverage":false},{"functionName":"parseSubscript","ranges":[{"startOffset":369059,"endOffset":370076,"count":0}],"isBlockCoverage":false},{"functionName":"parseMember","ranges":[{"startOffset":370079,"endOffset":370860,"count":0}],"isBlockCoverage":false},{"functionName":"parseBind","ranges":[{"startOffset":370863,"endOffset":371154,"count":0}],"isBlockCoverage":false},{"functionName":"parseCoverCallAndAsyncArrowHead","ranges":[{"startOffset":371157,"endOffset":372682,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedArguments","ranges":[{"startOffset":372685,"endOffset":372807,"count":0}],"isBlockCoverage":false},{"functionName":"parseTaggedTemplateExpression","ranges":[{"startOffset":372810,"endOffset":373145,"count":0}],"isBlockCoverage":false},{"functionName":"atPossibleAsyncArrow","ranges":[{"startOffset":373148,"endOffset":373422,"count":0}],"isBlockCoverage":false},{"functionName":"finishCallExpression","ranges":[{"startOffset":373425,"endOffset":373921,"count":0}],"isBlockCoverage":false},{"functionName":"parseCallExpressionArguments","ranges":[{"startOffset":373924,"endOffset":374684,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseAsyncArrow","ranges":[{"startOffset":374687,"endOffset":374773,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsyncArrowFromCallExpression","ranges":[{"startOffset":374776,"endOffset":375263,"count":0}],"isBlockCoverage":false},{"functionName":"parseNoCallExpr","ranges":[{"startOffset":375266,"endOffset":375402,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprAtom","ranges":[{"startOffset":375405,"endOffset":380987,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopicReferenceThenEqualsSign","ranges":[{"startOffset":380990,"endOffset":381473,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopicReference","ranges":[{"startOffset":381476,"endOffset":381727,"count":0}],"isBlockCoverage":false},{"functionName":"finishTopicReference","ranges":[{"startOffset":381730,"endOffset":382388,"count":0}],"isBlockCoverage":false},{"functionName":"testTopicReferenceConfiguration","ranges":[{"startOffset":382391,"endOffset":382795,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsyncArrowUnaryFunction","ranges":[{"startOffset":382798,"endOffset":383185,"count":0}],"isBlockCoverage":false},{"functionName":"parseDo","ranges":[{"startOffset":383188,"endOffset":383697,"count":0}],"isBlockCoverage":false},{"functionName":"parseSuper","ranges":[{"startOffset":383700,"endOffset":384215,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateName","ranges":[{"startOffset":384218,"endOffset":384514,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionOrFunctionSent","ranges":[{"startOffset":384517,"endOffset":385017,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetaProperty","ranges":[{"startOffset":385020,"endOffset":385452,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportMetaProperty","ranges":[{"startOffset":385455,"endOffset":386360,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralAtNode","ranges":[{"startOffset":386363,"endOffset":386633,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteral","ranges":[{"startOffset":386636,"endOffset":386757,"count":0}],"isBlockCoverage":false},{"functionName":"parseStringLiteral","ranges":[{"startOffset":386760,"endOffset":386845,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumericLiteral","ranges":[{"startOffset":386848,"endOffset":386935,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigIntLiteral","ranges":[{"startOffset":386938,"endOffset":387023,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecimalLiteral","ranges":[{"startOffset":387026,"endOffset":387113,"count":0}],"isBlockCoverage":false},{"functionName":"parseRegExpLiteral","ranges":[{"startOffset":387116,"endOffset":387416,"count":0}],"isBlockCoverage":false},{"functionName":"parseBooleanLiteral","ranges":[{"startOffset":387419,"endOffset":387579,"count":0}],"isBlockCoverage":false},{"functionName":"parseNullLiteral","ranges":[{"startOffset":387582,"endOffset":387707,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenAndDistinguishExpression","ranges":[{"startOffset":387710,"endOffset":390339,"count":0}],"isBlockCoverage":false},{"functionName":"wrapParenthesis","ranges":[{"startOffset":390342,"endOffset":390860,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseArrow","ranges":[{"startOffset":390863,"endOffset":390932,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrow","ranges":[{"startOffset":390935,"endOffset":391006,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenItem","ranges":[{"startOffset":391009,"endOffset":391062,"count":0}],"isBlockCoverage":false},{"functionName":"parseNewOrNewTarget","ranges":[{"startOffset":391065,"endOffset":391576,"count":0}],"isBlockCoverage":false},{"functionName":"parseNew","ranges":[{"startOffset":391579,"endOffset":391858,"count":0}],"isBlockCoverage":false},{"functionName":"parseNewCallee","ranges":[{"startOffset":391861,"endOffset":392148,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateElement","ranges":[{"startOffset":392151,"endOffset":393100,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplate","ranges":[{"startOffset":393103,"endOffset":393594,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateSubstitution","ranges":[{"startOffset":393597,"endOffset":393665,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectLike","ranges":[{"startOffset":393668,"endOffset":395139,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailingCommaExtraToNode","ranges":[{"startOffset":395142,"endOffset":395337,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAsyncOrAccessorProp","ranges":[{"startOffset":395340,"endOffset":395506,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyDefinition","ranges":[{"startOffset":395509,"endOffset":397345,"count":0}],"isBlockCoverage":false},{"functionName":"getGetterSetterExpectedParamCount","ranges":[{"startOffset":397348,"endOffset":397437,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectOrClassMethodParams","ranges":[{"startOffset":397440,"endOffset":397508,"count":0}],"isBlockCoverage":false},{"functionName":"checkGetterSetterParams","ranges":[{"startOffset":397511,"endOffset":398030,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectMethod","ranges":[{"startOffset":398033,"endOffset":398554,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectProperty","ranges":[{"startOffset":398557,"endOffset":399744,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjPropValue","ranges":[{"startOffset":399747,"endOffset":400071,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyName","ranges":[{"startOffset":400074,"endOffset":401500,"count":0}],"isBlockCoverage":false},{"functionName":"initFunction","ranges":[{"startOffset":401503,"endOffset":401610,"count":0}],"isBlockCoverage":false},{"functionName":"parseMethod","ranges":[{"startOffset":401613,"endOffset":402145,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayLike","ranges":[{"startOffset":402148,"endOffset":402713,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrowExpression","ranges":[{"startOffset":402716,"endOffset":403485,"count":0}],"isBlockCoverage":false},{"functionName":"setArrowFunctionParameters","ranges":[{"startOffset":403488,"endOffset":403638,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBodyAndFinish","ranges":[{"startOffset":403641,"endOffset":403794,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBody","ranges":[{"startOffset":403797,"endOffset":405086,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameter","ranges":[{"startOffset":405089,"endOffset":405157,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParamList","ranges":[{"startOffset":405160,"endOffset":405331,"count":0}],"isBlockCoverage":false},{"functionName":"checkParams","ranges":[{"startOffset":405334,"endOffset":405670,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprList","ranges":[{"startOffset":405673,"endOffset":406192,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprListItem","ranges":[{"startOffset":406195,"endOffset":407078,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifier","ranges":[{"startOffset":407081,"endOffset":407244,"count":0}],"isBlockCoverage":false},{"functionName":"createIdentifier","ranges":[{"startOffset":407247,"endOffset":407387,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifierName","ranges":[{"startOffset":407390,"endOffset":407893,"count":0}],"isBlockCoverage":false},{"functionName":"checkReservedWord","ranges":[{"startOffset":407896,"endOffset":409196,"count":0}],"isBlockCoverage":false},{"functionName":"recordAwaitIfAllowed","ranges":[{"startOffset":409199,"endOffset":409474,"count":0}],"isBlockCoverage":false},{"functionName":"parseAwait","ranges":[{"startOffset":409477,"endOffset":410110,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbiguousAwait","ranges":[{"startOffset":410113,"endOffset":410431,"count":0}],"isBlockCoverage":false},{"functionName":"parseYield","ranges":[{"startOffset":410434,"endOffset":411113,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportCall","ranges":[{"startOffset":411116,"endOffset":411653,"count":0}],"isBlockCoverage":false},{"functionName":"checkPipelineAtInfixOperator","ranges":[{"startOffset":411656,"endOffset":411926,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBodyInStyle","ranges":[{"startOffset":411929,"endOffset":412413,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleReference","ranges":[{"startOffset":412416,"endOffset":412684,"count":0}],"isBlockCoverage":false},{"functionName":"checkSmartPipeTopicBodyEarlyErrors","ranges":[{"startOffset":412687,"endOffset":412961,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicBindingContext","ranges":[{"startOffset":412964,"endOffset":413276,"count":0}],"isBlockCoverage":false},{"functionName":"withSmartMixTopicForbiddingContext","ranges":[{"startOffset":413279,"endOffset":413747,"count":0}],"isBlockCoverage":false},{"functionName":"withSoloAwaitPermittingContext","ranges":[{"startOffset":413750,"endOffset":414004,"count":0}],"isBlockCoverage":false},{"functionName":"allowInAnd","ranges":[{"startOffset":414007,"endOffset":414311,"count":0}],"isBlockCoverage":false},{"functionName":"disallowInAnd","ranges":[{"startOffset":414314,"endOffset":414625,"count":0}],"isBlockCoverage":false},{"functionName":"registerTopicReference","ranges":[{"startOffset":414628,"endOffset":414705,"count":0}],"isBlockCoverage":false},{"functionName":"topicReferenceIsAllowedInCurrentContext","ranges":[{"startOffset":414708,"endOffset":414821,"count":0}],"isBlockCoverage":false},{"functionName":"topicReferenceWasUsedInCurrentContext","ranges":[{"startOffset":414824,"endOffset":414973,"count":0}],"isBlockCoverage":false},{"functionName":"parseFSharpPipelineBody","ranges":[{"startOffset":414976,"endOffset":415410,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleExpression","ranges":[{"startOffset":415413,"endOffset":415923,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyNamePrefixOperator","ranges":[{"startOffset":415926,"endOffset":415966,"count":0}],"isBlockCoverage":false},{"functionName":"babel7CompatTokens","ranges":[{"startOffset":416137,"endOffset":419477,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopLevel","ranges":[{"startOffset":419529,"endOffset":419806,"count":0}],"isBlockCoverage":false},{"functionName":"parseProgram","ranges":[{"startOffset":419809,"endOffset":420698,"count":0}],"isBlockCoverage":false},{"functionName":"stmtToDirective","ranges":[{"startOffset":420701,"endOffset":421398,"count":0}],"isBlockCoverage":false},{"functionName":"parseInterpreterDirective","ranges":[{"startOffset":421401,"endOffset":421631,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":421634,"endOffset":421751,"count":0}],"isBlockCoverage":false},{"functionName":"chStartsBindingIdentifier","ranges":[{"startOffset":421754,"endOffset":422215,"count":0}],"isBlockCoverage":false},{"functionName":"chStartsBindingPattern","ranges":[{"startOffset":422218,"endOffset":422286,"count":0}],"isBlockCoverage":false},{"functionName":"hasFollowingBindingAtom","ranges":[{"startOffset":422289,"endOffset":422502,"count":0}],"isBlockCoverage":false},{"functionName":"hasInLineFollowingBindingIdentifierOrBrace","ranges":[{"startOffset":422505,"endOffset":422722,"count":0}],"isBlockCoverage":false},{"functionName":"startsUsingForOf","ranges":[{"startOffset":422725,"endOffset":423032,"count":0}],"isBlockCoverage":false},{"functionName":"startsAwaitUsing","ranges":[{"startOffset":423035,"endOffset":423426,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleItem","ranges":[{"startOffset":423429,"endOffset":423503,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatementListItem","ranges":[{"startOffset":423506,"endOffset":423633,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatementOrSloppyAnnexBFunctionDeclaration","ranges":[{"startOffset":423636,"endOffset":423920,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatement","ranges":[{"startOffset":423923,"endOffset":423984,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatementLike","ranges":[{"startOffset":423987,"endOffset":424182,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatementContent","ranges":[{"startOffset":424185,"endOffset":429407,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleNodeAllowed","ranges":[{"startOffset":429410,"endOffset":429574,"count":0}],"isBlockCoverage":false},{"functionName":"decoratorsEnabledBeforeExport","ranges":[{"startOffset":429577,"endOffset":429787,"count":0}],"isBlockCoverage":false},{"functionName":"maybeTakeDecorators","ranges":[{"startOffset":429790,"endOffset":430446,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLeadingDecorator","ranges":[{"startOffset":430449,"endOffset":430507,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorators","ranges":[{"startOffset":430510,"endOffset":431031,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorator","ranges":[{"startOffset":431034,"endOffset":432532,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDecoratorArguments","ranges":[{"startOffset":432535,"endOffset":432856,"count":0}],"isBlockCoverage":false},{"functionName":"parseBreakContinueStatement","ranges":[{"startOffset":432859,"endOffset":433199,"count":0}],"isBlockCoverage":false},{"functionName":"verifyBreakContinue","ranges":[{"startOffset":433202,"endOffset":433750,"count":0}],"isBlockCoverage":false},{"functionName":"parseDebuggerStatement","ranges":[{"startOffset":433753,"endOffset":433881,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaderExpression","ranges":[{"startOffset":433884,"endOffset":434011,"count":0}],"isBlockCoverage":false},{"functionName":"parseDoWhileStatement","ranges":[{"startOffset":434014,"endOffset":434357,"count":0}],"isBlockCoverage":false},{"functionName":"parseForStatement","ranges":[{"startOffset":434360,"endOffset":437069,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionStatement","ranges":[{"startOffset":437072,"endOffset":437247,"count":0}],"isBlockCoverage":false},{"functionName":"parseIfStatement","ranges":[{"startOffset":437250,"endOffset":437567,"count":0}],"isBlockCoverage":false},{"functionName":"parseReturnStatement","ranges":[{"startOffset":437570,"endOffset":437972,"count":0}],"isBlockCoverage":false},{"functionName":"parseSwitchStatement","ranges":[{"startOffset":437975,"endOffset":439125,"count":0}],"isBlockCoverage":false},{"functionName":"parseThrowStatement","ranges":[{"startOffset":439128,"endOffset":439410,"count":0}],"isBlockCoverage":false},{"functionName":"parseCatchClauseParam","ranges":[{"startOffset":439413,"endOffset":439650,"count":0}],"isBlockCoverage":false},{"functionName":"parseTryStatement","ranges":[{"startOffset":439653,"endOffset":440457,"count":0}],"isBlockCoverage":false},{"functionName":"parseVarStatement","ranges":[{"startOffset":440460,"endOffset":440687,"count":0}],"isBlockCoverage":false},{"functionName":"parseWhileStatement","ranges":[{"startOffset":440690,"endOffset":440990,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithStatement","ranges":[{"startOffset":440993,"endOffset":441318,"count":0}],"isBlockCoverage":false},{"functionName":"parseEmptyStatement","ranges":[{"startOffset":441321,"endOffset":441421,"count":0}],"isBlockCoverage":false},{"functionName":"parseLabeledStatement","ranges":[{"startOffset":441424,"endOffset":442410,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionStatement","ranges":[{"startOffset":442413,"endOffset":442574,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlock","ranges":[{"startOffset":442577,"endOffset":443049,"count":0}],"isBlockCoverage":false},{"functionName":"isValidDirective","ranges":[{"startOffset":443052,"endOffset":443212,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockBody","ranges":[{"startOffset":443215,"endOffset":443486,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockOrModuleBlockBody","ranges":[{"startOffset":443489,"endOffset":444462,"count":0}],"isBlockCoverage":false},{"functionName":"parseFor","ranges":[{"startOffset":444465,"endOffset":444906,"count":0}],"isBlockCoverage":false},{"functionName":"parseForIn","ranges":[{"startOffset":444909,"endOffset":445987,"count":0}],"isBlockCoverage":false},{"functionName":"parseVar","ranges":[{"startOffset":445990,"endOffset":447024,"count":0}],"isBlockCoverage":false},{"functionName":"parseVarId","ranges":[{"startOffset":447027,"endOffset":447421,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsyncFunctionExpression","ranges":[{"startOffset":447424,"endOffset":447504,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunction","ranges":[{"startOffset":447507,"endOffset":448762,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionId","ranges":[{"startOffset":448765,"endOffset":448889,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionParams","ranges":[{"startOffset":448892,"endOffset":449134,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunctionStatementId","ranges":[{"startOffset":449137,"endOffset":449387,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":449390,"endOffset":449766,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":449769,"endOffset":449854,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":449857,"endOffset":449905,"count":0}],"isBlockCoverage":false},{"functionName":"nameIsConstructor","ranges":[{"startOffset":449908,"endOffset":450067,"count":0}],"isBlockCoverage":false},{"functionName":"isNonstaticConstructor","ranges":[{"startOffset":450070,"endOffset":450191,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassBody","ranges":[{"startOffset":450194,"endOffset":451537,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberFromModifier","ranges":[{"startOffset":451540,"endOffset":452202,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMember","ranges":[{"startOffset":452205,"endOffset":452593,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberWithIsStatic","ranges":[{"startOffset":452596,"endOffset":456961,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassElementName","ranges":[{"startOffset":456964,"endOffset":457505,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassStaticBlock","ranges":[{"startOffset":457508,"endOffset":458117,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassProperty","ranges":[{"startOffset":458120,"endOffset":458342,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateProperty","ranges":[{"startOffset":458345,"endOffset":458574,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassAccessorProperty","ranges":[{"startOffset":458577,"endOffset":458988,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassMethod","ranges":[{"startOffset":458991,"endOffset":459215,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateMethod","ranges":[{"startOffset":459218,"endOffset":459588,"count":0}],"isBlockCoverage":false},{"functionName":"declareClassPrivateMethodInScope","ranges":[{"startOffset":459591,"endOffset":459740,"count":0}],"isBlockCoverage":false},{"functionName":"parsePostMemberNameModifiers","ranges":[{"startOffset":459743,"endOffset":459788,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassPrivateProperty","ranges":[{"startOffset":459791,"endOffset":459941,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassProperty","ranges":[{"startOffset":459944,"endOffset":460080,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassAccessorProperty","ranges":[{"startOffset":460083,"endOffset":460235,"count":0}],"isBlockCoverage":false},{"functionName":"parseInitializer","ranges":[{"startOffset":460238,"endOffset":460534,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassId","ranges":[{"startOffset":460537,"endOffset":460965,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassSuper","ranges":[{"startOffset":460968,"endOffset":461067,"count":0}],"isBlockCoverage":false},{"functionName":"parseExport","ranges":[{"startOffset":461070,"endOffset":463533,"count":0}],"isBlockCoverage":false},{"functionName":"eatExportStar","ranges":[{"startOffset":463536,"endOffset":463586,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDefaultSpecifier","ranges":[{"startOffset":463589,"endOffset":464123,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamespaceSpecifier","ranges":[{"startOffset":464126,"endOffset":464612,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamedSpecifiers","ranges":[{"startOffset":464615,"endOffset":465080,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDeclaration","ranges":[{"startOffset":465083,"endOffset":465412,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":465415,"endOffset":465586,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDefaultExpression","ranges":[{"startOffset":465589,"endOffset":466537,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDeclaration","ranges":[{"startOffset":466540,"endOffset":466734,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":466737,"endOffset":467753,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportFrom","ranges":[{"startOffset":467756,"endOffset":468064,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseExportDeclaration","ranges":[{"startOffset":468067,"endOffset":468874,"count":0}],"isBlockCoverage":false},{"functionName":"checkExport","ranges":[{"startOffset":468877,"endOffset":470893,"count":0}],"isBlockCoverage":false},{"functionName":"checkDeclaration","ranges":[{"startOffset":470896,"endOffset":471594,"count":0}],"isBlockCoverage":false},{"functionName":"checkDuplicateExports","ranges":[{"startOffset":471597,"endOffset":471948,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportSpecifiers","ranges":[{"startOffset":471951,"endOffset":472505,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportSpecifier","ranges":[{"startOffset":472508,"endOffset":472893,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleExportName","ranges":[{"startOffset":472896,"endOffset":473309,"count":0}],"isBlockCoverage":false},{"functionName":"isJSONModuleImport","ranges":[{"startOffset":473312,"endOffset":473604,"count":0}],"isBlockCoverage":false},{"functionName":"checkImportReflection","ranges":[{"startOffset":473607,"endOffset":474549,"count":0}],"isBlockCoverage":false},{"functionName":"checkJSONModuleImport","ranges":[{"startOffset":474552,"endOffset":475401,"count":0}],"isBlockCoverage":false},{"functionName":"isPotentialImportPhase","ranges":[{"startOffset":475404,"endOffset":475560,"count":0}],"isBlockCoverage":false},{"functionName":"applyImportPhase","ranges":[{"startOffset":475563,"endOffset":476164,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeImportPhase","ranges":[{"startOffset":476167,"endOffset":476865,"count":0}],"isBlockCoverage":false},{"functionName":"isPrecedingIdImportPhase","ranges":[{"startOffset":476868,"endOffset":477048,"count":0}],"isBlockCoverage":false},{"functionName":"parseImport","ranges":[{"startOffset":477051,"endOffset":477257,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifiersAndAfter","ranges":[{"startOffset":477260,"endOffset":477724,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSourceAndAttributes","ranges":[{"startOffset":477727,"endOffset":478130,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSource","ranges":[{"startOffset":478133,"endOffset":478236,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifierLocal","ranges":[{"startOffset":478239,"endOffset":478410,"count":0}],"isBlockCoverage":false},{"functionName":"finishImportSpecifier","ranges":[{"startOffset":478413,"endOffset":478592,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportAttributes","ranges":[{"startOffset":478595,"endOffset":479512,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleAttributes","ranges":[{"startOffset":479515,"endOffset":480322,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseImportAttributes","ranges":[{"startOffset":480325,"endOffset":481408,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseDefaultImportSpecifier","ranges":[{"startOffset":481411,"endOffset":481936,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseStarImportSpecifier","ranges":[{"startOffset":481939,"endOffset":482226,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamedImportSpecifiers","ranges":[{"startOffset":482229,"endOffset":483002,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifier","ranges":[{"startOffset":483005,"endOffset":483669,"count":0}],"isBlockCoverage":false},{"functionName":"isThisParam","ranges":[{"startOffset":483672,"endOffset":483761,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":483805,"endOffset":484086,"count":0}],"isBlockCoverage":false},{"functionName":"getScopeHandler","ranges":[{"startOffset":484089,"endOffset":484137,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":484140,"endOffset":484447,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":484450,"endOffset":485343,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":485344,"endOffset":485536,"count":0}],"isBlockCoverage":false},{"functionName":"generateExportedTokenTypes","ranges":[{"startOffset":485537,"endOffset":485781,"count":1},{"startOffset":485678,"endOffset":485758,"count":145}],"isBlockCoverage":true},{"functionName":"getParser","ranges":[{"startOffset":485831,"endOffset":486360,"count":0}],"isBlockCoverage":false},{"functionName":"getParserClass","ranges":[{"startOffset":486397,"endOffset":486818,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/coverage-v8/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":112}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":1},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3225,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3422,"endOffset":3679,"count":1},{"startOffset":3467,"endOffset":3505,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3796,"endOffset":3842,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4007,"endOffset":4210,"count":1},{"startOffset":4143,"endOffset":4208,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4375,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4624,"endOffset":4726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/coverage-v8/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6289,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":1},{"startOffset":1108,"endOffset":1213,"count":15}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4609,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4602,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4695,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5063,"endOffset":5450,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5568,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5793,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6021,"endOffset":6197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/coverage-v8/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/glob/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19445,"count":1}],"isBlockCoverage":true},{"functionName":"glob","ranges":[{"startOffset":2096,"endOffset":2407,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2517,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"glob.hasMagic","ranges":[{"startOffset":2763,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"Glob","ranges":[{"startOffset":3158,"endOffset":4588,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._finish","ranges":[{"startOffset":4615,"endOffset":4818,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpath","ranges":[{"startOffset":4847,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpathSet","ranges":[{"startOffset":5194,"endOffset":6010,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._mark","ranges":[{"startOffset":6035,"endOffset":6081,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._makeAbs","ranges":[{"startOffset":6109,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.abort","ranges":[{"startOffset":6183,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.pause","ranges":[{"startOffset":6266,"endOffset":6353,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.resume","ranges":[{"startOffset":6379,"endOffset":6961,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._process","ranges":[{"startOffset":6989,"endOffset":8838,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir","ranges":[{"startOffset":8873,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir2","ranges":[{"startOffset":9145,"endOffset":11189,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._emitMatch","ranges":[{"startOffset":11219,"endOffset":11787,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirInGlobStar","ranges":[{"startOffset":11825,"endOffset":12627,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdir","ranges":[{"startOffset":12655,"endOffset":13172,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCb","ranges":[{"startOffset":13174,"endOffset":13354,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirEntries","ranges":[{"startOffset":13389,"endOffset":13886,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirError","ranges":[{"startOffset":13919,"endOffset":15004,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar","ranges":[{"startOffset":15040,"endOffset":15270,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar2","ranges":[{"startOffset":15308,"endOffset":16455,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple","ranges":[{"startOffset":16489,"endOffset":16745,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple2","ranges":[{"startOffset":16779,"endOffset":17461,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat","ranges":[{"startOffset":17528,"endOffset":18919,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat2","ranges":[{"startOffset":18945,"endOffset":19444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/fs.realpath/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"newError","ranges":[{"startOffset":386,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":550,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":867,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"monkeypatch","ranges":[{"startOffset":1125,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"unmonkeypatch","ranges":[{"startOffset":1212,"endOffset":1307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/fs.realpath/old.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8542,"count":1},{"startOffset":1341,"endOffset":1377,"count":0},{"startOffset":2534,"endOffset":2583,"count":0},{"startOffset":2754,"endOffset":2793,"count":0}],"isBlockCoverage":true},{"functionName":"rethrow","ranges":[{"startOffset":1380,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":2226,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":2818,"endOffset":5360,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":5383,"endOffset":8540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26266,"count":1},{"startOffset":134,"endOffset":151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72,"endOffset":130,"count":1},{"startOffset":117,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1148,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1255,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1337,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1482,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1688,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2732,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2795,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":3070,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3706,"endOffset":3720,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":3754,"endOffset":5005,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":5053,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5714,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5833,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":6436,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7337,"endOffset":17832,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17853,"endOffset":17940,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17978,"endOffset":19165,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":19185,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":19469,"endOffset":20941,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":21192,"endOffset":26081,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":26115,"endOffset":26179,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":26181,"endOffset":26265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4792,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":337,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":447,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":686,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1079,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1547,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2126,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2164,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2216,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2271,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2311,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2352,"endOffset":4790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/concat-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1},{"startOffset":255,"endOffset":343,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":258,"endOffset":343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"507","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/path-is-absolute/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1},{"startOffset":542,"endOffset":549,"count":0}],"isBlockCoverage":true},{"functionName":"posix","ranges":[{"startOffset":15,"endOffset":71,"count":0}],"isBlockCoverage":false},{"functionName":"win32","ranges":[{"startOffset":73,"endOffset":486,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/glob/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12020,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":501,"endOffset":790,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync","ranges":[{"startOffset":792,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._finish","ranges":[{"startOffset":1450,"endOffset":2010,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._process","ranges":[{"startOffset":2043,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processReaddir","ranges":[{"startOffset":3670,"endOffset":5628,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._emitMatch","ranges":[{"startOffset":5663,"endOffset":6051,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirInGlobStar","ranges":[{"startOffset":6094,"endOffset":6806,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdir","ranges":[{"startOffset":6838,"endOffset":7269,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirEntries","ranges":[{"startOffset":7308,"endOffset":7789,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirError","ranges":[{"startOffset":7826,"endOffset":8690,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processGlobStar","ranges":[{"startOffset":8730,"endOffset":9828,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processSimple","ranges":[{"startOffset":9866,"endOffset":10612,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._stat","ranges":[{"startOffset":10683,"endOffset":11863,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._mark","ranges":[{"startOffset":11892,"endOffset":11938,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._makeAbs","ranges":[{"startOffset":11970,"endOffset":12019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/glob/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6149,"count":1}],"isBlockCoverage":true},{"functionName":"ownProp","ranges":[{"startOffset":195,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"alphasort","ranges":[{"startOffset":457,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"setupIgnores","ranges":[{"startOffset":522,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreMap","ranges":[{"startOffset":796,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"setopts","ranges":[{"startOffset":1091,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":3398,"endOffset":4715,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4717,"endOffset":5168,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbs","ranges":[{"startOffset":5189,"endOffset":5544,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":5740,"endOffset":5954,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIgnored","ranges":[{"startOffset":5956,"endOffset":6148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/inflight/inflight.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"inflight","ranges":[{"startOffset":125,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"makeres","ranges":[{"startOffset":276,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":1225,"endOffset":1364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":301,"endOffset":904,"count":3},{"startOffset":344,"endOffset":365,"count":0},{"startOffset":403,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":539,"endOffset":902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":430,"endOffset":610,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":461,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"onceStrict","ranges":[{"startOffset":612,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@istanbuljs/schema/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10972,"count":1}],"isBlockCoverage":true},{"functionName":"get default","ranges":[{"startOffset":541,"endOffset":583,"count":1}],"isBlockCoverage":true},{"functionName":"defaultsReducer","ranges":[{"startOffset":10310,"endOffset":10548,"count":5},{"startOffset":10469,"endOffset":10495,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10624,"endOffset":10959,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10711,"endOffset":10927,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10853,"endOffset":10884,"count":5}],"isBlockCoverage":true}]},{"scriptId":"514","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@istanbuljs/schema/default-exclude.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":125,"endOffset":156,"count":6}],"isBlockCoverage":true}]},{"scriptId":"515","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@istanbuljs/schema/default-extension.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":88,"count":1}],"isBlockCoverage":true}]},{"scriptId":"516","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/coverage-v8/node_modules/test-exclude/is-outside-dir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":174,"count":1},{"startOffset":108,"endOffset":173,"count":0}],"isBlockCoverage":true}]},{"scriptId":"517","url":"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@vitest/coverage-v8/node_modules/test-exclude/is-outside-dir-win32.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":131,"endOffset":237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7791,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1180,"endOffset":1658,"count":120}],"isBlockCoverage":true},{"functionName":"CB","ranges":[{"startOffset":1271,"endOffset":1653,"count":120},{"startOffset":1304,"endOffset":1626,"count":0}],"isBlockCoverage":true},{"functionName":"_rimraf","ranges":[{"startOffset":1664,"endOffset":2551,"count":120}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1830,"endOffset":2546,"count":120},{"startOffset":1862,"endOffset":2080,"count":0},{"startOffset":2111,"endOffset":2171,"count":5},{"startOffset":2171,"endOffset":2545,"count":115}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2192,"endOffset":2539,"count":115},{"startOffset":2219,"endOffset":2501,"count":0}],"isBlockCoverage":true},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2557,"endOffset":3007,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":3013,"endOffset":3322,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3084,"endOffset":3317,"count":5},{"startOffset":3209,"endOffset":3283,"count":0},{"startOffset":3290,"endOffset":3316,"count":0}],"isBlockCoverage":true},{"functionName":"_rmchildren","ranges":[{"startOffset":3328,"endOffset":4112,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3453,"endOffset":4107,"count":5},{"startOffset":3492,"endOffset":3513,"count":0},{"startOffset":3584,"endOffset":3613,"count":0},{"startOffset":3753,"endOffset":4106,"count":118}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3860,"endOffset":4093,"count":118},{"startOffset":3901,"endOffset":3908,"count":0},{"startOffset":3929,"endOffset":3998,"count":0},{"startOffset":4062,"endOffset":4084,"count":5}],"isBlockCoverage":true},{"functionName":"rimrafPromises","ranges":[{"startOffset":4118,"endOffset":4325,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4181,"endOffset":4320,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4231,"endOffset":4313,"count":2},{"startOffset":4267,"endOffset":4286,"count":0}],"isBlockCoverage":true},{"functionName":"rimrafSync","ranges":[{"startOffset":4331,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":5050,"endOffset":5700,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5706,"endOffset":7250,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":7256,"endOffset":7727,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"520","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41,"count":1}],"isBlockCoverage":true}]},{"scriptId":"521","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":1}],"isBlockCoverage":true}]},{"scriptId":"522","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7,"count":1}],"isBlockCoverage":true}]},{"scriptId":"523","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":7}],"isBlockCoverage":true}]},{"scriptId":"524","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41,"count":1}],"isBlockCoverage":true}]},{"scriptId":"525","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":7}],"isBlockCoverage":true}]},{"scriptId":"526","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7,"count":2}],"isBlockCoverage":true}]},{"scriptId":"527","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43,"count":1}],"isBlockCoverage":true}]},{"scriptId":"528","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"529","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"530","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":1}],"isBlockCoverage":true}]},{"scriptId":"531","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36,"count":1}],"isBlockCoverage":true}]},{"scriptId":"532","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41,"count":1}],"isBlockCoverage":true}]},{"scriptId":"533","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"534","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47,"count":1}],"isBlockCoverage":true}]},{"scriptId":"535","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16,"count":1}],"isBlockCoverage":true}]},{"scriptId":"536","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"537","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":14}],"isBlockCoverage":true}]},{"scriptId":"538","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":5}],"isBlockCoverage":true}]},{"scriptId":"539","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47,"count":5}],"isBlockCoverage":true}]},{"scriptId":"540","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38,"count":1}],"isBlockCoverage":true}]},{"scriptId":"541","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"542","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16,"count":12}],"isBlockCoverage":true}]},{"scriptId":"543","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"544","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33,"count":1}],"isBlockCoverage":true}]},{"scriptId":"545","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"546","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":22}],"isBlockCoverage":true}]},{"scriptId":"547","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41,"count":1}],"isBlockCoverage":true}]},{"scriptId":"548","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36,"count":1}],"isBlockCoverage":true}]},{"scriptId":"549","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41,"count":1}],"isBlockCoverage":true}]},{"scriptId":"550","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"551","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21,"count":1}],"isBlockCoverage":true}]},{"scriptId":"552","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7,"count":1}],"isBlockCoverage":true}]},{"scriptId":"553","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":48,"count":1}],"isBlockCoverage":true}]},{"scriptId":"554","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47,"count":1}],"isBlockCoverage":true}]},{"scriptId":"555","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38,"count":3}],"isBlockCoverage":true}]},{"scriptId":"556","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":6}],"isBlockCoverage":true}]},{"scriptId":"557","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":4}],"isBlockCoverage":true}]},{"scriptId":"558","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33,"count":3}],"isBlockCoverage":true}]},{"scriptId":"559","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34,"count":1}],"isBlockCoverage":true}]},{"scriptId":"560","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29,"count":1}],"isBlockCoverage":true}]},{"scriptId":"561","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54,"count":1}],"isBlockCoverage":true}]},{"scriptId":"562","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7,"count":11}],"isBlockCoverage":true}]},{"scriptId":"563","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17,"count":1}],"isBlockCoverage":true}]},{"scriptId":"564","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17,"count":9}],"isBlockCoverage":true}]},{"scriptId":"565","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29,"count":7}],"isBlockCoverage":true}]},{"scriptId":"566","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":63,"count":1}],"isBlockCoverage":true}]},{"scriptId":"567","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":62,"count":1}],"isBlockCoverage":true}]},{"scriptId":"568","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27,"count":1}],"isBlockCoverage":true}]},{"scriptId":"569","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20,"count":1}],"isBlockCoverage":true}]},{"scriptId":"570","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5,"count":1}],"isBlockCoverage":true}]},{"scriptId":"571","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"572","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"573","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"574","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26,"count":1}],"isBlockCoverage":true}]},{"scriptId":"575","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35,"count":1}],"isBlockCoverage":true}]},{"scriptId":"576","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32,"count":1}],"isBlockCoverage":true}]},{"scriptId":"577","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32,"count":1}],"isBlockCoverage":true}]},{"scriptId":"578","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28,"count":1}],"isBlockCoverage":true}]},{"scriptId":"579","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25,"count":1}],"isBlockCoverage":true}]},{"scriptId":"580","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25,"count":1}],"isBlockCoverage":true}]},{"scriptId":"581","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27,"count":1}],"isBlockCoverage":true}]},{"scriptId":"582","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28,"count":1}],"isBlockCoverage":true}]},{"scriptId":"583","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41,"count":1}],"isBlockCoverage":true}]},{"scriptId":"584","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"585","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"586","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32,"count":1}],"isBlockCoverage":true}]},{"scriptId":"587","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"588","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17,"count":1}],"isBlockCoverage":true}]},{"scriptId":"589","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":4}],"isBlockCoverage":true}]},{"scriptId":"590","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22,"count":1}],"isBlockCoverage":true}]},{"scriptId":"591","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5,"count":9}],"isBlockCoverage":true}]},{"scriptId":"592","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17,"count":1}],"isBlockCoverage":true}]},{"scriptId":"593","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":10}],"isBlockCoverage":true}]},{"scriptId":"594","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"595","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30,"count":1}],"isBlockCoverage":true}]},{"scriptId":"596","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21,"count":1}],"isBlockCoverage":true}]},{"scriptId":"597","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17,"count":1}],"isBlockCoverage":true}]},{"scriptId":"598","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22,"count":8}],"isBlockCoverage":true}]},{"scriptId":"599","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20,"count":1}],"isBlockCoverage":true}]},{"scriptId":"600","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41,"count":1}],"isBlockCoverage":true}]},{"scriptId":"601","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"602","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32,"count":1}],"isBlockCoverage":true}]},{"scriptId":"603","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21,"count":1}],"isBlockCoverage":true}]},{"scriptId":"604","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26,"count":1}],"isBlockCoverage":true}]},{"scriptId":"605","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"606","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44,"count":1}],"isBlockCoverage":true}]},{"scriptId":"607","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51,"count":1}],"isBlockCoverage":true}]},{"scriptId":"608","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46,"count":1}],"isBlockCoverage":true}]},{"scriptId":"609","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53,"count":1}],"isBlockCoverage":true}]},{"scriptId":"610","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51,"count":1}],"isBlockCoverage":true}]},{"scriptId":"611","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52,"count":1}],"isBlockCoverage":true}]},{"scriptId":"612","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50,"count":1}],"isBlockCoverage":true}]},{"scriptId":"613","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44,"count":1}],"isBlockCoverage":true}]},{"scriptId":"614","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46,"count":1}],"isBlockCoverage":true}]},{"scriptId":"615","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47,"count":1}],"isBlockCoverage":true}]},{"scriptId":"616","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22,"count":1}],"isBlockCoverage":true}]},{"scriptId":"617","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21,"count":1}],"isBlockCoverage":true}]},{"scriptId":"618","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29,"count":1}],"isBlockCoverage":true}]},{"scriptId":"619","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24,"count":1}],"isBlockCoverage":true}]},{"scriptId":"620","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38,"count":1}],"isBlockCoverage":true}]},{"scriptId":"621","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35,"count":1}],"isBlockCoverage":true}]},{"scriptId":"622","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18,"count":1}],"isBlockCoverage":true}]},{"scriptId":"623","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16,"count":1}],"isBlockCoverage":true}]},{"scriptId":"624","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32,"count":1}],"isBlockCoverage":true}]},{"scriptId":"625","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53,"count":1}],"isBlockCoverage":true}]},{"scriptId":"626","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25,"count":1}],"isBlockCoverage":true}]},{"scriptId":"627","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29,"count":1}],"isBlockCoverage":true}]},{"scriptId":"628","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39,"count":1}],"isBlockCoverage":true}]},{"scriptId":"629","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28,"count":1}],"isBlockCoverage":true}]},{"scriptId":"630","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21,"count":1}],"isBlockCoverage":true}]},{"scriptId":"631","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22,"count":1}],"isBlockCoverage":true}]},{"scriptId":"632","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28,"count":1}],"isBlockCoverage":true}]},{"scriptId":"633","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":63,"count":1}],"isBlockCoverage":true}]},{"scriptId":"634","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"635","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25,"count":1}],"isBlockCoverage":true}]},{"scriptId":"636","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21,"count":1}],"isBlockCoverage":true}]},{"scriptId":"637","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34,"count":1}],"isBlockCoverage":true}]},{"scriptId":"638","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8,"count":1}],"isBlockCoverage":true}]},{"scriptId":"639","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"640","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30,"count":5}],"isBlockCoverage":true}]},{"scriptId":"641","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21,"count":5}],"isBlockCoverage":true}]},{"scriptId":"642","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41,"count":1}],"isBlockCoverage":true}]},{"scriptId":"643","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":62,"count":1}],"isBlockCoverage":true}]},{"scriptId":"644","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17,"count":2}],"isBlockCoverage":true}]},{"scriptId":"645","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33,"count":1}],"isBlockCoverage":true}]},{"scriptId":"646","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"647","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32,"count":1}],"isBlockCoverage":true}]},{"scriptId":"648","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53,"count":1}],"isBlockCoverage":true}]},{"scriptId":"649","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25,"count":2}],"isBlockCoverage":true}]},{"scriptId":"650","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30,"count":1}],"isBlockCoverage":true}]},{"scriptId":"651","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34,"count":1}],"isBlockCoverage":true}]},{"scriptId":"652","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30,"count":1}],"isBlockCoverage":true}]},{"scriptId":"653","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34,"count":1}],"isBlockCoverage":true}]},{"scriptId":"654","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32,"count":1}],"isBlockCoverage":true}]},{"scriptId":"655","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36,"count":1}],"isBlockCoverage":true}]},{"scriptId":"656","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":57,"count":1}],"isBlockCoverage":true}]},{"scriptId":"657","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33,"count":1}],"isBlockCoverage":true}]},{"scriptId":"658","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"659","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":58,"count":1}],"isBlockCoverage":true}]},{"scriptId":"660","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46,"count":1}],"isBlockCoverage":true}]},{"scriptId":"661","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50,"count":1}],"isBlockCoverage":true}]},{"scriptId":"662","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36,"count":1}],"isBlockCoverage":true}]},{"scriptId":"663","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"664","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47,"count":1}],"isBlockCoverage":true}]},{"scriptId":"665","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"666","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":1}],"isBlockCoverage":true}]},{"scriptId":"667","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51,"count":1}],"isBlockCoverage":true}]},{"scriptId":"668","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38,"count":1}],"isBlockCoverage":true}]},{"scriptId":"669","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"670","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"671","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":56,"count":1}],"isBlockCoverage":true}]},{"scriptId":"672","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":1}],"isBlockCoverage":true}]},{"scriptId":"673","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":8}],"isBlockCoverage":true}]},{"scriptId":"674","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":56,"count":1}],"isBlockCoverage":true}]},{"scriptId":"675","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51,"count":1}],"isBlockCoverage":true}]},{"scriptId":"676","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55,"count":1}],"isBlockCoverage":true}]},{"scriptId":"677","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":57,"count":1}],"isBlockCoverage":true}]},{"scriptId":"678","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":58,"count":1}],"isBlockCoverage":true}]},{"scriptId":"679","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49,"count":1}],"isBlockCoverage":true}]},{"scriptId":"680","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52,"count":1}],"isBlockCoverage":true}]},{"scriptId":"681","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49,"count":1}],"isBlockCoverage":true}]}],"timestamp":691595.354774,"source-map-cache":{"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/node_modules/signal-exit/dist/mjs/index.js":{"lineLengths":[65,63,53,60,39,19,43,34,51,41,47,46,41,38,37,55,26,64,27,15,15,25,20,6,17,22,17,6,14,23,19,35,40,9,52,24,28,30,32,11,5,16,36,5,28,40,35,29,23,19,9,28,43,28,9,14,30,9,5,28,31,25,9,32,24,46,51,9,28,62,9,19,5,1,22,1,37,12,26,44,10,16,34,10,18,36,10,6,2,49,14,25,5,14,16,1,41,52,40,25,65,24,29,13,25,31,23,20,26,16,32,43,32,36,45,70,71,69,35,63,46,83,84,82,82,81,27,37,34,68,74,61,17,36,49,34,70,41,68,29,53,40,17,14,9,61,49,5,22,29,40,29,9,28,37,24,9,59,33,22,49,63,68,30,13,10,5,12,27,19,9,28,65,68,68,35,33,36,17,51,23,46,13,25,9,44,47,10,46,49,10,5,14,28,19,9,29,32,53,33,28,75,13,32,17,60,37,13,25,32,11,55,67,33,5,30,29,40,21,9,43,28,65,91,5,31,45,56,46,49,37,13,33,60,33,69,32,23,9,14,55,9,5,1,35,65,25,15,3,67,39,2,68,29,2,61,3,8,3,66,66,45,2,12,3,6,3,68,66,45,2,12,3,100,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/node_modules/signal-exit/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n"]},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/node_modules/signal-exit/dist/mjs/signals.js":{"lineLengths":[3,47,2,54,54,53,55,28,2,55,54,52,2,54,49,2,56,52,55,36,2,54,50,54,13,3,26,44,35,125,61,14,16,6,1,35,60,1,35],"data":{"version":3,"file":"signals.js","sourceRoot":"","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/execa/node_modules/signal-exit/src/signals.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,MAAM,CAAC,MAAM,OAAO,GAAqB,EAAE,CAAA;AAC3C,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAE3C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,OAAO,CAAC,IAAI,CACV,SAAS,EACT,SAAS,EACT,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,QAAQ;IACR,yDAAyD;IACzD,UAAU;IACV,YAAY;KACb,CAAA;CACF;AAED,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;CACxD","sourcesContent":["/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n"]},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/dist/magic-string.es.mjs":{"lineLengths":[53,0,14,19,60,2,0,9,37,2,0,9,49,2,1,0,13,35,21,17,26,0,18,18,0,25,25,22,0,3,24,20,3,2,0,22,24,2,0,23,36,2,0,10,63,0,27,27,31,35,29,0,15,2,0,18,48,2,0,15,19,17,13,22,3,2,0,19,19,17,13,26,3,2,0,40,25,21,19,19,3,29,0,21,0,14,2,0,23,36,2,0,24,36,2,0,10,18,18,20,32,26,23,3,2,0,15,40,0,60,56,0,33,0,61,30,18,0,19,0,20,79,36,18,21,34,33,34,38,28,21,10,33,3,0,28,55,27,23,0,18,2,0,13,48,2,0,14,42,37,0,47,0,23,34,70,22,46,46,5,4,15,10,34,0,43,38,3,2,0,16,42,37,0,47,0,23,34,59,22,46,50,5,35,4,15,10,34,0,43,38,3,2,1,0,20,82,69,43,63,9,16,94,4,2,1,0,37,0,17,26,19,30,36,50,32,46,62,61,3,50,37,3,2,0,13,30,2,0,10,79,2,1,0,28,32,0,58,60,0,50,14,2,0,51,52,13,38,14,2,0,44,51,50,39,14,0,37,1,0,36,39,35,0,32,0,38,20,18,2,0,24,27,34,2,0,44,1,0,43,0,26,51,1,0,29,42,24,0,58,24,37,2,0,32,12,29,17,26,32,10,11,14,4,3,21,43,26,3,1,0,23,0,16,21,21,29,31,16,59,22,2,0,48,23,52,49,35,98,55,74,82,25,29,5,35,0,32,61,33,0,44,63,4,0,81,24,28,4,34,0,59,28,39,25,3,0,22,2,0,74,38,19,63,34,0,41,46,18,19,32,61,33,17,11,75,83,0,37,76,56,87,34,39,35,8,14,66,38,35,7,13,37,6,5,0,20,34,18,4,0,26,3,0,22,2,0,15,19,0,32,0,25,47,29,61,4,32,3,0,61,2,1,0,15,0,16,19,20,18,2,0,19,36,52,0,33,47,40,40,48,47,55,42,40,57,83,63,46,51,61,5,0,26,36,2,0,29,36,2,0,18,89,0,24,14,2,0,29,92,0,21,0,34,0,14,29,10,25,3,14,2,0,30,92,0,21,0,36,0,14,30,10,25,3,14,2,0,10,77,0,38,91,0,25,51,47,0,48,74,0,25,39,43,0,34,4,0,37,3,0,33,0,35,69,3,0,66,0,28,28,0,16,2,0,30,26,0,24,46,47,0,43,0,19,32,3,0,39,35,0,57,0,22,21,17,19,9,58,6,11,95,4,0,57,5,0,10,70,13,94,5,72,9,26,68,4,2,0,23,57,2,0,21,37,47,3,2,0,24,26,24,2,0,20,26,57,2,0,29,31,0,28,23,25,3,0,32,27,38,3,0,44,0,26,0,29,24,0,24,21,81,38,58,26,5,6,3,0,64,31,64,36,16,4,0,53,0,20,30,0,17,25,0,22,33,62,0,32,83,6,5,11,28,0,29,34,44,0,26,40,62,41,0,39,38,15,43,27,38,8,7,6,0,20,5,4,0,25,22,3,0,53,0,14,2,0,11,18,85,4,2,0,29,27,16,89,39,28,3,0,41,2,0,30,28,16,92,39,29,3,0,43,2,0,26,95,0,21,19,21,0,36,31,0,33,29,0,39,56,64,0,39,44,0,36,41,0,51,19,35,30,3,0,27,31,0,40,39,14,2,0,42,26,91,2,0,39,95,0,35,51,47,3,0,74,20,19,84,5,0,21,19,0,25,27,17,133,40,28,4,0,33,3,70,70,0,18,52,54,19,16,21,6,3,0,36,31,0,14,21,27,49,62,5,23,26,4,0,46,10,34,71,0,78,24,28,3,14,2,0,19,89,0,36,14,2,0,30,92,0,21,0,34,0,14,30,10,37,3,14,2,0,31,92,0,21,0,36,0,14,31,10,37,3,14,2,0,21,35,51,47,3,0,33,0,93,69,0,21,19,0,34,0,17,20,20,18,0,60,3,14,2,0,20,35,51,47,3,0,33,0,93,69,0,21,19,0,34,0,17,17,0,60,3,14,2,0,13,66,29,6,70,76,70,37,66,12,2,0,13,44,64,27,29,6,32,43,77,36,4,0,34,45,79,38,4,0,32,43,77,36,4,37,40,74,30,2,0,47,35,51,47,3,0,18,0,21,30,64,34,47,18,4,0,22,3,0,53,84,0,27,17,72,26,4,0,61,56,81,0,69,96,0,55,0,60,26,4,0,21,10,4,0,22,3,0,16,2,0,47,19,29,25,43,0,15,2,0,16,55,0,37,42,0,17,68,0,77,3,2,0,28,45,77,48,19,106,5,3,0,38,0,28,33,38,0,58,0,33,14,2,0,13,23,0,30,17,27,22,3,0,26,2,0,12,30,6,7,49,53,46,4,17,33,14,2,0,11,30,17,6,76,33,16,2,0,14,31,2,0,17,52,2,0,27,52,0,42,37,0,29,0,6,25,37,0,51,27,35,33,5,0,34,48,44,4,0,28,26,18,0,15,2,0,20,32,14,2,29,57,0,42,37,0,30,0,6,25,39,0,27,22,62,0,34,48,44,4,0,28,22,18,0,15,2,0,22,34,14,2,0,15,43,2,0,43,39,41,59,138,31,36,20,46,20,7,11,65,4,3,30,13,22,35,24,4,18,3,27,56,31,30,62,36,21,19,37,18,8,6,5,6,10,50,38,61,35,20,18,36,17,7,5,4,3,14,2,0,38,28,41,0,21,61,3,0,14,2,0,36,40,56,3,0,55,2,0,41,28,37,7,40,16,57,5,64,32,61,3,0,14,2,0,39,40,59,3,0,28,23,80,5,3,0,55,2,1,0,51,0,14,28,35,78,20,26,40,2,0,20,38,26,20,30,30,6,3,0,45,19,139,5,3,0,88,81,5,0,39,67,37,3,0,24,77,82,93,11,95,59,95,5,4,3,0,28,14,2,0,23,18,33,51,5,0,14,2,0,10,29,21,29,5,0,36,21,30,36,32,6,5,0,16,2,0,35,19,38,36,62,48,6,5,0,47,0,19,32,3,0,39,15,37,4,0,96,38,51,0,27,40,4,0,47,36,0,58,0,26,24,23,19,21,11,60,8,13,32,19,13,28,11,38,8,6,12,37,5,0,58,6,0,27,40,4,0,49,44,30,5,42,4,5,0,10,70,48,91,6,55,58,6,9,26,23,4,2,0,23,57,2,0,20,32,0,36,58,0,34,0,73,38,5,0,10,51,57,16,4,2,0,20,26,38,3,0,44,0,69,0,39,88,78,0,37,42,101,6,0,56,5,0,19,15,15,54,50,7,3,0,14,2,0,15,32,14,2,0,13,27,24,89,69,0,15,5,13,0,27,2,0,12,59,77,14,2,0,11,29,56,21,4,2,0,14,31,2,0,17,52,2,0,22,57,42,0,20,14,13,0,7,31,18,11,5,56,3,0,14,2,0,20,52,0,13,34,0,6,30,17,44,10,4,53,0,14,2,1,0,53,44,0],"data":{"version":3,"file":"magic-string.es.mjs","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/BitSet.js","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/Chunk.js","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/SourceMap.js","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/utils/guessIndent.js","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/utils/getRelativePath.js","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/utils/isObject.js","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/utils/getLocator.js","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/utils/Mappings.js","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/MagicString.js","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/magic-string/src/Bundle.js"],"sourcesContent":["export default class BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n","export default class Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\tif (DEBUG) {\n\t\t\t// we make these non-enumerable, for sanity while debugging\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tprevious: { writable: true, value: null },\n\t\t\t\tnext: { writable: true, value: null },\n\t\t\t});\n\t\t} else {\n\t\t\tthis.previous = null;\n\t\t\tthis.next = null;\n\t\t}\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\treset() {\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\t\tif (this.edited) {\n\t\t\tthis.content = this.original;\n\t\t\tthis.storeName = false;\n\t\t\tthis.edited = false;\n\t\t}\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// after split we should save the edit content record into the correct chunk\n\t\t\t// to make sure sourcemap correct\n\t\t\t// For example:\n\t\t\t// '  test'.trim()\n\t\t\t//     split   -> '  ' + 'test'\n\t\t\t//   ✔️ edit    -> '' + 'test'\n\t\t\t//   ✖️ edit    -> 'test' + '' \n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t\tif (this.edited) {\n\t\t\t\t\t// save the change, if it has been edited\n\t\t\t\t\tthis.edit(trimmed, this.storeName, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tconst newChunk = this.split(this.end - trimmed.length);\n\t\t\t\tif (this.edited) {\n\t\t\t\t\t// save the change, if it has been edited\n\t\t\t\t\tnewChunk.edit(trimmed, this.storeName, true);\n\t\t\t\t}\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n","import { encode } from '@jridgewell/sourcemap-codec';\n\nfunction getBtoa() {\n\tif (typeof globalThis !== 'undefined' && typeof globalThis.btoa === 'function') {\n\t\treturn (str) => globalThis.btoa(unescape(encodeURIComponent(str)));\n\t} else if (typeof Buffer === 'function') {\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t} else {\n\t\treturn () => {\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t};\n\t}\n}\n\nconst btoa = /*#__PURE__*/ getBtoa();\n\nexport default class SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode(properties.mappings);\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t}\n\t\tif (typeof properties.debugId !== 'undefined') {\n\t\t\tthis.debugId = properties.debugId;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n","export default function guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n","export default function getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n","const toString = Object.prototype.toString;\n\nexport default function isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n","export default function getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n","const wordRegex = /\\w/;\n\nexport default class Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst contentLengthMinusOne = content.length - 1;\n\t\t\tlet contentLineEnd = content.indexOf('\\n', 0);\n\t\t\tlet previousContentLineEnd = -1;\n\t\t\t// Loop through each line in the content and add a segment, but stop if the last line is empty,\n\t\t\t// else code afterwards would fill one line too many\n\t\t\twhile (contentLineEnd >= 0 && contentLengthMinusOne > contentLineEnd) {\n\t\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\t\tif (nameIndex >= 0) {\n\t\t\t\t\tsegment.push(nameIndex);\n\t\t\t\t}\n\t\t\t\tthis.rawSegments.push(segment);\n\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\n\t\t\t\tpreviousContentLineEnd = contentLineEnd;\n\t\t\t\tcontentLineEnd = content.indexOf('\\n', contentLineEnd + 1);\n\t\t\t}\n\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\n\t\t\tthis.advance(content.slice(previousContentLineEnd + 1));\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t\tthis.advance(content);\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\t\t// when iterating each char, check if it's in a word boundary\n\t\tlet charInHiresBoundary = false;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\n\t\t\t\t\tif (this.hires === 'boundary') {\n\t\t\t\t\t\t// in hires \"boundary\", group segments per word boundary than per char\n\t\t\t\t\t\tif (wordRegex.test(original[originalCharIndex])) {\n\t\t\t\t\t\t\t// for first char in the boundary found, start the boundary by pushing a segment\n\t\t\t\t\t\t\tif (!charInHiresBoundary) {\n\t\t\t\t\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t\t\t\t\t\tcharInHiresBoundary = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// for non-word char, end the boundary by pushing a segment\n\t\t\t\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t\t\t\t\tcharInHiresBoundary = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n","import BitSet from './BitSet.js';\nimport Chunk from './Chunk.js';\nimport SourceMap from './SourceMap.js';\nimport guessIndent from './utils/guessIndent.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\nimport getLocator from './utils/getLocator.js';\nimport Mappings from './utils/Mappings.js';\nimport Stats from './utils/Stats.js';\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nexport default class MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: undefined },\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\n\t\t});\n\n\t\tif (DEBUG) {\n\t\t\tObject.defineProperty(this, 'stats', { value: new Stats() });\n\t\t}\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('appendLeft');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('appendLeft');\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('appendRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('appendRight');\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: [\n\t\t\t\toptions.source ? getRelativePath(options.file || '', options.source) : options.file || '',\n\t\t\t],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\t_ensureindentStr() {\n\t\tif (this.indentStr === undefined) {\n\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t}\n\t}\n\n\t_getRawIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr;\n\t}\n\n\tgetIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tif (indentStr === undefined) {\n\t\t\tthis._ensureindentStr();\n\t\t\tindentStr = this.indentStr || '\\t';\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)',\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead',\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead',\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tif (DEBUG) this.stats.time('move');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\n\t\tif (DEBUG) this.stats.timeEnd('move');\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\toptions = options || {};\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t}\n\n\tupdate(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\tif (this.original.length !== 0) {\n\t\t\twhile (start < 0) start += this.original.length;\n\t\t\twhile (end < 0) end += this.original.length;\n\t\t}\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead',\n\t\t\t);\n\n\t\tif (DEBUG) this.stats.time('overwrite');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string',\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('overwrite');\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('insertRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('insertRight');\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('insertRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('insertRight');\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\tif (this.original.length !== 0) {\n\t\t\twhile (start < 0) start += this.original.length;\n\t\t\twhile (end < 0) end += this.original.length;\n\t\t}\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tif (DEBUG) this.stats.time('remove');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('remove');\n\t\treturn this;\n\t}\n\n\treset(start, end) {\n\t\tif (this.original.length !== 0) {\n\t\t\twhile (start < 0) start += this.original.length;\n\t\t\twhile (end < 0) end += this.original.length;\n\t\t}\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tif (DEBUG) this.stats.time('reset');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.reset();\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('reset');\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\tif (this.original.length !== 0) {\n\t\t\twhile (start < 0) start += this.original.length;\n\t\t\twhile (end < 0) end += this.original.length;\n\t\t}\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tif (DEBUG) this.stats.time('_split');\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`,\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\tif (DEBUG) this.stats.timeEnd('_split');\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\t_replaceRegexp(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null) {\n\t\t\t\t\tconst replacement = getReplacement(match, this.original);\n\t\t\t\t\tif (replacement !== match[0]) {\n\t\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\t\treplacement\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null) {\n\t\t\t\tconst replacement = getReplacement(match, this.original);\n\t\t\t\tif (replacement !== match[0]) {\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\treplacement\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t_replaceString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst index = original.indexOf(string);\n\n\t\tif (index !== -1) {\n\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n\n\t_replaceAllString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst stringLength = string.length;\n\t\tfor (\n\t\t\tlet index = original.indexOf(string);\n\t\t\tindex !== -1;\n\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t) {\n\t\t\tconst previous = original.slice(index, index + stringLength);\n\t\t\tif (previous !== replacement)\n\t\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplaceAll(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t}\n\n\t\tif (!searchValue.global) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument',\n\t\t\t);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n}\n","import MagicString from './MagicString.js';\nimport SourceMap from './SourceMap.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\nimport getLocator from './utils/getLocator.js';\nimport Mappings from './utils/Mappings.js';\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nexport default class Bundle {\n\tconstructor(options = {}) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\tthis.sources = [];\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource(source) {\n\t\tif (source instanceof MagicString) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\t\t}\n\n\t\tif (!isObject(source) || !source.content) {\n\t\t\tthrow new Error(\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`',\n\t\t\t);\n\t\t}\n\n\t\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t});\n\n\t\tif (source.separator === undefined) {\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif (source.filename) {\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push(source);\n\t\treturn this;\n\t}\n\n\tappend(str, options) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString(str),\n\t\t\tseparator: (options && options.separator) || '',\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator,\n\t\t});\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator,\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateDecodedMap(options = {}) {\n\t\tconst names = [];\n\t\tlet x_google_ignoreList = undefined;\n\t\tthis.sources.forEach((source) => {\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t});\n\t\t});\n\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tmappings.advance(this.separator);\n\t\t\t}\n\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\tconst magicString = source.content;\n\t\t\tconst locate = getLocator(magicString.original);\n\n\t\t\tif (magicString.intro) {\n\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (source.filename) {\n\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tmagicString.sourcemapLocations,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\tif (magicString.outro) {\n\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t}\n\n\t\t\tif (source.ignoreList && sourceIndex !== -1) {\n\t\t\t\tif (x_google_ignoreList === undefined) {\n\t\t\t\t\tx_google_ignoreList = [];\n\t\t\t\t}\n\t\t\t\tx_google_ignoreList.push(sourceIndex);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\tconst indentStringCounts = {};\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tconst indentStr = source.content._getRawIndentString();\n\n\t\t\tif (indentStr === null) return;\n\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\tindentStringCounts[indentStr] += 1;\n\t\t});\n\n\t\treturn (\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t})[0] || '\\t'\n\t\t);\n\t}\n\n\tindent(indentStr) {\n\t\tif (!arguments.length) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\tsource.content.indent(indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t});\n\n\t\tif (this.intro) {\n\t\t\tthis.intro =\n\t\t\t\tindentStr +\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprepend(str) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\tconst body = this.sources\n\t\t\t.map((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\treturn str;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn this.intro + body;\n\t}\n\n\tisEmpty() {\n\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\treturn this.sources.reduce(\n\t\t\t(length, source) => length + source.content.length(),\n\t\t\tthis.intro.length,\n\t\t);\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimStart(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\tif (!this.intro) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i++];\n\t\t\t\tif (!source) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i--];\n\t\t\tif (!source) {\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\treturn this;\n\t}\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs":{"lineLengths":[32,36,81,59,59,40,34,21,21,1,42,18,18,20,8,32,31,41,19,27,35,17,23,37,5,28,1,48,31,55,8,39,21,22,32,42,24,15,1,34,26,21,35,1,0,28,45,45,39,35,11,25,84,38,14,9,11,25,29,54,55,17,27,14,10,20,19,21,22,48,5,14,32,31,37,42,25,9,5,13,42,72,5,1,20,25,21,29,5,12,50,5,12,48,5,19,37,46,48,5,1,0,17,38,29,43,22,21,17,47,43,48,42,37,27,29,21,9,46,48,40,116,25,41,22,16,59,37,49,9,26,27,26,5,18,1,39,38,41,58,5,26,1,62,32,92,18,28,58,42,35,51,37,27,43,27,36,5,43,35,36,63,18,9,68,5,24,56,40,17,1,39,29,43,22,21,20,35,33,33,25,27,24,26,8,41,26,49,57,44,41,34,36,25,13,52,50,48,45,32,33,22,32,86,132,57,90,13,18,51,13,39,30,53,46,83,68,84,117,80,13,38,43,30,20,42,46,70,41,48,72,69,55,77,110,72,92,25,21,26,64,21,52,51,13,38,31,30,9,18,30,34,18,1,40,28,18,38,41,77,5,26,1,63,32,107,31,49,29,21,5,25,28,5,57,104,37,29,58,40,25,9,65,64,5,19,79,40,25,25,9,41,25,9,65,61,63,5,19,41,35,58,45,49,45,49,54,44,88,92,54,13,9,5,43,35,36,63,18,9,69,5,29,47,27,21,5,10,28,5,58,17,1,46,8,32,32,1,0,27,32,46,23,22,25,23,25,23,8,41,24,26,24,22,35,20,57,36,31,32,43,67,63,67,47,67,90,17,22,78,17,13,18,34,13,27,25,9,20,23,27,30,35,19,1,21,30,1,31,23,1,26,38,25,23,25,23,46,32,18,36,30,21,26,47,36,22,36,69,37,25,75,71,75,37,25,71,9,5,26,1,0,116,44,0],"data":{"version":3,"file":"sourcemap-codec.mjs","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/src/vlq.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/src/strings.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/src/scopes.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts"],"sourcesContent":["import type { StringReader, StringWriter } from './strings';\n\nexport const comma = ','.charCodeAt(0);\nexport const semicolon = ';'.charCodeAt(0);\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\nexport function decodeInteger(reader: StringReader, relative: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  return relative + value;\n}\n\nexport function encodeInteger(builder: StringWriter, num: number, relative: number): number {\n  let delta = num - relative;\n\n  delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;\n  do {\n    let clamped = delta & 0b011111;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 0b100000;\n    builder.write(intToChar[clamped]);\n  } while (delta > 0);\n\n  return num;\n}\n\nexport function hasMoreVlq(reader: StringReader, max: number) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\n","const bufLength = 1024 * 16;\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array): string {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array): string {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport class StringWriter {\n  pos = 0;\n  private out = '';\n  private buffer = new Uint8Array(bufLength);\n\n  write(v: number): void {\n    const { buffer } = this;\n    buffer[this.pos++] = v;\n    if (this.pos === bufLength) {\n      this.out += td.decode(buffer);\n      this.pos = 0;\n    }\n  }\n\n  flush(): string {\n    const { buffer, out, pos } = this;\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\n  }\n}\n\nexport class StringReader {\n  pos = 0;\n  private declare buffer: string;\n\n  constructor(buffer: string) {\n    this.buffer = buffer;\n  }\n\n  next(): number {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n\n  peek(): number {\n    return this.buffer.charCodeAt(this.pos);\n  }\n\n  indexOf(char: string): number {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n}\n","import { StringReader, StringWriter } from './strings';\nimport { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\n\nconst EMPTY: any[] = [];\n\ntype Line = number;\ntype Column = number;\ntype Kind = number;\ntype Name = number;\ntype Var = number;\ntype SourcesIndex = number;\ntype ScopesIndex = number;\n\ntype Mix<A, B, O> = (A & O) | (B & O);\n\nexport type OriginalScope = Mix<\n  [Line, Column, Line, Column, Kind],\n  [Line, Column, Line, Column, Kind, Name],\n  { vars: Var[] }\n>;\n\nexport type GeneratedRange = Mix<\n  [Line, Column, Line, Column],\n  [Line, Column, Line, Column, SourcesIndex, ScopesIndex],\n  {\n    callsite: CallSite | null;\n    bindings: Binding[];\n    isScope: boolean;\n  }\n>;\nexport type CallSite = [SourcesIndex, Line, Column];\ntype Binding = BindingExpressionRange[];\nexport type BindingExpressionRange = [Name] | [Name, Line, Column];\n\nexport function decodeOriginalScopes(input: string): OriginalScope[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const scopes: OriginalScope[] = [];\n  const stack: OriginalScope[] = [];\n  let line = 0;\n\n  for (; reader.pos < length; reader.pos++) {\n    line = decodeInteger(reader, line);\n    const column = decodeInteger(reader, 0);\n\n    if (!hasMoreVlq(reader, length)) {\n      const last = stack.pop()!;\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n\n    const kind = decodeInteger(reader, 0);\n    const fields = decodeInteger(reader, 0);\n    const hasName = fields & 0b0001;\n\n    const scope: OriginalScope = (\n      hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind]\n    ) as OriginalScope;\n\n    let vars: Var[] = EMPTY;\n    if (hasMoreVlq(reader, length)) {\n      vars = [];\n      do {\n        const varsIndex = decodeInteger(reader, 0);\n        vars.push(varsIndex);\n      } while (hasMoreVlq(reader, length));\n    }\n    scope.vars = vars;\n\n    scopes.push(scope);\n    stack.push(scope);\n  }\n\n  return scopes;\n}\n\nexport function encodeOriginalScopes(scopes: OriginalScope[]): string {\n  const writer = new StringWriter();\n\n  for (let i = 0; i < scopes.length; ) {\n    i = _encodeOriginalScopes(scopes, i, writer, [0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeOriginalScopes(\n  scopes: OriginalScope[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenColumn\n  ],\n): number {\n  const scope = scopes[index];\n  const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;\n\n  if (index > 0) writer.write(comma);\n\n  state[0] = encodeInteger(writer, startLine, state[0]);\n  encodeInteger(writer, startColumn, 0);\n  encodeInteger(writer, kind, 0);\n\n  const fields = scope.length === 6 ? 0b0001 : 0;\n  encodeInteger(writer, fields, 0);\n  if (scope.length === 6) encodeInteger(writer, scope[5], 0);\n\n  for (const v of vars) {\n    encodeInteger(writer, v, 0);\n  }\n\n  for (index++; index < scopes.length; ) {\n    const next = scopes[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeOriginalScopes(scopes, index, writer, state);\n  }\n\n  writer.write(comma);\n  state[0] = encodeInteger(writer, endLine, state[0]);\n  encodeInteger(writer, endColumn, 0);\n\n  return index;\n}\n\nexport function decodeGeneratedRanges(input: string): GeneratedRange[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const ranges: GeneratedRange[] = [];\n  const stack: GeneratedRange[] = [];\n\n  let genLine = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    let genColumn = 0;\n\n    for (; reader.pos < semi; reader.pos++) {\n      genColumn = decodeInteger(reader, genColumn);\n\n      if (!hasMoreVlq(reader, semi)) {\n        const last = stack.pop()!;\n        last[2] = genLine;\n        last[3] = genColumn;\n        continue;\n      }\n\n      const fields = decodeInteger(reader, 0);\n      const hasDefinition = fields & 0b0001;\n      const hasCallsite = fields & 0b0010;\n      const hasScope = fields & 0b0100;\n\n      let callsite: CallSite | null = null;\n      let bindings: Binding[] = EMPTY;\n      let range: GeneratedRange;\n      if (hasDefinition) {\n        const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);\n        definitionScopeIndex = decodeInteger(\n          reader,\n          definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0,\n        );\n\n        definitionSourcesIndex = defSourcesIndex;\n        range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex] as GeneratedRange;\n      } else {\n        range = [genLine, genColumn, 0, 0] as GeneratedRange;\n      }\n\n      range.isScope = !!hasScope;\n\n      if (hasCallsite) {\n        const prevCsi = callsiteSourcesIndex;\n        const prevLine = callsiteLine;\n        callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);\n        const sameSource = prevCsi === callsiteSourcesIndex;\n        callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);\n        callsiteColumn = decodeInteger(\n          reader,\n          sameSource && prevLine === callsiteLine ? callsiteColumn : 0,\n        );\n\n        callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n      }\n      range.callsite = callsite;\n\n      if (hasMoreVlq(reader, semi)) {\n        bindings = [];\n        do {\n          bindingLine = genLine;\n          bindingColumn = genColumn;\n          const expressionsCount = decodeInteger(reader, 0);\n          let expressionRanges: BindingExpressionRange[];\n          if (expressionsCount < -1) {\n            expressionRanges = [[decodeInteger(reader, 0)]];\n            for (let i = -1; i > expressionsCount; i--) {\n              const prevBl = bindingLine;\n              bindingLine = decodeInteger(reader, bindingLine);\n              bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);\n              const expression = decodeInteger(reader, 0);\n              expressionRanges.push([expression, bindingLine, bindingColumn]);\n            }\n          } else {\n            expressionRanges = [[expressionsCount]];\n          }\n          bindings.push(expressionRanges);\n        } while (hasMoreVlq(reader, semi));\n      }\n      range.bindings = bindings;\n\n      ranges.push(range);\n      stack.push(range);\n    }\n\n    genLine++;\n    reader.pos = semi + 1;\n  } while (reader.pos < length);\n\n  return ranges;\n}\n\nexport function encodeGeneratedRanges(ranges: GeneratedRange[]): string {\n  if (ranges.length === 0) return '';\n\n  const writer = new StringWriter();\n\n  for (let i = 0; i < ranges.length; ) {\n    i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeGeneratedRanges(\n  ranges: GeneratedRange[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenLine\n    number, // GenColumn\n    number, // DefSourcesIndex\n    number, // DefScopesIndex\n    number, // CallSourcesIndex\n    number, // CallLine\n    number, // CallColumn\n  ],\n): number {\n  const range = ranges[index];\n  const {\n    0: startLine,\n    1: startColumn,\n    2: endLine,\n    3: endColumn,\n    isScope,\n    callsite,\n    bindings,\n  } = range;\n\n  if (state[0] < startLine) {\n    catchupLine(writer, state[0], startLine);\n    state[0] = startLine;\n    state[1] = 0;\n  } else if (index > 0) {\n    writer.write(comma);\n  }\n\n  state[1] = encodeInteger(writer, range[1], state[1]);\n\n  const fields =\n    (range.length === 6 ? 0b0001 : 0) | (callsite ? 0b0010 : 0) | (isScope ? 0b0100 : 0);\n  encodeInteger(writer, fields, 0);\n\n  if (range.length === 6) {\n    const { 4: sourcesIndex, 5: scopesIndex } = range;\n    if (sourcesIndex !== state[2]) {\n      state[3] = 0;\n    }\n    state[2] = encodeInteger(writer, sourcesIndex, state[2]);\n    state[3] = encodeInteger(writer, scopesIndex, state[3]);\n  }\n\n  if (callsite) {\n    const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite!;\n    if (sourcesIndex !== state[4]) {\n      state[5] = 0;\n      state[6] = 0;\n    } else if (callLine !== state[5]) {\n      state[6] = 0;\n    }\n    state[4] = encodeInteger(writer, sourcesIndex, state[4]);\n    state[5] = encodeInteger(writer, callLine, state[5]);\n    state[6] = encodeInteger(writer, callColumn, state[6]);\n  }\n\n  if (bindings) {\n    for (const binding of bindings) {\n      if (binding.length > 1) encodeInteger(writer, -binding.length, 0);\n      const expression = binding[0][0];\n      encodeInteger(writer, expression, 0);\n      let bindingStartLine = startLine;\n      let bindingStartColumn = startColumn;\n      for (let i = 1; i < binding.length; i++) {\n        const expRange = binding[i];\n        bindingStartLine = encodeInteger(writer, expRange[1]!, bindingStartLine);\n        bindingStartColumn = encodeInteger(writer, expRange[2]!, bindingStartColumn);\n        encodeInteger(writer, expRange[0]!, 0);\n      }\n    }\n  }\n\n  for (index++; index < ranges.length; ) {\n    const next = ranges[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeGeneratedRanges(ranges, index, writer, state);\n  }\n\n  if (state[0] < endLine) {\n    catchupLine(writer, state[0], endLine);\n    state[0] = endLine;\n    state[1] = 0;\n  } else {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, endColumn, state[1]);\n\n  return index;\n}\n\nfunction catchupLine(writer: StringWriter, lastLine: number, line: number) {\n  do {\n    writer.write(semicolon);\n  } while (++lastLine < line);\n}\n","import { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\nimport { StringWriter, StringReader } from './strings';\n\nexport {\n  decodeOriginalScopes,\n  encodeOriginalScopes,\n  decodeGeneratedRanges,\n  encodeGeneratedRanges,\n} from './scopes';\nexport type { OriginalScope, GeneratedRange, CallSite, BindingExpressionRange } from './scopes';\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nexport function decode(mappings: string): SourceMapMappings {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded: SourceMapMappings = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n\n    while (reader.pos < semi) {\n      let seg: SourceMapSegment;\n\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n\n      line.push(seg);\n      reader.pos++;\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n\n  return decoded;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const writer = new StringWriter();\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) writer.write(semicolon);\n    if (line.length === 0) continue;\n\n    let genColumn = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      if (j > 0) writer.write(comma);\n\n      genColumn = encodeInteger(writer, segment[0], genColumn);\n\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\n\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\n    }\n  }\n\n  return writer.flush();\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/vitest.config.ts.timestamp-1745965140471-9b033673c260b.mjs":{"lineLengths":[19,134,143,42,29,9,15,21,41,37,34,16,30,30,27,25,7,5,3,3,8,34,2,1862,0],"data":{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/vitest.config.ts"],"sourcesContent":["const __vite_injected_original_dirname = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Escritorio\\\\Nicolas-Sanetti-Coiffeur\";const __vite_injected_original_filename = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Escritorio\\\\Nicolas-Sanetti-Coiffeur\\\\vitest.config.ts\";const __vite_injected_original_import_meta_url = \"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/vitest.config.ts\";import { defineConfig } from 'vitest/config';\r\nimport tsconfigPaths from 'vite-tsconfig-paths';\r\n\r\nexport default defineConfig({\r\n  plugins: [tsconfigPaths()],\r\n  test: {\r\n    coverage: {\r\n      provider: 'v8',\r\n      reporter: ['text', 'json', 'html'],\r\n      reportsDirectory: './coverage',\r\n      include: ['Source/**/*.ts'],\r\n      exclude: [\r\n        'Source/**/*.test.ts',\r\n        'Source/**/*.spec.ts',\r\n        'Source/**/*.d.ts',\r\n        'node_modules/**',\r\n      ],\r\n    },\r\n  },})\r\n"],"mappings":";AAAmX,SAAS,oBAAoB;AAChZ,OAAO,mBAAmB;AAE1B,IAAO,wBAAQ,aAAa;AAAA,EAC1B,SAAS,CAAC,cAAc,CAAC;AAAA,EACzB,MAAM;AAAA,IACJ,UAAU;AAAA,MACR,UAAU;AAAA,MACV,UAAU,CAAC,QAAQ,QAAQ,MAAM;AAAA,MACjC,kBAAkB;AAAA,MAClB,SAAS,CAAC,gBAAgB;AAAA,MAC1B,SAAS;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAE,CAAC;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-tsconfig-paths/dist/index.js":{"lineLengths":[15,27,25,30,43,31,79,0,18,31,43,49,53,4,22,39,41,65,19,47,77,7,3,18,1,35,44,48,1,37,77,1,0,14,25,29,37,31,41,106,75,27,35,35,0,15,42,30,34,21,10,32,19,34,36,24,26,17,43,14,60,7,39,46,48,17,27,29,7,48,68,38,45,9,43,50,76,19,57,24,11,48,34,11,23,9,9,35,35,29,13,42,48,18,12,42,71,50,21,35,20,11,9,7,21,28,43,8,37,26,42,40,62,26,13,152,44,77,22,36,211,27,18,58,39,17,35,15,26,15,12,9,8,26,43,23,17,9,33,54,43,13,41,38,38,16,51,25,77,94,37,11,9,9,6,44,70,62,55,17,100,10,27,59,13,62,57,26,49,59,30,21,26,18,31,34,17,30,29,17,15,40,49,11,7,5,4,36,23,60,36,78,123,12,122,8,18,5,49,39,29,62,18,5,122,18,16,47,14,55,8,69,45,50,23,21,11,51,30,64,73,39,15,67,27,30,13,11,9,8,31,115,93,11,14,37,7,12,37,5,42,29,39,43,5,43,91,91,12,6,137,54,49,14,30,23,7,42,59,46,23,7,69,54,23,7,72,19,41,7,42,19,59,21,25,9,39,28,13,19,28,20,11,7,62,6,3,2,50,38,30,22,20,24,20,2,92,15,47,3,51,25,25,53,53,55,23,41,42,29,7,46,59,6,3,20,1,32,59,72,21,41,10,49,30,43,5,3,1,28,24,19,18,11,1,37,58,1,8,24,2,33],"data":{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-tsconfig-paths/src/index.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-tsconfig-paths/src/mappings.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/vite-tsconfig-paths/src/path.ts"],"sourcesContent":["import _debug from 'debug'\nimport * as fs from 'fs'\nimport globRex from 'globrex'\nimport { resolve } from 'path'\nimport type { TSConfckParseOptions, TSConfckParseResult } from 'tsconfck'\nimport type { CompilerOptions } from 'typescript'\nimport { inspect } from 'util'\nimport { normalizePath, Plugin, searchForWorkspaceRoot } from 'vite'\nimport { resolvePathMappings } from './mappings'\nimport { basename, dirname, isAbsolute, join, relative } from './path'\nimport { PluginOptions } from './types'\n\nconst debug = _debug('vite-tsconfig-paths')\n\nconst noMatch = [undefined, false] as [undefined, false]\n\ntype ViteResolve = (id: string, importer: string) => Promise<string | undefined>\n\ntype Resolver = (\n  viteResolve: ViteResolve,\n  id: string,\n  importer: string\n) => Promise<[resolved: string | undefined, matched: boolean]>\n\nexport type { PluginOptions }\n\nexport default (opts: PluginOptions = {}): Plugin => {\n  let resolversByDir: Record<string, Resolver[]>\n\n  return {\n    name: 'vite-tsconfig-paths',\n    enforce: 'pre',\n    async configResolved(config) {\n      let projectRoot = config.root\n      let workspaceRoot!: string\n\n      let { root } = opts\n      if (root) {\n        root = resolve(projectRoot, root)\n      } else {\n        workspaceRoot = searchForWorkspaceRoot(projectRoot)\n      }\n\n      debug('options.root   ==', root)\n      debug('project root   ==', projectRoot)\n      debug('workspace root ==', workspaceRoot)\n\n      // The \"root\" option overrides both of these.\n      if (root) {\n        projectRoot = root\n        workspaceRoot = root\n      }\n\n      const tsconfck = await import('tsconfck')\n\n      const projects = opts.projects\n        ? opts.projects.map((file) => {\n            if (!file.endsWith('.json')) {\n              file = join(file, 'tsconfig.json')\n            }\n            return resolve(projectRoot, file)\n          })\n        : await tsconfck.findAll(workspaceRoot, {\n            configNames: opts.configNames || ['tsconfig.json', 'jsconfig.json'],\n            skip(dir) {\n              if (dir === '.git' || dir === 'node_modules') {\n                return true\n              }\n              if (typeof opts.skip === 'function') {\n                return opts.skip(dir)\n              }\n              return false\n            },\n          })\n\n      debug('projects:', projects)\n\n      let hasTypeScriptDep = false\n      if (opts.parseNative) {\n        try {\n          const pkgJson = fs.readFileSync(\n            join(workspaceRoot, 'package.json'),\n            'utf8'\n          )\n          const pkg = JSON.parse(pkgJson)\n          const deps = { ...pkg.dependencies, ...pkg.devDependencies }\n          hasTypeScriptDep = 'typescript' in deps\n        } catch (e: any) {\n          if (e.code != 'ENOENT') {\n            throw e\n          }\n        }\n      }\n\n      let firstError: any\n\n      const parseOptions: TSConfckParseOptions = {\n        cache: new tsconfck.TSConfckCache(),\n      }\n\n      const parsedProjects = new Set(\n        await Promise.all(\n          projects.map((tsconfigFile) => {\n            if (tsconfigFile === null) {\n              debug('tsconfig file not found:', tsconfigFile)\n              return null\n            }\n            return (\n              hasTypeScriptDep\n                ? tsconfck.parseNative(tsconfigFile, parseOptions)\n                : tsconfck.parse(tsconfigFile, parseOptions)\n            ).catch((error) => {\n              if (opts.ignoreConfigErrors) {\n                debug('tsconfig file caused a parsing error:', tsconfigFile)\n              } else {\n                config.logger.error(\n                  '[tsconfig-paths] An error occurred while parsing \"' +\n                    tsconfigFile +\n                    '\". See below for details.' +\n                    (firstError\n                      ? ''\n                      : ' To disable this message, set the `ignoreConfigErrors` option to true.'),\n                  { error }\n                )\n                if (config.logger.hasErrorLogged(error)) {\n                  console.error(error)\n                }\n                firstError = error\n              }\n              return null\n            })\n          })\n        )\n      )\n\n      resolversByDir = {}\n      parsedProjects.forEach((project) => {\n        if (!project) {\n          return\n        }\n        // Don't create a resolver for projects with a references array.\n        // Instead, create a resolver for each project in that array.\n        if (project.referenced) {\n          project.referenced.forEach((projectRef) => {\n            parsedProjects.add(projectRef)\n          })\n          // Reinsert the parent project so it's tried last. This is\n          // important because project references can be used to\n          // override the parent project.\n          parsedProjects.delete(project)\n          parsedProjects.add(project)\n          project.referenced = undefined\n        } else {\n          const resolver = createResolver(project)\n          if (resolver) {\n            const projectDir = normalizePath(dirname(project.tsconfigFile))\n            const resolvers = (resolversByDir[projectDir] ||= [])\n            resolvers.push(resolver)\n          }\n        }\n      })\n    },\n    async resolveId(id, importer, options) {\n      if (importer && !relativeImportRE.test(id) && !isAbsolute(id)) {\n        // For Vite 4 and under, skipSelf needs to be set.\n        const resolveOptions = { ...options, skipSelf: true }\n        const viteResolve: ViteResolve = async (id, importer) =>\n          (await this.resolve(id, importer, resolveOptions))?.id\n\n        let prevProjectDir: string | undefined\n        let projectDir = normalizePath(dirname(importer))\n\n        // Find the nearest directory with a matching tsconfig file.\n        loop: while (projectDir && projectDir != prevProjectDir) {\n          const resolvers = resolversByDir[projectDir]\n          if (resolvers)\n            for (const resolve of resolvers) {\n              const [resolved, matched] = await resolve(\n                viteResolve,\n                id,\n                importer\n              )\n              if (resolved) {\n                return resolved\n              }\n              if (matched) {\n                // Once a matching resolver is found, stop looking.\n                break loop\n              }\n            }\n          prevProjectDir = projectDir\n          projectDir = dirname(prevProjectDir)\n        }\n      }\n    },\n  }\n\n  function createResolver(project: TSConfckParseResult): Resolver | null {\n    const configPath = normalizePath(project.tsconfigFile)\n    const config = project.tsconfig as {\n      files?: string[]\n      include?: string[]\n      exclude?: string[]\n      compilerOptions?: CompilerOptions\n    }\n\n    debug('config loaded:', inspect({ configPath, config }, false, 10, true))\n\n    // Sometimes a tsconfig is not meant to be used for path resolution,\n    // but rather for pointing to other tsconfig files and possibly\n    // being extended by them. This is represented by an explicitly\n    // empty \"files\" array and a missing/empty \"include\" array.\n    if (config.files?.length == 0 && !config.include?.length) {\n      debug(\n        `[!] skipping \"${configPath}\" as no files can be matched since \"files\" is empty and \"include\" is missing or empty`\n      )\n      return null\n    }\n\n    const options = config.compilerOptions || {}\n    const { baseUrl, paths } = options\n    if (!baseUrl && !paths) {\n      debug(`[!] missing baseUrl and paths: \"${configPath}\"`)\n      return null\n    }\n\n    type InternalResolver = (\n      viteResolve: ViteResolve,\n      id: string,\n      importer: string\n    ) => Promise<string | undefined>\n\n    const resolveWithBaseUrl: InternalResolver | undefined = baseUrl\n      ? (viteResolve, id, importer) => viteResolve(join(baseUrl, id), importer)\n      : undefined\n\n    let resolveId: InternalResolver\n    if (paths) {\n      const pathMappings = resolvePathMappings(\n        paths,\n        baseUrl ?? dirname(configPath)\n      )\n      const resolveWithPaths: InternalResolver = async (\n        viteResolve,\n        id,\n        importer\n      ) => {\n        for (const mapping of pathMappings) {\n          const match = id.match(mapping.pattern)\n          if (!match) {\n            continue\n          }\n          for (let pathTemplate of mapping.paths) {\n            let starCount = 0\n            const mappedId = pathTemplate.replace(/\\*/g, () => {\n              // There may exist more globs in the path template than in\n              // the match pattern. In that case, we reuse the final\n              // glob match.\n              const matchIndex = Math.min(++starCount, match.length - 1)\n              return match[matchIndex]\n            })\n            const resolved = await viteResolve(mappedId, importer)\n            if (resolved) {\n              return resolved\n            }\n          }\n        }\n      }\n\n      if (resolveWithBaseUrl) {\n        resolveId = (viteResolve, id, importer) =>\n          resolveWithPaths(viteResolve, id, importer).then((resolved) => {\n            return resolved ?? resolveWithBaseUrl(viteResolve, id, importer)\n          })\n      } else {\n        resolveId = resolveWithPaths\n      }\n    } else {\n      resolveId = resolveWithBaseUrl!\n    }\n\n    const configDir = dirname(configPath)\n\n    // When `tsconfck.parseNative` is used, the outDir is absolute,\n    // which is not what `getIncluder` expects.\n    let { outDir } = options\n    if (outDir && isAbsolute(outDir)) {\n      outDir = relative(configDir, outDir)\n    }\n\n    const isIncludedRelative = getIncluder(\n      config.include?.map((p) => ensureRelative(configDir, p)),\n      config.exclude?.map((p) => ensureRelative(configDir, p)),\n      outDir\n    )\n\n    const importerExtRE = opts.loose\n      ? /./\n      : options.allowJs || basename(configPath).startsWith('jsconfig.')\n      ? jsLikeRE\n      : /\\.[mc]?tsx?$/\n\n    const resolutionCache = new Map<string, string>()\n    return async (viteResolve, id, importer) => {\n      // Skip virtual modules.\n      if (id.includes('\\0')) {\n        return noMatch\n      }\n\n      importer = normalizePath(importer)\n      const importerFile = importer.replace(/[#?].+$/, '')\n\n      // Ignore importers with unsupported extensions.\n      if (!importerExtRE.test(importerFile)) {\n        return noMatch\n      }\n\n      // Respect the include/exclude properties.\n      const relativeImporterFile = relative(configDir, importerFile)\n      if (!isIncludedRelative(relativeImporterFile)) {\n        return noMatch\n      }\n\n      // Find and remove Vite's suffix (e.g. \"?url\") if present.\n      // If the path is resolved, the suffix will be added back.\n      const suffix = /\\?.+$/.exec(id)?.[0]\n      if (suffix) {\n        id = id.slice(0, -suffix.length)\n      }\n\n      let path = resolutionCache.get(id)\n      if (!path) {\n        path = await resolveId(viteResolve, id, importer)\n        if (!path) {\n          return noMatch\n        }\n        resolutionCache.set(id, path)\n        debug(`resolved:`, {\n          id,\n          importer,\n          resolvedId: path,\n          configPath,\n        })\n      }\n      return [path && suffix ? path + suffix : path, true]\n    }\n  }\n}\n\nconst jsLikeRE = /\\.(vue|svelte|mdx|[mc]?[jt]sx?)$/\nconst relativeImportRE = /^\\.\\.?(\\/|$)/\nconst defaultInclude = ['**/*']\nconst defaultExclude = [\n  '**/node_modules',\n  '**/bower_components',\n  '**/jspm_packages',\n]\n\n/**\n * The returned function does not support absolute paths.\n * Be sure to call `path.relative` on your path first.\n */\nfunction getIncluder(\n  includePaths = defaultInclude,\n  excludePaths = defaultExclude,\n  outDir?: string\n) {\n  if (outDir) {\n    excludePaths = excludePaths.concat(outDir)\n  }\n  if (includePaths.length || excludePaths.length) {\n    const includers: RegExp[] = []\n    const excluders: RegExp[] = []\n\n    includePaths.forEach(addCompiledGlob, includers)\n    excludePaths.forEach(addCompiledGlob, excluders)\n    debug(`compiled globs:`, { includers, excluders })\n\n    return (path: string) => {\n      path = path.replace(/\\?.+$/, '')\n      if (!relativeImportRE.test(path)) {\n        path = './' + path\n      }\n      const test = (glob: RegExp) => glob.test(path)\n      return includers.some(test) && !excluders.some(test)\n    }\n  }\n  return () => true\n}\n\nfunction addCompiledGlob(this: RegExp[], glob: string) {\n  const endsWithGlob = glob.split('/').pop()!.includes('*')\n  const relativeGlob = relativeImportRE.test(glob) ? glob : './' + glob\n  if (endsWithGlob) {\n    this.push(compileGlob(relativeGlob))\n  } else {\n    // Append a globstar to possible directories.\n    this.push(compileGlob(relativeGlob + '/**'))\n    // Try to match specific files (must have file extension).\n    if (/\\.\\w+$/.test(glob)) {\n      this.push(compileGlob(relativeGlob))\n    }\n  }\n}\n\nfunction compileGlob(glob: string) {\n  return globRex(glob, {\n    extended: true,\n    globstar: true,\n  }).regex\n}\n\nfunction ensureRelative(dir: string, path: string) {\n  return isAbsolute(path) ? relative(dir, path) : path\n}\n","import { resolve } from 'path'\n\nexport type PathMapping = {\n  pattern: RegExp\n  paths: string[]\n}\n\nexport function resolvePathMappings(\n  paths: Record<string, string[]>,\n  base: string\n) {\n  // If a module name can be matched with multiple patterns then pattern\n  // with the longest prefix will be picked.\n  const sortedPatterns = Object.keys(paths).sort(\n    (a: string, b: string) => getPrefixLength(b) - getPrefixLength(a)\n  )\n  const resolved: PathMapping[] = []\n  for (let pattern of sortedPatterns) {\n    const relativePaths = paths[pattern]\n    pattern = escapeStringRegexp(pattern).replace(/\\*/g, '(.+)')\n    resolved.push({\n      pattern: new RegExp('^' + pattern + '$'),\n      paths: relativePaths.map((relativePath) => resolve(base, relativePath)),\n    })\n  }\n  return resolved\n}\n\nfunction getPrefixLength(pattern: string): number {\n  const prefixLength = pattern.indexOf('*')\n  return pattern.substr(0, prefixLength).length\n}\n\n// Adapted from:\n// https://github.com/sindresorhus/escape-string-regexp/blob/ba9a4473850cb367936417e97f1f2191b7cc67dd/index.js\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://\n// sindresorhus.com)\n//\nfunction escapeStringRegexp(string: string) {\n  // Escape characters with special meaning either inside or outside\n  // character sets. Use a simple backslash escape when it’s always\n  // valid, and a `\\xnn` escape when the simpler form would be\n  // disallowed by Unicode patterns’ stricter grammar.\n  return string.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d')\n}\n","import * as os from 'os'\nimport * as path from 'path'\nimport { normalizePath } from 'vite'\n\nconst isWindows = os.platform() == 'win32'\n\nexport const resolve = isWindows\n  ? (...paths: string[]) => normalizePath(path.win32.resolve(...paths))\n  : path.posix.resolve\n\nexport const isAbsolute = isWindows\n  ? path.win32.isAbsolute\n  : path.posix.isAbsolute\n\n/** Only call this on normalized paths */\nexport const join = path.posix.join\n\n/** Only call this on normalized paths */\nexport const relative = path.posix.relative\n\n/** Only call this on normalized paths */\nexport const basename = path.posix.basename\n\nexport { dirname } from 'path'\n"],"mappings":"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","names":["resolve","normalizePath","resolve","resolve","normalizePath","id","importer","_a","path"],"sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@ampproject/remapping/dist/remapping.mjs":{"lineLengths":[84,127,0,86,25,69,59,1,56,12,12,16,15,16,15,6,1,3,99,44,3,34,49,1,3,99,48,3,50,64,1,3,90,64,3,30,99,96,56,47,32,46,51,41,51,40,38,44,102,33,39,55,128,102,62,35,29,13,75,72,42,55,23,45,9,5,15,1,3,95,63,3,58,22,95,5,59,79,24,20,94,25,29,34,143,1,0,25,29,21,19,1,3,77,75,42,2,75,79,76,71,26,3,44,64,27,43,41,92,89,9,5,41,48,42,5,16,1,54,64,36,61,100,102,100,37,21,21,18,37,31,30,10,77,79,50,48,93,22,81,48,96,98,60,106,100,62,7,36,1,0,3,76,18,3,17,31,84,80,29,37,31,41,41,35,38,53,9,5,16,36,5,1,0,3,77,76,2,79,77,73,26,2,75,29,2,73,25,3,44,111,51,52,1,0,32,38,0],"data":{"version":3,"file":"remapping.mjs","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@ampproject/remapping/src/source-map-tree.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@ampproject/remapping/src/build-source-map-tree.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@ampproject/remapping/src/source-map.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@ampproject/remapping/src/remapping.ts"],"sourcesContent":["import { GenMapping, maybeAddSegment, setIgnore, setSourceContent } from '@jridgewell/gen-mapping';\nimport { traceSegment, decodedMappings } from '@jridgewell/trace-mapping';\n\nimport type { TraceMap } from '@jridgewell/trace-mapping';\n\nexport type SourceMapSegmentObject = {\n  column: number;\n  line: number;\n  name: string;\n  source: string;\n  content: string | null;\n  ignore: boolean;\n};\n\nexport type OriginalSource = {\n  map: null;\n  sources: Sources[];\n  source: string;\n  content: string | null;\n  ignore: boolean;\n};\n\nexport type MapSource = {\n  map: TraceMap;\n  sources: Sources[];\n  source: string;\n  content: null;\n  ignore: false;\n};\n\nexport type Sources = OriginalSource | MapSource;\n\nconst SOURCELESS_MAPPING = /* #__PURE__ */ SegmentObject('', -1, -1, '', null, false);\nconst EMPTY_SOURCES: Sources[] = [];\n\nfunction SegmentObject(\n  source: string,\n  line: number,\n  column: number,\n  name: string,\n  content: string | null,\n  ignore: boolean\n): SourceMapSegmentObject {\n  return { source, line, column, name, content, ignore };\n}\n\nfunction Source(\n  map: TraceMap,\n  sources: Sources[],\n  source: '',\n  content: null,\n  ignore: false\n): MapSource;\nfunction Source(\n  map: null,\n  sources: Sources[],\n  source: string,\n  content: string | null,\n  ignore: boolean\n): OriginalSource;\nfunction Source(\n  map: TraceMap | null,\n  sources: Sources[],\n  source: string | '',\n  content: string | null,\n  ignore: boolean\n): Sources {\n  return {\n    map,\n    sources,\n    source,\n    content,\n    ignore,\n  } as any;\n}\n\n/**\n * MapSource represents a single sourcemap, with the ability to trace mappings into its child nodes\n * (which may themselves be SourceMapTrees).\n */\nexport function MapSource(map: TraceMap, sources: Sources[]): MapSource {\n  return Source(map, sources, '', null, false);\n}\n\n/**\n * A \"leaf\" node in the sourcemap tree, representing an original, unmodified source file. Recursive\n * segment tracing ends at the `OriginalSource`.\n */\nexport function OriginalSource(\n  source: string,\n  content: string | null,\n  ignore: boolean\n): OriginalSource {\n  return Source(null, EMPTY_SOURCES, source, content, ignore);\n}\n\n/**\n * traceMappings is only called on the root level SourceMapTree, and begins the process of\n * resolving each mapping in terms of the original source files.\n */\nexport function traceMappings(tree: MapSource): GenMapping {\n  // TODO: Eventually support sourceRoot, which has to be removed because the sources are already\n  // fully resolved. We'll need to make sources relative to the sourceRoot before adding them.\n  const gen = new GenMapping({ file: tree.map.file });\n  const { sources: rootSources, map } = tree;\n  const rootNames = map.names;\n  const rootMappings = decodedMappings(map);\n\n  for (let i = 0; i < rootMappings.length; i++) {\n    const segments = rootMappings[i];\n\n    for (let j = 0; j < segments.length; j++) {\n      const segment = segments[j];\n      const genCol = segment[0];\n      let traced: SourceMapSegmentObject | null = SOURCELESS_MAPPING;\n\n      // 1-length segments only move the current generated column, there's no source information\n      // to gather from it.\n      if (segment.length !== 1) {\n        const source = rootSources[segment[1]];\n        traced = originalPositionFor(\n          source,\n          segment[2],\n          segment[3],\n          segment.length === 5 ? rootNames[segment[4]] : ''\n        );\n\n        // If the trace is invalid, then the trace ran into a sourcemap that doesn't contain a\n        // respective segment into an original source.\n        if (traced == null) continue;\n      }\n\n      const { column, line, name, content, source, ignore } = traced;\n\n      maybeAddSegment(gen, i, genCol, source, line, column, name);\n      if (source && content != null) setSourceContent(gen, source, content);\n      if (ignore) setIgnore(gen, source, true);\n    }\n  }\n\n  return gen;\n}\n\n/**\n * originalPositionFor is only called on children SourceMapTrees. It recurses down into its own\n * child SourceMapTrees, until we find the original source map.\n */\nexport function originalPositionFor(\n  source: Sources,\n  line: number,\n  column: number,\n  name: string\n): SourceMapSegmentObject | null {\n  if (!source.map) {\n    return SegmentObject(source.source, line, column, name, source.content, source.ignore);\n  }\n\n  const segment = traceSegment(source.map, line, column);\n\n  // If we couldn't find a segment, then this doesn't exist in the sourcemap.\n  if (segment == null) return null;\n  // 1-length segments only move the current generated column, there's no source information\n  // to gather from it.\n  if (segment.length === 1) return SOURCELESS_MAPPING;\n\n  return originalPositionFor(\n    source.sources[segment[1]],\n    segment[2],\n    segment[3],\n    segment.length === 5 ? source.map.names[segment[4]] : name\n  );\n}\n","import { TraceMap } from '@jridgewell/trace-mapping';\n\nimport { OriginalSource, MapSource } from './source-map-tree';\n\nimport type { Sources, MapSource as MapSourceType } from './source-map-tree';\nimport type { SourceMapInput, SourceMapLoader, LoaderContext } from './types';\n\nfunction asArray<T>(value: T | T[]): T[] {\n  if (Array.isArray(value)) return value;\n  return [value];\n}\n\n/**\n * Recursively builds a tree structure out of sourcemap files, with each node\n * being either an `OriginalSource` \"leaf\" or a `SourceMapTree` composed of\n * `OriginalSource`s and `SourceMapTree`s.\n *\n * Every sourcemap is composed of a collection of source files and mappings\n * into locations of those source files. When we generate a `SourceMapTree` for\n * the sourcemap, we attempt to load each source file's own sourcemap. If it\n * does not have an associated sourcemap, it is considered an original,\n * unmodified source file.\n */\nexport default function buildSourceMapTree(\n  input: SourceMapInput | SourceMapInput[],\n  loader: SourceMapLoader\n): MapSourceType {\n  const maps = asArray(input).map((m) => new TraceMap(m, ''));\n  const map = maps.pop()!;\n\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].sources.length > 1) {\n      throw new Error(\n        `Transformation map ${i} must have exactly one source file.\\n` +\n          'Did you specify these with the most recent transformation maps first?'\n      );\n    }\n  }\n\n  let tree = build(map, loader, '', 0);\n  for (let i = maps.length - 1; i >= 0; i--) {\n    tree = MapSource(maps[i], [tree]);\n  }\n  return tree;\n}\n\nfunction build(\n  map: TraceMap,\n  loader: SourceMapLoader,\n  importer: string,\n  importerDepth: number\n): MapSourceType {\n  const { resolvedSources, sourcesContent, ignoreList } = map;\n\n  const depth = importerDepth + 1;\n  const children = resolvedSources.map((sourceFile: string | null, i: number): Sources => {\n    // The loading context gives the loader more information about why this file is being loaded\n    // (eg, from which importer). It also allows the loader to override the location of the loaded\n    // sourcemap/original source, or to override the content in the sourcesContent field if it's\n    // an unmodified source file.\n    const ctx: LoaderContext = {\n      importer,\n      depth,\n      source: sourceFile || '',\n      content: undefined,\n      ignore: undefined,\n    };\n\n    // Use the provided loader callback to retrieve the file's sourcemap.\n    // TODO: We should eventually support async loading of sourcemap files.\n    const sourceMap = loader(ctx.source, ctx);\n\n    const { source, content, ignore } = ctx;\n\n    // If there is a sourcemap, then we need to recurse into it to load its source files.\n    if (sourceMap) return build(new TraceMap(sourceMap, source), loader, source, depth);\n\n    // Else, it's an unmodified source file.\n    // The contents of this unmodified source file can be overridden via the loader context,\n    // allowing it to be explicitly null or a string. If it remains undefined, we fall back to\n    // the importing sourcemap's `sourcesContent` field.\n    const sourceContent =\n      content !== undefined ? content : sourcesContent ? sourcesContent[i] : null;\n    const ignored = ignore !== undefined ? ignore : ignoreList ? ignoreList.includes(i) : false;\n    return OriginalSource(source, sourceContent, ignored);\n  });\n\n  return MapSource(map, children);\n}\n","import { toDecodedMap, toEncodedMap } from '@jridgewell/gen-mapping';\n\nimport type { GenMapping } from '@jridgewell/gen-mapping';\nimport type { DecodedSourceMap, EncodedSourceMap, Options } from './types';\n\n/**\n * A SourceMap v3 compatible sourcemap, which only includes fields that were\n * provided to it.\n */\nexport default class SourceMap {\n  declare file?: string | null;\n  declare mappings: EncodedSourceMap['mappings'] | DecodedSourceMap['mappings'];\n  declare sourceRoot?: string;\n  declare names: string[];\n  declare sources: (string | null)[];\n  declare sourcesContent?: (string | null)[];\n  declare version: 3;\n  declare ignoreList: number[] | undefined;\n\n  constructor(map: GenMapping, options: Options) {\n    const out = options.decodedMappings ? toDecodedMap(map) : toEncodedMap(map);\n    this.version = out.version; // SourceMap spec says this should be first.\n    this.file = out.file;\n    this.mappings = out.mappings as SourceMap['mappings'];\n    this.names = out.names as SourceMap['names'];\n    this.ignoreList = out.ignoreList as SourceMap['ignoreList'];\n    this.sourceRoot = out.sourceRoot;\n\n    this.sources = out.sources as SourceMap['sources'];\n    if (!options.excludeContent) {\n      this.sourcesContent = out.sourcesContent as SourceMap['sourcesContent'];\n    }\n  }\n\n  toString(): string {\n    return JSON.stringify(this);\n  }\n}\n","import buildSourceMapTree from './build-source-map-tree';\nimport { traceMappings } from './source-map-tree';\nimport SourceMap from './source-map';\n\nimport type { SourceMapInput, SourceMapLoader, Options } from './types';\nexport type {\n  SourceMapSegment,\n  EncodedSourceMap,\n  EncodedSourceMap as RawSourceMap,\n  DecodedSourceMap,\n  SourceMapInput,\n  SourceMapLoader,\n  LoaderContext,\n  Options,\n} from './types';\nexport type { SourceMap };\n\n/**\n * Traces through all the mappings in the root sourcemap, through the sources\n * (and their sourcemaps), all the way back to the original source location.\n *\n * `loader` will be called every time we encounter a source file. If it returns\n * a sourcemap, we will recurse into that sourcemap to continue the trace. If\n * it returns a falsey value, that source file is treated as an original,\n * unmodified source file.\n *\n * Pass `excludeContent` to exclude any self-containing source file content\n * from the output sourcemap.\n *\n * Pass `decodedMappings` to receive a SourceMap with decoded (instead of\n * VLQ encoded) mappings.\n */\nexport default function remapping(\n  input: SourceMapInput | SourceMapInput[],\n  loader: SourceMapLoader,\n  options?: boolean | Options\n): SourceMap {\n  const opts =\n    typeof options === 'object' ? options : { excludeContent: !!options, decodedMappings: false };\n  const tree = buildSourceMapTree(input, loader);\n  return new SourceMap(traceMappings(tree), opts);\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs":{"lineLengths":[61,49,0,31,68,75,130,36,20,35,1,0,3,63,3,30,14,18,40,36,1,0,17,24,22,24,22,29,31,0,37,63,42,24,102,64,15,36,100,55,5,20,1,51,51,35,21,5,27,1,25,43,52,25,9,5,16,1,36,15,28,37,1,31,33,1,0,18,3,77,96,97,18,2,8,24,20,78,2,26,38,38,6,3,52,25,46,51,24,25,23,9,22,26,9,14,27,9,5,18,19,1,46,63,43,18,5,17,1,46,50,43,18,5,17,1,26,12,20,23,22,6,1,3,96,83,3,61,53,16,35,26,36,79,29,9,35,72,51,9,14,29,9,5,24,30,73,1,0,99,28,41,46,46,32,47,32,33,25,51,48,52,56,99,44,103,101,105,62,131,37,72,9,5,19,1,38,48,32,5,25,1,100,97,100,95,36,27,31,1,0,39,30,34,44,5,24,23,30,21,26,108,20,19,26,14,16,23,17,19,6,39,2,21,59,1,135,31,47,44,26,28,38,54,66,34,76,13,37,54,13,9,150,5,1,138,32,29,37,45,41,37,41,83,37,29,17,41,8,56,38,16,48,56,46,37,98,99,102,65,29,19,96,95,45,104,50,51,32,47,32,49,104,29,59,23,35,35,25,13,68,48,52,37,66,100,9,5,1,29,42,27,1,30,45,20,22,1,0,78,98,29,31,16,30,49,42,23,58,85,31,25,33,37,31,45,87,70,74,36,43,37,38,9,14,38,58,9,44,36,40,5,1,3,99,32,3,20,15,1,3,75,3,31,11,11,122,1,3,91,3,31,11,85,1,3,93,80,3,42,41,80,77,31,20,35,109,49,1,3,92,97,24,3,43,40,11,17,39,19,41,41,80,77,31,48,35,117,21,48,36,29,48,43,170,1,3,95,3,44,50,93,1,3,96,3,48,50,83,89,1,3,53,3,31,41,43,46,32,47,32,40,43,30,36,38,28,35,49,42,40,13,33,37,16,30,32,23,29,31,21,15,9,5,1,35,45,40,21,48,17,1,3,91,3,40,35,31,20,43,55,1,3,66,3,33,31,27,21,43,61,1,3,99,8,3,43,56,41,18,1,3,100,37,3,26,44,1,3,100,37,3,26,44,1,31,12,29,23,25,35,29,43,17,62,6,1,47,42,1,33,28,1,67,67,16,96,5,40,16,50,18,17,1,70,87,98,100,101,102,96,31,45,14,46,18,100,100,29,65,93,15,55,57,22,31,38,94,5,18,1,66,11,11,17,39,19,41,45,46,27,54,27,47,167,50,25,47,55,12,75,75,21,36,36,84,1,0,273,42,0],"data":{"version":3,"file":"trace-mapping.mjs","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/resolve.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/strip-filename.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/sourcemap-segment.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/sort.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/binary-search.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/by-source.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/any-map.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts"],"sourcesContent":["import resolveUri from '@jridgewell/resolve-uri';\n\nexport default function resolve(input: string, base: string | undefined): string {\n  // The base is always treated as a directory, if it's not empty.\n  // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\n  // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\n  if (base && !base.endsWith('/')) base += '/';\n\n  return resolveUri(input, base);\n}\n","/**\n * Removes everything after the last \"/\", but leaves the slash.\n */\nexport default function stripFilename(path: string | undefined | null): string {\n  if (!path) return '';\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n","type GeneratedColumn = number;\ntype SourcesIndex = number;\ntype SourceLine = number;\ntype SourceColumn = number;\ntype NamesIndex = number;\n\ntype GeneratedLine = number;\n\nexport type SourceMapSegment =\n  | [GeneratedColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn, NamesIndex];\n\nexport type ReverseSegment = [SourceColumn, GeneratedLine, GeneratedColumn];\n\nexport const COLUMN = 0;\nexport const SOURCES_INDEX = 1;\nexport const SOURCE_LINE = 2;\nexport const SOURCE_COLUMN = 3;\nexport const NAMES_INDEX = 4;\n\nexport const REV_GENERATED_LINE = 1;\nexport const REV_GENERATED_COLUMN = 2;\n","import { COLUMN } from './sourcemap-segment';\n\nimport type { SourceMapSegment } from './sourcemap-segment';\n\nexport default function maybeSort(\n  mappings: SourceMapSegment[][],\n  owned: boolean,\n): SourceMapSegment[][] {\n  const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n  if (unsortedIndex === mappings.length) return mappings;\n\n  // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If\n  // not, we do not want to modify the consumer's input array.\n  if (!owned) mappings = mappings.slice();\n\n  for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n    mappings[i] = sortSegments(mappings[i], owned);\n  }\n  return mappings;\n}\n\nfunction nextUnsortedSegmentLine(mappings: SourceMapSegment[][], start: number): number {\n  for (let i = start; i < mappings.length; i++) {\n    if (!isSorted(mappings[i])) return i;\n  }\n  return mappings.length;\n}\n\nfunction isSorted(line: SourceMapSegment[]): boolean {\n  for (let j = 1; j < line.length; j++) {\n    if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction sortSegments(line: SourceMapSegment[], owned: boolean): SourceMapSegment[] {\n  if (!owned) line = line.slice();\n  return line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[COLUMN] - b[COLUMN];\n}\n","import type { SourceMapSegment, ReverseSegment } from './sourcemap-segment';\nimport { COLUMN } from './sourcemap-segment';\n\nexport type MemoState = {\n  lastKey: number;\n  lastNeedle: number;\n  lastIndex: number;\n};\n\nexport let found = false;\n\n/**\n * A binary search implementation that returns the index if a match is found.\n * If no match is found, then the left-index (the index associated with the item that comes just\n * before the desired index) is returned. To maintain proper sort order, a splice would happen at\n * the next index:\n *\n * ```js\n * const array = [1, 3];\n * const needle = 2;\n * const index = binarySearch(array, needle, (item, needle) => item - needle);\n *\n * assert.equal(index, 0);\n * array.splice(index + 1, 0, needle);\n * assert.deepEqual(array, [1, 2, 3]);\n * ```\n */\nexport function binarySearch(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  low: number,\n  high: number,\n): number {\n  while (low <= high) {\n    const mid = low + ((high - low) >> 1);\n    const cmp = haystack[mid][COLUMN] - needle;\n\n    if (cmp === 0) {\n      found = true;\n      return mid;\n    }\n\n    if (cmp < 0) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n\n  found = false;\n  return low - 1;\n}\n\nexport function upperBound(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  index: number,\n): number {\n  for (let i = index + 1; i < haystack.length; index = i++) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\n\nexport function lowerBound(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  index: number,\n): number {\n  for (let i = index - 1; i >= 0; index = i--) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\n\nexport function memoizedState(): MemoState {\n  return {\n    lastKey: -1,\n    lastNeedle: -1,\n    lastIndex: -1,\n  };\n}\n\n/**\n * This overly complicated beast is just to record the last tested line/column and the resulting\n * index, allowing us to skip a few tests if mappings are monotonically increasing.\n */\nexport function memoizedBinarySearch(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  state: MemoState,\n  key: number,\n): number {\n  const { lastKey, lastNeedle, lastIndex } = state;\n\n  let low = 0;\n  let high = haystack.length - 1;\n  if (key === lastKey) {\n    if (needle === lastNeedle) {\n      found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n      return lastIndex;\n    }\n\n    if (needle >= lastNeedle) {\n      // lastIndex may be -1 if the previous needle was not found.\n      low = lastIndex === -1 ? 0 : lastIndex;\n    } else {\n      high = lastIndex;\n    }\n  }\n  state.lastKey = key;\n  state.lastNeedle = needle;\n\n  return (state.lastIndex = binarySearch(haystack, needle, low, high));\n}\n","import { COLUMN, SOURCES_INDEX, SOURCE_LINE, SOURCE_COLUMN } from './sourcemap-segment';\nimport { memoizedBinarySearch, upperBound } from './binary-search';\n\nimport type { ReverseSegment, SourceMapSegment } from './sourcemap-segment';\nimport type { MemoState } from './binary-search';\n\nexport type Source = {\n  __proto__: null;\n  [line: number]: Exclude<ReverseSegment, [number]>[];\n};\n\n// Rebuilds the original source files, with mappings that are ordered by source line/column instead\n// of generated line/column.\nexport default function buildBySources(\n  decoded: readonly SourceMapSegment[][],\n  memos: MemoState[],\n): Source[] {\n  const sources: Source[] = memos.map(buildNullArray);\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      if (seg.length === 1) continue;\n\n      const sourceIndex = seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      const originalSource = sources[sourceIndex];\n      const originalLine = (originalSource[sourceLine] ||= []);\n      const memo = memos[sourceIndex];\n\n      // The binary search either found a match, or it found the left-index just before where the\n      // segment should go. Either way, we want to insert after that. And there may be multiple\n      // generated segments associated with an original location, so there may need to move several\n      // indexes before we find where we need to insert.\n      let index = upperBound(\n        originalLine,\n        sourceColumn,\n        memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine),\n      );\n\n      memo.lastIndex = ++index;\n      insert(originalLine, index, [sourceColumn, i, seg[COLUMN]]);\n    }\n  }\n\n  return sources;\n}\n\nfunction insert<T>(array: T[], index: number, value: T) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\n\n// Null arrays allow us to use ordered index keys without actually allocating contiguous memory like\n// a real array. We use a null-prototype object to avoid prototype pollution and deoptimizations.\n// Numeric properties on objects are magically sorted in ascending order by the engine regardless of\n// the insertion order. So, by setting any numeric keys, even out of order, we'll get ascending\n// order when iterating with for-in.\nfunction buildNullArray<T extends { __proto__: null }>(): T {\n  return { __proto__: null } as T;\n}\n","import { TraceMap, presortedDecodedMap, decodedMappings } from './trace-mapping';\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n} from './sourcemap-segment';\n\nimport type {\n  DecodedSourceMap,\n  DecodedSourceMapXInput,\n  EncodedSourceMapXInput,\n  SectionedSourceMapXInput,\n  SectionedSourceMapInput,\n  SectionXInput,\n} from './types';\nimport type { SourceMapSegment } from './sourcemap-segment';\n\ntype AnyMap = {\n  new (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;\n  (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;\n};\n\nexport const AnyMap: AnyMap = function (map, mapUrl) {\n  const parsed = parse(map);\n\n  if (!('sections' in parsed)) {\n    return new TraceMap(parsed as DecodedSourceMapXInput | EncodedSourceMapXInput, mapUrl);\n  }\n\n  const mappings: SourceMapSegment[][] = [];\n  const sources: string[] = [];\n  const sourcesContent: (string | null)[] = [];\n  const names: string[] = [];\n  const ignoreList: number[] = [];\n\n  recurse(\n    parsed,\n    mapUrl,\n    mappings,\n    sources,\n    sourcesContent,\n    names,\n    ignoreList,\n    0,\n    0,\n    Infinity,\n    Infinity,\n  );\n\n  const joined: DecodedSourceMap = {\n    version: 3,\n    file: parsed.file,\n    names,\n    sources,\n    sourcesContent,\n    mappings,\n    ignoreList,\n  };\n\n  return presortedDecodedMap(joined);\n} as AnyMap;\n\nfunction parse<T>(map: T): Exclude<T, string> {\n  return typeof map === 'string' ? JSON.parse(map) : map;\n}\n\nfunction recurse(\n  input: SectionedSourceMapXInput,\n  mapUrl: string | null | undefined,\n  mappings: SourceMapSegment[][],\n  sources: string[],\n  sourcesContent: (string | null)[],\n  names: string[],\n  ignoreList: number[],\n  lineOffset: number,\n  columnOffset: number,\n  stopLine: number,\n  stopColumn: number,\n) {\n  const { sections } = input;\n  for (let i = 0; i < sections.length; i++) {\n    const { map, offset } = sections[i];\n\n    let sl = stopLine;\n    let sc = stopColumn;\n    if (i + 1 < sections.length) {\n      const nextOffset = sections[i + 1].offset;\n      sl = Math.min(stopLine, lineOffset + nextOffset.line);\n\n      if (sl === stopLine) {\n        sc = Math.min(stopColumn, columnOffset + nextOffset.column);\n      } else if (sl < stopLine) {\n        sc = columnOffset + nextOffset.column;\n      }\n    }\n\n    addSection(\n      map,\n      mapUrl,\n      mappings,\n      sources,\n      sourcesContent,\n      names,\n      ignoreList,\n      lineOffset + offset.line,\n      columnOffset + offset.column,\n      sl,\n      sc,\n    );\n  }\n}\n\nfunction addSection(\n  input: SectionXInput['map'],\n  mapUrl: string | null | undefined,\n  mappings: SourceMapSegment[][],\n  sources: string[],\n  sourcesContent: (string | null)[],\n  names: string[],\n  ignoreList: number[],\n  lineOffset: number,\n  columnOffset: number,\n  stopLine: number,\n  stopColumn: number,\n) {\n  const parsed = parse(input);\n  if ('sections' in parsed) return recurse(...(arguments as unknown as Parameters<typeof recurse>));\n\n  const map = new TraceMap(parsed, mapUrl);\n  const sourcesOffset = sources.length;\n  const namesOffset = names.length;\n  const decoded = decodedMappings(map);\n  const { resolvedSources, sourcesContent: contents, ignoreList: ignores } = map;\n\n  append(sources, resolvedSources);\n  append(names, map.names);\n\n  if (contents) append(sourcesContent, contents);\n  else for (let i = 0; i < resolvedSources.length; i++) sourcesContent.push(null);\n\n  if (ignores) for (let i = 0; i < ignores.length; i++) ignoreList.push(ignores[i] + sourcesOffset);\n\n  for (let i = 0; i < decoded.length; i++) {\n    const lineI = lineOffset + i;\n\n    // We can only add so many lines before we step into the range that the next section's map\n    // controls. When we get to the last line, then we'll start checking the segments to see if\n    // they've crossed into the column range. But it may not have any columns that overstep, so we\n    // still need to check that we don't overstep lines, too.\n    if (lineI > stopLine) return;\n\n    // The out line may already exist in mappings (if we're continuing the line started by a\n    // previous section). Or, we may have jumped ahead several lines to start this section.\n    const out = getLine(mappings, lineI);\n    // On the 0th loop, the section's column offset shifts us forward. On all other lines (since the\n    // map can be multiple lines), it doesn't.\n    const cOffset = i === 0 ? columnOffset : 0;\n\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const column = cOffset + seg[COLUMN];\n\n      // If this segment steps into the column range that the next section's map controls, we need\n      // to stop early.\n      if (lineI === stopLine && column >= stopColumn) return;\n\n      if (seg.length === 1) {\n        out.push([column]);\n        continue;\n      }\n\n      const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      out.push(\n        seg.length === 4\n          ? [column, sourcesIndex, sourceLine, sourceColumn]\n          : [column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]],\n      );\n    }\n  }\n}\n\nfunction append<T>(arr: T[], other: T[]) {\n  for (let i = 0; i < other.length; i++) arr.push(other[i]);\n}\n\nfunction getLine<T>(arr: T[][], index: number): T[] {\n  for (let i = arr.length; i <= index; i++) arr[i] = [];\n  return arr[index];\n}\n","import { encode, decode } from '@jridgewell/sourcemap-codec';\n\nimport resolve from './resolve';\nimport stripFilename from './strip-filename';\nimport maybeSort from './sort';\nimport buildBySources from './by-source';\nimport {\n  memoizedState,\n  memoizedBinarySearch,\n  upperBound,\n  lowerBound,\n  found as bsFound,\n} from './binary-search';\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n  REV_GENERATED_LINE,\n  REV_GENERATED_COLUMN,\n} from './sourcemap-segment';\n\nimport type { SourceMapSegment, ReverseSegment } from './sourcemap-segment';\nimport type {\n  SourceMapV3,\n  DecodedSourceMap,\n  EncodedSourceMap,\n  InvalidOriginalMapping,\n  OriginalMapping,\n  InvalidGeneratedMapping,\n  GeneratedMapping,\n  SourceMapInput,\n  Needle,\n  SourceNeedle,\n  SourceMap,\n  EachMapping,\n  Bias,\n  XInput,\n} from './types';\nimport type { Source } from './by-source';\nimport type { MemoState } from './binary-search';\n\nexport type { SourceMapSegment } from './sourcemap-segment';\nexport type {\n  SourceMap,\n  DecodedSourceMap,\n  EncodedSourceMap,\n  Section,\n  SectionedSourceMap,\n  SourceMapV3,\n  Bias,\n  EachMapping,\n  GeneratedMapping,\n  InvalidGeneratedMapping,\n  InvalidOriginalMapping,\n  Needle,\n  OriginalMapping,\n  OriginalMapping as Mapping,\n  SectionedSourceMapInput,\n  SourceMapInput,\n  SourceNeedle,\n  XInput,\n  EncodedSourceMapXInput,\n  DecodedSourceMapXInput,\n  SectionedSourceMapXInput,\n  SectionXInput,\n} from './types';\n\ninterface PublicMap {\n  _encoded: TraceMap['_encoded'];\n  _decoded: TraceMap['_decoded'];\n  _decodedMemo: TraceMap['_decodedMemo'];\n  _bySources: TraceMap['_bySources'];\n  _bySourceMemos: TraceMap['_bySourceMemos'];\n}\n\nconst LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';\nconst COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';\n\nexport const LEAST_UPPER_BOUND = -1;\nexport const GREATEST_LOWER_BOUND = 1;\n\nexport { AnyMap } from './any-map';\n\nexport class TraceMap implements SourceMap {\n  declare version: SourceMapV3['version'];\n  declare file: SourceMapV3['file'];\n  declare names: SourceMapV3['names'];\n  declare sourceRoot: SourceMapV3['sourceRoot'];\n  declare sources: SourceMapV3['sources'];\n  declare sourcesContent: SourceMapV3['sourcesContent'];\n  declare ignoreList: SourceMapV3['ignoreList'];\n\n  declare resolvedSources: string[];\n  private declare _encoded: string | undefined;\n\n  private declare _decoded: SourceMapSegment[][] | undefined;\n  private declare _decodedMemo: MemoState;\n\n  private declare _bySources: Source[] | undefined;\n  private declare _bySourceMemos: MemoState[] | undefined;\n\n  constructor(map: SourceMapInput, mapUrl?: string | null) {\n    const isString = typeof map === 'string';\n\n    if (!isString && (map as unknown as { _decodedMemo: any })._decodedMemo) return map as TraceMap;\n\n    const parsed = (isString ? JSON.parse(map) : map) as DecodedSourceMap | EncodedSourceMap;\n\n    const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n    this.version = version;\n    this.file = file;\n    this.names = names || [];\n    this.sourceRoot = sourceRoot;\n    this.sources = sources;\n    this.sourcesContent = sourcesContent;\n    this.ignoreList = parsed.ignoreList || (parsed as XInput).x_google_ignoreList || undefined;\n\n    const from = resolve(sourceRoot || '', stripFilename(mapUrl));\n    this.resolvedSources = sources.map((s) => resolve(s || '', from));\n\n    const { mappings } = parsed;\n    if (typeof mappings === 'string') {\n      this._encoded = mappings;\n      this._decoded = undefined;\n    } else {\n      this._encoded = undefined;\n      this._decoded = maybeSort(mappings, isString);\n    }\n\n    this._decodedMemo = memoizedState();\n    this._bySources = undefined;\n    this._bySourceMemos = undefined;\n  }\n}\n\n/**\n * Typescript doesn't allow friend access to private fields, so this just casts the map into a type\n * with public access modifiers.\n */\nfunction cast(map: unknown): PublicMap {\n  return map as any;\n}\n\n/**\n * Returns the encoded (VLQ string) form of the SourceMap's mappings field.\n */\nexport function encodedMappings(map: TraceMap): EncodedSourceMap['mappings'] {\n  return (cast(map)._encoded ??= encode(cast(map)._decoded!));\n}\n\n/**\n * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.\n */\nexport function decodedMappings(map: TraceMap): Readonly<DecodedSourceMap['mappings']> {\n  return (cast(map)._decoded ||= decode(cast(map)._encoded!));\n}\n\n/**\n * A low-level API to find the segment associated with a generated line/column (think, from a\n * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.\n */\nexport function traceSegment(\n  map: TraceMap,\n  line: number,\n  column: number,\n): Readonly<SourceMapSegment> | null {\n  const decoded = decodedMappings(map);\n\n  // It's common for parent source maps to have pointers to lines that have no\n  // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n  if (line >= decoded.length) return null;\n\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    GREATEST_LOWER_BOUND,\n  );\n\n  return index === -1 ? null : segments[index];\n}\n\n/**\n * A higher-level API to find the source/line/column associated with a generated line/column\n * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in\n * `source-map` library.\n */\nexport function originalPositionFor(\n  map: TraceMap,\n  needle: Needle,\n): OriginalMapping | InvalidOriginalMapping {\n  let { line, column, bias } = needle;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n\n  const decoded = decodedMappings(map);\n\n  // It's common for parent source maps to have pointers to lines that have no\n  // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n  if (line >= decoded.length) return OMapping(null, null, null, null);\n\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    bias || GREATEST_LOWER_BOUND,\n  );\n\n  if (index === -1) return OMapping(null, null, null, null);\n\n  const segment = segments[index];\n  if (segment.length === 1) return OMapping(null, null, null, null);\n\n  const { names, resolvedSources } = map;\n  return OMapping(\n    resolvedSources[segment[SOURCES_INDEX]],\n    segment[SOURCE_LINE] + 1,\n    segment[SOURCE_COLUMN],\n    segment.length === 5 ? names[segment[NAMES_INDEX]] : null,\n  );\n}\n\n/**\n * Finds the generated line/column position of the provided source/line/column source position.\n */\nexport function generatedPositionFor(\n  map: TraceMap,\n  needle: SourceNeedle,\n): GeneratedMapping | InvalidGeneratedMapping {\n  const { source, line, column, bias } = needle;\n  return generatedPosition(map, source, line, column, bias || GREATEST_LOWER_BOUND, false);\n}\n\n/**\n * Finds all generated line/column positions of the provided source/line/column source position.\n */\nexport function allGeneratedPositionsFor(map: TraceMap, needle: SourceNeedle): GeneratedMapping[] {\n  const { source, line, column, bias } = needle;\n  // SourceMapConsumer uses LEAST_UPPER_BOUND for some reason, so we follow suit.\n  return generatedPosition(map, source, line, column, bias || LEAST_UPPER_BOUND, true);\n}\n\n/**\n * Iterates each mapping in generated position order.\n */\nexport function eachMapping(map: TraceMap, cb: (mapping: EachMapping) => void): void {\n  const decoded = decodedMappings(map);\n  const { names, resolvedSources } = map;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n\n      const generatedLine = i + 1;\n      const generatedColumn = seg[0];\n      let source = null;\n      let originalLine = null;\n      let originalColumn = null;\n      let name = null;\n      if (seg.length !== 1) {\n        source = resolvedSources[seg[1]];\n        originalLine = seg[2] + 1;\n        originalColumn = seg[3];\n      }\n      if (seg.length === 5) name = names[seg[4]];\n\n      cb({\n        generatedLine,\n        generatedColumn,\n        source,\n        originalLine,\n        originalColumn,\n        name,\n      } as EachMapping);\n    }\n  }\n}\n\nfunction sourceIndex(map: TraceMap, source: string): number {\n  const { sources, resolvedSources } = map;\n  let index = sources.indexOf(source);\n  if (index === -1) index = resolvedSources.indexOf(source);\n  return index;\n}\n\n/**\n * Retrieves the source content for a particular source, if its found. Returns null if not.\n */\nexport function sourceContentFor(map: TraceMap, source: string): string | null {\n  const { sourcesContent } = map;\n  if (sourcesContent == null) return null;\n  const index = sourceIndex(map, source);\n  return index === -1 ? null : sourcesContent[index];\n}\n\n/**\n * Determines if the source is marked to ignore by the source map.\n */\nexport function isIgnored(map: TraceMap, source: string): boolean {\n  const { ignoreList } = map;\n  if (ignoreList == null) return false;\n  const index = sourceIndex(map, source);\n  return index === -1 ? false : ignoreList.includes(index);\n}\n\n/**\n * A helper that skips sorting of the input map's mappings array, which can be expensive for larger\n * maps.\n */\nexport function presortedDecodedMap(map: DecodedSourceMap, mapUrl?: string): TraceMap {\n  const tracer = new TraceMap(clone(map, []), mapUrl);\n  cast(tracer)._decoded = map.mappings;\n  return tracer;\n}\n\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function decodedMap(\n  map: TraceMap,\n): Omit<DecodedSourceMap, 'mappings'> & { mappings: readonly SourceMapSegment[][] } {\n  return clone(map, decodedMappings(map));\n}\n\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function encodedMap(map: TraceMap): EncodedSourceMap {\n  return clone(map, encodedMappings(map));\n}\n\nfunction clone<T extends string | readonly SourceMapSegment[][]>(\n  map: TraceMap | DecodedSourceMap,\n  mappings: T,\n): T extends string ? EncodedSourceMap : DecodedSourceMap {\n  return {\n    version: map.version,\n    file: map.file,\n    names: map.names,\n    sourceRoot: map.sourceRoot,\n    sources: map.sources,\n    sourcesContent: map.sourcesContent,\n    mappings,\n    ignoreList: map.ignoreList || (map as XInput).x_google_ignoreList,\n  } as any;\n}\n\nfunction OMapping(source: null, line: null, column: null, name: null): InvalidOriginalMapping;\nfunction OMapping(\n  source: string,\n  line: number,\n  column: number,\n  name: string | null,\n): OriginalMapping;\nfunction OMapping(\n  source: string | null,\n  line: number | null,\n  column: number | null,\n  name: string | null,\n): OriginalMapping | InvalidOriginalMapping {\n  return { source, line, column, name } as any;\n}\n\nfunction GMapping(line: null, column: null): InvalidGeneratedMapping;\nfunction GMapping(line: number, column: number): GeneratedMapping;\nfunction GMapping(\n  line: number | null,\n  column: number | null,\n): GeneratedMapping | InvalidGeneratedMapping {\n  return { line, column } as any;\n}\n\nfunction traceSegmentInternal(\n  segments: SourceMapSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number;\nfunction traceSegmentInternal(\n  segments: ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number;\nfunction traceSegmentInternal(\n  segments: SourceMapSegment[] | ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number {\n  let index = memoizedBinarySearch(segments, column, memo, line);\n  if (bsFound) {\n    index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n  } else if (bias === LEAST_UPPER_BOUND) index++;\n\n  if (index === -1 || index === segments.length) return -1;\n  return index;\n}\n\nfunction sliceGeneratedPositions(\n  segments: ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): GeneratedMapping[] {\n  let min = traceSegmentInternal(segments, memo, line, column, GREATEST_LOWER_BOUND);\n\n  // We ignored the bias when tracing the segment so that we're guarnateed to find the first (in\n  // insertion order) segment that matched. Even if we did respect the bias when tracing, we would\n  // still need to call `lowerBound()` to find the first segment, which is slower than just looking\n  // for the GREATEST_LOWER_BOUND to begin with. The only difference that matters for us is when the\n  // binary search didn't match, in which case GREATEST_LOWER_BOUND just needs to increment to\n  // match LEAST_UPPER_BOUND.\n  if (!bsFound && bias === LEAST_UPPER_BOUND) min++;\n\n  if (min === -1 || min === segments.length) return [];\n\n  // We may have found the segment that started at an earlier column. If this is the case, then we\n  // need to slice all generated segments that match _that_ column, because all such segments span\n  // to our desired column.\n  const matchedColumn = bsFound ? column : segments[min][COLUMN];\n\n  // The binary search is not guaranteed to find the lower bound when a match wasn't found.\n  if (!bsFound) min = lowerBound(segments, matchedColumn, min);\n  const max = upperBound(segments, matchedColumn, min);\n\n  const result = [];\n  for (; min <= max; min++) {\n    const segment = segments[min];\n    result.push(GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]));\n  }\n  return result;\n}\n\nfunction generatedPosition(\n  map: TraceMap,\n  source: string,\n  line: number,\n  column: number,\n  bias: Bias,\n  all: false,\n): GeneratedMapping | InvalidGeneratedMapping;\nfunction generatedPosition(\n  map: TraceMap,\n  source: string,\n  line: number,\n  column: number,\n  bias: Bias,\n  all: true,\n): GeneratedMapping[];\nfunction generatedPosition(\n  map: TraceMap,\n  source: string,\n  line: number,\n  column: number,\n  bias: Bias,\n  all: boolean,\n): GeneratedMapping | InvalidGeneratedMapping | GeneratedMapping[] {\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n\n  const { sources, resolvedSources } = map;\n  let sourceIndex = sources.indexOf(source);\n  if (sourceIndex === -1) sourceIndex = resolvedSources.indexOf(source);\n  if (sourceIndex === -1) return all ? [] : GMapping(null, null);\n\n  const generated = (cast(map)._bySources ||= buildBySources(\n    decodedMappings(map),\n    (cast(map)._bySourceMemos = sources.map(memoizedState)),\n  ));\n\n  const segments = generated[sourceIndex][line];\n  if (segments == null) return all ? [] : GMapping(null, null);\n\n  const memo = cast(map)._bySourceMemos![sourceIndex];\n\n  if (all) return sliceGeneratedPositions(segments, memo, line, column, bias);\n\n  const index = traceSegmentInternal(segments, memo, line, column, bias);\n  if (index === -1) return GMapping(null, null);\n\n  const segment = segments[index];\n  return GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]);\n}\n"],"names":["bsFound"],"mappings":"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","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/gen-mapping/dist/gen-mapping.mjs":{"lineLengths":[62,53,70,0,17,24,22,24,22,0,19,3,46,3,18,44,37,39,34,28,25,37,42,5,1,3,99,32,3,20,15,1,95,111,1,35,51,1,3,96,98,82,3,103,110,2,3,96,98,82,3,43,50,2,3,65,3,49,77,39,36,1,48,102,39,40,37,15,31,8,34,1,3,100,37,3,28,139,36,12,19,36,27,48,31,23,17,37,6,1,3,100,37,3,28,38,93,1,3,80,3,25,36,79,40,44,82,47,23,54,15,1,3,97,38,3,27,19,80,47,33,47,32,67,35,37,33,35,59,86,37,57,13,60,9,5,15,1,95,113,114,44,50,18,52,19,48,5,46,57,47,95,98,15,5,35,73,63,1,35,52,25,5,27,1,42,28,50,32,41,18,5,17,1,38,48,32,5,25,1,42,32,21,49,35,18,5,21,30,1,32,42,30,1,38,97,47,20,20,33,97,101,46,29,1,86,85,20,21,33,83,26,21,96,44,51,43,47,74,1,53,67,18,117,5,142,1,0,159,40,0],"data":{"version":3,"file":"gen-mapping.mjs","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/gen-mapping/src/sourcemap-segment.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/gen-mapping/src/gen-mapping.ts"],"sourcesContent":["type GeneratedColumn = number;\ntype SourcesIndex = number;\ntype SourceLine = number;\ntype SourceColumn = number;\ntype NamesIndex = number;\n\nexport type SourceMapSegment =\n  | [GeneratedColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn, NamesIndex];\n\nexport const COLUMN = 0;\nexport const SOURCES_INDEX = 1;\nexport const SOURCE_LINE = 2;\nexport const SOURCE_COLUMN = 3;\nexport const NAMES_INDEX = 4;\n","import { SetArray, put, remove } from '@jridgewell/set-array';\nimport { encode } from '@jridgewell/sourcemap-codec';\nimport { TraceMap, decodedMappings } from '@jridgewell/trace-mapping';\n\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n} from './sourcemap-segment';\n\nimport type { SourceMapInput } from '@jridgewell/trace-mapping';\nimport type { SourceMapSegment } from './sourcemap-segment';\nimport type { DecodedSourceMap, EncodedSourceMap, Pos, Mapping } from './types';\n\nexport type { DecodedSourceMap, EncodedSourceMap, Mapping };\n\nexport type Options = {\n  file?: string | null;\n  sourceRoot?: string | null;\n};\n\nconst NO_NAME = -1;\n\n/**\n * Provides the state to generate a sourcemap.\n */\nexport class GenMapping {\n  private declare _names: SetArray<string>;\n  private declare _sources: SetArray<string>;\n  private declare _sourcesContent: (string | null)[];\n  private declare _mappings: SourceMapSegment[][];\n  private declare _ignoreList: SetArray<number>;\n  declare file: string | null | undefined;\n  declare sourceRoot: string | null | undefined;\n\n  constructor({ file, sourceRoot }: Options = {}) {\n    this._names = new SetArray();\n    this._sources = new SetArray();\n    this._sourcesContent = [];\n    this._mappings = [];\n    this.file = file;\n    this.sourceRoot = sourceRoot;\n    this._ignoreList = new SetArray();\n  }\n}\n\ninterface PublicMap {\n  _names: GenMapping['_names'];\n  _sources: GenMapping['_sources'];\n  _sourcesContent: GenMapping['_sourcesContent'];\n  _mappings: GenMapping['_mappings'];\n  _ignoreList: GenMapping['_ignoreList'];\n}\n\n/**\n * Typescript doesn't allow friend access to private fields, so this just casts the map into a type\n * with public access modifiers.\n */\nfunction cast(map: unknown): PublicMap {\n  return map as any;\n}\n\n/**\n * A low-level API to associate a generated position with an original source position. Line and\n * column here are 0-based, unlike `addMapping`.\n */\nexport function addSegment(\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source?: null,\n  sourceLine?: null,\n  sourceColumn?: null,\n  name?: null,\n  content?: null,\n): void;\nexport function addSegment(\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source: string,\n  sourceLine: number,\n  sourceColumn: number,\n  name?: null,\n  content?: string | null,\n): void;\nexport function addSegment(\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source: string,\n  sourceLine: number,\n  sourceColumn: number,\n  name: string,\n  content?: string | null,\n): void;\nexport function addSegment(\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source?: string | null,\n  sourceLine?: number | null,\n  sourceColumn?: number | null,\n  name?: string | null,\n  content?: string | null,\n): void {\n  return addSegmentInternal(\n    false,\n    map,\n    genLine,\n    genColumn,\n    source,\n    sourceLine,\n    sourceColumn,\n    name,\n    content,\n  );\n}\n\n/**\n * A high-level API to associate a generated position with an original source position. Line is\n * 1-based, but column is 0-based, due to legacy behavior in `source-map` library.\n */\nexport function addMapping(\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source?: null;\n    original?: null;\n    name?: null;\n    content?: null;\n  },\n): void;\nexport function addMapping(\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source: string;\n    original: Pos;\n    name?: null;\n    content?: string | null;\n  },\n): void;\nexport function addMapping(\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source: string;\n    original: Pos;\n    name: string;\n    content?: string | null;\n  },\n): void;\nexport function addMapping(\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source?: string | null;\n    original?: Pos | null;\n    name?: string | null;\n    content?: string | null;\n  },\n): void {\n  return addMappingInternal(false, map, mapping as Parameters<typeof addMappingInternal>[2]);\n}\n\n/**\n * Same as `addSegment`, but will only add the segment if it generates useful information in the\n * resulting map. This only works correctly if segments are added **in order**, meaning you should\n * not add a segment with a lower generated line/column than one that came before.\n */\nexport const maybeAddSegment: typeof addSegment = (\n  map,\n  genLine,\n  genColumn,\n  source,\n  sourceLine,\n  sourceColumn,\n  name,\n  content,\n) => {\n  return addSegmentInternal(\n    true,\n    map,\n    genLine,\n    genColumn,\n    source,\n    sourceLine,\n    sourceColumn,\n    name,\n    content,\n  );\n};\n\n/**\n * Same as `addMapping`, but will only add the mapping if it generates useful information in the\n * resulting map. This only works correctly if mappings are added **in order**, meaning you should\n * not add a mapping with a lower generated line/column than one that came before.\n */\nexport const maybeAddMapping: typeof addMapping = (map, mapping) => {\n  return addMappingInternal(true, map, mapping as Parameters<typeof addMappingInternal>[2]);\n};\n\n/**\n * Adds/removes the content of the source file to the source map.\n */\nexport function setSourceContent(map: GenMapping, source: string, content: string | null): void {\n  const { _sources: sources, _sourcesContent: sourcesContent } = cast(map);\n  const index = put(sources, source);\n  sourcesContent[index] = content;\n}\n\nexport function setIgnore(map: GenMapping, source: string, ignore = true) {\n  const { _sources: sources, _sourcesContent: sourcesContent, _ignoreList: ignoreList } = cast(map);\n  const index = put(sources, source);\n  if (index === sourcesContent.length) sourcesContent[index] = null;\n  if (ignore) put(ignoreList, index);\n  else remove(ignoreList, index);\n}\n\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function toDecodedMap(map: GenMapping): DecodedSourceMap {\n  const {\n    _mappings: mappings,\n    _sources: sources,\n    _sourcesContent: sourcesContent,\n    _names: names,\n    _ignoreList: ignoreList,\n  } = cast(map);\n  removeEmptyFinalLines(mappings);\n\n  return {\n    version: 3,\n    file: map.file || undefined,\n    names: names.array,\n    sourceRoot: map.sourceRoot || undefined,\n    sources: sources.array,\n    sourcesContent,\n    mappings,\n    ignoreList: ignoreList.array,\n  };\n}\n\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function toEncodedMap(map: GenMapping): EncodedSourceMap {\n  const decoded = toDecodedMap(map);\n  return {\n    ...decoded,\n    mappings: encode(decoded.mappings as SourceMapSegment[][]),\n  };\n}\n\n/**\n * Constructs a new GenMapping, using the already present mappings of the input.\n */\nexport function fromMap(input: SourceMapInput): GenMapping {\n  const map = new TraceMap(input);\n  const gen = new GenMapping({ file: map.file, sourceRoot: map.sourceRoot });\n\n  putAll(cast(gen)._names, map.names);\n  putAll(cast(gen)._sources, map.sources as string[]);\n  cast(gen)._sourcesContent = map.sourcesContent || map.sources.map(() => null);\n  cast(gen)._mappings = decodedMappings(map) as GenMapping['_mappings'];\n  if (map.ignoreList) putAll(cast(gen)._ignoreList, map.ignoreList);\n\n  return gen;\n}\n\n/**\n * Returns an array of high-level mapping objects for every recorded segment, which could then be\n * passed to the `source-map` library.\n */\nexport function allMappings(map: GenMapping): Mapping[] {\n  const out: Mapping[] = [];\n  const { _mappings: mappings, _sources: sources, _names: names } = cast(map);\n\n  for (let i = 0; i < mappings.length; i++) {\n    const line = mappings[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n\n      const generated = { line: i + 1, column: seg[COLUMN] };\n      let source: string | undefined = undefined;\n      let original: Pos | undefined = undefined;\n      let name: string | undefined = undefined;\n\n      if (seg.length !== 1) {\n        source = sources.array[seg[SOURCES_INDEX]];\n        original = { line: seg[SOURCE_LINE] + 1, column: seg[SOURCE_COLUMN] };\n\n        if (seg.length === 5) name = names.array[seg[NAMES_INDEX]];\n      }\n\n      out.push({ generated, source, original, name } as Mapping);\n    }\n  }\n\n  return out;\n}\n\n// This split declaration is only so that terser can elminiate the static initialization block.\nfunction addSegmentInternal<S extends string | null | undefined>(\n  skipable: boolean,\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source: S,\n  sourceLine: S extends string ? number : null | undefined,\n  sourceColumn: S extends string ? number : null | undefined,\n  name: S extends string ? string | null | undefined : null | undefined,\n  content: S extends string ? string | null | undefined : null | undefined,\n): void {\n  const {\n    _mappings: mappings,\n    _sources: sources,\n    _sourcesContent: sourcesContent,\n    _names: names,\n  } = cast(map);\n  const line = getLine(mappings, genLine);\n  const index = getColumnIndex(line, genColumn);\n\n  if (!source) {\n    if (skipable && skipSourceless(line, index)) return;\n    return insert(line, index, [genColumn]);\n  }\n\n  // Sigh, TypeScript can't figure out sourceLine and sourceColumn aren't nullish if source\n  // isn't nullish.\n  assert<number>(sourceLine);\n  assert<number>(sourceColumn);\n\n  const sourcesIndex = put(sources, source);\n  const namesIndex = name ? put(names, name) : NO_NAME;\n  if (sourcesIndex === sourcesContent.length) sourcesContent[sourcesIndex] = content ?? null;\n\n  if (skipable && skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex)) {\n    return;\n  }\n\n  return insert(\n    line,\n    index,\n    name\n      ? [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex]\n      : [genColumn, sourcesIndex, sourceLine, sourceColumn],\n  );\n}\n\nfunction assert<T>(_val: unknown): asserts _val is T {\n  // noop.\n}\n\nfunction getLine(mappings: SourceMapSegment[][], index: number): SourceMapSegment[] {\n  for (let i = mappings.length; i <= index; i++) {\n    mappings[i] = [];\n  }\n  return mappings[index];\n}\n\nfunction getColumnIndex(line: SourceMapSegment[], genColumn: number): number {\n  let index = line.length;\n  for (let i = index - 1; i >= 0; index = i--) {\n    const current = line[i];\n    if (genColumn >= current[COLUMN]) break;\n  }\n  return index;\n}\n\nfunction insert<T>(array: T[], index: number, value: T) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\n\nfunction removeEmptyFinalLines(mappings: SourceMapSegment[][]) {\n  const { length } = mappings;\n  let len = length;\n  for (let i = len - 1; i >= 0; len = i, i--) {\n    if (mappings[i].length > 0) break;\n  }\n  if (len < length) mappings.length = len;\n}\n\nfunction putAll<T extends string | number>(setarr: SetArray<T>, array: T[]) {\n  for (let i = 0; i < array.length; i++) put(setarr, array[i]);\n}\n\nfunction skipSourceless(line: SourceMapSegment[], index: number): boolean {\n  // The start of a line is already sourceless, so adding a sourceless segment to the beginning\n  // doesn't generate any useful information.\n  if (index === 0) return true;\n\n  const prev = line[index - 1];\n  // If the previous segment is also sourceless, then adding another sourceless segment doesn't\n  // genrate any new information. Else, this segment will end the source/named segment and point to\n  // a sourceless position, which is useful.\n  return prev.length === 1;\n}\n\nfunction skipSource(\n  line: SourceMapSegment[],\n  index: number,\n  sourcesIndex: number,\n  sourceLine: number,\n  sourceColumn: number,\n  namesIndex: number,\n): boolean {\n  // A source/named segment at the start of a line gives position at that genColumn\n  if (index === 0) return false;\n\n  const prev = line[index - 1];\n\n  // If the previous segment is sourceless, then we're transitioning to a source.\n  if (prev.length === 1) return false;\n\n  // If the previous segment maps to the exact same source position, then this segment doesn't\n  // provide any new position information.\n  return (\n    sourcesIndex === prev[SOURCES_INDEX] &&\n    sourceLine === prev[SOURCE_LINE] &&\n    sourceColumn === prev[SOURCE_COLUMN] &&\n    namesIndex === (prev.length === 5 ? prev[NAMES_INDEX] : NO_NAME)\n  );\n}\n\nfunction addMappingInternal<S extends string | null | undefined>(\n  skipable: boolean,\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source: S;\n    original: S extends string ? Pos : null | undefined;\n    name: S extends string ? string | null | undefined : null | undefined;\n    content: S extends string ? string | null | undefined : null | undefined;\n  },\n) {\n  const { generated, source, original, name, content } = mapping;\n  if (!source) {\n    return addSegmentInternal(\n      skipable,\n      map,\n      generated.line - 1,\n      generated.column,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n  }\n  assert<Pos>(original);\n  return addSegmentInternal(\n    skipable,\n    map,\n    generated.line - 1,\n    generated.column,\n    source as string,\n    original.line - 1,\n    original.column,\n    name,\n    content,\n  );\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/set-array/dist/set-array.mjs":{"lineLengths":[3,96,43,2,97,97,34,3,16,19,44,24,5,1,3,99,32,3,20,15,1,3,87,3,27,38,1,3,75,47,3,27,74,35,28,21,54,35,39,1,3,48,3,22,54,27,15,29,30,1,3,44,3,30,35,28,15,54,52,27,25,21,5,29,16,1,0,43,38,0],"data":{"version":3,"file":"set-array.mjs","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/set-array/src/set-array.ts"],"sourcesContent":["type Key = string | number | symbol;\n\n/**\n * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\n * index of the `key` in the backing array.\n *\n * This is designed to allow synchronizing a second array with the contents of the backing array,\n * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\n * and there are never duplicates.\n */\nexport class SetArray<T extends Key = Key> {\n  private declare _indexes: Record<T, number | undefined>;\n  declare array: readonly T[];\n\n  constructor() {\n    this._indexes = { __proto__: null } as any;\n    this.array = [];\n  }\n}\n\ninterface PublicSet<T extends Key> {\n  array: T[];\n  _indexes: SetArray<T>['_indexes'];\n}\n\n/**\n * Typescript doesn't allow friend access to private fields, so this just casts the set into a type\n * with public access modifiers.\n */\nfunction cast<T extends Key>(set: SetArray<T>): PublicSet<T> {\n  return set as any;\n}\n\n/**\n * Gets the index associated with `key` in the backing array, if it is already present.\n */\nexport function get<T extends Key>(setarr: SetArray<T>, key: T): number | undefined {\n  return cast(setarr)._indexes[key];\n}\n\n/**\n * Puts `key` into the backing array, if it is not already present. Returns\n * the index of the `key` in the backing array.\n */\nexport function put<T extends Key>(setarr: SetArray<T>, key: T): number {\n  // The key may or may not be present. If it is present, it's a number.\n  const index = get(setarr, key);\n  if (index !== undefined) return index;\n\n  const { array, _indexes: indexes } = cast(setarr);\n\n  const length = array.push(key);\n  return (indexes[key] = length - 1);\n}\n\n/**\n * Pops the last added item out of the SetArray.\n */\nexport function pop<T extends Key>(setarr: SetArray<T>): void {\n  const { array, _indexes: indexes } = cast(setarr);\n  if (array.length === 0) return;\n\n  const last = array.pop()!;\n  indexes[last] = undefined;\n}\n\n/**\n * Removes the key, if it exists in the set.\n */\nexport function remove<T extends Key>(setarr: SetArray<T>, key: T): void {\n  const index = get(setarr, key);\n  if (index === undefined) return;\n\n  const { array, _indexes: indexes } = cast(setarr);\n  for (let i = index + 1; i < array.length; i++) {\n    const k = array[i];\n    array[i - 1] = k;\n    indexes[k]!--;\n  }\n  indexes[key] = undefined;\n  array.pop();\n}\n"],"names":[],"mappings":"AAEA;;;;;;;;MAQa,QAAQ;IAInB;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,SAAS,EAAE,IAAI,EAAS,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACjB;CACF;AAOD;;;;AAIA,SAAS,IAAI,CAAgB,GAAgB;IAC3C,OAAO,GAAU,CAAC;AACpB,CAAC;AAED;;;SAGgB,GAAG,CAAgB,MAAmB,EAAE,GAAM;IAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpC,CAAC;AAED;;;;SAIgB,GAAG,CAAgB,MAAmB,EAAE,GAAM;;IAE5D,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAC/B,IAAI,KAAK,KAAK,SAAS;QAAE,OAAO,KAAK,CAAC;IAEtC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAElD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,QAAQ,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE;AACrC,CAAC;AAED;;;SAGgB,GAAG,CAAgB,MAAmB;IACpD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAClD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO;IAE/B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;IAC1B,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;AAC5B,CAAC;AAED;;;SAGgB,MAAM,CAAgB,MAAmB,EAAE,GAAM;IAC/D,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAC/B,IAAI,KAAK,KAAK,SAAS;QAAE,OAAO;IAEhC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAClD,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7C,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,CAAC,CAAC,CAAE,EAAE,CAAC;KACf;IACD,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;IACzB,KAAK,CAAC,GAAG,EAAE,CAAC;AACd;;;;","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.mjs":{"lineLengths":[44,37,3,30,40,45,23,36,36,37,36,3,92,3,97,98,2,21,46,37,36,3,84,31,35,1,37,34,1,32,33,1,27,37,1,28,32,1,34,39,120,1,30,40,26,126,1,63,12,15,13,13,13,13,14,13,31,6,1,26,37,54,24,42,19,5,32,63,24,22,40,19,5,25,35,29,39,60,20,18,20,31,27,35,30,38,24,15,1,34,96,52,29,20,40,36,1,32,35,101,13,27,29,5,10,82,59,5,1,3,92,62,3,35,45,39,97,36,20,100,96,21,101,97,89,33,45,32,92,21,36,21,9,82,33,57,26,21,100,70,29,27,40,27,26,13,27,108,97,42,13,21,9,104,45,34,19,5,18,39,32,5,63,20,5,20,1,3,59,3,31,24,18,32,29,49,39,38,28,31,40,27,30,42,27,31,38,41,27,38,94,40,40,40,27,40,99,44,9,33,33,5,34,43,24,88,30,26,27,29,36,77,43,22,40,65,104,100,83,47,13,36,9,34,40,16,93,5,1,0,30,40,0],"data":{"version":3,"file":"resolve-uri.mjs","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts"],"sourcesContent":["// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nconst enum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/index.js":{"lineLengths":[13,62,33,40,50,58,44,33,52,50,48,46,37,56,60,54,33,54,52,50,43,43,0,1399,0],"data":{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/_src/index.ts"],"names":[],"mappings":";;AAAA,iCAAyF;AAAhF,6BAAA,UAAU,CAAA;AAAE,kCAAA,eAAe,CAAA;AAAE,sCAAA,mBAAmB,CAAA;AAAE,+BAAA,YAAY,CAAA;AACvE,iCAA2F;AAAlF,mCAAA,gBAAgB,CAAA;AAAE,kCAAA,eAAe,CAAA;AAAE,iCAAA,cAAc,CAAA;AAAE,gCAAA,aAAa,CAAA;AACzE,qCAAqF;AAA5E,sCAAA,iBAAiB,CAAA;AAAE,wCAAA,mBAAmB,CAAA;AAAE,qCAAA,gBAAgB,CAAA;AACjE,iCAA+E;AAAtE,oCAAA,iBAAiB,CAAA;AAAE,mCAAA,gBAAgB,CAAA;AAAE,kCAAA,eAAe,CAAA;AAC7D,2CAAyC;AAAhC,iCAAA,SAAS,CAAA","file":"index.js","sourcesContent":["export { emitForest, emitForestLines, parseFunctionRanges, parseOffsets } from \"./ascii\";\nexport { cloneFunctionCov, cloneProcessCov, cloneScriptCov, cloneRangeCov } from \"./clone\";\nexport { compareScriptCovs, compareFunctionCovs, compareRangeCovs } from \"./compare\";\nexport { mergeFunctionCovs, mergeProcessCovs, mergeScriptCovs } from \"./merge\";\nexport { RangeTree } from \"./range-tree\";\nexport { ProcessCov, ScriptCov, FunctionCov, RangeCov } from \"./types\";\n"],"sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/ascii.js":{"lineLengths":[13,62,39,28,45,1,32,33,36,39,77,1,42,27,31,31,29,34,36,36,34,47,34,13,9,5,33,33,22,33,67,5,35,29,48,40,5,18,1,33,22,27,34,32,27,23,35,48,38,13,9,5,61,1,47,22,42,62,31,9,5,44,18,1,50,3,2,46,16,3,39,20,19,48,43,39,32,53,9,55,24,5,25,1,42,22,34,18,39,29,18,9,37,50,45,52,48,67,76,9,55,5,18,1,32,48,25,67,56,48,1,30,18,40,32,50,9,35,5,16,1,29,29,26,18,39,29,18,9,56,5,18,1,36,0,12611,0],"data":{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/_src/ascii.ts"],"names":[],"mappings":"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","file":"ascii.js","sourcesContent":["import { compareRangeCovs } from \"./compare\";\nimport { RangeCov } from \"./types\";\n\ninterface ReadonlyRangeTree {\n  readonly start: number;\n  readonly end: number;\n  readonly count: number;\n  readonly children: ReadonlyRangeTree[];\n}\n\nexport function emitForest(trees: ReadonlyArray<ReadonlyRangeTree>): string {\n  return emitForestLines(trees).join(\"\\n\");\n}\n\nexport function emitForestLines(trees: ReadonlyArray<ReadonlyRangeTree>): string[] {\n  const colMap: Map<number, number> = getColMap(trees);\n  const header: string = emitOffsets(colMap);\n  return [header, ...trees.map(tree => emitTree(tree, colMap).join(\"\\n\"))];\n}\n\nfunction getColMap(trees: Iterable<ReadonlyRangeTree>): Map<number, number> {\n  const eventSet: Set<number> = new Set();\n  for (const tree of trees) {\n    const stack: ReadonlyRangeTree[] = [tree];\n    while (stack.length > 0) {\n      const cur: ReadonlyRangeTree = stack.pop()!;\n      eventSet.add(cur.start);\n      eventSet.add(cur.end);\n      for (const child of cur.children) {\n        stack.push(child);\n      }\n    }\n  }\n  const events: number[] = [...eventSet];\n  events.sort((a, b) => a - b);\n  let maxDigits: number = 1;\n  for (const event of events) {\n    maxDigits = Math.max(maxDigits, event.toString(10).length);\n  }\n  const colWidth: number = maxDigits + 3;\n  const colMap: Map<number, number> = new Map();\n  for (const [i, event] of events.entries()) {\n    colMap.set(event, i * colWidth);\n  }\n  return colMap;\n}\n\nfunction emitTree(tree: ReadonlyRangeTree, colMap: Map<number, number>): string[] {\n  const layers: ReadonlyRangeTree[][] = [];\n  let nextLayer: ReadonlyRangeTree[] = [tree];\n  while (nextLayer.length > 0) {\n    const layer: ReadonlyRangeTree[] = nextLayer;\n    layers.push(layer);\n    nextLayer = [];\n    for (const node of layer) {\n      for (const child of node.children) {\n        nextLayer.push(child);\n      }\n    }\n  }\n  return layers.map(layer => emitTreeLayer(layer, colMap));\n}\n\nexport function parseFunctionRanges(text: string, offsetMap: Map<number, number>): RangeCov[] {\n  const result: RangeCov[] = [];\n  for (const line of text.split(\"\\n\")) {\n    for (const range of parseTreeLayer(line, offsetMap)) {\n      result.push(range);\n    }\n  }\n  result.sort(compareRangeCovs);\n  return result;\n}\n\n/**\n *\n * @param layer Sorted list of disjoint trees.\n * @param colMap\n */\nfunction emitTreeLayer(layer: ReadonlyRangeTree[], colMap: Map<number, number>): string {\n  const line: string[] = [];\n  let curIdx: number = 0;\n  for (const {start, end, count} of layer) {\n    const startIdx: number = colMap.get(start)!;\n    const endIdx: number = colMap.get(end)!;\n    if (startIdx > curIdx) {\n      line.push(\" \".repeat(startIdx - curIdx));\n    }\n    line.push(emitRange(count, endIdx - startIdx));\n    curIdx = endIdx;\n  }\n  return line.join(\"\");\n}\n\nfunction parseTreeLayer(text: string, offsetMap: Map<number, number>): RangeCov[] {\n  const result: RangeCov[] = [];\n  const regex: RegExp = /\\[(\\d+)-*\\)/gs;\n  while (true) {\n    const match: RegExpMatchArray | null = regex.exec(text);\n    if (match === null) {\n      break;\n    }\n    const startIdx: number = match.index!;\n    const endIdx: number = startIdx + match[0].length;\n    const count: number = parseInt(match[1], 10);\n    const startOffset: number | undefined = offsetMap.get(startIdx);\n    const endOffset: number | undefined = offsetMap.get(endIdx);\n    if (startOffset === undefined || endOffset === undefined) {\n      throw new Error(`Invalid offsets for: ${JSON.stringify(text)}`);\n    }\n    result.push({startOffset, endOffset, count});\n  }\n  return result;\n}\n\nfunction emitRange(count: number, len: number): string {\n  const rangeStart: string = `[${count.toString(10)}`;\n  const rangeEnd: string = \")\";\n  const hyphensLen: number = len - (rangeStart.length + rangeEnd.length);\n  const hyphens: string = \"-\".repeat(Math.max(0, hyphensLen));\n  return `${rangeStart}${hyphens}${rangeEnd}`;\n}\n\nfunction emitOffsets(colMap: Map<number, number>): string {\n  let line: string = \"\";\n  for (const [event, col] of colMap) {\n    if (line.length < col) {\n      line += \" \".repeat(col - line.length);\n    }\n    line += event.toString(10);\n  }\n  return line;\n}\n\nexport function parseOffsets(text: string): Map<number, number> {\n  const result: Map<number, number> = new Map();\n  const regex: RegExp = /\\d+/gs;\n  while (true) {\n    const match: RegExpExecArray | null = regex.exec(text);\n    if (match === null) {\n      break;\n    }\n    result.set(match.index, parseInt(match[0], 10));\n  }\n  return result;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/compare.js":{"lineLengths":[13,62,3,33,2,85,3,34,26,17,5,29,18,5,10,17,5,1,46,3,35,2,63,3,36,54,1,50,3,32,2,70,26,50,3,33,42,45,5,10,41,5,1,44,0,2643,0],"data":{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/_src/compare.ts"],"names":[],"mappings":";;AAEA;;;;GAIG;AACH,SAAgB,iBAAiB,CAAC,CAAsB,EAAE,CAAsB;IAC9E,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,EAAE;QACnB,OAAO,CAAC,CAAC;KACV;SAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;QACxB,OAAO,CAAC,CAAC,CAAC;KACX;SAAM;QACL,OAAO,CAAC,CAAC;KACV;AACH,CAAC;AARD,8CAQC;AAED;;;;GAIG;AACH,SAAgB,mBAAmB,CAAC,CAAwB,EAAE,CAAwB;IACpF,OAAO,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC;AAFD,kDAEC;AAED;;;;;;GAMG;AACH,SAAgB,gBAAgB,CAAC,CAAqB,EAAE,CAAqB;IAC3E,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAAE;QACnC,OAAO,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;KACtC;SAAM;QACL,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;KAClC;AACH,CAAC;AAND,4CAMC","file":"compare.js","sourcesContent":["import { FunctionCov, RangeCov, ScriptCov } from \"./types\";\n\n/**\n * Compares two script coverages.\n *\n * The result corresponds to the comparison of their `url` value (alphabetical sort).\n */\nexport function compareScriptCovs(a: Readonly<ScriptCov>, b: Readonly<ScriptCov>): number {\n  if (a.url === b.url) {\n    return 0;\n  } else if (a.url < b.url) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\n/**\n * Compares two function coverages.\n *\n * The result corresponds to the comparison of the root ranges.\n */\nexport function compareFunctionCovs(a: Readonly<FunctionCov>, b: Readonly<FunctionCov>): number {\n  return compareRangeCovs(a.ranges[0], b.ranges[0]);\n}\n\n/**\n * Compares two range coverages.\n *\n * The ranges are first ordered by ascending `startOffset` and then by\n * descending `endOffset`.\n * This corresponds to a pre-order tree traversal.\n */\nexport function compareRangeCovs(a: Readonly<RangeCov>, b: Readonly<RangeCov>): number {\n  if (a.startOffset !== b.startOffset) {\n    return a.startOffset - b.startOffset;\n  } else {\n    return b.endOffset - a.endOffset;\n  }\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/clone.js":{"lineLengths":[13,62,3,45,2,47,35,3,38,22,48,47,5,12,15,6,1,42,3,44,2,45,34,3,36,25,52,54,5,12,37,27,18,6,1,40,3,46,2,49,36,3,40,22,48,45,5,12,47,15,53,6,1,44,3,46,2,43,33,3,34,12,42,38,30,6,1,38,0,3943,0],"data":{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/_src/clone.ts"],"names":[],"mappings":";;AAEA;;;;;GAKG;AACH,SAAgB,eAAe,CAAC,UAAgC;IAC9D,MAAM,MAAM,GAAgB,EAAE,CAAC;IAC/B,KAAK,MAAM,SAAS,IAAI,UAAU,CAAC,MAAM,EAAE;QACzC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;KACxC;IAED,OAAO;QACL,MAAM;KACP,CAAC;AACJ,CAAC;AATD,0CASC;AAED;;;;;GAKG;AACH,SAAgB,cAAc,CAAC,SAA8B;IAC3D,MAAM,SAAS,GAAkB,EAAE,CAAC;IACpC,KAAK,MAAM,WAAW,IAAI,SAAS,CAAC,SAAS,EAAE;QAC7C,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;KAC/C;IAED,OAAO;QACL,QAAQ,EAAE,SAAS,CAAC,QAAQ;QAC5B,GAAG,EAAE,SAAS,CAAC,GAAG;QAClB,SAAS;KACV,CAAC;AACJ,CAAC;AAXD,wCAWC;AAED;;;;;GAKG;AACH,SAAgB,gBAAgB,CAAC,WAAkC;IACjE,MAAM,MAAM,GAAe,EAAE,CAAC;IAC9B,KAAK,MAAM,QAAQ,IAAI,WAAW,CAAC,MAAM,EAAE;QACzC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;KACtC;IAED,OAAO;QACL,YAAY,EAAE,WAAW,CAAC,YAAY;QACtC,MAAM;QACN,eAAe,EAAE,WAAW,CAAC,eAAe;KAC7C,CAAC;AACJ,CAAC;AAXD,4CAWC;AAED;;;;;GAKG;AACH,SAAgB,aAAa,CAAC,QAA4B;IACxD,OAAO;QACL,WAAW,EAAE,QAAQ,CAAC,WAAW;QACjC,SAAS,EAAE,QAAQ,CAAC,SAAS;QAC7B,KAAK,EAAE,QAAQ,CAAC,KAAK;KACtB,CAAC;AACJ,CAAC;AAND,sCAMC","file":"clone.js","sourcesContent":["import { FunctionCov, ProcessCov, RangeCov, ScriptCov } from \"./types\";\n\n/**\n * Creates a deep copy of a process coverage.\n *\n * @param processCov Process coverage to clone.\n * @return Cloned process coverage.\n */\nexport function cloneProcessCov(processCov: Readonly<ProcessCov>): ProcessCov {\n  const result: ScriptCov[] = [];\n  for (const scriptCov of processCov.result) {\n    result.push(cloneScriptCov(scriptCov));\n  }\n\n  return {\n    result,\n  };\n}\n\n/**\n * Creates a deep copy of a script coverage.\n *\n * @param scriptCov Script coverage to clone.\n * @return Cloned script coverage.\n */\nexport function cloneScriptCov(scriptCov: Readonly<ScriptCov>): ScriptCov {\n  const functions: FunctionCov[] = [];\n  for (const functionCov of scriptCov.functions) {\n    functions.push(cloneFunctionCov(functionCov));\n  }\n\n  return {\n    scriptId: scriptCov.scriptId,\n    url: scriptCov.url,\n    functions,\n  };\n}\n\n/**\n * Creates a deep copy of a function coverage.\n *\n * @param functionCov Function coverage to clone.\n * @return Cloned function coverage.\n */\nexport function cloneFunctionCov(functionCov: Readonly<FunctionCov>): FunctionCov {\n  const ranges: RangeCov[] = [];\n  for (const rangeCov of functionCov.ranges) {\n    ranges.push(cloneRangeCov(rangeCov));\n  }\n\n  return {\n    functionName: functionCov.functionName,\n    ranges,\n    isBlockCoverage: functionCov.isBlockCoverage,\n  };\n}\n\n/**\n * Creates a deep copy of a function coverage.\n *\n * @param rangeCov Range coverage to clone.\n * @return Cloned range coverage.\n */\nexport function cloneRangeCov(rangeCov: Readonly<RangeCov>): RangeCov {\n  return {\n    startOffset: rangeCov.startOffset,\n    endOffset: rangeCov.endOffset,\n    count: rangeCov.count,\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/merge.js":{"lineLengths":[13,62,43,45,3,38,2,28,76,25,34,2,49,35,3,40,35,30,5,35,43,52,61,43,32,60,13,39,9,5,22,50,39,46,5,30,44,18,1,44,3,46,2,52,28,76,25,34,2,48,78,3,38,34,25,5,39,37,51,22,5,32,36,26,35,41,52,66,55,41,81,71,76,30,54,13,79,85,57,25,13,35,9,5,25,51,40,52,5,48,43,18,1,42,3,69,2,66,76,16,79,2,63,12,3,46,40,87,1,3,48,2,66,28,76,25,34,2,47,80,3,38,32,25,5,37,35,49,22,5,50,21,37,41,40,76,5,33,46,47,41,76,61,37,18,1,46,3,57,3,33,28,24,5,27,18,31,28,5,51,79,1,27,36,39,25,5,1,18,32,29,27,5,26,35,5,1,23,24,27,27,31,38,5,41,39,72,54,58,42,31,57,17,72,13,9,25,58,59,9,39,42,5,30,36,5,27,46,35,9,37,5,12,47,53,41,29,29,9,43,42,68,9,14,56,46,72,13,18,62,50,54,51,21,17,33,33,13,9,5,1,46,22,73,37,18,18,45,34,18,9,71,62,34,9,38,48,62,64,63,13,59,67,9,14,62,47,60,97,17,63,13,9,5,34,58,5,18,1,57,49,31,20,48,5,22,1,47,29,51,108,42,9,14,102,9,5,27,42,1,0,25919,0],"data":{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/_src/merge.ts"],"names":[],"mappings":"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","file":"merge.js","sourcesContent":["import {\n  deepNormalizeScriptCov,\n  normalizeFunctionCov,\n  normalizeProcessCov,\n  normalizeRangeTree,\n  normalizeScriptCov,\n} from \"./normalize\";\nimport { RangeTree } from \"./range-tree\";\nimport { FunctionCov, ProcessCov, Range, RangeCov, ScriptCov } from \"./types\";\n\n/**\n * Merges a list of process coverages.\n *\n * The result is normalized.\n * The input values may be mutated, it is not safe to use them after passing\n * them to this function.\n * The computation is synchronous.\n *\n * @param processCovs Process coverages to merge.\n * @return Merged process coverage.\n */\nexport function mergeProcessCovs(processCovs: ReadonlyArray<ProcessCov>): ProcessCov {\n  if (processCovs.length === 0) {\n    return {result: []};\n  }\n\n  const urlToScripts: Map<string, ScriptCov[]> = new Map();\n  for (const processCov of processCovs) {\n    for (const scriptCov of processCov.result) {\n      let scriptCovs: ScriptCov[] | undefined = urlToScripts.get(scriptCov.url);\n      if (scriptCovs === undefined) {\n        scriptCovs = [];\n        urlToScripts.set(scriptCov.url, scriptCovs);\n      }\n      scriptCovs.push(scriptCov);\n    }\n  }\n\n  const result: ScriptCov[] = [];\n  for (const scripts of urlToScripts.values()) {\n    // assert: `scripts.length > 0`\n    result.push(mergeScriptCovs(scripts)!);\n  }\n  const merged: ProcessCov = {result};\n\n  normalizeProcessCov(merged);\n  return merged;\n}\n\n/**\n * Merges a list of matching script coverages.\n *\n * Scripts are matching if they have the same `url`.\n * The result is normalized.\n * The input values may be mutated, it is not safe to use them after passing\n * them to this function.\n * The computation is synchronous.\n *\n * @param scriptCovs Process coverages to merge.\n * @return Merged script coverage, or `undefined` if the input list was empty.\n */\nexport function mergeScriptCovs(scriptCovs: ReadonlyArray<ScriptCov>): ScriptCov | undefined {\n  if (scriptCovs.length === 0) {\n    return undefined;\n  } else if (scriptCovs.length === 1) {\n    const merged: ScriptCov = scriptCovs[0];\n    deepNormalizeScriptCov(merged);\n    return merged;\n  }\n\n  const first: ScriptCov = scriptCovs[0];\n  const scriptId: string = first.scriptId;\n  const url: string = first.url;\n\n  const rangeToFuncs: Map<string, FunctionCov[]> = new Map();\n  for (const scriptCov of scriptCovs) {\n    for (const funcCov of scriptCov.functions) {\n      const rootRange: string = stringifyFunctionRootRange(funcCov);\n      let funcCovs: FunctionCov[] | undefined = rangeToFuncs.get(rootRange);\n\n      if (funcCovs === undefined ||\n        // if the entry in rangeToFuncs is function-level granularity and\n        // the new coverage is block-level, prefer block-level.\n        (!funcCovs[0].isBlockCoverage && funcCov.isBlockCoverage)) {\n        funcCovs = [];\n        rangeToFuncs.set(rootRange, funcCovs);\n      } else if (funcCovs[0].isBlockCoverage && !funcCov.isBlockCoverage) {\n        // if the entry in rangeToFuncs is block-level granularity, we should\n        // not append function level granularity.\n        continue;\n      }\n      funcCovs.push(funcCov);\n    }\n  }\n\n  const functions: FunctionCov[] = [];\n  for (const funcCovs of rangeToFuncs.values()) {\n    // assert: `funcCovs.length > 0`\n    functions.push(mergeFunctionCovs(funcCovs)!);\n  }\n\n  const merged: ScriptCov = {scriptId, url, functions};\n  normalizeScriptCov(merged);\n  return merged;\n}\n\n/**\n * Returns a string representation of the root range of the function.\n *\n * This string can be used to match function with same root range.\n * The string is derived from the start and end offsets of the root range of\n * the function.\n * This assumes that `ranges` is non-empty (true for valid function coverages).\n *\n * @param funcCov Function coverage with the range to stringify\n * @internal\n */\nfunction stringifyFunctionRootRange(funcCov: Readonly<FunctionCov>): string {\n  const rootRange: RangeCov = funcCov.ranges[0];\n  return `${rootRange.startOffset.toString(10)};${rootRange.endOffset.toString(10)}`;\n}\n\n/**\n * Merges a list of matching function coverages.\n *\n * Functions are matching if their root ranges have the same span.\n * The result is normalized.\n * The input values may be mutated, it is not safe to use them after passing\n * them to this function.\n * The computation is synchronous.\n *\n * @param funcCovs Function coverages to merge.\n * @return Merged function coverage, or `undefined` if the input list was empty.\n */\nexport function mergeFunctionCovs(funcCovs: ReadonlyArray<FunctionCov>): FunctionCov | undefined {\n  if (funcCovs.length === 0) {\n    return undefined;\n  } else if (funcCovs.length === 1) {\n    const merged: FunctionCov = funcCovs[0];\n    normalizeFunctionCov(merged);\n    return merged;\n  }\n\n  const functionName: string = funcCovs[0].functionName;\n\n  const trees: RangeTree[] = [];\n  for (const funcCov of funcCovs) {\n    // assert: `fn.ranges.length > 0`\n    // assert: `fn.ranges` is sorted\n    trees.push(RangeTree.fromSortedRanges(funcCov.ranges)!);\n  }\n\n  // assert: `trees.length > 0`\n  const mergedTree: RangeTree = mergeRangeTrees(trees)!;\n  normalizeRangeTree(mergedTree);\n  const ranges: RangeCov[] = mergedTree.toRanges();\n  const isBlockCoverage: boolean = !(ranges.length === 1 && ranges[0].count === 0);\n\n  const merged: FunctionCov = {functionName, ranges, isBlockCoverage};\n  // assert: `merged` is normalized\n  return merged;\n}\n\n/**\n * @precondition Same `start` and `end` for all the trees\n */\nfunction mergeRangeTrees(trees: ReadonlyArray<RangeTree>): RangeTree | undefined {\n  if (trees.length <= 1) {\n    return trees[0];\n  }\n  const first: RangeTree = trees[0];\n  let delta: number = 0;\n  for (const tree of trees) {\n    delta += tree.delta;\n  }\n  const children: RangeTree[] = mergeRangeTreeChildren(trees);\n  return new RangeTree(first.start, first.end, delta, children);\n}\n\nclass RangeTreeWithParent {\n  readonly parentIndex: number;\n  readonly tree: RangeTree;\n\n  constructor(parentIndex: number, tree: RangeTree) {\n    this.parentIndex = parentIndex;\n    this.tree = tree;\n  }\n}\n\nclass StartEvent {\n  readonly offset: number;\n  readonly trees: RangeTreeWithParent[];\n\n  constructor(offset: number, trees: RangeTreeWithParent[]) {\n    this.offset = offset;\n    this.trees = trees;\n  }\n\n  static compare(a: StartEvent, b: StartEvent): number {\n    return a.offset - b.offset;\n  }\n}\n\nclass StartEventQueue {\n  private readonly queue: StartEvent[];\n  private nextIndex: number;\n  private pendingOffset: number;\n  private pendingTrees: RangeTreeWithParent[] | undefined;\n\n  private constructor(queue: StartEvent[]) {\n    this.queue = queue;\n    this.nextIndex = 0;\n    this.pendingOffset = 0;\n    this.pendingTrees = undefined;\n  }\n\n  static fromParentTrees(parentTrees: ReadonlyArray<RangeTree>): StartEventQueue {\n    const startToTrees: Map<number, RangeTreeWithParent[]> = new Map();\n    for (const [parentIndex, parentTree] of parentTrees.entries()) {\n      for (const child of parentTree.children) {\n        let trees: RangeTreeWithParent[] | undefined = startToTrees.get(child.start);\n        if (trees === undefined) {\n          trees = [];\n          startToTrees.set(child.start, trees);\n        }\n        trees.push(new RangeTreeWithParent(parentIndex, child));\n      }\n    }\n    const queue: StartEvent[] = [];\n    for (const [startOffset, trees] of startToTrees) {\n      queue.push(new StartEvent(startOffset, trees));\n    }\n    queue.sort(StartEvent.compare);\n    return new StartEventQueue(queue);\n  }\n\n  setPendingOffset(offset: number): void {\n    this.pendingOffset = offset;\n  }\n\n  pushPendingTree(tree: RangeTreeWithParent): void {\n    if (this.pendingTrees === undefined) {\n      this.pendingTrees = [];\n    }\n    this.pendingTrees.push(tree);\n  }\n\n  next(): StartEvent | undefined {\n    const pendingTrees: RangeTreeWithParent[] | undefined = this.pendingTrees;\n    const nextEvent: StartEvent | undefined = this.queue[this.nextIndex];\n    if (pendingTrees === undefined) {\n      this.nextIndex++;\n      return nextEvent;\n    } else if (nextEvent === undefined) {\n      this.pendingTrees = undefined;\n      return new StartEvent(this.pendingOffset, pendingTrees);\n    } else {\n      if (this.pendingOffset < nextEvent.offset) {\n        this.pendingTrees = undefined;\n        return new StartEvent(this.pendingOffset, pendingTrees);\n      } else {\n        if (this.pendingOffset === nextEvent.offset) {\n          this.pendingTrees = undefined;\n          for (const tree of pendingTrees) {\n            nextEvent.trees.push(tree);\n          }\n        }\n        this.nextIndex++;\n        return nextEvent;\n      }\n    }\n  }\n}\n\nfunction mergeRangeTreeChildren(parentTrees: ReadonlyArray<RangeTree>): RangeTree[] {\n  const result: RangeTree[] = [];\n  const startEventQueue: StartEventQueue = StartEventQueue.fromParentTrees(parentTrees);\n  const parentToNested: Map<number, RangeTree[]> = new Map();\n  let openRange: Range | undefined;\n\n  while (true) {\n    const event: StartEvent | undefined = startEventQueue.next();\n    if (event === undefined) {\n      break;\n    }\n\n    if (openRange !== undefined && openRange.end <= event.offset) {\n      result.push(nextChild(openRange, parentToNested));\n      openRange = undefined;\n    }\n\n    if (openRange === undefined) {\n      let openRangeEnd: number = event.offset + 1;\n      for (const {parentIndex, tree} of event.trees) {\n        openRangeEnd = Math.max(openRangeEnd, tree.end);\n        insertChild(parentToNested, parentIndex, tree);\n      }\n      startEventQueue.setPendingOffset(openRangeEnd);\n      openRange = {start: event.offset, end: openRangeEnd};\n    } else {\n      for (const {parentIndex, tree} of event.trees) {\n        if (tree.end > openRange.end) {\n          const right: RangeTree = tree.split(openRange.end);\n          startEventQueue.pushPendingTree(new RangeTreeWithParent(parentIndex, right));\n        }\n        insertChild(parentToNested, parentIndex, tree);\n      }\n    }\n  }\n  if (openRange !== undefined) {\n    result.push(nextChild(openRange, parentToNested));\n  }\n\n  return result;\n}\n\nfunction insertChild(parentToNested: Map<number, RangeTree[]>, parentIndex: number, tree: RangeTree): void {\n  let nested: RangeTree[] | undefined = parentToNested.get(parentIndex);\n  if (nested === undefined) {\n    nested = [];\n    parentToNested.set(parentIndex, nested);\n  }\n  nested.push(tree);\n}\n\nfunction nextChild(openRange: Range, parentToNested: Map<number, RangeTree[]>): RangeTree {\n  const matchingTrees: RangeTree[] = [];\n\n  for (const nested of parentToNested.values()) {\n    if (nested.length === 1 && nested[0].start === openRange.start && nested[0].end === openRange.end) {\n      matchingTrees.push(nested[0]);\n    } else {\n      matchingTrees.push(new RangeTree(\n        openRange.start,\n        openRange.end,\n        0,\n        nested,\n      ));\n    }\n  }\n  parentToNested.clear();\n  return mergeRangeTrees(matchingTrees)!;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/normalize.js":{"lineLengths":[13,62,39,45,3,33,2,45,78,32,48,2,51,3,42,56,70,51,5,1,50,3,40,2,79,10,2,51,3,46,48,42,5,36,1,58,3,32,2,53,50,2,49,3,40,60,1,48,3,39,2,80,10,2,49,3,44,48,38,5,34,1,56,3,34,2,37,48,2,49,3,40,52,73,29,37,1,52,3,12,3,35,21,1,48,0,5059,0],"data":{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/_src/normalize.ts"],"names":[],"mappings":";;AAAA,uCAAqF;AACrF,6CAAyC;AAGzC;;;;;;;;;GASG;AACH,SAAgB,mBAAmB,CAAC,UAAsB;IACxD,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,2BAAiB,CAAC,CAAC;IAC1C,KAAK,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;QAC/D,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KAC5C;AACH,CAAC;AALD,kDAKC;AAED;;;;;;;GAOG;AACH,SAAgB,uBAAuB,CAAC,UAAsB;IAC5D,KAAK,MAAM,SAAS,IAAI,UAAU,CAAC,MAAM,EAAE;QACzC,sBAAsB,CAAC,SAAS,CAAC,CAAC;KACnC;IACD,mBAAmB,CAAC,UAAU,CAAC,CAAC;AAClC,CAAC;AALD,0DAKC;AAED;;;;;;;GAOG;AACH,SAAgB,kBAAkB,CAAC,SAAoB;IACrD,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,6BAAmB,CAAC,CAAC;AAChD,CAAC;AAFD,gDAEC;AAED;;;;;;;GAOG;AACH,SAAgB,sBAAsB,CAAC,SAAoB;IACzD,KAAK,MAAM,OAAO,IAAI,SAAS,CAAC,SAAS,EAAE;QACzC,oBAAoB,CAAC,OAAO,CAAC,CAAC;KAC/B;IACD,kBAAkB,CAAC,SAAS,CAAC,CAAC;AAChC,CAAC;AALD,wDAKC;AAED;;;;;;;GAOG;AACH,SAAgB,oBAAoB,CAAC,OAAoB;IACvD,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,0BAAgB,CAAC,CAAC;IACtC,MAAM,IAAI,GAAc,sBAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC;IACpE,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACzB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACnC,CAAC;AALD,oDAKC;AAED;;GAEG;AACH,SAAgB,kBAAkB,CAAC,IAAe;IAChD,IAAI,CAAC,SAAS,EAAE,CAAC;AACnB,CAAC;AAFD,gDAEC","file":"normalize.js","sourcesContent":["import { compareFunctionCovs, compareRangeCovs, compareScriptCovs } from \"./compare\";\nimport { RangeTree } from \"./range-tree\";\nimport { FunctionCov, ProcessCov, ScriptCov } from \"./types\";\n\n/**\n * Normalizes a process coverage.\n *\n * Sorts the scripts alphabetically by `url`.\n * Reassigns script ids: the script at index `0` receives `\"0\"`, the script at\n * index `1` receives `\"1\"` etc.\n * This does not normalize the script coverages.\n *\n * @param processCov Process coverage to normalize.\n */\nexport function normalizeProcessCov(processCov: ProcessCov): void {\n  processCov.result.sort(compareScriptCovs);\n  for (const [scriptId, scriptCov] of processCov.result.entries()) {\n    scriptCov.scriptId = scriptId.toString(10);\n  }\n}\n\n/**\n * Normalizes a process coverage deeply.\n *\n * Normalizes the script coverages deeply, then normalizes the process coverage\n * itself.\n *\n * @param processCov Process coverage to normalize.\n */\nexport function deepNormalizeProcessCov(processCov: ProcessCov): void {\n  for (const scriptCov of processCov.result) {\n    deepNormalizeScriptCov(scriptCov);\n  }\n  normalizeProcessCov(processCov);\n}\n\n/**\n * Normalizes a script coverage.\n *\n * Sorts the function by root range (pre-order sort).\n * This does not normalize the function coverages.\n *\n * @param scriptCov Script coverage to normalize.\n */\nexport function normalizeScriptCov(scriptCov: ScriptCov): void {\n  scriptCov.functions.sort(compareFunctionCovs);\n}\n\n/**\n * Normalizes a script coverage deeply.\n *\n * Normalizes the function coverages deeply, then normalizes the script coverage\n * itself.\n *\n * @param scriptCov Script coverage to normalize.\n */\nexport function deepNormalizeScriptCov(scriptCov: ScriptCov): void {\n  for (const funcCov of scriptCov.functions) {\n    normalizeFunctionCov(funcCov);\n  }\n  normalizeScriptCov(scriptCov);\n}\n\n/**\n * Normalizes a function coverage.\n *\n * Sorts the ranges (pre-order sort).\n * TODO: Tree-based normalization of the ranges.\n *\n * @param funcCov Function coverage to normalize.\n */\nexport function normalizeFunctionCov(funcCov: FunctionCov): void {\n  funcCov.ranges.sort(compareRangeCovs);\n  const tree: RangeTree = RangeTree.fromSortedRanges(funcCov.ranges)!;\n  normalizeRangeTree(tree);\n  funcCov.ranges = tree.toRanges();\n}\n\n/**\n * @internal\n */\nexport function normalizeRangeTree(tree: RangeTree): void {\n  tree.normalize();\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/range-tree.js":{"lineLengths":[13,62,17,46,27,23,27,33,5,7,65,7,37,17,51,25,37,92,37,28,48,25,13,23,28,26,64,70,53,26,17,22,32,17,13,38,39,44,9,20,5,17,28,19,17,24,44,37,29,13,76,33,13,18,27,29,13,31,9,33,23,9,36,38,71,42,47,79,23,13,9,33,29,36,53,46,63,70,53,21,17,32,13,29,32,9,5,7,61,35,7,18,48,16,53,56,43,59,41,37,22,13,44,33,22,13,9,61,75,32,39,9,81,25,22,5,7,57,6,39,7,16,26,44,34,34,51,50,79,64,53,13,9,22,5,1,30,0,11467,0],"data":{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@bcoe/v8-coverage/dist/lib/_src/range-tree.ts"],"names":[],"mappings":"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","file":"range-tree.js","sourcesContent":["import { RangeCov } from \"./types\";\n\nexport class RangeTree {\n  start: number;\n  end: number;\n  delta: number;\n  children: RangeTree[];\n\n  constructor(\n    start: number,\n    end: number,\n    delta: number,\n    children: RangeTree[],\n  ) {\n    this.start = start;\n    this.end = end;\n    this.delta = delta;\n    this.children = children;\n  }\n\n  /**\n   * @precodition `ranges` are well-formed and pre-order sorted\n   */\n  static fromSortedRanges(ranges: ReadonlyArray<RangeCov>): RangeTree | undefined {\n    let root: RangeTree | undefined;\n    // Stack of parent trees and parent counts.\n    const stack: [RangeTree, number][] = [];\n    for (const range of ranges) {\n      const node: RangeTree = new RangeTree(range.startOffset, range.endOffset, range.count, []);\n      if (root === undefined) {\n        root = node;\n        stack.push([node, range.count]);\n        continue;\n      }\n      let parent: RangeTree;\n      let parentCount: number;\n      while (true) {\n        [parent, parentCount] = stack[stack.length - 1];\n        // assert: `top !== undefined` (the ranges are sorted)\n        if (range.startOffset < parent.end) {\n          break;\n        } else {\n          stack.pop();\n        }\n      }\n      node.delta -= parentCount;\n      parent.children.push(node);\n      stack.push([node, range.count]);\n    }\n    return root;\n  }\n\n  normalize(): void {\n    const children: RangeTree[] = [];\n    let curEnd: number;\n    let head: RangeTree | undefined;\n    const tail: RangeTree[] = [];\n    for (const child of this.children) {\n      if (head === undefined) {\n        head = child;\n      } else if (child.delta === head.delta && child.start === curEnd!) {\n        tail.push(child);\n      } else {\n        endChain();\n        head = child;\n      }\n      curEnd = child.end;\n    }\n    if (head !== undefined) {\n      endChain();\n    }\n\n    if (children.length === 1) {\n      const child: RangeTree = children[0];\n      if (child.start === this.start && child.end === this.end) {\n        this.delta += child.delta;\n        this.children = child.children;\n        // `.lazyCount` is zero for both (both are after normalization)\n        return;\n      }\n    }\n\n    this.children = children;\n\n    function endChain(): void {\n      if (tail.length !== 0) {\n        head!.end = tail[tail.length - 1].end;\n        for (const tailTree of tail) {\n          for (const subChild of tailTree.children) {\n            subChild.delta += tailTree.delta - head!.delta;\n            head!.children.push(subChild);\n          }\n        }\n        tail.length = 0;\n      }\n      head!.normalize();\n      children.push(head!);\n    }\n  }\n\n  /**\n   * @precondition `tree.start < value && value < tree.end`\n   * @return RangeTree Right part\n   */\n  split(value: number): RangeTree {\n    let leftChildLen: number = this.children.length;\n    let mid: RangeTree | undefined;\n\n    // TODO(perf): Binary search (check overhead)\n    for (let i: number = 0; i < this.children.length; i++) {\n      const child: RangeTree = this.children[i];\n      if (child.start < value && value < child.end) {\n        mid = child.split(value);\n        leftChildLen = i + 1;\n        break;\n      } else if (child.start >= value) {\n        leftChildLen = i;\n        break;\n      }\n    }\n\n    const rightLen: number = this.children.length - leftChildLen;\n    const rightChildren: RangeTree[] = this.children.splice(leftChildLen, rightLen);\n    if (mid !== undefined) {\n      rightChildren.unshift(mid);\n    }\n    const result: RangeTree = new RangeTree(\n      value,\n      this.end,\n      this.delta,\n      rightChildren,\n    );\n    this.end = value;\n    return result;\n  }\n\n  /**\n   * Get the range coverages corresponding to the tree.\n   *\n   * The ranges are pre-order sorted.\n   */\n  toRanges(): RangeCov[] {\n    const ranges: RangeCov[] = [];\n    // Stack of parent trees and counts.\n    const stack: [RangeTree, number][] = [[this, 0]];\n    while (stack.length > 0) {\n      const [cur, parentCount]: [RangeTree, number] = stack.pop()!;\n      const count: number = parentCount + cur.delta;\n      ranges.push({startOffset: cur.start, endOffset: cur.end, count});\n      for (let i: number = cur.children.length - 1; i >= 0; i--) {\n        stack.push([cur.children[i], count]);\n      }\n    }\n    return ranges;\n  }\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js":{"lineLengths":[29,161,137,156,72,0,35,72,79,134,40,24,39,5,0,7,67,7,34,18,22,44,40,5,0,21,28,26,28,26,33,35,0,41,67,46,28,106,68,19,40,104,59,9,24,5,55,55,39,25,9,31,5,29,47,56,29,13,9,20,5,40,19,32,41,5,35,37,5,0,22,7,81,100,101,22,6,12,28,24,82,6,30,42,42,10,7,56,29,50,55,28,29,27,13,26,30,13,18,31,13,9,22,23,5,50,67,47,22,9,21,5,50,54,47,22,9,21,5,30,16,24,27,26,10,5,7,100,87,7,65,57,20,39,30,40,83,33,13,39,76,55,13,18,33,13,9,28,34,77,5,0,103,32,45,50,50,36,51,36,37,29,55,52,56,60,103,48,107,105,109,66,135,41,76,13,9,23,5,42,52,36,9,29,5,104,101,104,99,40,31,35,5,0,43,34,38,48,9,28,27,34,25,30,112,24,23,30,18,20,27,21,23,10,43,6,25,63,5,139,35,51,48,30,32,42,58,70,38,80,17,41,58,17,13,154,9,5,142,36,33,41,49,45,41,45,87,41,33,21,45,12,60,42,20,52,60,50,41,102,103,106,69,33,23,100,99,49,108,54,55,36,51,36,53,108,33,63,27,39,39,29,17,72,52,56,41,70,104,13,9,5,33,46,31,5,34,49,24,26,5,0,82,102,33,35,20,34,53,46,27,62,89,35,29,37,41,35,49,91,74,78,40,47,41,42,13,18,42,62,13,48,40,44,9,5,7,103,36,7,24,19,5,7,79,7,35,15,15,141,5,7,95,7,35,15,104,5,7,97,84,7,46,45,84,81,35,24,39,113,53,5,7,96,101,28,7,47,44,15,21,43,23,45,45,84,81,35,52,39,121,25,52,40,33,52,47,174,5,7,99,7,48,54,97,5,7,100,7,52,54,87,93,5,7,57,7,35,45,47,50,36,51,36,44,47,34,40,42,32,39,53,46,44,17,37,41,20,34,36,27,33,35,25,19,13,9,5,39,49,44,25,52,21,5,7,95,7,44,39,35,24,47,59,5,7,70,7,37,35,31,25,47,65,5,7,103,12,7,47,60,45,22,5,7,104,41,7,30,48,5,7,104,41,7,30,48,5,35,16,33,27,29,39,33,47,21,66,10,5,51,46,5,37,32,5,71,71,20,100,9,44,20,54,22,21,5,74,91,102,104,105,106,100,35,49,18,50,22,104,104,33,69,97,19,59,61,26,35,42,98,9,22,5,70,15,15,21,43,23,45,49,50,31,58,31,51,171,54,29,51,59,16,79,79,25,40,40,88,5,0,28,56,50,32,64,36,46,38,36,46,56,34,54,54,48,40,0,4,45,0],"data":{"version":3,"file":"trace-mapping.umd.js","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/resolve.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/strip-filename.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/sourcemap-segment.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/sort.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/binary-search.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/by-source.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/any-map.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts"],"sourcesContent":["import resolveUri from '@jridgewell/resolve-uri';\n\nexport default function resolve(input: string, base: string | undefined): string {\n  // The base is always treated as a directory, if it's not empty.\n  // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\n  // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\n  if (base && !base.endsWith('/')) base += '/';\n\n  return resolveUri(input, base);\n}\n","/**\n * Removes everything after the last \"/\", but leaves the slash.\n */\nexport default function stripFilename(path: string | undefined | null): string {\n  if (!path) return '';\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n","type GeneratedColumn = number;\ntype SourcesIndex = number;\ntype SourceLine = number;\ntype SourceColumn = number;\ntype NamesIndex = number;\n\ntype GeneratedLine = number;\n\nexport type SourceMapSegment =\n  | [GeneratedColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn, NamesIndex];\n\nexport type ReverseSegment = [SourceColumn, GeneratedLine, GeneratedColumn];\n\nexport const COLUMN = 0;\nexport const SOURCES_INDEX = 1;\nexport const SOURCE_LINE = 2;\nexport const SOURCE_COLUMN = 3;\nexport const NAMES_INDEX = 4;\n\nexport const REV_GENERATED_LINE = 1;\nexport const REV_GENERATED_COLUMN = 2;\n","import { COLUMN } from './sourcemap-segment';\n\nimport type { SourceMapSegment } from './sourcemap-segment';\n\nexport default function maybeSort(\n  mappings: SourceMapSegment[][],\n  owned: boolean,\n): SourceMapSegment[][] {\n  const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n  if (unsortedIndex === mappings.length) return mappings;\n\n  // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If\n  // not, we do not want to modify the consumer's input array.\n  if (!owned) mappings = mappings.slice();\n\n  for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n    mappings[i] = sortSegments(mappings[i], owned);\n  }\n  return mappings;\n}\n\nfunction nextUnsortedSegmentLine(mappings: SourceMapSegment[][], start: number): number {\n  for (let i = start; i < mappings.length; i++) {\n    if (!isSorted(mappings[i])) return i;\n  }\n  return mappings.length;\n}\n\nfunction isSorted(line: SourceMapSegment[]): boolean {\n  for (let j = 1; j < line.length; j++) {\n    if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction sortSegments(line: SourceMapSegment[], owned: boolean): SourceMapSegment[] {\n  if (!owned) line = line.slice();\n  return line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[COLUMN] - b[COLUMN];\n}\n","import type { SourceMapSegment, ReverseSegment } from './sourcemap-segment';\nimport { COLUMN } from './sourcemap-segment';\n\nexport type MemoState = {\n  lastKey: number;\n  lastNeedle: number;\n  lastIndex: number;\n};\n\nexport let found = false;\n\n/**\n * A binary search implementation that returns the index if a match is found.\n * If no match is found, then the left-index (the index associated with the item that comes just\n * before the desired index) is returned. To maintain proper sort order, a splice would happen at\n * the next index:\n *\n * ```js\n * const array = [1, 3];\n * const needle = 2;\n * const index = binarySearch(array, needle, (item, needle) => item - needle);\n *\n * assert.equal(index, 0);\n * array.splice(index + 1, 0, needle);\n * assert.deepEqual(array, [1, 2, 3]);\n * ```\n */\nexport function binarySearch(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  low: number,\n  high: number,\n): number {\n  while (low <= high) {\n    const mid = low + ((high - low) >> 1);\n    const cmp = haystack[mid][COLUMN] - needle;\n\n    if (cmp === 0) {\n      found = true;\n      return mid;\n    }\n\n    if (cmp < 0) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n\n  found = false;\n  return low - 1;\n}\n\nexport function upperBound(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  index: number,\n): number {\n  for (let i = index + 1; i < haystack.length; index = i++) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\n\nexport function lowerBound(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  index: number,\n): number {\n  for (let i = index - 1; i >= 0; index = i--) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\n\nexport function memoizedState(): MemoState {\n  return {\n    lastKey: -1,\n    lastNeedle: -1,\n    lastIndex: -1,\n  };\n}\n\n/**\n * This overly complicated beast is just to record the last tested line/column and the resulting\n * index, allowing us to skip a few tests if mappings are monotonically increasing.\n */\nexport function memoizedBinarySearch(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  state: MemoState,\n  key: number,\n): number {\n  const { lastKey, lastNeedle, lastIndex } = state;\n\n  let low = 0;\n  let high = haystack.length - 1;\n  if (key === lastKey) {\n    if (needle === lastNeedle) {\n      found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n      return lastIndex;\n    }\n\n    if (needle >= lastNeedle) {\n      // lastIndex may be -1 if the previous needle was not found.\n      low = lastIndex === -1 ? 0 : lastIndex;\n    } else {\n      high = lastIndex;\n    }\n  }\n  state.lastKey = key;\n  state.lastNeedle = needle;\n\n  return (state.lastIndex = binarySearch(haystack, needle, low, high));\n}\n","import { COLUMN, SOURCES_INDEX, SOURCE_LINE, SOURCE_COLUMN } from './sourcemap-segment';\nimport { memoizedBinarySearch, upperBound } from './binary-search';\n\nimport type { ReverseSegment, SourceMapSegment } from './sourcemap-segment';\nimport type { MemoState } from './binary-search';\n\nexport type Source = {\n  __proto__: null;\n  [line: number]: Exclude<ReverseSegment, [number]>[];\n};\n\n// Rebuilds the original source files, with mappings that are ordered by source line/column instead\n// of generated line/column.\nexport default function buildBySources(\n  decoded: readonly SourceMapSegment[][],\n  memos: MemoState[],\n): Source[] {\n  const sources: Source[] = memos.map(buildNullArray);\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      if (seg.length === 1) continue;\n\n      const sourceIndex = seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      const originalSource = sources[sourceIndex];\n      const originalLine = (originalSource[sourceLine] ||= []);\n      const memo = memos[sourceIndex];\n\n      // The binary search either found a match, or it found the left-index just before where the\n      // segment should go. Either way, we want to insert after that. And there may be multiple\n      // generated segments associated with an original location, so there may need to move several\n      // indexes before we find where we need to insert.\n      let index = upperBound(\n        originalLine,\n        sourceColumn,\n        memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine),\n      );\n\n      memo.lastIndex = ++index;\n      insert(originalLine, index, [sourceColumn, i, seg[COLUMN]]);\n    }\n  }\n\n  return sources;\n}\n\nfunction insert<T>(array: T[], index: number, value: T) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\n\n// Null arrays allow us to use ordered index keys without actually allocating contiguous memory like\n// a real array. We use a null-prototype object to avoid prototype pollution and deoptimizations.\n// Numeric properties on objects are magically sorted in ascending order by the engine regardless of\n// the insertion order. So, by setting any numeric keys, even out of order, we'll get ascending\n// order when iterating with for-in.\nfunction buildNullArray<T extends { __proto__: null }>(): T {\n  return { __proto__: null } as T;\n}\n","import { TraceMap, presortedDecodedMap, decodedMappings } from './trace-mapping';\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n} from './sourcemap-segment';\n\nimport type {\n  DecodedSourceMap,\n  DecodedSourceMapXInput,\n  EncodedSourceMapXInput,\n  SectionedSourceMapXInput,\n  SectionedSourceMapInput,\n  SectionXInput,\n} from './types';\nimport type { SourceMapSegment } from './sourcemap-segment';\n\ntype AnyMap = {\n  new (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;\n  (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;\n};\n\nexport const AnyMap: AnyMap = function (map, mapUrl) {\n  const parsed = parse(map);\n\n  if (!('sections' in parsed)) {\n    return new TraceMap(parsed as DecodedSourceMapXInput | EncodedSourceMapXInput, mapUrl);\n  }\n\n  const mappings: SourceMapSegment[][] = [];\n  const sources: string[] = [];\n  const sourcesContent: (string | null)[] = [];\n  const names: string[] = [];\n  const ignoreList: number[] = [];\n\n  recurse(\n    parsed,\n    mapUrl,\n    mappings,\n    sources,\n    sourcesContent,\n    names,\n    ignoreList,\n    0,\n    0,\n    Infinity,\n    Infinity,\n  );\n\n  const joined: DecodedSourceMap = {\n    version: 3,\n    file: parsed.file,\n    names,\n    sources,\n    sourcesContent,\n    mappings,\n    ignoreList,\n  };\n\n  return presortedDecodedMap(joined);\n} as AnyMap;\n\nfunction parse<T>(map: T): Exclude<T, string> {\n  return typeof map === 'string' ? JSON.parse(map) : map;\n}\n\nfunction recurse(\n  input: SectionedSourceMapXInput,\n  mapUrl: string | null | undefined,\n  mappings: SourceMapSegment[][],\n  sources: string[],\n  sourcesContent: (string | null)[],\n  names: string[],\n  ignoreList: number[],\n  lineOffset: number,\n  columnOffset: number,\n  stopLine: number,\n  stopColumn: number,\n) {\n  const { sections } = input;\n  for (let i = 0; i < sections.length; i++) {\n    const { map, offset } = sections[i];\n\n    let sl = stopLine;\n    let sc = stopColumn;\n    if (i + 1 < sections.length) {\n      const nextOffset = sections[i + 1].offset;\n      sl = Math.min(stopLine, lineOffset + nextOffset.line);\n\n      if (sl === stopLine) {\n        sc = Math.min(stopColumn, columnOffset + nextOffset.column);\n      } else if (sl < stopLine) {\n        sc = columnOffset + nextOffset.column;\n      }\n    }\n\n    addSection(\n      map,\n      mapUrl,\n      mappings,\n      sources,\n      sourcesContent,\n      names,\n      ignoreList,\n      lineOffset + offset.line,\n      columnOffset + offset.column,\n      sl,\n      sc,\n    );\n  }\n}\n\nfunction addSection(\n  input: SectionXInput['map'],\n  mapUrl: string | null | undefined,\n  mappings: SourceMapSegment[][],\n  sources: string[],\n  sourcesContent: (string | null)[],\n  names: string[],\n  ignoreList: number[],\n  lineOffset: number,\n  columnOffset: number,\n  stopLine: number,\n  stopColumn: number,\n) {\n  const parsed = parse(input);\n  if ('sections' in parsed) return recurse(...(arguments as unknown as Parameters<typeof recurse>));\n\n  const map = new TraceMap(parsed, mapUrl);\n  const sourcesOffset = sources.length;\n  const namesOffset = names.length;\n  const decoded = decodedMappings(map);\n  const { resolvedSources, sourcesContent: contents, ignoreList: ignores } = map;\n\n  append(sources, resolvedSources);\n  append(names, map.names);\n\n  if (contents) append(sourcesContent, contents);\n  else for (let i = 0; i < resolvedSources.length; i++) sourcesContent.push(null);\n\n  if (ignores) for (let i = 0; i < ignores.length; i++) ignoreList.push(ignores[i] + sourcesOffset);\n\n  for (let i = 0; i < decoded.length; i++) {\n    const lineI = lineOffset + i;\n\n    // We can only add so many lines before we step into the range that the next section's map\n    // controls. When we get to the last line, then we'll start checking the segments to see if\n    // they've crossed into the column range. But it may not have any columns that overstep, so we\n    // still need to check that we don't overstep lines, too.\n    if (lineI > stopLine) return;\n\n    // The out line may already exist in mappings (if we're continuing the line started by a\n    // previous section). Or, we may have jumped ahead several lines to start this section.\n    const out = getLine(mappings, lineI);\n    // On the 0th loop, the section's column offset shifts us forward. On all other lines (since the\n    // map can be multiple lines), it doesn't.\n    const cOffset = i === 0 ? columnOffset : 0;\n\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const column = cOffset + seg[COLUMN];\n\n      // If this segment steps into the column range that the next section's map controls, we need\n      // to stop early.\n      if (lineI === stopLine && column >= stopColumn) return;\n\n      if (seg.length === 1) {\n        out.push([column]);\n        continue;\n      }\n\n      const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      out.push(\n        seg.length === 4\n          ? [column, sourcesIndex, sourceLine, sourceColumn]\n          : [column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]],\n      );\n    }\n  }\n}\n\nfunction append<T>(arr: T[], other: T[]) {\n  for (let i = 0; i < other.length; i++) arr.push(other[i]);\n}\n\nfunction getLine<T>(arr: T[][], index: number): T[] {\n  for (let i = arr.length; i <= index; i++) arr[i] = [];\n  return arr[index];\n}\n","import { encode, decode } from '@jridgewell/sourcemap-codec';\n\nimport resolve from './resolve';\nimport stripFilename from './strip-filename';\nimport maybeSort from './sort';\nimport buildBySources from './by-source';\nimport {\n  memoizedState,\n  memoizedBinarySearch,\n  upperBound,\n  lowerBound,\n  found as bsFound,\n} from './binary-search';\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n  REV_GENERATED_LINE,\n  REV_GENERATED_COLUMN,\n} from './sourcemap-segment';\n\nimport type { SourceMapSegment, ReverseSegment } from './sourcemap-segment';\nimport type {\n  SourceMapV3,\n  DecodedSourceMap,\n  EncodedSourceMap,\n  InvalidOriginalMapping,\n  OriginalMapping,\n  InvalidGeneratedMapping,\n  GeneratedMapping,\n  SourceMapInput,\n  Needle,\n  SourceNeedle,\n  SourceMap,\n  EachMapping,\n  Bias,\n  XInput,\n} from './types';\nimport type { Source } from './by-source';\nimport type { MemoState } from './binary-search';\n\nexport type { SourceMapSegment } from './sourcemap-segment';\nexport type {\n  SourceMap,\n  DecodedSourceMap,\n  EncodedSourceMap,\n  Section,\n  SectionedSourceMap,\n  SourceMapV3,\n  Bias,\n  EachMapping,\n  GeneratedMapping,\n  InvalidGeneratedMapping,\n  InvalidOriginalMapping,\n  Needle,\n  OriginalMapping,\n  OriginalMapping as Mapping,\n  SectionedSourceMapInput,\n  SourceMapInput,\n  SourceNeedle,\n  XInput,\n  EncodedSourceMapXInput,\n  DecodedSourceMapXInput,\n  SectionedSourceMapXInput,\n  SectionXInput,\n} from './types';\n\ninterface PublicMap {\n  _encoded: TraceMap['_encoded'];\n  _decoded: TraceMap['_decoded'];\n  _decodedMemo: TraceMap['_decodedMemo'];\n  _bySources: TraceMap['_bySources'];\n  _bySourceMemos: TraceMap['_bySourceMemos'];\n}\n\nconst LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';\nconst COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';\n\nexport const LEAST_UPPER_BOUND = -1;\nexport const GREATEST_LOWER_BOUND = 1;\n\nexport { AnyMap } from './any-map';\n\nexport class TraceMap implements SourceMap {\n  declare version: SourceMapV3['version'];\n  declare file: SourceMapV3['file'];\n  declare names: SourceMapV3['names'];\n  declare sourceRoot: SourceMapV3['sourceRoot'];\n  declare sources: SourceMapV3['sources'];\n  declare sourcesContent: SourceMapV3['sourcesContent'];\n  declare ignoreList: SourceMapV3['ignoreList'];\n\n  declare resolvedSources: string[];\n  private declare _encoded: string | undefined;\n\n  private declare _decoded: SourceMapSegment[][] | undefined;\n  private declare _decodedMemo: MemoState;\n\n  private declare _bySources: Source[] | undefined;\n  private declare _bySourceMemos: MemoState[] | undefined;\n\n  constructor(map: SourceMapInput, mapUrl?: string | null) {\n    const isString = typeof map === 'string';\n\n    if (!isString && (map as unknown as { _decodedMemo: any })._decodedMemo) return map as TraceMap;\n\n    const parsed = (isString ? JSON.parse(map) : map) as DecodedSourceMap | EncodedSourceMap;\n\n    const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n    this.version = version;\n    this.file = file;\n    this.names = names || [];\n    this.sourceRoot = sourceRoot;\n    this.sources = sources;\n    this.sourcesContent = sourcesContent;\n    this.ignoreList = parsed.ignoreList || (parsed as XInput).x_google_ignoreList || undefined;\n\n    const from = resolve(sourceRoot || '', stripFilename(mapUrl));\n    this.resolvedSources = sources.map((s) => resolve(s || '', from));\n\n    const { mappings } = parsed;\n    if (typeof mappings === 'string') {\n      this._encoded = mappings;\n      this._decoded = undefined;\n    } else {\n      this._encoded = undefined;\n      this._decoded = maybeSort(mappings, isString);\n    }\n\n    this._decodedMemo = memoizedState();\n    this._bySources = undefined;\n    this._bySourceMemos = undefined;\n  }\n}\n\n/**\n * Typescript doesn't allow friend access to private fields, so this just casts the map into a type\n * with public access modifiers.\n */\nfunction cast(map: unknown): PublicMap {\n  return map as any;\n}\n\n/**\n * Returns the encoded (VLQ string) form of the SourceMap's mappings field.\n */\nexport function encodedMappings(map: TraceMap): EncodedSourceMap['mappings'] {\n  return (cast(map)._encoded ??= encode(cast(map)._decoded!));\n}\n\n/**\n * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.\n */\nexport function decodedMappings(map: TraceMap): Readonly<DecodedSourceMap['mappings']> {\n  return (cast(map)._decoded ||= decode(cast(map)._encoded!));\n}\n\n/**\n * A low-level API to find the segment associated with a generated line/column (think, from a\n * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.\n */\nexport function traceSegment(\n  map: TraceMap,\n  line: number,\n  column: number,\n): Readonly<SourceMapSegment> | null {\n  const decoded = decodedMappings(map);\n\n  // It's common for parent source maps to have pointers to lines that have no\n  // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n  if (line >= decoded.length) return null;\n\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    GREATEST_LOWER_BOUND,\n  );\n\n  return index === -1 ? null : segments[index];\n}\n\n/**\n * A higher-level API to find the source/line/column associated with a generated line/column\n * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in\n * `source-map` library.\n */\nexport function originalPositionFor(\n  map: TraceMap,\n  needle: Needle,\n): OriginalMapping | InvalidOriginalMapping {\n  let { line, column, bias } = needle;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n\n  const decoded = decodedMappings(map);\n\n  // It's common for parent source maps to have pointers to lines that have no\n  // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n  if (line >= decoded.length) return OMapping(null, null, null, null);\n\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    bias || GREATEST_LOWER_BOUND,\n  );\n\n  if (index === -1) return OMapping(null, null, null, null);\n\n  const segment = segments[index];\n  if (segment.length === 1) return OMapping(null, null, null, null);\n\n  const { names, resolvedSources } = map;\n  return OMapping(\n    resolvedSources[segment[SOURCES_INDEX]],\n    segment[SOURCE_LINE] + 1,\n    segment[SOURCE_COLUMN],\n    segment.length === 5 ? names[segment[NAMES_INDEX]] : null,\n  );\n}\n\n/**\n * Finds the generated line/column position of the provided source/line/column source position.\n */\nexport function generatedPositionFor(\n  map: TraceMap,\n  needle: SourceNeedle,\n): GeneratedMapping | InvalidGeneratedMapping {\n  const { source, line, column, bias } = needle;\n  return generatedPosition(map, source, line, column, bias || GREATEST_LOWER_BOUND, false);\n}\n\n/**\n * Finds all generated line/column positions of the provided source/line/column source position.\n */\nexport function allGeneratedPositionsFor(map: TraceMap, needle: SourceNeedle): GeneratedMapping[] {\n  const { source, line, column, bias } = needle;\n  // SourceMapConsumer uses LEAST_UPPER_BOUND for some reason, so we follow suit.\n  return generatedPosition(map, source, line, column, bias || LEAST_UPPER_BOUND, true);\n}\n\n/**\n * Iterates each mapping in generated position order.\n */\nexport function eachMapping(map: TraceMap, cb: (mapping: EachMapping) => void): void {\n  const decoded = decodedMappings(map);\n  const { names, resolvedSources } = map;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n\n      const generatedLine = i + 1;\n      const generatedColumn = seg[0];\n      let source = null;\n      let originalLine = null;\n      let originalColumn = null;\n      let name = null;\n      if (seg.length !== 1) {\n        source = resolvedSources[seg[1]];\n        originalLine = seg[2] + 1;\n        originalColumn = seg[3];\n      }\n      if (seg.length === 5) name = names[seg[4]];\n\n      cb({\n        generatedLine,\n        generatedColumn,\n        source,\n        originalLine,\n        originalColumn,\n        name,\n      } as EachMapping);\n    }\n  }\n}\n\nfunction sourceIndex(map: TraceMap, source: string): number {\n  const { sources, resolvedSources } = map;\n  let index = sources.indexOf(source);\n  if (index === -1) index = resolvedSources.indexOf(source);\n  return index;\n}\n\n/**\n * Retrieves the source content for a particular source, if its found. Returns null if not.\n */\nexport function sourceContentFor(map: TraceMap, source: string): string | null {\n  const { sourcesContent } = map;\n  if (sourcesContent == null) return null;\n  const index = sourceIndex(map, source);\n  return index === -1 ? null : sourcesContent[index];\n}\n\n/**\n * Determines if the source is marked to ignore by the source map.\n */\nexport function isIgnored(map: TraceMap, source: string): boolean {\n  const { ignoreList } = map;\n  if (ignoreList == null) return false;\n  const index = sourceIndex(map, source);\n  return index === -1 ? false : ignoreList.includes(index);\n}\n\n/**\n * A helper that skips sorting of the input map's mappings array, which can be expensive for larger\n * maps.\n */\nexport function presortedDecodedMap(map: DecodedSourceMap, mapUrl?: string): TraceMap {\n  const tracer = new TraceMap(clone(map, []), mapUrl);\n  cast(tracer)._decoded = map.mappings;\n  return tracer;\n}\n\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function decodedMap(\n  map: TraceMap,\n): Omit<DecodedSourceMap, 'mappings'> & { mappings: readonly SourceMapSegment[][] } {\n  return clone(map, decodedMappings(map));\n}\n\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport function encodedMap(map: TraceMap): EncodedSourceMap {\n  return clone(map, encodedMappings(map));\n}\n\nfunction clone<T extends string | readonly SourceMapSegment[][]>(\n  map: TraceMap | DecodedSourceMap,\n  mappings: T,\n): T extends string ? EncodedSourceMap : DecodedSourceMap {\n  return {\n    version: map.version,\n    file: map.file,\n    names: map.names,\n    sourceRoot: map.sourceRoot,\n    sources: map.sources,\n    sourcesContent: map.sourcesContent,\n    mappings,\n    ignoreList: map.ignoreList || (map as XInput).x_google_ignoreList,\n  } as any;\n}\n\nfunction OMapping(source: null, line: null, column: null, name: null): InvalidOriginalMapping;\nfunction OMapping(\n  source: string,\n  line: number,\n  column: number,\n  name: string | null,\n): OriginalMapping;\nfunction OMapping(\n  source: string | null,\n  line: number | null,\n  column: number | null,\n  name: string | null,\n): OriginalMapping | InvalidOriginalMapping {\n  return { source, line, column, name } as any;\n}\n\nfunction GMapping(line: null, column: null): InvalidGeneratedMapping;\nfunction GMapping(line: number, column: number): GeneratedMapping;\nfunction GMapping(\n  line: number | null,\n  column: number | null,\n): GeneratedMapping | InvalidGeneratedMapping {\n  return { line, column } as any;\n}\n\nfunction traceSegmentInternal(\n  segments: SourceMapSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number;\nfunction traceSegmentInternal(\n  segments: ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number;\nfunction traceSegmentInternal(\n  segments: SourceMapSegment[] | ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number {\n  let index = memoizedBinarySearch(segments, column, memo, line);\n  if (bsFound) {\n    index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n  } else if (bias === LEAST_UPPER_BOUND) index++;\n\n  if (index === -1 || index === segments.length) return -1;\n  return index;\n}\n\nfunction sliceGeneratedPositions(\n  segments: ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): GeneratedMapping[] {\n  let min = traceSegmentInternal(segments, memo, line, column, GREATEST_LOWER_BOUND);\n\n  // We ignored the bias when tracing the segment so that we're guarnateed to find the first (in\n  // insertion order) segment that matched. Even if we did respect the bias when tracing, we would\n  // still need to call `lowerBound()` to find the first segment, which is slower than just looking\n  // for the GREATEST_LOWER_BOUND to begin with. The only difference that matters for us is when the\n  // binary search didn't match, in which case GREATEST_LOWER_BOUND just needs to increment to\n  // match LEAST_UPPER_BOUND.\n  if (!bsFound && bias === LEAST_UPPER_BOUND) min++;\n\n  if (min === -1 || min === segments.length) return [];\n\n  // We may have found the segment that started at an earlier column. If this is the case, then we\n  // need to slice all generated segments that match _that_ column, because all such segments span\n  // to our desired column.\n  const matchedColumn = bsFound ? column : segments[min][COLUMN];\n\n  // The binary search is not guaranteed to find the lower bound when a match wasn't found.\n  if (!bsFound) min = lowerBound(segments, matchedColumn, min);\n  const max = upperBound(segments, matchedColumn, min);\n\n  const result = [];\n  for (; min <= max; min++) {\n    const segment = segments[min];\n    result.push(GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]));\n  }\n  return result;\n}\n\nfunction generatedPosition(\n  map: TraceMap,\n  source: string,\n  line: number,\n  column: number,\n  bias: Bias,\n  all: false,\n): GeneratedMapping | InvalidGeneratedMapping;\nfunction generatedPosition(\n  map: TraceMap,\n  source: string,\n  line: number,\n  column: number,\n  bias: Bias,\n  all: true,\n): GeneratedMapping[];\nfunction generatedPosition(\n  map: TraceMap,\n  source: string,\n  line: number,\n  column: number,\n  bias: Bias,\n  all: boolean,\n): GeneratedMapping | InvalidGeneratedMapping | GeneratedMapping[] {\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n\n  const { sources, resolvedSources } = map;\n  let sourceIndex = sources.indexOf(source);\n  if (sourceIndex === -1) sourceIndex = resolvedSources.indexOf(source);\n  if (sourceIndex === -1) return all ? [] : GMapping(null, null);\n\n  const generated = (cast(map)._bySources ||= buildBySources(\n    decodedMappings(map),\n    (cast(map)._bySourceMemos = sources.map(memoizedState)),\n  ));\n\n  const segments = generated[sourceIndex][line];\n  if (segments == null) return all ? [] : GMapping(null, null);\n\n  const memo = cast(map)._bySourceMemos![sourceIndex];\n\n  if (all) return sliceGeneratedPositions(segments, memo, line, column, bias);\n\n  const index = traceSegmentInternal(segments, memo, line, column, bias);\n  if (index === -1) return GMapping(null, null);\n\n  const segment = segments[index];\n  return GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]);\n}\n"],"names":["encode","decode","bsFound"],"mappings":"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","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js":{"lineLengths":[29,85,79,116,44,0,36,40,85,63,63,44,38,25,25,5,46,22,22,24,12,36,35,45,23,31,39,21,27,41,9,32,5,52,35,59,12,43,25,26,36,46,28,19,5,38,30,25,39,5,0,32,49,49,43,39,15,29,88,42,18,13,15,29,33,58,59,21,31,18,14,24,23,25,26,52,9,18,36,35,41,46,29,13,9,17,46,76,9,5,24,29,25,33,9,16,54,9,16,52,9,23,41,50,52,9,5,0,21,42,33,47,26,25,21,51,47,52,46,41,31,33,25,13,50,52,44,120,29,45,26,20,63,41,53,13,30,31,30,9,22,5,43,42,45,62,9,30,5,66,36,96,22,32,62,46,39,55,41,31,47,31,40,9,47,39,40,67,22,13,72,9,28,60,44,21,5,43,33,47,26,25,24,39,37,37,29,31,28,30,12,45,30,53,61,48,45,38,40,29,17,56,54,52,49,36,37,26,36,90,136,61,94,17,22,55,17,43,34,57,50,87,72,88,121,84,17,42,47,34,24,46,50,74,45,52,76,73,59,81,114,76,96,29,25,30,68,25,56,55,17,42,35,34,13,22,34,38,22,5,44,32,22,42,45,81,9,30,5,67,36,111,35,53,33,25,9,29,32,9,61,108,41,33,62,44,29,13,69,68,9,23,83,44,29,29,13,45,29,13,69,65,67,9,23,45,39,62,49,53,49,53,58,48,92,96,58,17,13,9,47,39,40,67,22,13,73,9,33,51,31,25,9,14,32,9,62,21,5,50,12,36,36,5,0,31,36,50,27,26,29,27,29,27,12,45,28,30,28,26,39,24,61,40,35,36,47,71,67,71,51,71,94,21,26,82,21,17,22,38,17,31,29,13,24,27,31,34,39,23,5,25,34,5,35,27,5,30,42,29,27,29,27,50,36,22,40,34,25,30,51,40,26,40,73,41,29,79,75,79,41,29,75,13,9,30,5,0,28,58,56,28,58,56,0,66,0,4,47,0],"data":{"version":3,"file":"sourcemap-codec.umd.js","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/src/vlq.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/src/strings.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/src/scopes.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts"],"sourcesContent":["import type { StringReader, StringWriter } from './strings';\n\nexport const comma = ','.charCodeAt(0);\nexport const semicolon = ';'.charCodeAt(0);\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\nexport function decodeInteger(reader: StringReader, relative: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  return relative + value;\n}\n\nexport function encodeInteger(builder: StringWriter, num: number, relative: number): number {\n  let delta = num - relative;\n\n  delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;\n  do {\n    let clamped = delta & 0b011111;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 0b100000;\n    builder.write(intToChar[clamped]);\n  } while (delta > 0);\n\n  return num;\n}\n\nexport function hasMoreVlq(reader: StringReader, max: number) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\n","const bufLength = 1024 * 16;\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array): string {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array): string {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport class StringWriter {\n  pos = 0;\n  private out = '';\n  private buffer = new Uint8Array(bufLength);\n\n  write(v: number): void {\n    const { buffer } = this;\n    buffer[this.pos++] = v;\n    if (this.pos === bufLength) {\n      this.out += td.decode(buffer);\n      this.pos = 0;\n    }\n  }\n\n  flush(): string {\n    const { buffer, out, pos } = this;\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\n  }\n}\n\nexport class StringReader {\n  pos = 0;\n  private declare buffer: string;\n\n  constructor(buffer: string) {\n    this.buffer = buffer;\n  }\n\n  next(): number {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n\n  peek(): number {\n    return this.buffer.charCodeAt(this.pos);\n  }\n\n  indexOf(char: string): number {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n}\n","import { StringReader, StringWriter } from './strings';\nimport { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\n\nconst EMPTY: any[] = [];\n\ntype Line = number;\ntype Column = number;\ntype Kind = number;\ntype Name = number;\ntype Var = number;\ntype SourcesIndex = number;\ntype ScopesIndex = number;\n\ntype Mix<A, B, O> = (A & O) | (B & O);\n\nexport type OriginalScope = Mix<\n  [Line, Column, Line, Column, Kind],\n  [Line, Column, Line, Column, Kind, Name],\n  { vars: Var[] }\n>;\n\nexport type GeneratedRange = Mix<\n  [Line, Column, Line, Column],\n  [Line, Column, Line, Column, SourcesIndex, ScopesIndex],\n  {\n    callsite: CallSite | null;\n    bindings: Binding[];\n    isScope: boolean;\n  }\n>;\nexport type CallSite = [SourcesIndex, Line, Column];\ntype Binding = BindingExpressionRange[];\nexport type BindingExpressionRange = [Name] | [Name, Line, Column];\n\nexport function decodeOriginalScopes(input: string): OriginalScope[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const scopes: OriginalScope[] = [];\n  const stack: OriginalScope[] = [];\n  let line = 0;\n\n  for (; reader.pos < length; reader.pos++) {\n    line = decodeInteger(reader, line);\n    const column = decodeInteger(reader, 0);\n\n    if (!hasMoreVlq(reader, length)) {\n      const last = stack.pop()!;\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n\n    const kind = decodeInteger(reader, 0);\n    const fields = decodeInteger(reader, 0);\n    const hasName = fields & 0b0001;\n\n    const scope: OriginalScope = (\n      hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind]\n    ) as OriginalScope;\n\n    let vars: Var[] = EMPTY;\n    if (hasMoreVlq(reader, length)) {\n      vars = [];\n      do {\n        const varsIndex = decodeInteger(reader, 0);\n        vars.push(varsIndex);\n      } while (hasMoreVlq(reader, length));\n    }\n    scope.vars = vars;\n\n    scopes.push(scope);\n    stack.push(scope);\n  }\n\n  return scopes;\n}\n\nexport function encodeOriginalScopes(scopes: OriginalScope[]): string {\n  const writer = new StringWriter();\n\n  for (let i = 0; i < scopes.length; ) {\n    i = _encodeOriginalScopes(scopes, i, writer, [0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeOriginalScopes(\n  scopes: OriginalScope[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenColumn\n  ],\n): number {\n  const scope = scopes[index];\n  const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;\n\n  if (index > 0) writer.write(comma);\n\n  state[0] = encodeInteger(writer, startLine, state[0]);\n  encodeInteger(writer, startColumn, 0);\n  encodeInteger(writer, kind, 0);\n\n  const fields = scope.length === 6 ? 0b0001 : 0;\n  encodeInteger(writer, fields, 0);\n  if (scope.length === 6) encodeInteger(writer, scope[5], 0);\n\n  for (const v of vars) {\n    encodeInteger(writer, v, 0);\n  }\n\n  for (index++; index < scopes.length; ) {\n    const next = scopes[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeOriginalScopes(scopes, index, writer, state);\n  }\n\n  writer.write(comma);\n  state[0] = encodeInteger(writer, endLine, state[0]);\n  encodeInteger(writer, endColumn, 0);\n\n  return index;\n}\n\nexport function decodeGeneratedRanges(input: string): GeneratedRange[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const ranges: GeneratedRange[] = [];\n  const stack: GeneratedRange[] = [];\n\n  let genLine = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    let genColumn = 0;\n\n    for (; reader.pos < semi; reader.pos++) {\n      genColumn = decodeInteger(reader, genColumn);\n\n      if (!hasMoreVlq(reader, semi)) {\n        const last = stack.pop()!;\n        last[2] = genLine;\n        last[3] = genColumn;\n        continue;\n      }\n\n      const fields = decodeInteger(reader, 0);\n      const hasDefinition = fields & 0b0001;\n      const hasCallsite = fields & 0b0010;\n      const hasScope = fields & 0b0100;\n\n      let callsite: CallSite | null = null;\n      let bindings: Binding[] = EMPTY;\n      let range: GeneratedRange;\n      if (hasDefinition) {\n        const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);\n        definitionScopeIndex = decodeInteger(\n          reader,\n          definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0,\n        );\n\n        definitionSourcesIndex = defSourcesIndex;\n        range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex] as GeneratedRange;\n      } else {\n        range = [genLine, genColumn, 0, 0] as GeneratedRange;\n      }\n\n      range.isScope = !!hasScope;\n\n      if (hasCallsite) {\n        const prevCsi = callsiteSourcesIndex;\n        const prevLine = callsiteLine;\n        callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);\n        const sameSource = prevCsi === callsiteSourcesIndex;\n        callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);\n        callsiteColumn = decodeInteger(\n          reader,\n          sameSource && prevLine === callsiteLine ? callsiteColumn : 0,\n        );\n\n        callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n      }\n      range.callsite = callsite;\n\n      if (hasMoreVlq(reader, semi)) {\n        bindings = [];\n        do {\n          bindingLine = genLine;\n          bindingColumn = genColumn;\n          const expressionsCount = decodeInteger(reader, 0);\n          let expressionRanges: BindingExpressionRange[];\n          if (expressionsCount < -1) {\n            expressionRanges = [[decodeInteger(reader, 0)]];\n            for (let i = -1; i > expressionsCount; i--) {\n              const prevBl = bindingLine;\n              bindingLine = decodeInteger(reader, bindingLine);\n              bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);\n              const expression = decodeInteger(reader, 0);\n              expressionRanges.push([expression, bindingLine, bindingColumn]);\n            }\n          } else {\n            expressionRanges = [[expressionsCount]];\n          }\n          bindings.push(expressionRanges);\n        } while (hasMoreVlq(reader, semi));\n      }\n      range.bindings = bindings;\n\n      ranges.push(range);\n      stack.push(range);\n    }\n\n    genLine++;\n    reader.pos = semi + 1;\n  } while (reader.pos < length);\n\n  return ranges;\n}\n\nexport function encodeGeneratedRanges(ranges: GeneratedRange[]): string {\n  if (ranges.length === 0) return '';\n\n  const writer = new StringWriter();\n\n  for (let i = 0; i < ranges.length; ) {\n    i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeGeneratedRanges(\n  ranges: GeneratedRange[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenLine\n    number, // GenColumn\n    number, // DefSourcesIndex\n    number, // DefScopesIndex\n    number, // CallSourcesIndex\n    number, // CallLine\n    number, // CallColumn\n  ],\n): number {\n  const range = ranges[index];\n  const {\n    0: startLine,\n    1: startColumn,\n    2: endLine,\n    3: endColumn,\n    isScope,\n    callsite,\n    bindings,\n  } = range;\n\n  if (state[0] < startLine) {\n    catchupLine(writer, state[0], startLine);\n    state[0] = startLine;\n    state[1] = 0;\n  } else if (index > 0) {\n    writer.write(comma);\n  }\n\n  state[1] = encodeInteger(writer, range[1], state[1]);\n\n  const fields =\n    (range.length === 6 ? 0b0001 : 0) | (callsite ? 0b0010 : 0) | (isScope ? 0b0100 : 0);\n  encodeInteger(writer, fields, 0);\n\n  if (range.length === 6) {\n    const { 4: sourcesIndex, 5: scopesIndex } = range;\n    if (sourcesIndex !== state[2]) {\n      state[3] = 0;\n    }\n    state[2] = encodeInteger(writer, sourcesIndex, state[2]);\n    state[3] = encodeInteger(writer, scopesIndex, state[3]);\n  }\n\n  if (callsite) {\n    const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite!;\n    if (sourcesIndex !== state[4]) {\n      state[5] = 0;\n      state[6] = 0;\n    } else if (callLine !== state[5]) {\n      state[6] = 0;\n    }\n    state[4] = encodeInteger(writer, sourcesIndex, state[4]);\n    state[5] = encodeInteger(writer, callLine, state[5]);\n    state[6] = encodeInteger(writer, callColumn, state[6]);\n  }\n\n  if (bindings) {\n    for (const binding of bindings) {\n      if (binding.length > 1) encodeInteger(writer, -binding.length, 0);\n      const expression = binding[0][0];\n      encodeInteger(writer, expression, 0);\n      let bindingStartLine = startLine;\n      let bindingStartColumn = startColumn;\n      for (let i = 1; i < binding.length; i++) {\n        const expRange = binding[i];\n        bindingStartLine = encodeInteger(writer, expRange[1]!, bindingStartLine);\n        bindingStartColumn = encodeInteger(writer, expRange[2]!, bindingStartColumn);\n        encodeInteger(writer, expRange[0]!, 0);\n      }\n    }\n  }\n\n  for (index++; index < ranges.length; ) {\n    const next = ranges[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeGeneratedRanges(ranges, index, writer, state);\n  }\n\n  if (state[0] < endLine) {\n    catchupLine(writer, state[0], endLine);\n    state[0] = endLine;\n    state[1] = 0;\n  } else {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, endColumn, state[1]);\n\n  return index;\n}\n\nfunction catchupLine(writer: StringWriter, lastLine: number, line: number) {\n  do {\n    writer.write(semicolon);\n  } while (++lastLine < line);\n}\n","import { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\nimport { StringWriter, StringReader } from './strings';\n\nexport {\n  decodeOriginalScopes,\n  encodeOriginalScopes,\n  decodeGeneratedRanges,\n  encodeGeneratedRanges,\n} from './scopes';\nexport type { OriginalScope, GeneratedRange, CallSite, BindingExpressionRange } from './scopes';\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nexport function decode(mappings: string): SourceMapMappings {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded: SourceMapMappings = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n\n    while (reader.pos < semi) {\n      let seg: SourceMapSegment;\n\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n\n      line.push(seg);\n      reader.pos++;\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n\n  return decoded;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const writer = new StringWriter();\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) writer.write(semicolon);\n    if (line.length === 0) continue;\n\n    let genColumn = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      if (j > 0) writer.write(comma);\n\n      genColumn = encodeInteger(writer, segment[0], genColumn);\n\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\n\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\n    }\n  }\n\n  return writer.flush();\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js":{"lineLengths":[29,95,66,110,37,0,48,41,7,34,44,49,27,40,40,41,40,7,96,7,101,102,6,25,50,41,40,7,88,35,39,5,41,38,5,36,37,5,31,41,5,32,36,5,38,43,124,5,34,44,30,130,5,67,16,19,17,17,17,17,18,17,35,10,5,30,41,58,28,46,23,9,36,67,28,26,44,23,9,29,39,33,43,64,24,22,24,35,31,39,34,42,28,19,5,38,100,56,33,24,44,40,5,36,39,105,17,31,33,9,14,86,63,9,5,7,96,66,7,39,49,43,101,40,24,104,100,25,105,101,93,37,49,36,96,25,40,25,13,86,37,61,30,25,104,74,33,31,44,31,30,17,31,112,101,46,17,25,13,108,49,38,23,9,22,43,36,9,67,24,9,24,5,7,63,7,35,28,22,36,33,53,43,42,32,35,44,31,34,46,31,35,42,45,31,42,98,44,44,44,31,44,103,48,13,37,37,9,38,47,28,92,34,30,31,33,40,81,47,26,44,69,108,104,87,51,17,40,13,38,44,20,97,9,5,0,19,0,4,43,0],"data":{"version":3,"file":"resolve-uri.umd.js","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts"],"sourcesContent":["// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nconst enum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null},"file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/lib/index.js":{"lineLengths":[13,0,46,13,3,46,27,13,54,32,16,3,11,1,16,33,23,25,24,21,22,23,3,1,22,27,24,22,27,33,23,19,3,1,65,9,9,11,9,15,73,1,55,20,28,71,8,4,24,81,8,3,2,26,46,48,45,55,50,30,37,37,27,46,27,38,53,57,48,54,30,21,29,30,4,45,37,2,151,22,25,8,46,82,116,88,98,89,120,109,77,74,77,93,77,93,69,64,62,35,8,54,154,181,149,106,180,72,72,87,65,127,67,72,21,14,92,56,61,49,9,101,57,56,27,14,14,168,98,28,8,118,68,72,76,107,26,8,75,109,49,217,27,14,121,73,65,66,84,76,81,108,49,48,73,37,18,9,45,58,72,32,16,54,23,18,48,16,12,68,23,12,76,32,12,93,35,93,30,14,48,78,35,18,58,62,98,68,24,13,52,72,69,59,48,87,41,19,17,135,25,17,155,69,115,84,94,39,7,70,38,21,104,27,13,48,56,52,55,56,130,111,84,91,91,36,71,60,25,18,149,30,18,53,177,181,183,69,69,108,147,87,75,167,66,71,175,179,181,68,127,65,84,23,11,43,92,99,89,88,53,28,16,54,76,21,13,14,112,121,111,69,84,106,81,29,11,25,92,85,99,140,47,57,54,49,66,93,22,18,68,82,76,81,2,24,58,25,17,58,32,15,51,104,80,78,38,2,149,30,173,144,81,32,9,189,125,29,8,80,8,39,123,100,103,86,97,150,2,30,40,35,22,23,9,5,1,34,12,7,13,14,4,98,3,28,78,74,144,86,78,71,6,37,46,5,3,45,36,22,34,20,26,38,27,50,5,65,25,13,13,15,13,74,107,7,44,45,25,13,76,31,23,8,18,48,16,24,11,7,7,17,4,1,49,32,83,3,36,51,42,49,31,44,25,19,7,15,15,60,76,80,40,17,15,23,18,19,3,32,1,187,7,16,11,41,15,33,24,24,7,3,2,33,42,40,14,1,71,11,49,30,54,5,16,3,22,12,9,6,21,9,41,18,48,18,14,11,6,16,3,29,15,9,29,23,20,5,49,46,16,3,30,25,50,47,16,3,29,47,3,29,42,3,30,42,3,22,41,3,30,42,3,30,39,27,32,42,56,27,38,33,47,28,16,3,31,38,28,3,26,54,40,12,35,5,3,40,31,3,26,30,231,3,73,80,82,54,27,3,94,106,32,58,35,5,32,3,22,42,5,61,20,7,5,60,3,47,46,16,19,21,36,16,3,23,5,61,41,7,5,45,3,26,5,61,44,7,5,21,3,29,49,30,22,16,3,62,61,58,3,104,36,30,118,41,25,26,40,28,5,53,3,26,67,40,3,31,59,5,61,28,7,5,45,24,3,38,66,5,61,28,7,5,45,34,24,3,72,92,15,29,35,27,7,29,5,16,3,71,91,15,25,29,5,16,3,57,103,3,33,54,54,5,47,3,37,54,13,12,13,15,36,82,7,38,12,38,5,3,57,83,54,57,52,12,66,5,3,46,66,40,22,37,38,70,75,28,25,5,16,3,31,43,13,5,38,3,39,54,59,24,34,29,14,36,101,45,54,33,9,38,9,36,17,23,19,231,58,11,9,14,5,16,3,50,70,36,95,43,7,23,49,32,57,7,84,28,5,16,3,36,42,57,5,50,3,34,42,29,5,48,3,26,76,3,24,99,3,36,68,3,38,45,27,3,61,41,27,3,2,18,37,24,32,23,41,3,1,15,29,33,34,48,2,1,45,1,24,24,20,22,20,21,25,33,24,26,29,29,35,25,27,25,26,24,23,32,40,40,52,32,36,32,34,56,5,32,5,3,1,29,44,25,43,30,15,1,35,28,15,9,5,1,26,22,23,23,28,28,25,42,80,21,25,83,106,106,91,56,26,1,48,84,21,41,25,85,108,108,93,58,26,1,12,30,15,14,5,35,15,14,5,34,15,14,5,29,33,28,15,14,5,32,15,14,5,33,15,14,5,27,31,28,15,14,5,27,27,14,5,26,14,5,27,14,5,34,14,5,24,30,14,5,33,28,14,5,36,32,14,5,31,14,5,35,15,14,5,37,14,5,41,15,14,5,23,26,14,5,45,24,15,12,5,29,15,12,5,34,15,12,5,32,15,12,5,35,15,12,5,32,11,12,14,5,26,15,11,14,5,27,15,11,14,5,34,14,5,31,14,5,33,42,34,35,33,34,34,44,34,34,42,40,41,41,31,15,13,11,14,5,28,14,14,5,26,13,5,30,31,15,14,26,5,28,15,12,5,44,15,12,5,33,32,14,5,33,39,39,38,14,5,32,14,5,37,40,14,5,27,36,14,5,35,34,15,11,14,5,29,29,33,31,30,15,14,5,32,14,5,34,14,5,34,14,5,38,14,5,35,36,14,5,32,14,5,32,14,5,34,14,5,36,15,11,14,5,32,15,11,14,5,36,15,11,14,5,28,11,14,5,30,10,5,34,10,5,32,14,5,40,14,5,38,14,5,38,14,5,38,14,5,36,14,5,34,14,5,34,14,5,36,14,5,32,14,5,36,14,5,34,14,5,40,14,5,40,14,5,38,14,5,38,14,5,42,14,5,40,14,5,42,14,5,40,14,5,48,14,5,46,14,5,38,14,5,32,14,5,40,14,5,38,14,5,42,14,5,46,14,5,38,14,5,44,14,5,40,14,5,44,14,5,42,14,5,36,14,5,40,14,5,46,14,5,46,14,5,36,14,5,40,14,5,29,14,5,34,20,5,33,14,5,27,14,5,33,14,5,35,14,5,33,14,5,37,14,5,26,34,35,20,5,43,20,5,37,2,35,37,1,51,21,1,44,37,1,44,37,1,44,33,1,41,33,1,35,36,1,52,38,1,29,36,1,32,36,1,33,36,1,32,22,1,31,30,1,39,38,1,43,38,1,32,28,1,41,28,1,41,22,1,33,36,1,34,27,1,1,44,18,4,105,30,4,45,57,20,12,35,5,4,46,45,4,1,4306,2670,85,106,62,2199,1165,35,20,60,18,33,22,33,3,15,1,34,36,30,36,31,23,83,3,57,1,33,36,29,30,30,36,31,23,78,3,103,1,23,329,109,35,2,48,61,69,41,57,1,47,76,1,45,46,1,51,84,1,26,28,1,48,67,1,491,34,39,1,13,22,19,27,31,23,3,1,20,33,25,25,27,38,25,29,3,20,47,3,20,49,3,20,51,3,26,51,3,17,51,3,41,47,49,3,23,52,13,13,29,24,20,7,31,21,7,5,3,28,50,3,29,64,3,22,28,3,16,50,3,10,40,23,3,37,83,3,39,36,46,68,44,29,24,14,38,40,9,24,7,34,28,45,7,33,61,35,70,64,45,37,7,5,50,41,5,3,35,50,41,5,3,60,61,55,28,9,5,3,49,41,26,35,5,39,27,89,5,144,3,24,11,10,11,45,41,52,5,3,18,55,3,26,52,13,13,29,24,21,7,5,3,27,52,13,13,29,47,21,7,5,3,1,31,24,19,38,3,1,45,22,32,3,39,38,29,68,43,39,13,5,46,3,49,73,66,41,46,5,17,3,24,60,33,5,3,1,18,17,35,45,3,32,39,3,32,39,3,27,43,44,12,55,40,21,7,57,53,91,23,9,7,18,5,3,33,26,101,3,1,46,44,37,10,47,3,1,45,43,36,10,46,3,1,43,41,34,10,44,3,1,57,25,26,41,32,3,68,47,10,57,3,1,41,23,60,11,17,19,47,41,5,32,29,3,24,11,18,19,51,41,35,42,43,39,10,5,11,22,13,25,40,39,35,40,40,34,14,39,40,9,14,7,5,3,30,11,14,18,76,43,61,7,44,61,7,12,13,29,27,20,83,28,34,31,34,66,18,32,40,65,18,37,36,41,30,29,36,62,18,33,30,33,64,18,40,35,66,18,18,13,47,13,9,14,41,7,5,3,31,11,18,19,56,44,5,33,3,43,11,18,19,11,12,21,29,47,41,35,5,3,48,11,18,19,11,12,21,29,57,51,79,51,5,3,45,11,18,19,51,41,35,25,40,39,43,33,37,40,38,38,14,7,5,3,1,44,53,26,17,12,12,14,14,18,12,19,3,1,40,37,41,18,5,3,15,1,55,78,29,17,16,16,16,12,13,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,12,19,3,1,13,17,22,29,26,28,27,25,21,31,24,40,25,34,25,6,21,25,27,17,20,22,19,17,30,32,33,46,34,26,3,16,32,3,17,49,3,8,15,15,15,14,15,6,102,33,29,34,83,3,32,32,3,33,49,3,16,32,3,17,49,3,28,32,3,29,49,3,24,33,3,25,51,3,26,33,3,27,51,3,25,33,3,26,51,3,43,34,3,44,53,3,19,34,3,20,53,3,36,34,3,37,53,3,28,35,3,29,55,3,21,35,3,22,55,3,26,35,3,27,55,3,17,93,3,11,30,29,39,33,37,35,31,39,51,45,77,43,39,41,51,25,27,29,29,25,45,49,41,77,43,43,17,3,1,39,34,2,43,57,33,2,42,36,34,34,82,2,75,25,37,33,15,29,23,9,10,12,12,24,72,42,12,5,37,44,42,12,5,20,42,95,48,27,14,20,17,10,14,22,7,8,12,18,15,15,23,44,12,16,22,40,32,51,14,56,16,9,18,37,14,74,7,12,12,5,3,10,8,13,20,14,12,38,4,1,44,28,71,3,46,1,78,37,8,22,8,7,14,11,5,37,15,13,23,13,23,13,7,17,10,15,13,91,69,7,13,7,17,10,15,13,83,70,7,13,23,12,23,13,27,13,23,12,41,14,7,12,22,16,14,14,21,12,12,23,25,14,64,7,12,33,33,69,32,42,26,43,40,9,35,43,61,27,29,18,69,11,9,47,7,42,3,1,93,25,8,4,6,7,98,19,25,67,12,27,5,3,10,12,7,4,1,112,20,127,225,22,16,65,39,12,54,45,45,31,33,18,13,10,73,127,33,18,13,10,67,7,12,15,5,21,27,28,27,32,22,12,21,5,23,36,16,18,13,10,83,16,28,16,23,14,14,7,5,10,32,3,71,12,14,9,6,3,10,13,7,4,1,80,35,11,19,10,6,11,9,114,10,43,27,57,14,16,21,13,10,7,5,10,6,11,9,87,3,10,9,7,4,1,49,53,1,76,13,22,45,27,29,42,38,64,3,1,40,31,12,30,21,34,57,54,81,15,11,20,8,99,86,6,86,77,66,7,104,57,104,8,50,96,7,7,106,73,50,94,7,7,29,29,23,31,23,29,3,20,49,28,30,3,10,31,30,44,5,49,53,21,3,13,27,18,18,12,19,5,3,15,36,3,31,12,21,18,23,25,21,35,27,31,41,29,33,36,6,3,15,27,48,28,21,29,28,21,16,3,20,52,3,28,35,76,3,23,56,3,26,58,3,34,41,88,3,29,62,3,23,40,64,47,40,62,7,5,14,3,21,31,17,92,38,5,3,16,61,3,15,21,38,74,40,28,13,5,63,3,32,17,63,33,58,21,77,5,45,37,72,27,50,5,33,21,27,46,43,59,65,6,53,19,3,30,33,17,63,64,39,64,51,7,5,33,31,59,21,26,12,43,39,65,6,53,19,3,15,38,24,48,55,19,16,17,15,27,16,16,65,29,11,16,18,18,27,31,48,16,16,62,20,15,60,44,43,73,17,22,15,20,15,56,44,43,73,17,22,15,20,25,11,16,16,33,29,74,39,156,54,42,41,71,15,20,25,13,74,39,138,54,42,41,71,15,20,25,13,18,23,11,7,5,30,33,33,50,41,17,26,27,28,8,54,5,3,26,36,49,37,27,27,28,35,5,3,22,27,25,3,26,63,13,5,39,46,35,82,5,74,42,75,172,7,26,25,28,14,28,7,41,23,50,29,23,46,12,27,5,3,19,59,35,28,13,5,74,26,27,12,23,27,5,3,21,59,22,27,12,27,5,3,27,62,55,32,33,24,62,49,5,62,32,16,3,31,37,18,57,37,14,55,16,5,44,14,35,5,31,3,28,59,24,61,29,14,49,7,13,5,23,24,29,15,7,61,77,103,9,28,28,15,7,60,77,102,9,28,28,15,7,5,22,27,13,5,45,3,21,59,44,27,67,23,22,10,27,65,31,26,7,12,27,5,3,22,59,60,23,22,10,27,12,27,5,3,28,59,24,27,13,5,22,27,12,27,5,3,18,11,9,19,48,22,50,29,15,7,27,13,5,22,27,13,5,25,3,18,11,9,19,48,22,65,53,36,15,7,30,13,5,22,27,13,5,25,3,27,59,22,82,13,5,37,26,27,13,5,44,3,24,59,60,22,25,29,14,29,7,62,26,27,12,23,27,5,3,26,19,14,29,15,14,25,29,15,14,25,29,15,14,25,29,15,14,25,29,15,14,100,79,106,11,30,30,16,27,30,9,15,14,25,28,15,15,100,79,107,11,30,30,16,27,30,9,15,15,25,28,15,14,97,31,16,27,31,9,15,14,34,15,14,33,15,14,9,65,44,37,19,11,44,36,19,11,43,36,19,11,9,14,14,14,14,14,14,14,14,14,31,15,14,14,30,15,14,31,15,14,14,41,15,15,14,38,15,14,31,15,14,14,38,15,14,28,15,14,28,15,14,14,37,15,15,29,15,14,32,15,14,36,15,14,24,15,14,38,30,17,9,5,81,44,7,3,24,72,27,32,3,16,41,39,25,9,9,19,20,31,97,7,44,26,97,7,20,24,14,24,25,42,26,43,16,9,28,7,5,49,10,18,84,31,42,43,38,25,35,68,11,32,35,68,11,9,34,61,9,53,59,14,14,7,12,19,5,25,27,23,17,7,3,67,11,8,9,162,25,13,3,26,33,46,25,24,36,22,84,13,9,5,55,23,23,22,30,56,5,65,74,5,19,79,33,13,5,31,3,29,33,46,24,25,28,24,54,65,5,94,25,62,71,31,51,32,112,9,7,56,5,53,34,23,23,21,51,5,52,53,39,25,7,38,62,7,21,25,51,5,23,38,58,7,23,22,5,23,61,42,52,7,23,27,5,65,74,5,78,19,33,13,5,20,33,13,5,61,31,3,33,11,11,9,142,25,16,3,21,11,10,10,14,15,183,29,37,33,31,3,30,25,31,5,21,29,3,23,47,11,10,22,10,14,15,161,29,37,33,26,181,5,45,73,12,23,74,5,3,44,27,67,35,12,61,5,3,24,35,18,33,36,34,52,5,42,53,33,47,29,38,61,50,96,62,76,42,19,9,25,45,27,38,68,11,44,9,36,14,14,7,5,63,3,23,43,38,29,51,12,34,5,3,25,11,10,19,57,74,42,9,5,3,41,59,45,49,57,17,3,50,59,26,37,50,30,36,54,7,39,5,49,3,28,25,87,50,7,3,33,37,18,5,85,33,7,3,32,58,73,34,9,5,3,23,41,64,6,3,1,18,17,34,35,43,3,1,25,23,25,20,43,25,3,13,45,3,11,38,3,10,43,35,80,20,55,55,9,14,70,30,11,7,5,3,46,11,19,20,27,23,43,26,60,21,39,42,37,40,67,51,30,45,7,5,20,63,28,9,5,27,39,3,29,19,36,52,5,21,54,12,68,28,9,5,3,1,23,25,21,3,36,46,3,37,27,3,1,53,21,16,39,3,49,27,63,3,32,41,3,27,45,3,1,30,23,25,41,25,3,16,27,3,10,21,3,55,34,11,11,13,29,25,54,51,59,14,15,7,25,5,44,3,49,11,11,13,42,34,50,39,56,50,12,13,5,3,39,11,11,13,29,25,52,29,72,7,25,5,3,23,11,11,13,49,63,57,43,31,27,54,47,27,7,7,3,1,41,32,1,30,38,1,31,38,1,31,31,1,34,17,21,3,16,28,3,10,22,3,18,47,3,18,41,3,18,41,3,19,41,3,15,41,3,1,46,51,1,36,49,22,9,11,13,24,17,25,5,21,25,12,41,19,13,9,5,3,23,64,3,41,44,56,52,73,5,17,3,31,39,49,3,24,35,18,18,5,17,3,41,37,33,60,7,35,5,3,24,76,3,27,108,3,27,73,3,22,53,3,30,66,66,3,21,26,33,5,3,47,25,16,6,9,40,32,26,9,62,37,30,57,16,15,58,24,25,19,10,7,14,13,20,22,23,23,8,21,35,28,41,16,21,16,23,25,19,10,7,34,16,33,22,24,24,19,10,7,18,5,3,56,43,11,25,21,20,27,28,109,20,23,5,37,73,5,33,56,5,32,63,5,40,45,5,3,27,55,3,23,39,3,26,24,3,34,127,3,26,42,3,24,40,3,69,40,27,60,41,38,29,32,48,50,40,54,42,50,52,60,18,36,56,34,28,36,38,48,6,3,24,23,24,22,5,24,37,3,50,11,19,28,33,63,5,3,1,24,17,35,31,30,38,3,1,12,33,19,21,17,39,71,79,3,1,37,1,39,68,35,60,26,95,33,7,5,19,4,1,33,31,1,32,9,9,10,8,8,10,10,8,11,46,21,23,19,19,23,23,21,31,44,3,16,1,35,9,9,10,8,8,10,9,11,31,34,3,46,21,23,19,19,23,31,26,10,25,3,28,16,1,36,15,36,42,3,20,42,3,25,44,3,26,67,3,36,21,28,26,58,62,16,3,38,32,30,60,3,61,28,26,58,3,50,58,3,1,178,41,110,199,24,16,58,81,102,81,37,15,12,147,29,15,12,132,34,12,194,29,20,12,144,44,12,130,45,13,15,16,140,44,13,14,101,45,13,14,145,27,13,15,14,168,36,13,14,106,47,12,129,72,106,208,100,101,67,129,133,90,79,36,93,6,40,5,72,60,89,132,72,85,75,141,92,108,28,16,52,89,94,91,83,105,167,34,26,14,103,107,55,3,38,248,1,34,68,1,27,30,28,22,31,2,32,19,19,41,59,3,24,1,51,67,24,19,32,3,21,28,3,22,77,3,26,53,42,31,7,5,33,3,23,40,60,54,33,43,35,14,50,7,5,30,3,33,40,29,27,38,34,16,3,24,34,42,16,31,65,75,5,23,43,22,56,12,56,5,3,42,40,29,20,20,25,25,36,44,12,34,36,27,46,7,5,29,3,31,16,43,49,3,34,16,48,38,43,25,73,12,37,5,20,51,33,29,30,20,88,87,73,30,21,66,52,3,40,25,46,32,49,32,49,41,27,56,14,27,81,9,49,7,40,50,40,51,40,50,32,72,12,24,5,3,34,16,60,63,21,52,3,32,24,26,38,12,39,5,50,36,19,28,38,27,20,57,97,9,36,14,83,57,7,26,5,22,19,48,20,32,33,40,34,73,9,20,63,30,76,9,28,73,9,26,31,7,7,35,50,3,57,20,23,45,67,14,48,25,7,26,63,12,114,39,88,39,46,11,7,89,67,29,65,129,44,53,42,31,33,9,42,20,7,5,22,3,39,16,31,57,21,57,3,35,16,51,39,20,3,36,16,58,40,20,3,35,16,44,53,3,40,65,81,25,69,12,33,5,22,23,10,60,41,5,18,27,23,36,12,61,31,7,36,12,65,31,7,5,42,27,24,25,26,25,7,3,31,34,54,25,71,12,33,5,53,3,28,44,57,3,28,23,79,5,3,50,41,107,24,7,3,55,79,41,3,28,62,66,25,69,12,33,5,51,21,46,3,38,31,61,66,25,69,12,33,5,26,25,57,5,25,19,56,5,21,47,3,50,45,34,46,60,27,29,38,25,19,42,12,27,69,7,5,50,3,39,40,34,21,29,44,18,12,24,5,32,8,73,38,34,31,7,28,24,7,30,20,34,61,3,41,34,40,21,29,20,64,42,29,45,28,24,7,5,58,20,34,63,3,50,34,40,21,29,20,29,68,28,24,7,5,20,34,63,3,28,34,31,22,23,10,60,29,5,42,25,24,25,24,25,7,60,3,32,99,3,56,27,39,50,49,12,21,38,5,19,49,29,54,3,51,27,48,19,19,43,25,28,87,12,26,25,29,7,51,5,59,3,38,21,21,31,21,25,69,5,20,25,56,28,28,24,7,5,48,63,28,24,7,5,23,57,5,20,54,59,3,51,39,27,62,59,3,23,16,15,16,15,16,6,40,29,39,34,30,28,33,17,14,24,38,21,19,19,12,21,19,20,5,28,35,27,31,33,36,49,43,61,22,46,30,9,7,50,43,61,22,26,9,7,48,24,36,41,9,26,25,48,11,93,16,93,9,52,36,41,9,23,46,9,92,14,26,62,45,59,36,24,11,9,169,37,25,55,16,51,9,7,37,64,82,7,5,26,22,34,5,67,34,15,3,105,23,96,27,27,84,35,80,9,23,59,9,20,7,25,80,7,34,39,7,21,56,7,43,63,12,51,29,41,23,27,45,27,36,41,9,23,46,9,89,47,49,9,81,79,9,14,47,28,27,26,9,53,33,7,31,57,5,3,41,55,80,30,141,5,32,100,5,57,58,5,3,29,77,24,5,3,50,18,80,62,26,47,33,58,63,5,16,3,38,44,31,66,25,71,5,58,3,25,34,20,48,57,3,24,34,20,19,60,44,31,22,5,19,56,3,37,20,25,30,34,32,42,43,29,58,7,42,25,24,21,65,9,7,55,12,44,5,21,29,41,54,3,44,50,21,26,31,54,3,44,20,21,25,52,24,28,24,7,5,48,58,28,24,7,5,23,52,5,12,13,11,11,6,3,49,22,17,58,18,21,62,19,60,19,60,20,61,20,61,20,61,14,41,55,5,3,26,41,34,12,13,30,64,30,13,41,29,28,28,28,28,11,13,41,29,27,28,28,29,11,13,46,41,62,20,14,9,40,73,26,51,35,31,32,26,26,49,65,9,14,9,40,22,51,71,50,59,20,35,13,11,30,50,40,66,119,30,26,20,27,13,11,21,100,18,53,11,35,31,32,26,26,49,37,65,9,15,82,14,14,36,20,69,14,39,22,32,99,11,32,99,11,89,9,26,15,15,82,15,82,14,20,59,14,20,66,14,20,59,14,20,61,14,42,14,46,56,22,53,56,39,49,11,88,9,5,22,3,26,41,43,42,77,46,36,72,21,39,32,20,60,14,31,46,23,40,35,68,16,60,9,7,5,16,3,25,34,23,55,61,12,41,5,3,40,45,57,53,69,23,23,45,33,61,5,17,3,31,34,17,59,24,26,65,5,96,3,24,34,17,50,24,26,56,5,89,3,19,40,29,43,34,16,3,42,62,43,42,55,12,34,5,3,29,34,58,51,3,62,105,25,60,35,5,17,3,29,57,72,27,3,23,24,25,34,37,31,14,32,7,18,51,5,20,3,66,30,103,13,5,51,3,60,25,40,94,101,5,66,3,29,54,41,55,38,20,45,7,40,36,18,49,5,49,72,29,5,16,3,52,37,36,121,45,9,54,40,47,42,47,44,55,9,7,5,66,3,34,11,10,19,67,37,5,48,3,30,11,10,19,67,36,5,44,3,34,33,36,18,49,5,48,3,57,37,44,46,77,61,20,7,5,20,37,51,44,9,17,12,45,68,39,47,31,27,41,50,43,9,10,21,16,50,68,7,39,73,7,41,27,39,41,10,21,16,50,7,5,51,45,20,21,33,116,58,3,35,64,54,35,47,12,17,12,6,3,50,25,22,32,31,91,54,43,16,28,9,30,57,36,35,7,5,26,63,26,5,97,3,31,20,122,28,41,22,3,49,15,92,66,23,49,12,23,5,18,3,34,57,23,30,34,5,25,54,40,67,65,5,19,3,33,250,13,5,40,3,32,33,31,47,18,26,59,36,20,14,56,7,40,31,47,18,62,40,31,47,18,54,40,32,47,18,60,12,48,5,3,23,47,65,31,18,18,18,5,17,3,44,11,14,19,72,53,32,5,24,3,47,54,25,69,5,3,46,11,14,19,33,66,15,7,28,5,53,25,126,61,32,74,7,5,3,20,59,3,18,35,33,55,70,32,9,5,36,3,26,59,39,26,67,46,50,24,29,14,29,7,88,26,26,12,35,5,3,33,45,59,12,49,5,3,37,100,54,5,36,3,55,47,31,73,53,7,5,62,3,51,47,22,31,174,70,7,5,20,3,69,89,61,43,5,16,3,47,94,3,28,25,59,5,42,3,35,25,59,5,49,3,19,51,3,21,53,3,34,67,3,94,26,49,5,27,25,71,5,101,41,35,61,68,7,92,41,61,68,7,5,3,67,26,49,5,27,25,71,5,74,3,25,32,44,76,5,33,18,47,10,38,59,29,75,16,37,9,67,29,5,3,35,42,61,28,30,61,64,43,64,7,5,3,41,45,3,103,24,47,5,25,23,40,64,45,5,125,25,63,5,18,3,33,23,40,56,7,36,64,7,28,5,25,60,41,64,5,52,55,5,33,17,3,37,57,115,72,5,16,3,31,38,53,89,5,3,52,120,70,3,36,60,33,33,42,37,5,46,3,48,55,19,37,15,7,59,12,64,81,5,3,103,42,33,43,39,35,48,37,7,5,26,69,50,87,38,49,52,14,40,36,49,7,12,86,56,49,14,31,69,40,13,9,40,36,7,35,49,14,25,62,7,5,63,54,76,5,54,84,5,69,84,5,68,3,22,30,14,42,14,40,5,3,44,27,61,69,5,51,3,26,33,25,62,37,5,3,49,25,66,43,55,60,5,63,3,27,59,3,57,13,21,12,71,33,100,38,13,15,21,57,79,22,7,5,63,23,42,25,44,34,66,93,85,66,24,11,116,73,61,45,62,31,16,33,108,45,33,99,11,28,9,37,7,48,35,24,7,28,37,31,7,65,42,85,5,71,3,20,25,42,68,45,42,96,62,57,47,24,9,37,54,107,5,34,3,28,60,3,44,92,27,12,53,5,3,81,111,13,5,50,54,68,7,5,81,3,50,140,3,44,111,18,46,25,62,53,87,39,111,60,96,59,23,37,26,7,24,38,27,7,40,5,58,3,59,55,48,20,35,20,7,18,46,25,70,22,61,27,51,71,46,25,42,81,24,64,49,32,9,83,9,24,56,27,7,5,73,3,24,31,21,52,92,5,31,3,47,44,42,39,61,3,31,59,66,40,26,23,13,5,38,3,28,59,39,26,13,5,35,3,32,56,36,79,5,20,3,22,67,38,76,7,38,49,24,38,41,7,13,5,76,3,21,11,9,19,38,86,34,5,71,75,35,43,5,117,44,5,35,39,5,17,3,30,57,21,77,5,3,49,13,14,6,65,17,14,7,3,59,265,3,57,72,3,69,84,3,24,41,60,30,15,9,69,28,20,29,37,28,14,11,18,28,25,12,9,15,9,68,28,20,29,37,28,14,11,18,28,25,12,9,14,14,9,67,28,20,30,37,28,14,11,18,28,25,12,9,14,16,26,23,10,5,3,23,36,42,61,19,9,6,12,9,10,6,3,65,11,18,16,32,13,5,40,63,5,3,19,13,16,6,32,21,25,24,24,26,6,34,28,25,33,14,7,42,13,11,12,35,33,30,17,7,38,58,21,72,18,11,7,38,60,21,18,11,7,32,23,17,21,18,8,25,26,23,11,81,41,90,18,11,22,11,80,41,88,18,11,22,11,80,41,88,18,11,23,11,80,11,20,11,35,29,81,22,28,80,22,22,98,13,11,7,27,24,7,5,12,14,23,6,3,63,12,6,42,30,47,32,69,48,73,18,11,7,30,12,46,73,18,11,7,32,5,3,29,12,6,46,46,96,16,9,5,11,11,19,16,96,75,17,30,9,5,17,3,26,29,33,57,14,7,19,11,14,23,30,15,18,7,47,27,21,33,46,23,56,20,33,45,23,55,20,33,100,18,11,23,55,20,48,23,55,14,9,31,30,27,59,12,36,57,55,55,63,67,27,45,104,22,15,27,59,72,60,79,25,42,17,13,50,27,60,72,60,78,25,42,17,13,49,27,59,18,74,22,15,27,11,9,5,3,34,38,17,56,52,3,25,39,45,56,50,5,17,3,39,71,3,2,18,18,17,11,17,10,10,17,18,17,18,19,16,19,17,16,17,17,18,16,16,16,17,16,19,17,17,18,18,17,19,18,17,17,18,19,19,19,19,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,18,19,19,19,18,17,19,18,18,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,19,19,19,19,18,17,19,18,17,18,18,19,19,17,17,17,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,18,16,20,16,16,16,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,19,18,16,20,16,16,16,18,21,18,16,17,17,19,17,16,16,16,18,18,18,18,18,18,18,18,19,19,17,19,19,18,18,19,19,18,18,17,18,19,17,18,20,17,17,17,17,17,18,17,17,17,17,17,19,17,18,18,18,17,18,15,17,16,18,19,18,17,18,16,16,15,16,16,16,19,16,17,18,15,18,15,15,16,16,17,17,17,18,19,17,17,18,18,19,19,17,17,16,19,18,19,17,2,39,83,30,18,74,78,139,21,15,14,103,88,55,130,3,29,103,1,38,40,23,3,44,58,3,46,91,3,62,1,65,18,17,36,14,42,80,7,55,19,16,17,52,61,31,36,20,41,13,19,11,62,37,17,16,62,38,38,16,16,17,16,30,64,45,40,18,29,11,7,5,3,33,53,12,21,68,23,42,12,36,5,25,42,15,3,24,17,38,14,42,73,7,55,30,22,60,36,36,33,60,42,36,14,25,7,5,58,31,3,19,38,53,23,21,56,19,25,7,70,77,25,47,7,12,20,23,116,25,7,17,64,38,25,21,24,9,7,5,30,15,3,17,11,33,8,51,48,67,3,24,34,26,35,49,50,12,24,5,16,50,3,28,41,43,35,44,26,42,54,3,25,41,45,44,18,5,26,49,28,51,61,5,16,3,28,13,30,13,32,37,20,68,60,55,9,20,15,15,36,14,77,5,3,29,60,78,3,29,16,45,34,41,19,51,3,54,24,55,12,48,35,5,37,41,19,59,3,23,34,24,35,18,22,53,36,43,21,57,5,46,69,49,3,38,44,24,57,5,43,54,3,41,26,49,48,5,33,36,21,54,3,38,44,24,57,5,43,21,54,3,31,44,24,67,30,38,26,34,19,43,24,31,71,29,13,60,18,19,74,18,17,13,44,43,26,35,62,22,84,15,20,13,18,30,9,7,97,72,77,72,66,11,78,100,74,68,13,9,7,5,37,44,44,12,43,43,5,29,25,84,5,115,3,21,41,16,44,3,26,11,13,19,45,3,38,26,36,80,29,36,12,54,5,3,15,41,53,3,26,38,35,26,13,5,63,36,27,15,7,24,25,30,15,7,69,33,15,7,5,107,23,28,13,5,33,3,27,11,14,10,19,42,42,44,30,33,30,46,76,22,85,14,38,45,7,12,71,5,3,2,37,24,19,29,3,1,51,24,19,27,3,22,38,38,3,16,24,40,5,23,3,10,31,24,30,5,17,3,32,41,47,18,5,34,41,56,7,5,17,3,39,29,39,57,30,11,7,64,13,5,38,44,29,43,41,13,5,46,26,31,70,45,7,22,5,28,22,5,28,22,5,28,22,5,44,3,49,41,25,30,46,40,36,7,18,5,46,38,35,14,21,7,5,44,18,5,63,3,24,11,10,11,37,39,40,39,43,46,15,7,5,31,3,1,47,105,2,36,37,34,34,117,58,18,50,109,114,66,9,14,64,7,5,24,24,27,26,31,25,14,30,36,94,27,42,36,69,126,78,11,9,14,28,9,17,16,17,19,40,86,11,42,16,9,27,9,159,9,29,35,130,14,34,36,70,9,40,29,44,14,37,48,14,5,3,57,39,125,47,32,32,45,36,20,51,7,12,37,5,3,55,36,36,30,25,41,33,33,46,38,14,38,7,39,22,52,38,65,9,7,5,3,33,24,24,27,26,31,25,20,30,9,50,53,124,13,9,28,45,27,48,29,94,34,37,37,50,30,38,26,14,21,5,3,51,20,3,55,57,34,70,49,7,5,3,36,34,16,81,50,3,22,34,16,44,48,3,22,30,13,9,40,22,58,55,9,13,45,5,34,3,49,33,20,21,30,18,22,14,24,7,41,24,35,14,34,43,50,51,9,24,55,29,16,9,14,30,61,80,9,32,49,9,67,7,5,16,3,34,16,43,34,48,3,26,11,11,14,19,22,61,5,34,23,58,65,41,12,35,5,24,77,3,46,42,46,40,5,61,28,35,5,15,3,33,17,3,37,25,80,68,35,44,21,48,54,3,57,19,31,22,25,26,28,23,37,28,26,26,27,28,5,17,3,42,58,3,132,26,33,48,83,68,39,74,55,69,20,13,9,7,27,69,7,13,5,32,67,13,12,21,25,37,51,16,33,9,7,13,5,211,34,29,92,47,16,9,13,5,39,39,21,69,12,50,5,80,10,17,32,29,32,20,115,9,7,21,109,5,3,63,142,31,52,32,11,14,59,30,11,7,5,50,49,5,30,54,5,3,50,75,3,45,24,37,66,14,24,30,14,29,30,32,14,62,5,3,30,26,19,5,125,16,3,1,21,18,46,3,11,1,20,11,35,3,1,45,37,14,94,36,16,95,82,100,79,77,79,179,94,21,8,51,87,96,36,12,47,23,12,45,29,9,43,60,62,100,73,94,27,13,85,85,36,12,82,83,88,81,93,33,12,65,36,12,68,45,12,106,27,20,92,214,85,86,98,127,86,134,102,85,36,12,82,114,139,125,96,85,92,45,21,123,81,197,145,125,142,142,103,101,69,79,87,104,39,8,104,3,37,18,15,28,19,32,18,31,17,30,18,31,18,31,18,31,18,31,21,34,19,32,12,23,3,1,39,85,1,44,49,1,79,24,19,67,38,118,60,7,66,34,41,69,7,72,47,109,60,7,3,21,34,3,20,46,3,30,129,3,47,16,39,19,5,43,3,34,26,18,45,5,60,3,68,98,23,5,38,46,76,25,7,74,24,7,5,21,3,20,21,24,34,56,16,60,51,57,43,11,7,6,57,87,57,33,11,7,6,14,13,16,21,156,27,41,37,73,20,13,16,65,63,65,44,9,53,33,60,20,13,9,34,54,14,54,60,20,13,16,65,65,67,67,66,65,9,34,7,82,45,18,11,7,5,3,28,19,25,25,29,35,29,31,29,39,30,5,3,35,22,44,34,5,18,3,65,99,3,86,22,30,14,42,14,7,28,37,28,25,7,27,25,60,17,7,42,14,7,26,24,7,23,5,30,51,5,18,3,90,26,20,23,14,24,7,5,86,18,21,12,22,5,18,3,23,34,20,20,27,78,5,42,42,53,19,12,26,5,20,23,48,5,25,56,5,49,3,48,58,26,48,25,60,56,5,18,3,26,34,45,58,56,5,52,3,33,16,43,29,60,25,52,3,25,34,16,47,3,22,34,20,25,47,12,47,5,58,56,5,48,3,40,34,25,48,50,47,52,3,44,25,56,5,3,41,34,44,18,12,24,5,33,15,6,161,35,53,5,43,70,5,63,3,43,51,35,43,88,20,65,30,88,41,88,5,3,36,51,33,13,12,18,75,73,14,11,7,5,16,3,32,52,22,5,3,38,35,38,39,3,37,16,45,18,28,5,17,3,34,96,13,5,19,38,53,30,19,27,49,41,38,53,3,52,43,25,43,21,62,7,29,42,88,7,39,40,37,45,34,43,70,55,94,11,9,41,45,70,16,54,49,94,11,80,98,11,54,94,11,9,36,86,9,14,31,7,58,12,31,45,51,47,40,62,5,3,23,34,43,77,5,25,34,18,45,84,14,52,66,7,5,27,37,106,13,52,14,17,5,34,150,32,36,5,72,3,24,34,51,50,3,30,19,87,19,19,3,27,16,23,36,5,33,18,5,25,19,5,16,33,19,5,16,26,3,23,34,19,25,39,18,33,41,27,5,19,5,45,59,64,77,5,71,19,25,39,18,22,30,27,5,48,21,19,49,3,22,34,125,36,46,13,12,22,146,69,7,136,7,48,3,29,11,14,19,30,16,14,17,13,63,65,29,21,23,41,22,32,36,22,43,40,53,44,23,76,24,24,34,14,24,27,24,7,12,32,30,29,5,18,22,18,50,40,34,39,27,38,82,9,14,49,40,59,33,53,7,64,26,58,45,65,5,15,50,37,53,5,16,3,30,34,20,45,20,56,3,52,34,39,33,32,18,5,80,39,3,28,34,30,15,15,15,14,14,45,14,14,26,5,50,3,32,34,46,50,3,31,53,45,3,40,51,66,56,12,25,5,3,25,30,15,15,15,14,14,45,14,39,40,45,65,30,11,48,56,9,14,14,57,14,39,14,40,13,126,13,39,14,47,14,14,49,14,9,17,16,25,70,131,76,44,26,53,13,47,11,9,5,22,3,30,42,58,26,48,32,23,52,14,48,31,44,23,60,7,5,16,3,25,34,38,16,29,61,34,50,5,51,3,42,39,25,25,15,14,54,5,3,22,34,31,43,57,91,75,48,3,35,23,92,76,26,7,5,3,33,93,185,3,72,34,50,21,8,41,33,52,22,5,23,39,3,37,118,3,30,115,3,29,25,18,5,100,3,26,63,18,18,5,24,13,14,21,47,11,38,52,25,21,7,5,24,18,13,14,21,47,11,41,52,26,21,7,5,17,3,42,16,43,18,5,38,81,20,7,27,20,29,22,9,7,5,17,3,53,32,33,31,36,85,38,74,54,49,30,37,71,16,67,43,9,45,54,7,121,35,23,54,9,52,31,35,68,54,7,53,49,33,29,66,52,7,3,45,25,59,5,3,30,25,42,5,3,20,39,3,32,38,66,18,16,5,3,33,34,19,5,47,16,65,19,5,22,81,31,9,5,16,3,64,25,36,44,7,50,3,17,30,50,104,18,5,44,26,104,20,84,20,85,54,3,36,66,3,31,41,69,5,25,72,55,78,5,43,3,26,73,70,5,34,47,18,79,7,20,45,52,3,32,49,84,36,49,27,58,7,68,7,32,70,13,9,5,25,3,54,50,31,48,45,39,41,12,21,69,5,89,23,59,5,34,72,57,59,3,37,37,37,47,86,22,67,38,20,59,7,32,7,21,59,3,21,42,41,9,18,15,38,5,3,16,40,29,9,18,15,36,5,3,43,94,56,9,18,15,90,5,3,40,94,57,9,18,15,90,5,3,29,28,40,5,3,32,32,25,32,7,3,25,32,18,32,7,3,23,34,104,23,57,5,49,3,49,44,48,31,37,60,19,95,19,54,3,24,34,24,19,74,22,50,3,61,37,18,42,5,23,37,60,24,12,28,30,44,28,24,5,56,3,49,33,27,25,39,33,27,59,12,24,5,24,28,30,44,28,24,12,23,5,56,3,74,38,63,40,20,58,93,69,5,43,21,62,3,33,69,3,28,118,3,36,34,31,20,27,24,5,44,20,34,62,3,18,37,20,23,15,3,25,58,47,52,23,3,17,37,23,51,20,5,23,3,27,34,13,5,36,13,33,21,19,5,42,26,16,30,66,16,30,52,17,52,25,13,17,68,16,16,71,32,80,11,26,52,24,25,13,17,11,67,27,15,38,11,16,45,79,11,7,7,3,33,83,3,54,24,21,9,59,28,39,11,29,9,20,28,32,34,27,30,28,24,47,28,32,61,9,14,14,75,5,3,53,20,22,105,67,9,14,20,47,32,70,58,33,66,11,9,14,23,85,34,64,9,14,18,85,56,9,14,5,3,31,15,53,18,18,5,36,3,49,32,72,45,47,46,82,38,71,22,18,7,66,21,55,3,38,40,39,3,26,34,64,22,97,8,35,52,73,26,5,20,65,3,26,54,3,30,50,44,3,46,41,24,27,82,17,49,39,39,66,65,5,42,20,40,5,61,48,44,30,35,7,58,43,43,74,66,7,25,56,5,28,35,5,15,3,27,123,3,35,38,90,54,7,5,3,62,69,41,3,60,25,70,5,168,68,49,5,78,66,25,78,7,5,41,66,3,37,32,42,12,46,5,3,37,27,75,75,7,7,3,42,46,20,3,69,89,42,53,5,16,3,50,58,44,18,59,42,71,5,31,60,20,26,20,7,56,18,5,43,31,52,58,82,29,32,11,9,70,35,48,58,17,9,47,84,48,24,9,39,50,29,65,58,46,42,43,11,76,9,42,142,17,9,48,31,44,66,9,33,50,7,19,131,102,9,22,7,5,64,3,24,22,31,11,12,13,130,50,38,5,3,44,20,150,50,29,49,20,29,28,71,30,15,11,45,9,34,9,86,26,59,5,58,3,63,39,72,5,3,31,38,53,87,5,3,28,36,60,33,42,60,5,46,3,48,55,19,60,12,81,5,3,21,26,32,37,5,19,80,32,55,40,77,44,81,14,87,7,12,43,5,141,78,5,22,3,33,25,18,36,40,73,85,14,46,7,97,30,26,50,23,36,59,40,24,33,39,23,67,12,49,5,3,21,66,3,34,33,35,18,26,46,5,26,72,32,5,48,3,66,11,22,19,105,46,16,9,10,36,26,52,73,83,102,7,5,23,3,44,63,36,22,48,19,9,5,33,59,5,33,72,32,5,58,3,25,68,3,41,39,41,49,7,32,7,3,29,70,3,46,114,27,34,41,42,69,15,52,43,20,20,57,87,9,55,14,85,7,6,25,64,12,41,5,3,68,54,14,31,28,63,7,33,69,40,11,7,27,62,7,28,63,7,13,5,57,69,5,26,33,59,7,5,75,3,46,34,47,50,64,5,49,63,5,3,52,114,74,3,34,49,48,3,57,64,73,5,79,23,25,76,7,18,5,52,23,3,34,57,23,30,34,5,25,54,37,65,67,5,16,3,32,65,78,5,41,46,88,88,5,60,113,34,118,31,5,20,53,33,5,23,3,60,65,13,5,82,90,61,3,38,25,25,29,32,29,7,5,49,41,3,28,44,100,80,5,42,13,11,15,80,170,9,5,42,3,35,24,59,5,29,65,36,9,5,44,49,3,36,44,24,58,5,50,3,94,84,42,72,5,11,22,10,15,56,52,12,9,5,63,101,3,67,84,63,74,3,48,48,87,13,5,55,3,25,32,64,73,5,34,65,5,3,103,84,61,117,3,44,84,61,51,3,26,33,89,27,5,49,15,36,37,5,3,49,25,53,5,63,3,57,50,14,12,17,71,33,100,38,13,15,21,57,79,22,7,5,67,73,5,67,23,42,39,77,79,119,16,7,104,62,7,43,18,14,41,76,24,5,15,37,105,48,5,46,33,22,5,21,35,76,24,5,59,38,27,5,137,3,38,20,201,56,5,3,50,51,41,5,64,3,20,25,45,73,66,26,9,33,27,56,38,7,5,34,3,33,23,28,5,49,42,33,17,3,33,24,34,61,33,20,14,51,5,3,37,24,37,62,14,28,35,33,29,20,110,16,67,9,50,14,34,66,58,9,14,40,5,3,52,35,28,35,33,29,37,50,14,14,40,5,3,45,24,28,35,29,33,59,14,14,56,5,3,57,19,34,20,33,27,33,39,28,28,35,29,86,14,75,5,3,22,33,40,5,36,3,38,43,68,27,62,44,20,7,32,5,52,3,30,94,18,19,5,44,3,19,51,3,21,71,3,37,57,115,74,5,16,3,26,28,24,29,15,7,24,29,15,7,5,33,3,18,11,10,19,22,26,26,29,26,26,5,3,15,11,10,19,22,26,27,16,5,16,3,55,47,31,75,53,7,5,62,3,29,57,72,27,3,28,25,65,5,42,3,27,59,3,29,69,3,41,43,99,61,5,55,3,45,70,61,33,71,55,3,27,48,49,15,34,35,5,17,3,26,11,44,23,19,39,30,9,18,15,56,36,5,3,45,58,49,9,61,15,54,5,3,48,25,27,86,40,42,29,76,54,7,12,32,5,3,96,118,26,85,20,15,13,19,70,172,11,7,5,18,3,30,44,25,3,33,55,3,11,45,41,5,25,3,19,45,41,5,33,3,73,39,75,54,5,30,87,3,103,47,83,59,5,35,138,3,80,56,57,37,18,33,33,35,32,45,34,48,58,34,29,87,36,16,31,36,9,63,34,85,14,32,27,7,61,30,21,46,37,80,9,14,48,7,5,55,118,5,33,35,59,56,54,92,5,30,62,5,19,79,5,3,2,44,59,9,13,12,17,130,17,3,62,1,61,24,9,8,17,90,17,3,15,29,13,13,21,68,20,7,5,10,64,18,5,3,77,16,3,74,16,3,42,16,3,15,1,39,15,109,3,85,1,47,46,11,15,14,19,57,18,5,3,15,1,56,52,70,17,3,62,1,56,51,53,3,83,34,26,36,18,27,46,27,23,56,5,3,41,27,57,64,5,44,23,3,26,74,28,12,35,5,3,38,91,3,28,81,3,63,29,72,5,3,22,72,3,47,87,3,29,84,36,12,38,5,3,38,51,18,5,39,33,18,5,17,3,38,64,45,3,40,20,105,56,5,25,24,62,18,74,55,5,21,33,37,64,3,71,128,3,30,83,3,45,70,16,40,60,22,63,30,46,23,69,43,14,85,7,12,55,5,32,105,39,3,33,60,65,23,52,28,26,77,62,5,43,39,37,78,48,3,30,25,41,52,93,22,9,7,5,44,3,66,20,72,18,5,80,3,21,11,16,13,50,88,5,28,33,3,21,60,53,25,52,73,23,56,5,56,34,79,23,69,64,5,30,43,21,54,3,23,79,3,19,84,78,5,3,2,75,22,25,54,36,18,47,48,61,50,29,28,9,7,43,5,3,38,79,3,2,66,49,38,37,46,89,5,87,88,83,5,87,88,69,5,3,63,67,3,72,76,3,43,24,65,49,76,116,5,142,30,43,84,7,42,83,7,71,47,69,151,7,52,196,7,59,178,5,3,43,5,91,113,7,93,63,186,7,5,3,43,51,93,5,3,149,5,51,5,3,41,67,29,7,62,66,163,9,7,5,3,81,124,43,16,3,115,187,3,1,22,9,6,7,13,14,14,2,51,33,10,25,30,18,19,17,37,38,41,39,35,34,16,21,18,18,35,42,25,24,16,4,1,27,41,21,19,3,53,71,3,43,52,3,32,61,47,68,47,5,67,34,102,5,3,17,1,43,61,104,13,5,25,66,31,21,46,15,7,26,34,60,63,11,16,49,9,7,27,5,3,48,110,3,19,30,21,40,27,24,5,37,34,36,30,32,5,16,3,52,21,85,5,80,3,44,41,60,25,46,32,28,74,7,46,57,5,16,3,67,96,3,64,93,3,64,25,165,3,57,41,33,36,37,29,59,9,20,7,5,28,30,34,12,51,33,5,11,10,19,49,53,5,63,25,55,5,45,46,40,31,27,38,25,42,115,52,9,123,56,9,113,62,51,9,14,25,7,18,43,74,18,37,60,5,16,3,46,41,57,56,60,18,5,70,3,57,23,46,23,55,22,47,60,5,16,3,49,97,3,37,41,57,68,60,18,5,48,3,44,35,48,95,54,31,11,7,60,5,31,75,45,27,24,48,54,24,11,64,9,52,25,41,47,35,23,45,9,20,62,29,14,66,91,11,9,57,115,39,87,82,9,69,7,5,16,3,34,41,17,14,71,22,55,46,15,23,55,70,80,15,107,15,24,62,56,15,9,14,55,5,3,38,41,118,3,23,20,11,14,19,41,83,100,60,23,9,5,56,51,5,16,3,36,25,75,5,3,50,41,42,49,18,45,59,18,5,34,34,41,39,25,27,46,7,38,18,55,60,42,34,40,48,56,54,9,7,20,24,48,9,56,7,5,69,18,13,12,21,138,51,69,41,7,5,16,3,50,17,40,111,18,5,41,61,76,75,46,39,26,27,18,77,5,16,3,44,41,57,57,60,18,5,48,3,44,19,33,55,17,6,8,65,36,26,16,3,50,11,10,19,34,60,39,71,5,25,22,20,70,46,28,22,9,7,50,18,5,37,83,12,35,49,75,14,26,20,7,5,3,58,44,23,29,19,45,21,33,34,55,7,76,46,12,49,5,36,31,63,12,55,5,3,45,44,23,16,41,22,92,3,68,72,35,45,16,44,23,11,22,25,14,26,55,51,5,30,31,5,19,61,12,111,5,76,71,24,58,47,34,102,12,28,62,36,7,47,5,66,24,3,52,67,3,56,44,20,42,36,62,5,61,3,30,241,3,40,40,69,49,14,43,45,61,11,9,7,5,89,3,92,20,21,80,50,30,18,22,14,24,32,29,59,11,22,16,9,7,86,5,74,16,3,27,56,3,49,20,49,20,134,29,49,5,39,59,5,16,3,21,41,70,3,38,13,26,11,10,19,19,14,33,14,32,20,29,52,9,29,53,46,18,51,11,16,75,49,9,14,32,20,55,14,9,55,9,14,14,9,28,59,9,15,58,15,57,15,57,14,39,14,46,14,47,14,9,78,69,9,13,13,9,81,9,13,9,74,9,13,13,9,82,9,13,9,76,9,14,50,14,44,14,94,14,42,14,14,41,14,9,34,22,29,62,51,59,18,61,11,9,15,9,71,44,13,41,9,14,9,65,9,14,9,65,9,14,14,9,50,9,14,14,14,9,84,29,58,11,28,16,9,14,9,76,69,64,18,30,11,16,9,14,27,60,9,38,81,48,11,78,53,44,82,19,18,27,30,57,26,81,49,52,83,22,26,15,37,57,66,13,11,75,24,84,11,20,16,28,9,5,3,70,78,23,39,41,23,23,80,52,12,24,5,3,37,34,41,38,16,78,3,65,82,101,60,113,7,36,45,12,69,40,9,5,3,70,27,18,9,54,49,14,9,19,32,14,70,5,3,38,71,44,26,39,77,5,20,57,3,26,39,18,46,5,25,16,40,27,18,30,36,28,12,36,5,34,49,3,16,34,16,98,47,81,47,5,63,48,5,42,3,22,34,88,34,16,46,48,3,33,34,16,52,81,18,28,42,51,26,7,56,5,36,3,47,21,47,47,61,65,26,43,9,5,49,3,33,75,16,33,27,55,7,36,65,46,39,86,50,99,33,11,7,18,49,40,5,52,3,41,43,101,23,16,39,3,29,34,54,3,29,53,3,30,54,3,29,53,3,30,54,3,29,34,101,33,29,16,50,3,30,34,23,16,51,3,22,34,16,48,3,50,41,12,16,52,72,80,45,50,46,24,55,21,23,30,29,18,22,14,127,29,54,16,9,7,27,55,45,88,44,16,9,14,94,7,5,49,20,66,74,47,100,58,47,34,60,23,5,32,27,50,5,70,56,58,46,30,44,33,49,46,12,24,5,47,3,41,55,55,62,95,24,5,55,44,71,3,28,38,3,20,23,18,5,3,34,16,3,25,34,16,25,76,18,68,113,57,7,22,5,31,3,18,30,23,42,34,28,12,26,5,50,3,24,36,42,25,87,60,5,3,34,11,12,15,10,11,19,32,79,25,22,134,7,5,34,39,36,18,72,63,6,23,16,66,109,24,3,27,34,53,28,29,26,59,38,64,5,37,25,52,3,31,34,3,68,19,42,5,80,50,41,21,34,25,16,32,18,22,14,24,32,49,16,9,7,15,22,43,14,65,71,7,86,55,7,7,29,49,9,7,33,5,16,74,34,20,29,26,32,5,39,3,37,75,79,3,34,129,3,48,24,25,41,77,7,30,47,7,5,34,24,27,17,25,47,32,5,28,35,22,5,24,30,37,5,35,47,47,54,78,13,11,15,31,65,23,52,35,37,7,51,26,52,28,29,29,76,25,13,22,9,37,7,5,112,3,45,41,3,40,25,3,35,16,70,61,39,96,5,125,56,5,3,72,21,100,49,26,5,51,39,27,25,88,5,3,71,27,23,127,53,5,59,77,22,81,34,55,42,64,72,11,16,77,9,81,14,47,7,28,53,5,3,103,167,33,16,3,48,22,27,48,21,12,13,13,13,21,14,45,41,14,23,19,50,18,19,49,18,19,49,18,19,13,56,48,65,68,17,22,73,15,44,20,13,18,31,52,20,13,30,9,7,21,25,30,7,5,3,31,19,27,25,3,104,37,33,85,65,50,75,26,22,24,3,69,18,42,5,80,50,34,16,83,74,82,3,65,28,46,49,17,5,32,37,72,17,47,70,5,46,39,26,22,66,60,3,62,59,25,3,60,50,39,3,62,59,53,23,42,60,12,42,42,29,62,74,63,50,155,9,66,134,43,63,9,9,28,36,5,32,3,27,38,3,29,56,59,5,16,3,81,55,30,30,6,38,82,5,3,71,20,21,30,18,22,14,24,32,29,59,11,22,16,9,7,73,5,16,3,72,12,25,24,70,25,11,7,17,32,53,91,32,46,30,78,7,36,18,57,12,83,5,15,3,28,34,51,45,3,32,21,35,47,3,32,13,11,15,10,19,43,30,12,24,5,67,18,27,31,7,12,68,5,16,16,3,63,27,13,5,35,13,5,43,54,21,9,13,5,123,44,59,26,9,13,34,36,60,15,7,34,36,60,15,7,37,73,15,7,69,38,55,54,15,7,5,3,26,119,51,41,5,26,3,24,44,102,23,49,5,76,36,48,14,38,7,5,32,55,5,52,3,22,50,11,10,19,199,3,16,34,88,16,27,24,40,32,32,16,17,15,16,15,15,16,16,33,16,45,7,5,31,29,52,3,25,16,49,24,23,28,54,46,14,43,52,51,9,7,5,20,53,3,52,45,23,10,47,72,7,5,3,54,44,50,34,63,12,50,56,38,66,5,3,33,30,30,81,24,20,14,21,5,3,48,25,72,5,56,55,5,3,37,59,31,34,25,6,9,24,15,55,5,3,48,45,23,10,61,33,36,27,8,11,26,17,57,7,12,24,5,3,44,60,32,9,24,15,56,5,3,24,48,38,25,38,11,26,17,30,7,5,22,3,27,48,39,27,39,11,26,17,30,7,5,22,3,28,46,3,45,65,3,43,103,3,33,41,51,80,49,82,74,15,3,27,38,34,16,25,31,5,56,16,53,30,9,58,15,21,5,53,3,42,1,19,11,4,17,11,4,41,53,56,43,28,11,10,14,35,7,27,17,16,18,18,15,20,39,74,41,39,23,25,28,32,30,25,40,25,30,21,33,27,14,14,19,9,36,17,16,18,18,15,20,41,79,25,60,36,41,25,27,32,34,37,15,18,36,40,25,27,32,34,37,15,11,81,28,41,80,71,34,41,25,40,23,46,29,15,18,41,80,71,34,41,26,40,23,46,29,15,11,53,39,33,32,36,38,41,24,17,19,9,7,42,5,3,16,1,48,32,46,34,30,81,5,41,3,74,36,59,50,24,89,80,56,21,13,9,7,75,5,24,22,60,12,119,5,27,3,25,27,33,43,32,45,51,127,58,48,53,72,47,21,3,31,26,18,5,34,34,16,57,3,11,34,19,5,42,3,38,32,48,55,79,55,23,9,7,18,27,18,12,19,5,3,30,35,3,29,39,45,95,3,48,45,45,74,3,22,11,11,17,25,39,19,74,54,18,5,3,22,43,51,54,47,57,56,20,7,5,17,3,21,50,3,28,96,3,81,18,52,17,33,19,7,5,42,3,20,38,3,29,26,25,46,5,57,3,44,38,34,43,51,31,24,14,60,14,61,14,49,14,48,14,44,14,51,40,161,9,103,14,49,81,14,43,14,47,14,47,14,46,14,44,14,65,45,65,41,66,11,22,61,9,14,15,91,16,9,56,60,77,39,79,9,53,15,9,39,18,11,45,51,30,73,82,20,13,11,9,14,9,34,81,11,9,14,9,40,52,9,14,46,14,45,13,33,14,46,14,9,61,69,18,11,9,14,9,71,75,11,22,21,33,44,111,44,13,18,56,261,44,13,11,47,24,9,14,9,39,36,92,13,24,106,11,9,5,39,40,85,70,12,67,5,3,33,70,51,5,3,35,57,114,3,63,26,68,96,82,9,57,14,47,7,69,77,5,21,3,29,26,3,32,26,8,45,29,25,25,26,7,50,69,7,49,79,5,22,3,20,62,34,16,39,43,15,27,45,20,38,24,52,51,66,113,82,9,14,43,30,50,29,32,82,52,18,55,11,32,59,9,66,7,12,51,5,46,3,38,23,46,25,61,44,53,5,16,3,46,16,34,24,12,42,23,5,44,83,3,38,10,52,39,63,62,16,9,41,7,5,41,68,53,12,9,5,3,32,16,21,54,3,27,20,39,20,15,3,31,16,38,85,28,20,45,17,53,3,27,16,38,23,63,36,18,5,24,20,25,29,33,7,39,5,49,5,84,114,104,61,42,17,35,31,45,80,11,22,16,34,9,20,44,70,39,51,46,9,84,54,9,31,35,9,41,7,5,50,55,65,43,18,26,42,7,78,44,7,5,36,58,36,65,28,12,9,50,12,60,5,27,31,5,37,3,63,16,92,3,26,16,45,77,98,48,3,30,80,60,5,16,34,27,12,45,23,5,52,3,30,16,53,34,19,40,24,12,43,45,38,52,43,28,20,21,44,16,27,84,11,28,26,9,24,14,18,61,16,28,9,7,5,22,48,16,28,52,3,29,16,39,69,5,43,21,51,3,27,42,81,27,25,10,17,3,27,16,35,24,25,38,18,27,24,52,24,14,28,28,7,97,24,60,5,61,43,48,5,49,3,66,16,62,21,56,3,29,16,45,38,85,28,51,3,28,28,57,5,16,47,85,50,3,29,16,51,3,55,44,37,53,30,11,7,5,78,61,41,48,72,26,14,14,7,5,28,22,17,62,7,111,28,22,53,3,52,27,21,56,3,86,34,26,38,5,19,32,26,5,74,32,24,5,51,3,26,131,3,73,32,44,117,3,81,40,39,35,30,85,46,42,55,37,82,42,33,11,19,9,34,40,7,22,5,82,21,28,5,16,3,24,21,26,63,26,65,20,85,22,28,49,3,35,35,16,18,53,12,36,5,214,55,59,9,5,44,43,19,30,9,9,5,21,83,20,85,22,28,80,3,64,48,21,14,36,34,116,59,102,86,33,13,133,86,16,13,9,7,69,31,5,16,3,26,39,53,70,75,7,5,24,32,34,17,3,38,39,3,34,41,40,52,34,37,25,31,82,7,18,28,5,24,48,5,72,46,24,65,25,39,5,42,51,106,7,26,22,47,45,5,66,16,3,30,91,3,44,20,63,77,32,3,37,25,184,3,45,16,40,29,53,31,66,87,3,21,61,3,19,26,3,26,130,3,34,84,3,44,28,19,28,19,6,24,39,24,19,51,30,27,38,82,11,19,9,29,49,19,9,40,32,41,65,26,9,56,97,58,9,7,7,34,16,28,70,5,27,51,3,51,43,31,28,29,30,23,28,74,18,40,26,28,21,26,57,18,5,48,17,3,46,44,19,65,15,7,24,54,15,7,5,74,3,68,32,33,30,31,32,32,38,29,49,23,29,44,41,26,75,15,7,54,68,7,79,13,5,87,51,61,46,59,52,31,29,22,76,15,7,70,36,26,42,68,55,9,79,56,9,36,48,7,100,40,22,62,14,54,7,75,50,39,34,52,7,29,40,41,54,22,81,14,56,66,9,87,7,126,50,38,40,47,22,76,14,56,69,9,82,7,49,78,50,50,40,45,73,41,22,62,14,54,7,12,24,5,3,33,11,11,11,19,83,62,5,23,36,77,7,42,23,17,5,35,22,3,44,27,36,40,27,28,34,64,26,22,34,64,88,54,5,3,38,61,57,5,55,3,45,54,30,95,3,57,75,57,5,55,30,20,97,5,3,94,127,3,67,106,30,107,54,3,48,98,3,47,35,32,21,57,3,28,32,21,50,3,36,32,21,58,3,26,30,53,28,70,32,26,22,3,67,45,39,24,61,7,12,39,23,14,71,7,5,3,25,71,3,33,74,91,58,66,82,85,49,35,40,23,66,7,39,59,5,69,72,31,5,46,32,5,23,42,29,23,66,7,49,12,62,5,60,29,25,59,121,71,30,66,7,62,5,23,25,55,31,45,58,30,66,7,42,64,5,29,3,23,24,3,66,68,121,70,49,30,79,18,5,17,3,44,32,32,100,69,18,56,83,18,5,17,3,41,24,25,51,55,73,26,31,47,30,7,18,5,17,3,37,46,27,25,47,29,7,59,18,5,17,3,21,45,45,55,3,34,34,25,18,45,40,18,18,49,5,25,47,5,25,114,70,7,114,5,59,77,5,47,21,15,3,32,25,66,18,5,41,3,30,11,10,19,34,67,21,7,70,15,24,29,79,55,23,9,7,33,19,5,39,60,94,18,5,36,86,58,5,17,3,33,33,45,29,44,39,24,24,5,21,3,34,11,10,19,22,64,41,84,72,9,20,7,5,33,69,18,5,59,69,18,5,110,3,52,21,27,22,52,50,33,47,217,74,11,9,91,50,17,20,24,93,60,43,19,19,26,46,67,39,26,17,20,79,49,13,11,9,36,38,86,17,14,19,56,52,57,56,50,11,9,7,5,3,26,37,50,47,43,36,7,46,41,19,38,9,7,48,40,45,43,51,39,5,3,43,51,37,56,14,50,20,11,7,5,45,3,41,21,21,19,26,18,22,14,24,31,7,53,39,36,48,93,5,17,3,73,33,51,26,53,32,50,5,52,3,27,26,63,57,22,69,55,11,7,20,5,38,3,28,34,36,12,13,13,114,9,5,17,3,31,11,16,13,82,34,59,85,7,40,61,81,7,29,27,59,79,7,98,81,7,5,3,31,80,13,18,15,31,71,23,53,39,60,42,11,39,111,11,11,53,93,9,7,5,3,36,31,85,3,48,19,13,5,29,49,25,52,26,5,29,51,28,35,57,27,54,24,5,3,41,49,50,18,5,55,11,10,19,123,24,67,93,18,12,50,29,5,3,35,11,10,19,99,3,21,26,55,5,93,3,63,25,91,50,74,69,30,53,3,40,26,93,43,42,37,37,21,54,3,23,44,32,3,52,45,70,3,62,37,10,20,44,3,27,19,21,32,8,26,14,7,36,39,35,83,22,11,7,29,28,52,14,46,7,22,29,82,7,61,59,27,19,17,3,27,21,33,8,36,44,37,70,7,42,72,28,11,7,36,22,29,82,7,61,59,27,17,3,36,19,5,26,5,25,76,15,7,18,47,50,14,50,7,7,23,7,72,93,74,7,48,60,7,18,48,12,22,5,57,35,12,35,5,3,66,33,69,47,92,18,61,87,18,5,17,3,39,25,41,18,32,82,18,5,17,3,36,21,19,26,18,22,14,27,79,9,24,31,7,41,47,53,56,173,44,5,3,103,33,47,12,13,16,20,29,67,36,11,7,77,29,52,7,5,81,3,22,64,3,1,38,43,34,26,27,28,30,43,41,3,21,24,3,11,30,34,37,21,23,38,36,50,16,3,1,32,15,88,41,9,36,47,33,37,19,7,47,13,40,51,28,14,42,7,17,27,11,38,49,27,24,5,10,45,3,1,42,43,34,31,3,32,1,57,24,59,74,3,20,1,48,36,19,31,43,43,21,39,22,14,30,7,34,41,7,5,32,37,3,45,1,35,37,24,40,31,28,5,3,35,38,13,17,38,38,5,35,3,13,1,22,42,28,33,0],"data":{"version":3,"file":"index.js","sources":["file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/util/location.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parse-error/module-errors.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parse-error/to-node-description.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parse-error/standard-errors.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parse-error.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugins/estree.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/tokenizer/context.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/tokenizer/types.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/util/identifier.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/util/scope.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugins/flow/scope.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parser/base.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parser/comments.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/util/whitespace.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/tokenizer/state.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/babel-helper-string-parser/src/index.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/tokenizer/index.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/util/class-scope.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/util/expression-scope.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/util/production-parameter.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parser/util.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parser/node.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugins/flow/index.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugins/jsx/xhtml.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugins/jsx/index.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugins/typescript/scope.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parser/lval.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugins/typescript/index.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugins/placeholders.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugins/v8intrinsic.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/plugin-utils.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/options.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parser/expression.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parser/statement.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/parser/index.ts","file:///C:/Users/Admin/OneDrive/Escritorio/Nicolas-Sanetti-Coiffeur/node_modules/@babel/parser/src/index.ts"],"sourcesContent":["export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n","import type { ParseErrorTemplates } from \"../parse-error.ts\";\n\nconst code = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code,\n  },\n} satisfies ParseErrorTemplates;\n","const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\nconst toNodeDescription = (node: NodeWithDescription) =>\n  node.type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[`${node.prefix}`]\n    : NodeDescriptions[node.type];\n\nexport default toNodeDescription;\n","import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ParenthesizedExpression\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitUsingNotInAsyncContext:\n    \"'await using' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"await using\" | \"const\" | \"destructuring\" | \"using\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport:\n    \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeferImportRequiresNamespace:\n    'Only `import defer * as x from \"./module\"` is valid.',\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  DynamicImportPhaseRequiresImportExpressions: ({ phase }: { phase: string }) =>\n    `'import.${phase}(...)' can only be parsed when using the 'createImportExpressions' option.`,\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportAttributesUseAssert:\n    \"The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedImportAssert` parser plugin to suppress this error.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArity: `\\`import()\\` requires exactly one or two arguments.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding:\n    'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsOptionalChaining: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid optional chaining in the left-hand side of ${toNodeDescription(\n      ancestor,\n    )}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is disallowed as a lexically bound name.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  SourcePhaseImportRequiresDefault:\n    'Only `import source x from \"./module\"` is valid.',\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration:\n    \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationExport: \"Using declaration cannot be exported.\",\n  UsingDeclarationHasBindingPattern:\n    \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n} satisfies ParseErrorTemplates;\n","import type { ParseErrorTemplates } from \"../parse-error\";\n\nexport default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n} satisfies ParseErrorTemplates;\n","import type { ParseErrorTemplates } from \"../parse-error.ts\";\nimport toNodeDescription from \"./to-node-description.ts\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> =\n  T extends Set<infer M> ? M : unknown;\n\nexport type UnparenthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparenthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n} satisfies ParseErrorTemplates;\n","import { Position } from \"./util/location.ts\";\n\ntype SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\ntype ParseErrorCode =\n  | \"BABEL_PARSER_SYNTAX_ERROR\"\n  | \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (\n  loc: Position,\n  details: ErrorDetails,\n) => ParseError<ErrorDetails>;\n\ntype ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\ntype ParseErrorCredentials<ErrorDetails> = {\n  code: string;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nfunction defineHidden(obj: object, key: string, value: unknown) {\n  Object.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    value,\n  });\n}\n\nfunction toParseErrorConstructor<ErrorDetails extends object>({\n  toMessage,\n  code,\n  reasonCode,\n  syntaxPlugin,\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  const hasMissingPlugin =\n    reasonCode === \"MissingPlugin\" || reasonCode === \"MissingOneOfPlugins\";\n\n  if (!process.env.BABEL_8_BREAKING) {\n    const oldReasonCodes: Record<string, string> = {\n      AccessorCannotDeclareThisParameter: \"AccesorCannotDeclareThisParameter\",\n      AccessorCannotHaveTypeParameters: \"AccesorCannotHaveTypeParameters\",\n      ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n        \"ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference\",\n      SetAccessorCannotHaveOptionalParameter:\n        \"SetAccesorCannotHaveOptionalParameter\",\n      SetAccessorCannotHaveRestParameter: \"SetAccesorCannotHaveRestParameter\",\n      SetAccessorCannotHaveReturnType: \"SetAccesorCannotHaveReturnType\",\n    };\n    if (oldReasonCodes[reasonCode]) {\n      reasonCode = oldReasonCodes[reasonCode];\n    }\n  }\n\n  return function constructor(loc: Position, details: ErrorDetails) {\n    const error: ParseError<ErrorDetails> = new SyntaxError() as any;\n\n    error.code = code as ParseErrorCode;\n    error.reasonCode = reasonCode;\n    error.loc = loc;\n    error.pos = loc.index;\n\n    error.syntaxPlugin = syntaxPlugin;\n    if (hasMissingPlugin) {\n      error.missingPlugin = (details as any).missingPlugin;\n    }\n\n    type Overrides = {\n      loc?: Position;\n      details?: ErrorDetails;\n    };\n    defineHidden(error, \"clone\", function clone(overrides: Overrides = {}) {\n      const { line, column, index } = overrides.loc ?? loc;\n      return constructor(new Position(line, column, index), {\n        ...details,\n        ...overrides.details,\n      });\n    });\n\n    defineHidden(error, \"details\", details);\n\n    Object.defineProperty(error, \"message\", {\n      configurable: true,\n      get(this: ParseError<ErrorDetails>): string {\n        const message = `${toMessage(details)} (${loc.line}:${loc.column})`;\n        this.message = message;\n        return message;\n      },\n      set(value: string) {\n        Object.defineProperty(this, \"message\", { value, writable: true });\n      },\n    });\n\n    return error;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any>; code?: ParseErrorCode };\n\nexport type ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : object\n      : T[K] extends ToMessage<any>\n        ? Parameters<T[K]>[0]\n        : object\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : object\n      : T[K] extends ToMessage<any>\n        ? Parameters<T[K]>[0]\n        : object\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: \"AN_ERROR_CODE\",\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n          ? { message: template }\n          : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: \"BABEL_PARSER_SYNTAX_ERROR\",\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nimport ModuleErrors from \"./parse-error/module-errors.ts\";\nimport StandardErrors from \"./parse-error/standard-errors.ts\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors.ts\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors.ts\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors.ts\";\n","import type { TokenType } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\nimport type * as N from \"../types.ts\";\nimport type { Node as NodeType, NodeBase, File } from \"../types.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { BindingFlag } from \"../util/scopeflags.ts\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) => {\n  if (object) {\n    defineProperty(object, key, { enumerable: false, value: object[key] });\n  }\n};\n\nfunction toESTreeLocation(node: any) {\n  toUnenumerable(node.loc.start, \"index\");\n  toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (_) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: bigint | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.EstreeLiteral>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.estreeParseLiteral(value);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      expression.type = \"Literal\";\n      // @ts-expect-error N.EstreeLiteral.raw is not defined.\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = directive as any as N.ExpressionStatement;\n      stmt.type = \"ExpressionStatement\";\n      stmt.expression = expression;\n      // @ts-expect-error N.ExpressionStatement.directive is not defined\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as unknown as N.EstreeMethodDefinition).value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error mutate AST types\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    isPrivateName(node: N.Node): node is N.EstreePrivateIdentifier {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    getPrivateNameSV(node: N.EstreePrivateIdentifier): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node as unknown as N.PrivateName);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error mutate AST types\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    nameIsConstructor(key: N.Expression | N.PrivateName): boolean {\n      if (key.type === \"Literal\") return key.value === \"constructor\";\n      return super.nameIsConstructor(key);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingFlag,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (\n        prop.type === \"Property\" &&\n        (prop.kind === \"get\" || prop.kind === \"set\")\n      ) {\n        this.raise(Errors.PatternHasAccessor, prop.key);\n      } else if (prop.type === \"Property\" && prop.method) {\n        this.raise(Errors.PatternHasMethod, prop.key);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node\n          .arguments[0] as N.Expression;\n        (node as N.Node as N.EstreeImportExpression).options =\n          (node.arguments[1] as N.Expression) ?? null;\n        // compatibility with previous ESTree AST\n        // TODO(Babel 8): Remove this\n        (node as N.Node as N.EstreeImportExpression).attributes =\n          (node.arguments[1] as N.Expression) ?? null;\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(\n      unfinished: Undone<N.AnyExport>,\n      decorators: N.Decorator[] | null,\n    ) {\n      const exportStartLoc = this.state.lastTokStartLoc;\n      const node = super.parseExport(unfinished, decorators);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n        // fallthrough\n        case \"ExportDefaultDeclaration\":\n          {\n            const { declaration } = node;\n            if (\n              declaration?.type === \"ClassDeclaration\" &&\n              declaration.decorators?.length > 0 &&\n              // decorator comes before export\n              declaration.start === node.start\n            ) {\n              this.resetStartLocation(\n                node,\n                // For compatibility with ESLint's keyword-spacing rule, which assumes that an\n                // export declaration must start with export.\n                // https://github.com/babel/babel/issues/15085\n                // Here we reset export declaration's start to be the start of the export token\n                exportStartLoc,\n              );\n            }\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      const node = super.parseSubscript(base, startLoc, noCalls, state);\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          // strip Optional prefix\n          (node as unknown as N.CallExpression | N.MemberExpression).type =\n            node.type.substring(8) as \"CallExpression\" | \"MemberExpression\";\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode<N.EstreeChainExpression>(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        // @ts-expect-error not in the type definitions\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    isOptionalMemberExpression(node: N.Node) {\n      if (node.type === \"ChainExpression\") {\n        return node.expression.type === \"MemberExpression\";\n      }\n      return super.isOptionalMemberExpression(node);\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    isObjectProperty(node: N.Node): node is N.EstreeProperty {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    isObjectMethod(node: N.Node): node is N.EstreeProperty {\n      return (\n        node.type === \"Property\" &&\n        (node.method || node.kind === \"get\" || node.kind === \"set\")\n      );\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, startLoc: Position) {\n      super.resetStartLocation(node, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n","// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n","import { types as tc, type TokContext } from \"./context.ts\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = typeof tt;\n\nexport const tt = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _defer: createKeywordLike(\"defer\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _source: createKeywordLike(\"source\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _using: createKeywordLike(\"using\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  _satisfies: createKeywordLike(\"satisfies\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  // TODO: Remove this in Babel 8\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n} as const;\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.placeholder;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.placeholder;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n","// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.cjs`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.cjs`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,4,51,13,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,39,27,10,22,251,41,7,1,17,2,60,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,31,9,2,0,3,0,2,37,2,0,26,0,2,0,45,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,200,32,32,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,26,3994,6,582,6842,29,1763,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,433,44,212,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,42,9,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,229,29,3,0,496,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,7,9,32,4,318,1,80,3,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,68,8,2,0,3,0,2,3,2,4,2,0,15,1,83,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,7,19,58,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,343,9,54,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,10,5350,0,7,14,11465,27,2343,9,87,9,39,4,60,6,26,9,535,9,470,0,2,54,8,3,82,0,12,1,19628,1,4178,9,519,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,245,1,2,9,726,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","import * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","import { ScopeFlag, BindingFlag } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport type * as N from \"../types.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\nexport const enum NameType {\n  // var-declared names in the current lexical scope\n  Var = 1 << 0,\n  // lexically-declared names in the current lexical scope\n  Lexical = 1 << 1,\n  // lexically-declared FunctionDeclaration names in the current lexical scope\n  Function = 1 << 2,\n}\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlag = 0;\n  names: Map<string, NameType> = new Map();\n  firstLexicalName = \"\";\n\n  constructor(flags: ScopeFlag) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inTopLevel() {\n    return (this.currentScope().flags & ScopeFlag.PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & ScopeFlag.DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & ScopeFlag.CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & ScopeFlag.CLASS) > 0 && (flags & ScopeFlag.FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (ScopeFlag.VAR | ScopeFlag.CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & ScopeFlag.FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlag): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlag) {\n    /*:: +createScope: (flags:ScopeFlag) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlag {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (ScopeFlag.FUNCTION | ScopeFlag.STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & ScopeFlag.PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingFlag, loc: Position) {\n    let scope = this.currentScope();\n    if (\n      bindingType & BindingFlag.SCOPE_LEXICAL ||\n      bindingType & BindingFlag.SCOPE_FUNCTION\n    ) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      let type = scope.names.get(name) || 0;\n\n      if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n        type = type | NameType.Function;\n      } else {\n        if (!scope.firstLexicalName) {\n          scope.firstLexicalName = name;\n        }\n        type = type | NameType.Lexical;\n      }\n\n      scope.names.set(name, type);\n\n      if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BindingFlag.SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.names.set(name, (scope.names.get(name) || 0) | NameType.Var);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & ScopeFlag.VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & ScopeFlag.PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingFlag,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, loc, {\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingFlag,\n  ): boolean {\n    if (!(bindingType & BindingFlag.KIND_VALUE)) return false;\n\n    if (bindingType & BindingFlag.SCOPE_LEXICAL) {\n      return scope.names.has(name);\n    }\n\n    const type = scope.names.get(name);\n\n    if (bindingType & BindingFlag.SCOPE_FUNCTION) {\n      return (\n        (type & NameType.Lexical) > 0 ||\n        (!this.treatFunctionsAsVarInScope(scope) && (type & NameType.Var) > 0)\n      );\n    }\n\n    return (\n      ((type & NameType.Lexical) > 0 &&\n        // Annex B.3.4\n        // https://tc39.es/ecma262/#sec-variablestatements-in-catch-blocks\n        !(\n          scope.flags & ScopeFlag.SIMPLE_CATCH &&\n          scope.firstLexicalName === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        (type & NameType.Function) > 0)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (!topLevelScope.names.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & ScopeFlag.VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlag {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (\n        flags & (ScopeFlag.VAR | ScopeFlag.CLASS) &&\n        !(flags & ScopeFlag.ARROW)\n      ) {\n        return flags;\n      }\n    }\n  }\n}\n","import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { NameType, Scope } from \"../../util/scope.ts\";\nimport { BindingFlag, type ScopeFlag } from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlag): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingFlag, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingFlag,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (\n      bindingType & BindingFlag.FLAG_FLOW_DECLARE_FN &&\n      !scope.declareFunctions.has(name)\n    ) {\n      const type = scope.names.get(name);\n      return (type & NameType.Function) > 0 || (type & NameType.Lexical) > 0;\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","import type { Options } from \"../options.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type { PluginsMap } from \"./index.ts\";\nimport type ScopeHandler from \"../util/scope.ts\";\nimport type ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport type ClassScopeHandler from \"../util/class-scope.ts\";\nimport type ProductionParameterHandler from \"../util/production-parameter.ts\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings.ts\";\nimport type * as N from \"../types.ts\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  declare startIndex: number;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n  // Comment store for Program.comments\n  declare comments: Array<N.Comment>;\n\n  sourceToOffsetPos(sourcePos: number) {\n    return sourcePos + this.startIndex;\n  }\n\n  offsetToSourcePos(offsetPos: number) {\n    return offsetPos - this.startIndex;\n  }\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n","/*:: declare var invariant; */\n\nimport BaseParser from \"./base.ts\";\nimport type { Comment, Node, Identifier } from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node.ts\";\n\n/**\n * A whitespace token containing comments\n */\nexport type CommentWhitespace = {\n  /**\n   * the start of the whitespace token.\n   */\n  start: number;\n  /**\n   * the end of the whitespace token.\n   */\n  end: number;\n  /**\n   * the containing comments\n   */\n  comments: Array<Comment>;\n  /**\n   * the immediately preceding AST node of the whitespace token\n   */\n  leadingNode: Node | null;\n  /**\n   * the immediately following AST node of the whitespace token\n   */\n  trailingNode: Node | null;\n  /**\n   * the innermost AST node containing the whitespace with minimal size (|end - start|)\n   */\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    const { commentsLen } = this.state;\n    if (this.comments.length !== commentsLen) {\n      this.comments.length = commentsLen;\n    }\n    this.comments.push(comment);\n    this.state.commentsLen++;\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (\n        this.input.charCodeAt(this.offsetToSourcePos(commentStart) - 1) ===\n        charCodes.comma\n      ) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * async /* 1 *​/ function f() {}\n   * ```\n   * the comment whitespace `/* 1 *​/` has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark `/* 1 *​/` as\n   * inner comments. So `/* 1 *​/` should be detached from the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /* eslint-disable no-irregular-whitespace */\n  /**\n   * Reset previous node leading comments, assuming that `node` is a\n   * single-token node. Used in import phase modifiers parsing. We parse\n   * `module` in `import module foo from ...` as an identifier but may\n   * reinterpret it into a phase modifier later. In this case the identifier is\n   * not part of the AST and we should sync the knowledge to commentStacks\n   *\n   * For example, when parsing\n   * ```\n   * import /* 1 *​/ module a from \"a\";\n   * ```\n   * the comment whitespace `/* 1 *​/` has trailing node Identifier(module). When\n   * we see that `module` is not a default import binding, we mark `/* 1 *​/` as\n   * inner comments of the ImportDeclaration. So `/* 1 *​/` should be detached from\n   * the Identifier node.\n   *\n   * @param node the last finished AST node _before_ current token\n   */\n  /* eslint-enable no-irregular-whitespace */\n  resetPreviousIdentifierLeadingComments(node: Identifier) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n\n    if (commentStack[length - 1].trailingNode === node) {\n      commentStack[length - 1].trailingNode = null;\n    } else if (length >= 2 && commentStack[length - 2].trailingNode === node) {\n      commentStack[length - 2].trailingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n","import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n|[\\r\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport function hasNewLine(input: string, start: number, end: number): boolean {\n  for (let i = start; i < end; i++) {\n    if (isNewLine(input.charCodeAt(i))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","import type { Options } from \"../options.ts\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location.ts\";\n\nimport { types as ct, type TokContext } from \"./context.ts\";\nimport { tt, type TokenType } from \"./types.ts\";\nimport type { Errors } from \"../parse-error.ts\";\nimport type { ParseError } from \"../parse-error.ts\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport const enum LoopLabelKind {\n  Loop = 1,\n  Switch = 2,\n}\n\ndeclare const bit: import(\"../../../../scripts/babel-plugin-bit-decorator/types.d.ts\").BitDecorator<State>;\n\nexport default class State {\n  @bit.storage flags: number;\n\n  @bit accessor strict = false;\n\n  startIndex: number;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({\n    strictMode,\n    sourceType,\n    startIndex,\n    startLine,\n    startColumn,\n  }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n          ? true\n          : sourceType === \"module\";\n\n    this.startIndex = startIndex;\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(\n      startLine,\n      startColumn,\n      startIndex,\n    );\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  @bit accessor maybeInArrowParameters = false;\n  @bit accessor inType = false;\n  @bit accessor noAnonFunctionType = false;\n  @bit accessor hasFlowComment = false;\n  @bit accessor isAmbientContext = false;\n  @bit accessor inAbstractClass = false;\n  @bit accessor inDisallowConditionalTypesContext = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  @bit accessor soloAwait = false;\n  @bit accessor inFSharpPipelineDirectBody = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: LoopLabelKind;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  commentsLen = 0;\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n\n  // Used to track whether a JSX element is allowed to form\n  @bit accessor canStartJSXElement = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  @bit accessor containsEsc = false;\n\n  // Used to track invalid escape sequences in template literals,\n  // that must be reported if the template is not tagged.\n  firstInvalidTemplateEscapePos: null | Position = null;\n\n  @bit accessor hasTopLevelAwait = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  /**\n   * When we add a new property, we must manually update the `clone` method\n   * @see State#clone\n   */\n\n  curPosition(): Position {\n    return new Position(\n      this.curLine,\n      this.pos - this.lineStart,\n      this.pos + this.startIndex,\n    );\n  }\n\n  clone(): State {\n    const state = new State();\n    state.flags = this.flags;\n    state.startIndex = this.startIndex;\n    state.curLine = this.curLine;\n    state.lineStart = this.lineStart;\n    state.startLoc = this.startLoc;\n    state.endLoc = this.endLoc;\n    state.errors = this.errors.slice();\n    state.potentialArrowAt = this.potentialArrowAt;\n    state.noArrowAt = this.noArrowAt.slice();\n    state.noArrowParamsConversionAt = this.noArrowParamsConversionAt.slice();\n    state.topicContext = this.topicContext;\n    state.labels = this.labels.slice();\n    state.commentsLen = this.commentsLen;\n    state.commentStack = this.commentStack.slice();\n    state.pos = this.pos;\n    state.type = this.type;\n    state.value = this.value;\n    state.start = this.start;\n    state.end = this.end;\n    state.lastTokEndLoc = this.lastTokEndLoc;\n    state.lastTokStartLoc = this.lastTokStartLoc;\n    state.context = this.context.slice();\n    state.firstInvalidTemplateEscapePos = this.firstInvalidTemplateEscapePos;\n    state.strictErrors = this.strictErrors;\n    state.tokensLength = this.tokensLength;\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: State[\"curPosition\"];\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n  // These boolean properties are not initialized in createLookaheadState()\n  // instead they will only be set by the tokenizer\n  containsEsc?: boolean;\n};\n","// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return process.env.BABEL_8_BREAKING\n    ? { pos, str: out, firstInvalidLoc, lineStart, curLine }\n    : {\n        pos,\n        str: out,\n        firstInvalidLoc,\n        lineStart,\n        curLine,\n        containsInvalid: !!firstInvalidLoc,\n      };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = /^[0-7]+/.exec(input.slice(startPos, pos + 2));\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n        ? isAllowedNumericSeparatorSibling.dec\n        : radix === 8\n          ? isAllowedNumericSeparatorSibling.oct\n          : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n","/*:: declare var invariant; */\n\nimport type { Options } from \"../options.ts\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments.ts\";\nimport type * as N from \"../types.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier.ts\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types.ts\";\nimport type { TokContext } from \"./context.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error.ts\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n  skipWhiteSpaceInLine,\n} from \"../util/whitespace.ts\";\nimport State from \"./state.ts\";\nimport type { LookaheadState, DeferredStrictError } from \"./state.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { Node } from \"../types.ts\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings.ts\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    const startIndex = state.startIndex || 0;\n    this.type = state.type;\n    this.value = state.value;\n    this.start = startIndex + state.start;\n    this.end = startIndex + state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.comments = [];\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  /**\n   * Similar to nextToken, but it will stop at line break when it is seen before the next token\n   *\n   * @returns {number} position of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  nextTokenInLineStart(): number {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n\n  nextTokenInLineStartSince(pos: number): number {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input)\n      ? skipWhiteSpaceInLine.lastIndex\n      : pos;\n  }\n\n  /**\n   * Similar to lookaheadCharCode, but it will return the char code of line break if it is\n   * seen before the next token\n   *\n   * @returns {number} char code of the next token start or line break, whichever is seen first.\n   * @memberof Tokenizer\n   */\n  lookaheadInLineCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, at),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related properties.\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  // Skips a block comment, whose end is marked by commentEnd.\n  // *-/ is used by the Flow plugin, when parsing block comments nested\n  // inside Flow comments.\n  skipBlockComment(commentEnd: \"*/\" | \"*-/\"): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, this.state.curPosition());\n    }\n\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start: this.sourceToOffsetPos(start),\n      end: this.sourceToOffsetPos(end + commentEnd.length),\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start: this.sourceToOffsetPos(start),\n      end: this.sourceToOffsetPos(end),\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment(\"*/\");\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (\n            ch === charCodes.dash &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (\n            ch === charCodes.lessThan &&\n            !this.inModule &&\n            this.options.annexB\n          ) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: this.sourceToOffsetPos(spaceStart),\n        end: this.sourceToOffsetPos(end),\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(\n        Errors.UnexpectedDigitAfterHash,\n        this.state.curPosition(),\n      );\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\"\n      ) {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          this.state.curPosition(),\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n            this.state.curPosition(),\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        !process.env.BABEL_8_BREAKING &&\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n            this.state.curPosition(),\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              this.state.curPosition(),\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              this.state.curPosition(),\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(\n      Errors.InvalidOrUnexpectedToken,\n      this.state.curPosition(),\n      {\n        unexpected: String.fromCodePoint(code),\n      },\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(\n          Errors.UnterminatedRegExp,\n          createPositionWithColumnOffset(startLoc, 1),\n        );\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(\n          Errors.UnterminatedRegExp,\n          createPositionWithColumnOffset(startLoc, 1),\n        );\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, nextPos());\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, nextPos());\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, nextPos());\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, nextPos());\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n      /* bailOnError */ false,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(\n        Errors.InvalidDigit,\n        // Numeric literals can't have newlines, so this is safe to do.\n        createPositionWithColumnOffset(startLoc, 2),\n        {\n          radix,\n        },\n      );\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, startLoc);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, this.state.curPosition());\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, this.state.curPosition());\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, startLoc);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(\n            Errors.ZeroDigitNumericSeparator,\n            createPositionWithColumnOffset(startLoc, underscorePos),\n          );\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, startLoc);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, startLoc);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (!process.env.BABEL_8_BREAKING && next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, startLoc);\n      }\n      ++this.state.pos;\n      // eslint-disable-next-line no-var\n      var isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, this.state.curPosition());\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (!process.env.BABEL_8_BREAKING && isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, firstInvalidLoc, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(\n        firstInvalidLoc.curLine,\n        firstInvalidLoc.pos - firstInvalidLoc.lineStart,\n        this.sourceToOffsetPos(firstInvalidLoc.pos),\n      );\n    }\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        firstInvalidLoc ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        firstInvalidLoc ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(toParseError: DeferredStrictError, at: Position) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, at);\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, this.state.curPosition());\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, escStart);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, this.state.startLoc, {\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * The return type is marked as `never` for simplicity, as error recovery\n   * will create types in an invalid AST shape.\n   */\n  raise<ErrorDetails = object>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    at: Position | Undone<Node>,\n    details: ErrorDetails = {} as ErrorDetails,\n  ): ParseError<ErrorDetails> {\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError(loc, details);\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    at: Position | Undone<Node>,\n    details: ErrorDetails = {} as ErrorDetails,\n  ): ParseError<ErrorDetails> | never {\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return (errors[i] = toParseError(loc, details));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, at, details);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(\n      Errors.UnexpectedToken,\n      loc != null ? loc : this.state.startLoc,\n      {\n        expected: type ? tokenLabelName(type) : null,\n      },\n    );\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(\n      Errors.MissingPlugin,\n      loc != null ? loc : this.state.startLoc,\n      {\n        missingPlugin: [pluginName],\n      },\n    );\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, this.state.startLoc, {\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<object>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, buildPosition(pos, lineStart, curLine));\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, buildPosition(pos, lineStart, curLine), {\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(\n        Errors.StrictNumericEscape,\n        buildPosition(pos, lineStart, curLine),\n      );\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(\n        Errors.UnterminatedString, // Report the error at the string quote\n        buildPosition(pos - 1, lineStart, curLine),\n      );\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(\n        Errors.UnterminatedTemplate,\n        buildPosition(pos, lineStart, curLine),\n      );\n    },\n  };\n}\n","import { ClassElementType } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementType> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementType,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & ClassElementType.KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & ClassElementType.FLAG_STATIC;\n        const newStatic = elementType & ClassElementType.FLAG_STATIC;\n\n        const oldKind = accessor & ClassElementType.KIND_ACCESSOR;\n        const newKind = elementType & ClassElementType.KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, loc, {\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n        identifierName: name,\n      });\n    }\n  }\n}\n","import { Errors, type ParseErrorConstructor } from \"../parse-error.ts\";\nimport type { Position } from \"./location.ts\";\nimport type { Node } from \"../types.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n  e.g. we don't know if `async({ x })` is a call expression or an async arrow\n  function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst enum ExpressionScopeType {\n  kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3,\n}\n\nclass ExpressionScope {\n  declare type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = ExpressionScopeType.kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration ||\n      this.type === ExpressionScopeType.kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === ExpressionScopeType.kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<object>, Position]> =\n    new Map();\n  constructor(\n    type:\n      | ExpressionScopeType.kMaybeArrowParameterDeclaration\n      | ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  ) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<object>,\n    at: Position,\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    node: Node,\n  ): void {\n    const origin = node.loc.start;\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == ExpressionScopeType.kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   */\n  recordArrowParameterBindingError(\n    error: ParseErrorConstructor<object>,\n    node: Node,\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = node.loc.start;\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   */\n  recordAsyncArrowParametersError(at: Position): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (\n        scope.type === ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration\n      ) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, at);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, loc);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(ExpressionScopeType.kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeArrowParameterDeclaration,\n  );\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(\n    ExpressionScopeType.kMaybeAsyncArrowParameterDeclaration,\n  );\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport const enum ParamKind {\n  // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  // track [In] production parameter\n  PARAM_IN = 0b1000,\n}\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & ParamKind.PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (\n    (isAsync ? ParamKind.PARAM_AWAIT : 0) |\n    (isGenerator ? ParamKind.PARAM_YIELD : 0)\n  );\n}\n","import type { Position } from \"../util/location.ts\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport Tokenizer from \"../tokenizer/index.ts\";\nimport type State from \"../tokenizer/state.ts\";\nimport type {\n  EstreePropertyDefinition,\n  Node,\n  ObjectMethod,\n  ObjectProperty,\n  PrivateName,\n} from \"../types.d.ts\";\nimport { hasNewLine } from \"../util/whitespace.ts\";\nimport { isIdentifierChar } from \"../util/identifier.ts\";\nimport ClassScopeHandler from \"../util/class-scope.ts\";\nimport ExpressionScopeHandler from \"../util/expression-scope.ts\";\nimport { ScopeFlag } from \"../util/scopeflags.ts\";\nimport ProductionParameterHandler, {\n  ParamKind,\n} from \"../util/production-parameter.ts\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nimport type ScopeHandler from \"../util/scope.ts\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): new (...args: any) => ScopeHandler;\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    let { extra } = node;\n    if (extra == null) {\n      extra = {};\n      node.extra = extra;\n    }\n\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, this.state.startLoc);\n      }\n      this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return hasNewLine(\n      this.input,\n      this.offsetToSourcePos(this.state.lastTokEndLoc.index),\n      this.state.start,\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return hasNewLine(this.input, this.state.end, this.nextTokenStart());\n  }\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, this.state.lastTokEndLoc);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    if (!this.eat(type)) {\n      this.unexpected(loc, type);\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        // eslint-disable-next-line @typescript-eslint/only-throw-error\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, shorthandAssignLoc);\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, doubleProtoLoc);\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, privateKeyLoc);\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /**\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): node is PrivateName {\n    return node.type === \"PrivateName\";\n  }\n\n  /**\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: PrivateName): string {\n    return node.id.name;\n  }\n\n  /**\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): node is ObjectMethod {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = ParamKind.PARAM;\n    if (this.inModule) {\n      paramFlags |= ParamKind.PARAM_AWAIT;\n    }\n    this.scope.enter(ScopeFlag.PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional parameter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n","import UtilParser from \"./util.ts\";\nimport { SourceLocation, type Position } from \"../util/location.ts\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types.ts\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: UtilParser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType = never>(): Undone<T> {\n    const loc = this.state.startLoc;\n    return new Node(this, loc.index, loc) as unknown as Undone<T>;\n  }\n\n  startNodeAt<T extends NodeType = never>(loc: Position): Undone<T> {\n    return new Node(this, loc.index, loc) as unknown as Undone<T>;\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType = never>(\n    type: Undone<NodeType>,\n  ): Undone<T> {\n    return this.startNodeAt(type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    (node as T).type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, startLoc: Position): void {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\n","/*:: declare var invariant; */\n\nimport type Parser from \"../../parser/index.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier.ts\";\nimport FlowScopeHandler from \"./scope.ts\";\nimport { BindingFlag, ScopeFlag } from \"../../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node.ts\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitialized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(\n  node: Undone<N.ImportSpecifier | N.ImportDeclaration>,\n): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: typeof Parser) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): new (...args: any) => FlowScopeHandler {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode<N.FlowPredicate>();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStartLoc.index > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, moduloLoc);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode<N.FlowFunctionTypeAnnotation>();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(\n              FlowErrors.NestedDeclareModule,\n              this.state.lastTokStartLoc,\n            );\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_VAR,\n        node.id.loc.start,\n      );\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(ScopeFlag.OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode<N.BlockStatement>());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n              this.state.lastTokStartLoc,\n            );\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, bodyElement);\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, bodyElement);\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, bodyElement);\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(\n            FlowErrors.UnsupportedDeclareExportKind,\n            this.state.startLoc,\n            {\n              unsupportedExportKind: label,\n              suggestion: exportSuggestions[label],\n            },\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n            /* decorators */ null,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.FlowDeclareExportDeclaration;\n        }\n      }\n\n      this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(\n        node,\n      ) as unknown as N.FlowDeclareTypeAlias;\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(\n        node,\n        true,\n      ) as unknown as N.FlowDeclareOpaqueType;\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(node: Undone<N.FlowDeclare>, isClass: boolean): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BindingFlag.TYPE_FUNCTION : BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (isClass) {\n        node.implements = [];\n        node.mixins = [];\n\n        if (this.eatContextual(tt._mixins)) {\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n\n        if (this.eatContextual(tt._implements)) {\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(tt.comma));\n        }\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode<N.FlowInterfaceExtends>();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node, /* isClass */ false);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(\n          FlowErrors.UnexpectedReservedUnderscore,\n          this.state.startLoc,\n        );\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        startLoc,\n        {\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(\n        node.id.name,\n        BindingFlag.TYPE_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, nodeStartLoc);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode<N.FlowObjectTypeAnnotation>();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            FlowErrors.UnexpectedExplicitInexactInObject,\n            inexactStartLoc,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              FlowErrors.InexactInsideNonObject,\n              this.state.lastTokStartLoc,\n            );\n          } else if (!allowInexact) {\n            this.raise(\n              FlowErrors.InexactInsideExact,\n              this.state.lastTokStartLoc,\n            );\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, variance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(\n            FlowErrors.UnexpectedSpreadType,\n            this.state.lastTokStartLoc,\n          );\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, variance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              FlowErrors.ThisParamBannedInConstructor,\n              node.value.this,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          property.value.this,\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          property,\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, property);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier | N.Identifier {\n      startLoc ??= this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt<N.FlowGenericTypeAnnotation>(startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode<N.FlowTypeofTypeAnnotation>();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode<N.FlowTupleTypeAnnotation>();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, node);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, node);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt<N.FlowFunctionTypeParam>(type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startLoc: Position,\n      node: Undone<N.FlowType>,\n      id: N.Identifier,\n    ): N.FlowType {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowType {\n      const startLoc = this.state.startLoc;\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt: {\n          const node = this.startNode<N.FlowFunctionTypeAnnotation>();\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        case tt.parenL: {\n          const node = this.startNode<N.FlowFunctionTypeAnnotation>();\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(\n              FlowErrors.UnexpectedSubtractionOperand,\n              this.state.startLoc,\n            );\n          }\n          this.unexpected();\n          return;\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowType {\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt<N.FlowOtherTypeAnnotation>(startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowType {\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowType {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt<N.FlowFunctionTypeAnnotation>(\n          param.loc.start,\n        );\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowType {\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowType {\n      const node = this.startNode<N.FlowOtherTypeAnnotation>();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowType {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.TypeAnnotation {\n      const node = this.startNode<N.TypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.TypeCastExpression): N.Expression {\n      (node.expression as N.Identifier).typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n        return;\n      }\n\n      super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatementLike(flags: ParseStatementFlag): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatementLike(flags);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (type === tt._enum || tokenIsFlowInterfaceOrTypeOrOpaque(type)) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (type === tt._enum || tokenIsFlowInterfaceOrTypeOrOpaque(type)) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression() {\n      if (this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt<N.ConditionalExpression>(startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, state.startLoc);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (\n          node.type === \"ArrowFunctionExpression\" &&\n          node.body.type !== \"BlockStatement\"\n        ) {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (\n        this.state.noArrowParamsConversionAt.includes(\n          this.offsetToSourcePos(node.start),\n        )\n      ) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem<T extends N.Expression | N.RestElement | N.SpreadElement>(\n      node: T,\n      startLoc: Position,\n    ): T | N.TypeCastExpression | N.TsTypeCastExpression {\n      const newNode = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        (newNode as N.Identifier).optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TypeCastExpression>(startLoc);\n        typeCastNode.expression = newNode as N.Expression;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return newNode;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(\n      node: Undone<N.Node>,\n    ): node is Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration> {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        (\n          node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>\n        ).exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    ): node is Undone<N.ExportNamedDeclaration> {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, startLoc);\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, member.value);\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, this.state.curPosition(), {\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          this.finishOp(tt.questionDot, 2);\n        } else {\n          // allow double nullable types in Flow: ??string\n          this.finishOp(tt.question, 1);\n        }\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        this.readIterator();\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left) as N.Assignable;\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList:\n        | ReadonlyArray<N.Expression | N.SpreadElement>\n        | ReadonlyArray<N.Expression | N.RestElement>,\n      isParenthesizedExpr?: boolean,\n    ):\n      | ReadonlyArray<N.Expression | N.SpreadElement>\n      | ReadonlyArray<N.Expression | N.RestElement> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, expr.typeAnnotation);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingFlag) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, method);\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, method);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode<N.FlowClassImplements>();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, param);\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, param);\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue<T extends N.ObjectMember>(\n      prop: Undone<T>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): T {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        // @ts-expect-error: refine typings\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseFunctionParamType(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, param);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, param);\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, param);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, param);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, node.typeAnnotation);\n      }\n\n      return node;\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(\n          FlowErrors.ImportReflectionHasImportType,\n          node.specifiers[0].loc.start,\n        );\n      }\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        if (!isExport) return true;\n        const ch = this.lookaheadCharCode();\n        return ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        if (!phase && this.match(tt._default)) {\n          // TODO: Align with our TS AST and always add .exportKind\n          return;\n        }\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? phase : \"value\";\n      } else {\n        if (phase === \"type\" && this.match(tt.star)) this.unexpected();\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingFlag | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, specifier, {\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, specifier);\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      isConstructor: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse((abort: () => never) => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                typeParameters,\n              );\n            }\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n          typeParameters,\n        );\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse<N.TypeAnnotation>(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params:\n        | Array<N.Expression | N.SpreadElement>\n        | Array<N.Expression | N.RestElement>,\n    ): void {\n      if (\n        this.state.noArrowParamsConversionAt.includes(\n          this.offsetToSourcePos(node.start),\n        )\n      ) {\n        node.params = params as N.ArrowFunctionExpression[\"params\"];\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.includes(\n          this.offsetToSourcePos(node.start),\n        )\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, node.params[i]);\n        }\n      }\n\n      super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow &&\n          !this.state.noArrowAt.includes(\n            this.sourceToOffsetPos(this.state.start),\n          ),\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.includes(startLoc.index)\n      ) {\n        this.next();\n\n        const node = this.startNodeAt<N.CallExpression>(startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(startLoc);\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n      this.parseFunctionParams(node, false);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(\n          FlowErrors.UnterminatedFlowComment,\n          this.state.curPosition(),\n        );\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, this.state.startLoc);\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, this.state.curPosition());\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, loc, {\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n            ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n            : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        loc,\n        enumContext,\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      details: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, loc, details);\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitialized(\n      node: N.Node,\n      details: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(\n        FlowErrors.EnumStringMemberInconsistentlyInitialized,\n        node,\n        details,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Identifier;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumBooleanMember\" }\n        >[];\n        numberMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumNumberMember\" }\n        >[];\n        stringMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumStringMember\" }\n        >[];\n        defaultedMembers: Extract<\n          N.FlowEnumMember,\n          { type: \"EnumDefaultedMember\" }\n        >[];\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode<N.FlowEnumMember>();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, id, {\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, id, {\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(\n          FlowErrors.EnumInvalidExplicitTypeUnknownSupplied,\n          this.state.startLoc,\n          {\n            enumName,\n          },\n        );\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, this.state.startLoc, {\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.FlowEnumBody>, id: N.Identifier): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, nameLoc, {\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(\n      node: Undone<N.FlowEnumDeclaration>,\n    ): N.FlowEnumDeclaration {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n","import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types.ts\";\nimport type { TokContext } from \"../../tokenizer/context.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { isNewLine } from \"../../util/whitespace.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport type { Undone } from \"../../parser/node.ts\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXTag | null): object is N.JSXFragmentTag {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  // @ts-expect-error - object is 'never'\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(\n            JsxErrors.UnterminatedJsxContent,\n            this.state.startLoc,\n          );\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                this.finishToken(tt.jsxTagStart);\n              } else {\n                super.getTokenFromCode(ch);\n              }\n              return;\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            this.finishToken(tt.jsxText, out);\n            return;\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, this.state.curPosition(), {\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, this.state.startLoc);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) === charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      this.finishToken(tt.jsxName, this.input.slice(start, this.state.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode<N.JSXIdentifier>();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName | N.JSXIdentifier {\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt<N.JSXNamespacedName>(startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startLoc = this.state.startLoc;\n      let node: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression =\n        this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt<N.JSXMemberExpression>(startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue():\n      | N.JSXExpressionContainer\n      | N.JSXElement\n      | N.StringLiteral {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, node);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom() as N.JSXElement | N.StringLiteral;\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, this.state.startLoc);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(this.state.lastTokEndLoc);\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_expr);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              JsxErrors.UnexpectedSequenceExpression,\n              expression.expressions[1],\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute | N.JSXSpreadAttribute {\n      const node = this.startNode<N.JSXAttribute | N.JSXSpreadAttribute>();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startLoc: Position,\n    ): N.JSXOpeningElement | N.JSXOpeningFragment {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: (N.JSXAttribute | N.JSXSpreadAttribute)[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startLoc: Position,\n    ): N.JSXClosingElement | N.JSXClosingFragment {\n      const node = this.startNodeAt<N.JSXClosingFragment | N.JSXClosingElement>(\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startLoc: Position): N.JSXElement | N.JSXFragment {\n      const node = this.startNodeAt<N.JSXElement | N.JSXFragment>(startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(startLoc);\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseLiteral(this.state.value, \"JSXText\"));\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, closingElement);\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, closingElement, {\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, closingElement, {\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(\n          JsxErrors.UnwrappedAdjacentJSXElements,\n          this.state.startLoc,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement | N.JSXFragment {\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        this.jsxReadToken();\n        return;\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          this.jsxReadWord();\n          return;\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          this.finishToken(tt.jsxTagEnd);\n          return;\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          this.jsxReadString(code);\n          return;\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        this.finishToken(tt.jsxTagStart);\n        return;\n      }\n\n      super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n","import type { Position } from \"../../util/location.ts\";\nimport ScopeHandler, { NameType, Scope } from \"../../util/scope.ts\";\nimport { BindingFlag, ScopeFlag } from \"../../util/scopeflags.ts\";\nimport type * as N from \"../../types.ts\";\nimport { Errors } from \"../../parse-error.ts\";\n\nconst enum TsNameType {\n  Types = 1 << 0,\n  // enums (which are also in .types)\n  Enums = 1 << 1,\n  // const enums (which are also in .enums and .types)\n  ConstEnums = 1 << 2,\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  Classes = 1 << 3,\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  ExportOnlyBindings = 1 << 4,\n}\n\nclass TypeScriptScope extends Scope {\n  tsNames: Map<string, TsNameType> = new Map();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlag): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: ScopeFlag): void {\n    if (flags === ScopeFlag.TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags === ScopeFlag.TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingFlag, loc: Position) {\n    if (bindingType & BindingFlag.FLAG_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, loc, {\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    let type = scope.tsNames.get(name) || 0;\n\n    if (bindingType & BindingFlag.FLAG_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.tsNames.set(name, type | TsNameType.ExportOnlyBindings);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BindingFlag.KIND_TYPE) {\n      if (!(bindingType & BindingFlag.KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      type = type | TsNameType.Types;\n    }\n    if (bindingType & BindingFlag.FLAG_TS_ENUM) {\n      type = type | TsNameType.Enums;\n    }\n    if (bindingType & BindingFlag.FLAG_TS_CONST_ENUM) {\n      type = type | TsNameType.ConstEnums;\n    }\n    if (bindingType & BindingFlag.FLAG_CLASS) {\n      type = type | TsNameType.Classes;\n    }\n    if (type) scope.tsNames.set(name, type);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingFlag,\n  ): boolean {\n    const type = scope.tsNames.get(name);\n    if ((type & TsNameType.Enums) > 0) {\n      if (bindingType & BindingFlag.FLAG_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BindingFlag.FLAG_TS_CONST_ENUM);\n        const wasConst = (type & TsNameType.ConstEnums) > 0;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (\n      bindingType & BindingFlag.FLAG_CLASS &&\n      (type & TsNameType.Classes) > 0\n    ) {\n      if (scope.names.get(name) & NameType.Lexical) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BindingFlag.KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BindingFlag.KIND_TYPE && (type & TsNameType.Types) > 0) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n\n    if (this.hasImport(name)) return;\n\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      const type = scope.tsNames.get(name);\n      if (\n        (type & TsNameType.Types) > 0 ||\n        (type & TsNameType.ExportOnlyBindings) > 0\n      ) {\n        return;\n      }\n    }\n\n    super.checkLocalExport(id);\n  }\n}\n","import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types.ts\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayPattern,\n  AssignmentProperty,\n  Assignable,\n} from \"../types.ts\";\nimport type { Pos, Position } from \"../util/location.ts\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier.ts\";\nimport { NodeUtils, type Undone } from \"./node.ts\";\nimport { BindingFlag } from \"../util/scopeflags.ts\";\nimport type { ExpressionErrors } from \"./util.ts\";\nimport { Errors, type LValAncestor } from \"../parse-error.ts\";\nimport type Parser from \"./index.ts\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport const enum ParseBindingListFlags {\n  ALLOW_EMPTY = 1 << 0,\n  IS_FUNCTION_PARAMS = 1 << 1,\n  IS_CONSTRUCTOR_PARAMS = 1 << 2,\n}\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): void;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n   *\n   * - Parenthesized Destructuring patterns\n   * - RestElement is not the last element\n   * - Missing `=` in assignment pattern\n   *\n   * NOTE: There is a corresponding \"isAssignable\" method.\n   * When this one is updated, please check if also that one needs to be updated.\n   *\n   * @param node The expression atom\n   * @param isLHS Whether we are parsing a LeftHandSideExpression.\n   *              If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *              If isLHS is `false`, we are in an arrow function parameters list.\n   */\n  toAssignable(node: Node, isLHS: boolean = false): asserts node is Assignable {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParameterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            node,\n          );\n        } else if (\n          parenthesized.type !== \"MemberExpression\" &&\n          !this.isOptionalMemberExpression(parenthesized)\n        ) {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, node);\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, node);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        (node as Node).type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            (prop as Node).type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, node.extra.trailingCommaLoc);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        (node as Node).type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, node.left.loc.end);\n        }\n\n        (node as Node).type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        prop.key,\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      (prop as Node).type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, prop);\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: (Expression | SpreadElement | RestElement)[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        (elt as unknown as RestElement).type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, elt);\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, trailingCommaLoc);\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return node.properties.every((prop, i) => {\n          return (\n            prop.type !== \"ObjectMethod\" &&\n            (i === last || prop.type !== \"SpreadElement\") &&\n            this.isAssignable(prop)\n          );\n        });\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList:\n      | ReadonlyArray<Expression | SpreadElement>\n      | ReadonlyArray<Expression | RestElement>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ):\n    | ReadonlyArray<Expression | SpreadElement>\n    | ReadonlyArray<Expression | RestElement> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList:\n      | ReadonlyArray<Expression | SpreadElement>\n      | ReadonlyArray<Expression | RestElement>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          ParseBindingListFlags.ALLOW_EMPTY,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: (typeof charCodes)[keyof typeof charCodes],\n    flags: ParseBindingListFlags,\n  ): Array<Pattern | TSParameterProperty> {\n    const allowEmpty = flags & ParseBindingListFlags.ALLOW_EMPTY;\n\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        let rest: Pattern = this.parseRestBinding();\n        if (\n          (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"flow\")) ||\n          flags & ParseBindingListFlags.IS_FUNCTION_PARAMS\n        ) {\n          rest = this.parseFunctionParamType(rest);\n        }\n        elts.push(rest);\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, this.state.startLoc);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): AssignmentProperty | RestElement {\n    const { type, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(this.startNode());\n    }\n\n    const prop = this.startNode<AssignmentProperty>();\n    if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    flags: ParseBindingListFlags,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    if (\n      (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"flow\")) ||\n      flags & ParseBindingListFlags.IS_FUNCTION_PARAMS\n    ) {\n      this.parseFunctionParamType(left);\n    }\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseFunctionParamType(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc ??= this.state.startLoc;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus its descendants must be subsequently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param type A Node `type` string\n   * @param isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingFlag,\n  ): string | boolean | [string, boolean] {\n    switch (type) {\n      case \"AssignmentPattern\":\n        return \"left\";\n      case \"RestElement\":\n        return \"argument\";\n      case \"ObjectProperty\":\n        return \"value\";\n      case \"ParenthesizedExpression\":\n        return \"expression\";\n      case \"ArrayPattern\":\n        return \"elements\";\n      case \"ObjectPattern\":\n        return \"properties\";\n    }\n    return false;\n  }\n\n  // Overridden by the estree plugin\n  isOptionalMemberExpression(expression: Node): boolean {\n    return expression.type === \"OptionalMemberExpression\";\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param expression The expression in question to check.\n   * @param ancestor\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param binding\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BindingFlag.TYPE_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param checkClashes\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param strictModeChanged\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param hasParenthesizedAncestor\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   */\n\n  checkLVal(\n    expression:\n      | Expression\n      | ObjectMember\n      | RestElement\n      | Pattern\n      | TSParameterProperty,\n    ancestor: LValAncestor,\n    binding: BindingFlag = BindingFlag.TYPE_NONE,\n    checkClashes: Set<string> | false = false,\n    strictModeChanged: boolean = false,\n    hasParenthesizedAncestor: boolean = false,\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    const isOptionalMemberExpression =\n      this.isOptionalMemberExpression(expression);\n\n    if (isOptionalMemberExpression || type === \"MemberExpression\") {\n      if (isOptionalMemberExpression) {\n        this.expectPlugin(\"optionalChainingAssign\", expression.loc.start);\n        if (ancestor.type !== \"AssignmentExpression\") {\n          this.raise(Errors.InvalidLhsOptionalChaining, expression, {\n            ancestor,\n          });\n        }\n      }\n\n      if (binding !== BindingFlag.TYPE_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, expression);\n      }\n      return;\n    }\n\n    if (type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged);\n\n      const { name } = expression;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, expression);\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BindingFlag.TYPE_NONE\n          ? Errors.InvalidLhs\n          : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, expression, { ancestor });\n      return;\n    }\n\n    let key: string, isParenthesizedExpression: boolean;\n    if (typeof validity === \"string\") {\n      key = validity;\n      isParenthesizedExpression = type === \"ParenthesizedExpression\";\n    } else {\n      [key, isParenthesizedExpression] = validity;\n    }\n\n    const nextAncestor =\n      type === \"ArrayPattern\" || type === \"ObjectPattern\"\n        ? ({ type } as const)\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    const val = expression[key];\n    if (Array.isArray(val)) {\n      for (const child of val) {\n        if (child) {\n          this.checkLVal(\n            child,\n            nextAncestor,\n            binding,\n            checkClashes,\n            strictModeChanged,\n            isParenthesizedExpression,\n          );\n        }\n      }\n    } else if (val) {\n      this.checkLVal(\n        val,\n        nextAncestor,\n        binding,\n        checkClashes,\n        strictModeChanged,\n        isParenthesizedExpression,\n      );\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingFlag,\n    strictModeChanged: boolean = false,\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BindingFlag.TYPE_NONE) {\n        this.raise(Errors.StrictEvalArguments, at, { referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, at, {\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (bindingType & BindingFlag.FLAG_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, at);\n    }\n\n    if (!(bindingType & BindingFlag.TYPE_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingFlag) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, node);\n    }\n  }\n\n  checkCommaAfterRest(\n    close: (typeof charCodes)[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      this.state.startLoc,\n    );\n\n    return true;\n  }\n}\n","import type State from \"../../tokenizer/state.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types.ts\";\nimport { types as tc } from \"../../tokenizer/context.ts\";\nimport type * as N from \"../../types.ts\";\nimport type { Position } from \"../../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../../util/location.ts\";\nimport type Parser from \"../../parser/index.ts\";\nimport { ScopeFlag, BindingFlag } from \"../../util/scopeflags.ts\";\nimport TypeScriptScopeHandler from \"./scope.ts\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util.ts\";\nimport type { ParseStatementFlag } from \"../../parser/statement.ts\";\nimport { ParamKind } from \"../../util/production-parameter.ts\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error.ts\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node.ts\";\nimport type { Pattern } from \"../../types.ts\";\nimport type { Expression } from \"../../types.ts\";\nimport type { IJSXParserMixin } from \"../jsx/index.ts\";\nimport { ParseBindingListFlags } from \"../../parser/lval.ts\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | \"const\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccessorCannotBeOptional:\n    \"An 'accessor' property cannot be declared optional.\",\n  AccessorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccessorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType:\n    \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccessorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccessorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccessorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType:\n    \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(value: string): N.TsKeywordTypeType | undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\ntype ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): new (...args: any) => TypeScriptScopeHandler {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        this.match(tt.bracketL) ||\n        this.match(tt.braceL) ||\n        this.match(tt.star) ||\n        this.match(tt.ellipsis) ||\n        this.match(tt.privateName) ||\n        this.isLiteralPropertyName()\n      );\n    }\n\n    tsNextTokenOnSameLineAndCanFollowModifier() {\n      this.next();\n      if (this.hasPrecedingLineBreak()) {\n        return false;\n      }\n      return this.tsTokenCanFollowModifier();\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      if (this.match(tt._static)) {\n        this.next();\n        return this.tsTokenCanFollowModifier();\n      }\n      return this.tsNextTokenOnSameLineAndCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (\n        !tokenIsIdentifier(this.state.type) &&\n        this.state.type !== tt._in &&\n        this.state.type !== tt._const\n      ) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.includes(modifier)) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers<N extends ModifierBase>(\n      {\n        allowedModifiers,\n        disallowedModifiers,\n        stopOnStartOfClassStaticBlock,\n        errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n      }: {\n        allowedModifiers: readonly TsModifier[];\n        disallowedModifiers?: TsModifier[];\n        stopOnStartOfClassStaticBlock?: boolean;\n        errorTemplate?: typeof TSErrors.InvalidModifierOnTypeMember;\n      },\n      modified: N,\n    ): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, loc, {\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, loc, {\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, startLoc, {\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, startLoc, { modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwn(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, startLoc, { modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, startLoc, {\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined {\n      const result: T[] = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStartLoc.index;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, this.state.startLoc);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      if (this.eat(tt.comma) && !this.match(tt.parenR)) {\n        node.options = super.parseMaybeAssignAllowIn();\n        this.eat(tt.comma);\n      } else {\n        node.options = null;\n      }\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\n        \"const\",\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      // for better error recovery\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n    });\n\n    tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\n        \"public\",\n        \"private\",\n        \"protected\",\n        \"readonly\",\n        \"declare\",\n        \"abstract\",\n        \"override\",\n      ],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n    });\n\n    tsParseTypeParameter(\n      parseModifiers: (node: Undone<N.TsTypeParameter>) => void,\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: (node: N.TsTypeParameter) => void,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: (node: N.TsTypeParameter) => void) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, node);\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      const list = super.parseBindingList(\n        tt.parenR,\n        charCodes.rightParenthesis,\n        ParseBindingListFlags.IS_FUNCTION_PARAMS,\n      );\n      for (const pattern of list) {\n        const { type } = pattern;\n        if (type === \"AssignmentPattern\" || type === \"TSParameterProperty\") {\n          this.raise(TSErrors.UnsupportedSignatureParameterKind, pattern, {\n            type,\n          });\n        }\n      }\n      return list as Exclude<\n        (typeof list)[0],\n        N.AssignmentPattern | N.TSParameterProperty\n      >[];\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, node);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(\n            TSErrors.AccessorCannotHaveTypeParameters,\n            this.state.curPosition(),\n          );\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, this.state.curPosition());\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(\n                TSErrors.AccessorCannotDeclareThisParameter,\n                this.state.curPosition(),\n              );\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, this.state.curPosition());\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(\n                TSErrors.AccessorCannotDeclareThisParameter,\n                this.state.curPosition(),\n              );\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(\n                TSErrors.SetAccessorCannotHaveOptionalParameter,\n                this.state.curPosition(),\n              );\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(\n                TSErrors.SetAccessorCannotHaveRestParameter,\n                this.state.curPosition(),\n              );\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(\n              TSErrors.SetAccessorCannotHaveReturnType,\n              method[returnTypeKey],\n            );\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\"readonly\"],\n          disallowedModifiers: [\n            \"declare\",\n            \"abstract\",\n            \"private\",\n            \"protected\",\n            \"public\",\n            \"static\",\n            \"override\",\n          ],\n        },\n        node,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      if (process.env.BABEL_8_BREAKING) {\n        node.key = this.tsParseTypeParameterName() as N.Identifier;\n        node.constraint = this.tsExpectThenParseType(tt._in);\n      } else {\n        const typeParameter = this.startNode<N.TsTypeParameter>();\n        typeParameter.name = this.tsParseTypeParameterName();\n        typeParameter.constraint = this.tsExpectThenParseType(tt._in);\n        // @ts-expect-error for Babel 7\n        node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      }\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, elementNode);\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsNamedTupleMember | N.TsType {\n      // parses `...TsType[]`\n\n      const { startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n\n      let labeled: boolean;\n      let label: N.Identifier;\n      let optional: boolean;\n      let type: N.TsNamedTupleMember | N.TsType;\n\n      const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n      const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n      if (chAfterWord === charCodes.colon) {\n        labeled = true;\n        optional = false;\n        label = this.parseIdentifier(true);\n        this.expect(tt.colon);\n        type = this.tsParseType();\n      } else if (chAfterWord === charCodes.questionMark) {\n        optional = true;\n        const startLoc = this.state.startLoc;\n        const wordName = this.state.value;\n        const typeOrLabel = this.tsParseNonArrayType();\n\n        if (this.lookaheadCharCode() === charCodes.colon) {\n          labeled = true;\n          label = this.createIdentifier(\n            this.startNodeAt<N.Identifier>(startLoc),\n            wordName,\n          );\n          this.expect(tt.question);\n          this.expect(tt.colon);\n          type = this.tsParseType();\n        } else {\n          labeled = false;\n          type = typeOrLabel;\n          this.expect(tt.question);\n        }\n      } else {\n        type = this.tsParseType();\n        optional = this.eat(tt.question);\n        // In this case (labeled === true) could be only in invalid label.\n        // E.g. [x.y:type]\n        // An error is raised while processing node.\n        labeled = this.eat(tt.colon);\n      }\n\n      if (labeled) {\n        let labeledNode: Undone<N.TsNamedTupleMember>;\n        if (label) {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(label);\n          labeledNode.optional = optional;\n          labeledNode.label = label;\n          labeledNode.elementType = type;\n\n          if (this.eat(tt.question)) {\n            labeledNode.optional = true;\n            this.raise(\n              TSErrors.TupleOptionalAfterType,\n              this.state.lastTokStartLoc,\n            );\n          }\n        } else {\n          labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n          labeledNode.optional = optional;\n          this.raise(TSErrors.InvalidTupleMemberLabel, type);\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n          labeledNode.elementType = this.tsParseType();\n        }\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      switch (this.state.type) {\n        case tt.num:\n        case tt.bigint:\n        case tt.string:\n        case tt._true:\n        case tt._false:\n          // For compatibility to estree we cannot call parseLiteral directly here\n          // @ts-expect-error refine typings\n          node.literal = super.parseExprAtom();\n          break;\n        default:\n          this.unexpected();\n      }\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Expression {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startLoc = this.state.startLoc;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startLoc.index);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                  ? \"TSNullKeyword\"\n                  : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: Undone<N.TsTypeOperator>) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, node);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n          ? this.tsParseInferType()\n          : this.tsInAllowConditionalTypesContext(() =>\n              this.tsParseArrayTypeOrHigher(),\n            );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            ParseBindingListFlags.ALLOW_EMPTY,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            thisTypePredicate.asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined {\n      if (this.match(tt.colon)) {\n        return this.tsParseTypeAnnotation();\n      }\n    }\n\n    tsTryParseType(): N.TsType | undefined {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          Errors.InvalidEscapedReservedWord,\n          this.state.lastTokStartLoc,\n          {\n            reservedWord: \"asserts\",\n          },\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, this.state.startLoc);\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      node.typeAnnotation = this.tsInType(() => {\n        this.next(); // \"<\"\n        return this.match(tt._const)\n          ? this.tsParseTypeReference()\n          : this.tsParseType();\n      });\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(token: \"extends\"): Array<N.TSInterfaceHeritage>;\n    tsParseHeritageClause(token: \"implements\"): Array<N.TSClassImplements>;\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TSClassImplements> | Array<N.TSInterfaceHeritage> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<\n            N.TSClassImplements | N.TSInterfaceHeritage\n          >();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(\n            node,\n            // @ts-expect-error Babel 7 vs Babel 8\n            process.env.BABEL_8_BREAKING\n              ? token === \"extends\"\n                ? \"TSInterfaceHeritage\"\n                : \"TSClassImplements\"\n              : \"TSExpressionWithTypeArguments\",\n          );\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, originalStartLoc, {\n          token,\n        });\n      }\n\n      return delimitedList as\n        | Array<N.TSClassImplements>\n        | Array<N.TSInterfaceHeritage>;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, this.state.startLoc);\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers,\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | undefined {\n      if (this.match(token)) {\n        return this.tsNextThenParseType();\n      }\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsInType(() => {\n        this.expect(token);\n        return this.tsParseType();\n      });\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsInType(() => {\n        this.next();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BindingFlag.TYPE_TS_CONST_ENUM : BindingFlag.TYPE_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(ScopeFlag.OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(ParamKind.PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.kind = \"global\";\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.kind = \"module\";\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(ScopeFlag.TS_MODULE);\n        this.prodParam.enter(ParamKind.PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      maybeDefaultIdentifier?: N.Identifier | null,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = maybeDefaultIdentifier || this.parseIdentifier();\n      this.checkIdentifier(node.id, BindingFlag.TYPE_TS_VALUE_IMPORT);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, moduleReference);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      this.sawUnambiguousESM = true;\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      }\n      this.state = state;\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let startType = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        startType = tt._var;\n        kind = \"let\";\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        switch (startType) {\n          case tt._function:\n            nany.declare = true;\n            return super.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* isHangingDeclaration */ false,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to know how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._enum:\n            return this.tsParseEnumDeclaration(nany, { declare: true });\n          case tt._global:\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          case tt._const:\n          case tt._var:\n            if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n              nany.declare = true;\n              return this.parseVarStatement(\n                nany,\n                kind || this.state.value,\n                true,\n              );\n            }\n\n            // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n            this.expect(tt._const);\n            return this.tsParseEnumDeclaration(nany, {\n              const: true,\n              declare: true,\n            });\n          case tt._interface: {\n            const result = this.tsParseInterfaceDeclaration(nany, {\n              declare: true,\n            });\n            if (result) return result;\n          }\n          // fallthrough\n          default:\n            if (tokenIsIdentifier(startType)) {\n              return this.tsParseDeclaration(\n                nany,\n                this.state.value,\n                /* next */ true,\n                /* decorators */ null,\n              );\n            }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n        /* decorators */ null,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n          }\n          return declaration;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(ScopeFlag.TS_MODULE);\n            this.prodParam.enter(ParamKind.PARAM);\n            const mod = node;\n            mod.kind = \"global\";\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(\n            node,\n            expr.name,\n            /* next */ false,\n            decorators,\n          );\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n      decorators: N.Decorator[] | null,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node, decorators);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              node.kind = \"module\";\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            node.kind = \"namespace\";\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined {\n      if (!this.match(tt.lt)) return;\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n          node.typeParameters = this.tsParseTypeParameters(\n            this.tsParseConstModifier,\n          );\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) return;\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression():\n      | N.TsTypeParameterInstantiation\n      | undefined {\n      if (this.reScan_lt() !== tt.lt) return;\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, node);\n      } else if (!this.state.inType && this.curContext() === tc.brace) {\n        // rescan `>` when we are no longer in type context and JSX parsing context\n        // since it was tokenized when `inType` is `true`.\n        this.reScan_lt_gt();\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      flags: ParseBindingListFlags,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location to include modifiers in range\n      const startLoc = this.state.startLoc;\n\n      const modified: ModifierBase = {};\n      this.tsParseModifiers(\n        {\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        },\n        modified,\n      );\n      const accessibility = modified.accessibility;\n      const override = modified.override;\n      const readonly = modified.readonly;\n      if (\n        !(flags & ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS) &&\n        (accessibility || readonly || override)\n      ) {\n        this.raise(TSErrors.UnexpectedParameterModifier, startLoc);\n      }\n\n      const left = this.parseMaybeDefault();\n      if (flags & ParseBindingListFlags.IS_FUNCTION_PARAMS) {\n        this.parseFunctionParamType(left);\n      }\n      const elt = this.parseMaybeDefault(left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, pp);\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty): boolean {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    tsDisallowOptionalPattern(node: Undone<N.Function>) {\n      for (const param of node.params) {\n        if (\n          param.type !== \"Identifier\" &&\n          (param as any).optional &&\n          !this.state.isAmbientContext\n        ) {\n          this.raise(TSErrors.PatternIsOptional, param);\n        }\n      }\n    }\n\n    setArrowFunctionParameters(\n      node: Undone<N.ArrowFunctionExpression>,\n      params: N.Expression[],\n      trailingCommaLoc?: Position | null,\n    ): void {\n      super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n      this.tsDisallowOptionalPattern(node);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n            ? \"TSDeclareMethod\"\n            : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, node);\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n      this.tsDisallowOptionalPattern(node);\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodiless function, we need to do it here.\n        this.checkIdentifier(node.id, BindingFlag.TYPE_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | N.SpreadElement>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, node.typeAnnotation);\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression =\n          this.startNodeAt<N.TsNonNullExpression>(startLoc);\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn =\n              this.tsTryParseGenericAsyncArrowFunction(startLoc);\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startLoc);\n            node.callee = base;\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(tt.parenR);\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(startLoc);\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              this.state.startLoc,\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      let isSatisfies: boolean;\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        (this.isContextual(tt._as) ||\n          (isSatisfies = this.isContextual(tt._satisfies)))\n      ) {\n        const node = this.startNodeAt<\n          N.TsAsExpression | N.TsSatisfiesExpression\n        >(leftStartLoc);\n        node.expression = left;\n        node.typeAnnotation = this.tsInType(() => {\n          this.next(); // \"as\" or \"satisfies\"\n          if (this.match(tt._const)) {\n            if (isSatisfies) {\n              this.raise(Errors.UnexpectedKeyword, this.state.startLoc, {\n                keyword: \"const\",\n              });\n            }\n            return this.tsParseTypeReference();\n          }\n\n          return this.tsParseType();\n        });\n        this.finishNode(\n          node,\n          isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\",\n        );\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    checkImportReflection(node: Undone<N.ImportDeclaration>) {\n      super.checkImportReflection(node);\n      if (node.module && node.importKind !== \"value\") {\n        this.raise(\n          TSErrors.ImportReflectionHasImportType,\n          node.specifiers[0].loc.start,\n        );\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    isPotentialImportPhase(isExport: boolean): boolean {\n      if (super.isPotentialImportPhase(isExport)) return true;\n      if (this.isContextual(tt._type)) {\n        const ch = this.lookaheadCharCode();\n        return isExport\n          ? ch === charCodes.leftCurlyBrace || ch === charCodes.asterisk\n          : ch !== charCodes.equalsTo;\n      }\n      return !isExport && this.isContextual(tt._typeof);\n    }\n\n    applyImportPhase(\n      node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n      isExport: boolean,\n      phase: string | null,\n      loc?: Position,\n    ): void {\n      super.applyImportPhase(node, isExport, phase, loc);\n      if (isExport) {\n        (node as N.ExportNamedDeclaration).exportKind =\n          phase === \"type\" ? \"type\" : \"value\";\n      } else {\n        (node as N.ImportDeclaration).importKind =\n          phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n      }\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      if (this.match(tt.string)) {\n        node.importKind = \"value\";\n        return super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      let importNode;\n      if (\n        tokenIsIdentifier(this.state.type) &&\n        this.lookaheadCharCode() === charCodes.equalsTo\n      ) {\n        node.importKind = \"value\";\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n        );\n      } else if (this.isContextual(tt._type)) {\n        const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n          node as Undone<N.ImportDeclaration>,\n          /* isExport */ false,\n        );\n        if (this.lookaheadCharCode() === charCodes.equalsTo) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        } else {\n          importNode = super.parseImportSpecifiersAndAfter(\n            node as Undone<N.ImportDeclaration>,\n            maybeDefaultIdentifier,\n          );\n        }\n      } else {\n        importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      }\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, importNode);\n      }\n\n      return importNode;\n    }\n\n    parseExport(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        const nodeImportEquals = node as Undone<N.TsImportEqualsDeclaration>;\n        let maybeDefaultIdentifier: N.Identifier | null = null;\n        if (\n          this.isContextual(tt._type) &&\n          // We pass false here, because we are parsing an `import ... =`\n          this.isPotentialImportPhase(/* isExport */ false)\n        ) {\n          maybeDefaultIdentifier = this.parseMaybeImportPhase(\n            nodeImportEquals,\n            /* isExport */ false,\n          );\n        } else {\n          nodeImportEquals.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          nodeImportEquals,\n          maybeDefaultIdentifier,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        this.sawUnambiguousESM = true;\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n          decorators,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.ExportDefaultDeclaration[\"declaration\"] {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, init);\n        } else if (\n          !isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))\n        ) {\n          this.raise(\n            TSErrors.ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            init,\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      flags: ParseStatementFlag,\n      decorators?: N.Decorator[] | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(flags, decorators);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers(\n        {\n          allowedModifiers: modifiers,\n          disallowedModifiers: [\"in\", \"out\"],\n          stopOnStartOfClassStaticBlock: true,\n          errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n        },\n        member,\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(\n              TSErrors.StaticBlockCannotHaveModifier,\n              this.state.curPosition(),\n            );\n          }\n          super.parseClassStaticBlock(classBody, member as N.StaticBlock);\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, member);\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, member, {\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, member);\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, member);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, member);\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, member);\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, methodOrProp);\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, methodOrProp);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n      decorators: N.Decorator[] | null,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr, decorators)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr, decorators);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem<T extends N.Expression | N.RestElement | N.SpreadElement>(\n      node: T,\n      startLoc: Position,\n    ): T | N.TsTypeCastExpression {\n      const newNode = super.parseParenItem(node, startLoc);\n      if (this.eat(tt.question)) {\n        (newNode as N.Identifier).optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(startLoc);\n        typeCastNode.expression = node as N.Expression;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n          this.state.startLoc,\n        );\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingFlag,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare\n          ? BindingFlag.TYPE_TS_AMBIENT\n          : BindingFlag.TYPE_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutConstModifiers,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n    ): void {\n      if (!node.optional) {\n        if (this.eat(tt.bang)) {\n          node.definite = true;\n        } else if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(\n          TSErrors.DeclareClassFieldHasInitializer,\n          this.state.startLoc,\n        );\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(\n          TSErrors.AbstractPropertyHasInitializer,\n          this.state.startLoc,\n          {\n            propertyName:\n              key.type === \"Identifier\" && !node.computed\n                ? key.name\n                : `[${this.input.slice(this.offsetToSourcePos(key.start), this.offsetToSourcePos(key.end))}]`,\n          },\n        );\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error abstract may not index node\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, node);\n      }\n\n      // @ts-expect-error accessibility may not index node\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, node, {\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    parseClassAccessorProperty(\n      node: N.ClassAccessorProperty,\n    ): N.ClassAccessorProperty {\n      this.parseClassPropertyAnnotation(node);\n      if (node.optional) {\n        this.raise(TSErrors.AccessorCannotBeOptional, node);\n      }\n      return super.parseClassAccessorProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, typeParameters);\n      }\n\n      // @ts-expect-error declare does not exist in ClassMethod\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, method, { kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (\n        (node as N.Node).type === \"MethodDefinition\" &&\n        !Object.hasOwn(\n          (node as unknown as N.EstreeMethodDefinition).value,\n          \"body\",\n        )\n      ) {\n        return;\n      }\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue<T extends N.ObjectMember>(\n      prop: Undone<T>,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): T {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, isConstructor: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseConstModifier,\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, isConstructor);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\" | \"using\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      // We need to explicitly annotate 'abort' for microsoft/TypeScript#58170\n      const arrow = this.tryParse((abort: () => never) => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters\n              .params[0] as N.TsTypeParameter;\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(\n                TSErrors.SingleTypeParameterWithoutTrailingComma,\n                createPositionWithColumnOffset(parameter.loc.end, 1),\n                {\n                  typeParameterName: process.env.BABEL_8_BREAKING\n                    ? (parameter.name as N.Identifier).name\n                    : (parameter.name as string),\n                },\n              );\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.params[0].constraint &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, node);\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      }\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseFunctionParamType(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParameterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              node,\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, node);\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left) as N.Assignable;\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(\n      node: N.ParenthesizedExpression,\n      isLHS: boolean,\n    ): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSInstantiationExpression\"\n        | \"TSAsExpression\"\n        | \"TSSatisfiesExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingFlag,\n    ) {\n      switch (type) {\n        // Allow \"typecasts\" to appear on the left of assignment expressions,\n        // because it may be in an arrow function.\n        // e.g. `const f = (foo: number = 0) => foo;`\n        case \"TSTypeCastExpression\":\n          return true;\n        case \"TSParameterProperty\":\n          return \"parameter\";\n        case \"TSNonNullExpression\":\n        case \"TSInstantiationExpression\":\n          return \"expression\";\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\":\n        case \"TSTypeAssertion\":\n          return (\n            (binding !== BindingFlag.TYPE_NONE || !isUnparenthesizedInAssign) &&\n            ([\"expression\", true] as [string, boolean])\n          );\n        default:\n          return super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      if (this.state.type === tt._this) {\n        return this.parseIdentifier(/* liberal */ true);\n      }\n      return super.parseBindingAtom();\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(\n            expr,\n          ) as N.CallExpression;\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: (typeof charCodes)[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      }\n      return super.checkCommaAfterRest(close);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, node.typeAnnotation);\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          this.finishOp(tt.gt, 1);\n          return;\n        }\n        if (code === charCodes.lessThan) {\n          this.finishOp(tt.lt, 1);\n          return;\n        }\n      }\n      super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Expression {\n      (node.expression as N.Identifier).typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const { isAmbientContext: oldIsAmbientContext, strict: oldStrict } =\n        this.state;\n      this.state.isAmbientContext = true;\n      this.state.strict = false;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n        this.state.strict = oldStrict;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n      decorators: N.Decorator[] | null,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.maybeTakeDecorators(\n          decorators,\n          this.parseClass<N.ClassDeclaration>(\n            node as N.ClassDeclaration,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          ),\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, node);\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, method, {\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(this.offsetToSourcePos(key.start), this.offsetToSourcePos(key.end))}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingFlag | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport\n          ? BindingFlag.TYPE_TS_TYPE_IMPORT\n          : BindingFlag.TYPE_TS_VALUE_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          loc,\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier\n            ? BindingFlag.TYPE_TS_TYPE_IMPORT\n            : BindingFlag.TYPE_TS_VALUE_IMPORT,\n        );\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\n// If a const declaration has no type annotation and is initialized to\n// a string literal, numeric literal, or enum reference, then it is\n// allowed. In an ideal world, we'd check whether init was *actually* an\n// enum reference, but we allow anything that \"could be\" a literal enum\n// in `isPossiblyLiteralEnum` since we don't have all the information\n// that the typescript compiler has.\nfunction isValidAmbientConstInitializer(\n  expression: N.Expression,\n  estree: boolean,\n): boolean {\n  const { type } = expression;\n  if (expression.extra?.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const { value } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\n\nfunction isNumber(expression: N.Expression, estree: boolean): boolean {\n  if (estree) {\n    return (\n      expression.type === \"Literal\" &&\n      (typeof expression.value === \"number\" || \"bigint\" in expression)\n    );\n  }\n  return (\n    expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\"\n  );\n}\n\nfunction isNegativeNumber(expression: N.Expression, estree: boolean): boolean {\n  if (expression.type === \"UnaryExpression\") {\n    const { operator, argument } = expression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\" || expression.computed) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n","import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types.ts\";\nimport type Parser from \"../parser/index.ts\";\nimport type * as N from \"../types.ts\";\nimport { ParseErrorEnum } from \"../parse-error.ts\";\nimport type { Undone } from \"../parser/node.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\nimport type { BindingFlag } from \"../util/scopeflags.ts\";\nimport type { Position } from \"../util/location.ts\";\n\ntype PossiblePlaceholders = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholders;\n\ntype NodeOf<T extends keyof PossiblePlaceholders> = PossiblePlaceholders[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode<N.Placeholder<T>>();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: Undone<N.Placeholder> | Undone<NodeOf<PlaceholderTypes>>,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      let placeholder = node as unknown as N.Placeholder<T>;\n\n      if (!placeholder.expectedNode || !placeholder.type) {\n        placeholder = this.finishNode(\n          placeholder,\n          \"Placeholder\",\n        ) as unknown as N.Placeholder<T>;\n      }\n\n      placeholder.expectedNode = expectedNode;\n      return placeholder as unknown as MaybePlaceholder<T>;\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        this.finishOp(tt.placeholder, 2);\n      } else {\n        super.getTokenFromCode(code);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingFlag) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    chStartsBindingIdentifier(ch: number, pos: number): boolean {\n      if (super.chStartsBindingIdentifier(ch, pos)) {\n        return true;\n      }\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: MaybePlaceholder<\"Expression\">,\n    ): MaybePlaceholder<\"Statement\"> {\n      // @ts-expect-error placeholder typings\n      if (expr.type !== \"Placeholder\" || expr.extra?.parenthesized) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      const stmtPlaceholder = node as unknown as N.Placeholder<\"Statement\">;\n      stmtPlaceholder.name = (expr as N.Placeholder).name;\n      return this.finishPlaceholder(stmtPlaceholder, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(\n            PlaceholderErrors.ClassNameIsRequired,\n            this.state.startLoc,\n          );\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      decorators: N.Decorator[] | null,\n    ): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node, decorators);\n\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node2.specifiers = [];\n        node2.source = null;\n        node2.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node2, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode<N.ExportDefaultSpecifier>();\n      specifier.exported = placeholder;\n      node2.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node2, decorators);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(\n      node: Undone<\n        | N.ExportDefaultDeclaration\n        | N.ExportAllDeclaration\n        | N.ExportNamedDeclaration\n      >,\n      maybeDefaultIdentifier: N.Identifier | null,\n    ): node is Undone<N.ExportNamedDeclaration> {\n      if ((node as N.ExportNamedDeclaration).specifiers?.length) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(\n        node,\n        maybeDefaultIdentifier,\n      );\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (\n        this.state.start >\n        this.offsetToSourcePos(this.state.lastTokEndLoc.index)\n      ) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, this.state.lastTokEndLoc);\n      }\n    }\n  };\n","import type Parser from \"../parser/index.ts\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport type { ExpressionErrors } from \"../parser/util.ts\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName();\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n","import type Parser from \"./parser/index.ts\";\nimport type { PluginConfig } from \"./typings.ts\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (\n  superClass: new (...args: any) => Parser,\n) => new (...args: any) => Parser;\n\nconst PIPELINE_PROPOSALS = process.env.BABEL_8_BREAKING\n  ? [\"fsharp\", \"hack\"]\n  : [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\n\nexport function validatePlugins(pluginsMap: Map<string, any>) {\n  if (pluginsMap.has(\"decorators\")) {\n    if (pluginsMap.has(\"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport =\n      pluginsMap.get(\"decorators\").decoratorsBeforeExport;\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\n        \"'decoratorsBeforeExport' must be a boolean, if specified.\",\n      );\n    }\n\n    const allowCallParenthesized =\n      pluginsMap.get(\"decorators\").allowCallParenthesized;\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (pluginsMap.has(\"flow\") && pluginsMap.has(\"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (pluginsMap.has(\"placeholders\") && pluginsMap.has(\"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (pluginsMap.has(\"pipelineOperator\")) {\n    const proposal = pluginsMap.get(\"pipelineOperator\").proposal;\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = process.env.BABEL_8_BREAKING\n      ? pluginsMap.has(\"recordAndTuple\")\n      : pluginsMap.get(\"recordAndTuple\")?.syntaxType === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (pluginsMap.has(\"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (pluginsMap.has(\"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = pluginsMap.get(\"pipelineOperator\").topicToken;\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          `Plugin conflict between \\`[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]\\` and \\`${JSON.stringify([\"recordAndTuple\", pluginsMap.get(\"recordAndTuple\")])}\\`.`,\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        `Plugin conflict between \\`[\"pipelineOperator\", { proposal: \"smart\" }]\\` and \\`${JSON.stringify([\"recordAndTuple\", pluginsMap.get(\"recordAndTuple\")])}\\`.`,\n      );\n    }\n  }\n\n  if (pluginsMap.has(\"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please migrate to import attributes instead.\",\n      );\n    } else {\n      if (\n        pluginsMap.has(\"deprecatedImportAssert\") ||\n        pluginsMap.has(\"importAssertions\")\n      ) {\n        throw new Error(\n          \"Cannot combine importAssertions, deprecatedImportAssert and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption =\n        pluginsMap.get(\"moduleAttributes\").version;\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n  if (pluginsMap.has(\"importAssertions\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`importAssertions` has been removed in Babel 8, please use import attributes instead.\" +\n          \" To use the non-standard `assert` syntax you can enable the `deprecatedImportAssert` parser plugin.\",\n      );\n    } else if (pluginsMap.has(\"deprecatedImportAssert\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and deprecatedImportAssert plugins.\",\n      );\n    }\n  }\n  if (\n    !pluginsMap.has(\"deprecatedImportAssert\") &&\n    pluginsMap.has(\"importAttributes\") &&\n    pluginsMap.get(\"importAttributes\").deprecatedAssertSyntax\n  ) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"The 'importAttributes' plugin has been removed in Babel 8. If you need to enable support \" +\n          \"for the deprecated `assert` syntax, you can enable the `deprecatedImportAssert` parser plugin.\",\n      );\n    } else {\n      pluginsMap.set(\"deprecatedImportAssert\", {});\n    }\n  }\n\n  if (pluginsMap.has(\"recordAndTuple\")) {\n    const syntaxType = pluginsMap.get(\"recordAndTuple\").syntaxType;\n    if (syntaxType != null) {\n      if (process.env.BABEL_8_BREAKING) {\n        if (syntaxType === \"hash\") {\n          throw new Error(\n            'The syntaxType option is no longer required in Babel 8. You can safely remove { syntaxType: \"hash\" } from the recordAndTuple config.',\n          );\n        } else {\n          throw new Error(\n            'The syntaxType option is no longer required in Babel 8. Please remove { syntaxType: \"bar\" } from the recordAndTuple config and migrate to the hash syntax #{} and #[].',\n          );\n        }\n      } else {\n        const RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n        if (!RECORD_AND_TUPLE_SYNTAX_TYPES.includes(syntaxType)) {\n          throw new Error(\n            \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n              RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n          );\n        }\n      }\n    }\n  }\n\n  if (\n    pluginsMap.has(\"asyncDoExpressions\") &&\n    !pluginsMap.has(\"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n\n  if (\n    pluginsMap.has(\"optionalChainingAssign\") &&\n    pluginsMap.get(\"optionalChainingAssign\").version !== \"2023-07\"\n  ) {\n    throw new Error(\n      \"The 'optionalChainingAssign' plugin requires a 'version' option,\" +\n        \" representing the last proposal update. Currently, the\" +\n        \" only supported value is '2023-07'.\",\n    );\n  }\n\n  if (process.env.BABEL_8_BREAKING) {\n    if (pluginsMap.has(\"decimal\")) {\n      throw new Error(\n        \"The 'decimal' plugin has been removed in Babel 8. Please remove it from your configuration.\",\n      );\n    }\n    if (pluginsMap.has(\"importReflection\")) {\n      throw new Error(\n        \"The 'importReflection' plugin has been removed in Babel 8. Use 'sourcePhaseImports' instead, and \" +\n          \"replace 'import module' with 'import source' in your code.\",\n      );\n    }\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree.ts\";\nimport flow from \"./plugins/flow/index.ts\";\nimport jsx from \"./plugins/jsx/index.ts\";\nimport typescript from \"./plugins/typescript/index.ts\";\nimport placeholders from \"./plugins/placeholders.ts\";\nimport v8intrinsic from \"./plugins/v8intrinsic.ts\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n","import type { PluginList } from \"./plugin-utils.ts\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport interface Options {\n  sourceType?: SourceType;\n  sourceFilename?: string;\n  startIndex?: number;\n  startColumn?: number;\n  startLine?: number;\n  allowAwaitOutsideFunction?: boolean;\n  allowReturnOutsideFunction?: boolean;\n  allowNewTargetOutsideFunction?: boolean;\n  allowImportExportEverywhere?: boolean;\n  allowSuperOutsideMethod?: boolean;\n  allowUndeclaredExports?: boolean;\n  plugins?: PluginList;\n  strictMode?: boolean | undefined | null;\n  ranges?: boolean;\n  tokens?: boolean;\n  createImportExpressions?: boolean;\n  createParenthesizedExpressions?: boolean;\n  errorRecovery?: boolean;\n  attachComment?: boolean;\n  annexB?: boolean;\n}\n\ntype OptionsWithDefaults = { [P in keyof Options]-?: Options[P] };\n\nfunction createDefaultOptions(): OptionsWithDefaults {\n  return {\n    // Source type (\"script\" or \"module\") for different semantics\n    sourceType: \"script\",\n    // Source filename.\n    sourceFilename: undefined,\n    // Index (0-based) from which to start counting source. Useful for\n    // integration with other tools.\n    startIndex: 0,\n    // Column (0-based) from which to start counting source. Useful for\n    // integration with other tools.\n    startColumn: 0,\n    // Line (1-based) from which to start counting source. Useful for\n    // integration with other tools.\n    startLine: 1,\n    // When enabled, await at the top level is not considered an\n    // error.\n    allowAwaitOutsideFunction: false,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, new.target outside a function or class is not\n    // considered an error.\n    allowNewTargetOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program.\n    allowImportExportEverywhere: false,\n    // TODO\n    allowSuperOutsideMethod: false,\n    // When enabled, export statements can reference undeclared variables.\n    allowUndeclaredExports: false,\n    // An array of plugins to enable\n    plugins: [],\n    // TODO\n    strictMode: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // Adds all parsed tokens to a `tokens` property on the `File` node\n    tokens: false,\n    // Whether to create ImportExpression AST nodes (if false\n    // `import(foo)` will be parsed as CallExpression(Import, [Identifier(foo)])\n    createImportExpressions: process.env.BABEL_8_BREAKING ? true : false,\n    // Whether to create ParenthesizedExpression AST nodes (if false\n    // the parser sets extra.parenthesized on the expression nodes instead).\n    createParenthesizedExpressions: false,\n    // When enabled, errors are attached to the AST instead of being directly thrown.\n    // Some errors will still throw, because @babel/parser can't always recover.\n    errorRecovery: false,\n    // When enabled, comments will be attached to adjacent AST nodes as one of\n    // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n    // is vital to preserve comments after transform. If you don't print AST back,\n    // consider set this option to `false` for performance\n    attachComment: true,\n    // When enabled, the parser will support Annex B syntax.\n    // https://tc39.es/ecma262/#sec-additional-ecmascript-features-for-web-browsers\n    annexB: true,\n  };\n}\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): OptionsWithDefaults {\n  // https://github.com/babel/babel/pull/16918\n  // `options` is accessed frequently, please make sure it is a fast object.\n  // `%ToFastProperties` can make it a fast object, but the performance is the same as the slow object.\n  const options: any = createDefaultOptions();\n\n  if (opts == null) {\n    return options;\n  }\n  if (opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n\n  for (const key of Object.keys(options) as (keyof Options)[]) {\n    if (opts[key] != null) options[key] = opts[key];\n  }\n\n  if (options.startLine === 1) {\n    if (opts.startIndex == null && options.startColumn > 0) {\n      options.startIndex = options.startColumn;\n    } else if (opts.startColumn == null && options.startIndex > 0) {\n      options.startColumn = options.startIndex;\n    }\n  } else if (opts.startColumn == null || opts.startIndex == null) {\n    if (opts.startIndex != null || process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"With a `startLine > 1` you must also specify `startIndex` and `startColumn`.\",\n      );\n    }\n  }\n\n  return options;\n}\n","// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types.ts\";\nimport type * as N from \"../types.ts\";\nimport LValParser from \"./lval.ts\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier.ts\";\nimport {\n  type Position,\n  createPositionWithColumnOffset,\n} from \"../util/location.ts\";\nimport * as charCodes from \"charcodes\";\nimport { ScopeFlag, BindingFlag } from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport { ParamKind, functionFlags } from \"../util/production-parameter.ts\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope.ts\";\nimport { Errors, type ParseError } from \"../parse-error.ts\";\nimport {\n  UnparenthesizedPipeBodyDescriptions,\n  type UnparenthesizedPipeBodyTypes,\n} from \"../parse-error/pipeline-operator-errors.ts\";\nimport { setInnerComments } from \"./comments.ts\";\nimport { cloneIdentifier, type Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\n\nimport type { SourceType } from \"../options.ts\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(node: N.Function, isConstructor?: boolean): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key as\n      | N.Identifier\n      | N.StringLiteral\n      | N.NumericLiteral\n      | N.BigIntLiteral;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, key);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, key);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(\n    expr: N.Expression | N.PrivateName,\n    potentialArrowAt: number,\n  ): expr is N.ArrowFunctionExpression {\n    return (\n      expr.type === \"ArrowFunctionExpression\" &&\n      this.offsetToSourcePos(expr.start) === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression() as N.Expression & N.ParserOutput;\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt<N.SequenceExpression>(startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        const startIndex = startLoc.index;\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startIndex\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startIndex\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startIndex\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left as unknown as N.Assignable; // checked a few lines further down\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, this.finishNode(node, \"AssignmentExpression\"));\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt<N.ConditionalExpression>(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, left, {\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            // PrivateName must be followed by `in`, but we have `|>`\n            return left as N.Expression;\n          }\n          this.checkPipelineAtInfixOperator(left as N.Expression, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          // @ts-expect-error Remove this in Babel 8\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(\n              Errors.UnexpectedAwaitAfterPipelineBody,\n              this.state.startLoc,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(\n            Errors.MixingCoalesceWithLogical,\n            this.state.startLoc,\n          );\n        }\n\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    // PrivateName is followed by `in` and handled by the previous if statement\n    return left as N.Expression;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          // @ts-expect-error Remove this in Babel 8\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, this.state.startLoc);\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, startLoc, {\n        type: body.type as UnparenthesizedPipeBodyTypes,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, startLoc);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, node.argument);\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.recordAwaitIfAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, node);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, node);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, startLoc);\n        return this.parseAwait(startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(\n        updateExpressionNode.argument,\n        this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      );\n      return node;\n    }\n\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, (expr = this.finishNode(node, \"UpdateExpression\")));\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, this.state.startLoc);\n        if (this.lookaheadCharCode() === charCodes.leftParenthesis) {\n          // stop at `?.` when parsing `new a?.()`\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, startLoc);\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt<N.BindExpression>(startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type !== \"Super\",\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, startLoc);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      this.offsetToSourcePos(base.start) === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, node);\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, arg);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: Undone<N.Node> | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n    let decorators: N.Decorator[] | null = null;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import | N.ImportExpression>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (this.match(tt.parenL)) {\n          if (this.options.createImportExpressions) {\n            return this.parseImportCall(node as Undone<N.ImportExpression>);\n          } else {\n            return this.finishNode(node, \"Import\");\n          }\n        } else {\n          this.raise(Errors.UnsupportedImport, this.state.lastTokStartLoc);\n          return this.finishNode(node, \"Import\");\n        }\n\n      case tt._this:\n        node = this.startNode<N.ThisExpression>();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        decorators = this.parseDecorators();\n      // fall through\n      case tt._class:\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            this.startNode<N.ClassExpression>(),\n          ),\n          false,\n        );\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode<N.BindExpression>();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, callee);\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, this.state.startLoc, {\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName() as unknown as N.Expression;\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        }\n        this.unexpected();\n        break;\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n        } else {\n          this.unexpected();\n        }\n        break;\n      }\n\n      default:\n        if (!process.env.BABEL_8_BREAKING && type === tt.decimal) {\n          return this.parseDecimalLiteral(this.state.value);\n        }\n\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadInLineCharCode() === charCodes.leftCurlyBrace\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(\n                this.startNodeAtNode(id),\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference<\n    T extends N.PipelinePrimaryTopicReference | N.TopicReference,\n  >(\n    node: Undone<T>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): T {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          startLoc,\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, startLoc, {\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, startLoc);\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, this.state.curPosition());\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(ParamKind.PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, node);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, node);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, node);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      createPositionWithColumnOffset(this.state.startLoc, 1),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, node.property, {\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(\n    this: Parser,\n    node: Undone<N.MetaProperty | N.ImportExpression>,\n  ): N.MetaProperty | N.ImportExpression {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, id);\n      }\n      this.sawUnambiguousESM = true;\n    } else if (this.isContextual(tt._source) || this.isContextual(tt._defer)) {\n      const isSource = this.isContextual(tt._source);\n\n      // TODO: The proposal doesn't mention import.defer yet because it was\n      // pending on a decision for import.source. Wait to enable it until it's\n      // included in the proposal.\n      if (!isSource) this.unexpected();\n\n      this.expectPlugin(\n        isSource ? \"sourcePhaseImports\" : \"deferredImportEvaluation\",\n      );\n      if (!this.options.createImportExpressions) {\n        throw this.raise(\n          Errors.DynamicImportPhaseRequiresImportExpressions,\n          this.state.startLoc,\n          {\n            phase: this.state.value,\n          },\n        );\n      }\n      this.next();\n      (node as Undone<N.ImportExpression>).phase = isSource\n        ? \"source\"\n        : \"defer\";\n      return this.parseImportCall(node as Undone<N.ImportExpression>);\n    }\n\n    return this.parseMetaProperty(node as Undone<N.MetaProperty>, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(\n      node,\n      \"raw\",\n      this.input.slice(this.offsetToSourcePos(node.start), this.state.end),\n    );\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  // TODO: Remove this in Babel 8\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.startNode<N.RegExpLiteral>();\n    this.addExtra(\n      node,\n      \"raw\",\n      this.input.slice(this.offsetToSourcePos(node.start), this.state.end),\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    this.next();\n    return this.finishNode(node, \"RegExpLiteral\");\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartLoc = this.state.startLoc;\n    const exprList: (N.Expression | N.RestElement)[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(innerStartLoc);\n      val.expressions = exprList as N.Expression[];\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(startLoc: Position, expression: N.Expression): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n\n      this.takeSurroundingComments(\n        expression,\n        startLoc.index,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression =\n      this.startNodeAt<N.ParenthesizedExpression>(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem<T extends N.Expression | N.RestElement | N.SpreadElement>(\n    node: T,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): T | N.TypeCastExpression | N.TsTypeCastExpression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (\n        !this.scope.inNonArrowFunction &&\n        !this.scope.inClass &&\n        !this.options.allowNewTargetOutsideFunction\n      ) {\n        this.raise(Errors.UnexpectedNewTarget, metaProp);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    const isImport = this.match(tt._import);\n    const callee = this.parseNoCallExpr();\n    node.callee = callee;\n    if (\n      isImport &&\n      (callee.type === \"Import\" || callee.type === \"ImportExpression\")\n    ) {\n      this.raise(Errors.ImportCallNotNewExpression, callee);\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(\n          Errors.InvalidEscapeSequenceTemplate,\n          // FIXME: Adding 1 is probably wrong.\n          createPositionWithColumnOffset(\n            this.state.firstInvalidTemplateEscapePos,\n            1,\n          ),\n        );\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    let curElt = this.parseTemplateElement(isTagged);\n    const quasis = [curElt];\n    const substitutions = [];\n    while (!curElt.tail) {\n      substitutions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    // Type cast from (N.Expression[] | N.TsType[]). parseTemplateSubstitution\n    // returns consistent results.\n    node.expressions = substitutions as N.Expression[] | N.TsType[];\n    node.quasis = quasis;\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression | N.TsType {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, prop);\n      }\n\n      if (!process.env.BABEL_8_BREAKING) {\n        // @ts-expect-error shorthand may not index prop\n        if (prop.shorthand) {\n          this.addExtra(prop, \"shorthand\", true);\n        }\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: Undone<N.Node>): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStartLoc.index);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(\n    prop: Undone<N.ObjectProperty>,\n  ): prop is typeof prop & { key: N.Identifier } {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, this.state.startLoc);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const { key } = prop;\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, this.state.curPosition(), {\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        method,\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, method);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, shorthandAssignLoc);\n        }\n        prop.value = this.parseMaybeDefault(\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue<T extends N.ObjectMember>(\n    this: Parser,\n    prop: Undone<T>,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    const node = (this.parseObjectMethod(\n      prop as Undone<N.ObjectMethod>,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n    ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      )) as T;\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, privateKeyLoc);\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            if (!process.env.BABEL_8_BREAKING && type === tt.decimal) {\n              key = this.parseDecimalLiteral(value);\n              break;\n            }\n\n            this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(\n      ScopeFlag.FUNCTION |\n        ScopeFlag.SUPER |\n        (inClassScope ? ScopeFlag.CLASS : 0) |\n        (allowDirectSuper ? ScopeFlag.DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params:\n      | Array<N.Expression | N.SpreadElement>\n      | Array<N.Expression | N.RestElement>,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(ScopeFlag.FUNCTION | ScopeFlag.ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= ParamKind.PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params:\n      | Array<N.Expression | N.SpreadElement>\n      | Array<N.Expression | N.RestElement>,\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(\n        this.prodParam.currentFlags() | ParamKind.PARAM_RETURN,\n      );\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(\n              Errors.IllegalLanguageModeDirective,\n              // @ts-expect-error kind may not index node\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                ? // @ts-expect-error node.key has been guarded\n                  node.key.loc.end\n                : node,\n            );\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(\n              node.id,\n              BindingFlag.TYPE_OUTSIDE,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty): boolean {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        formalParameters,\n        BindingFlag.TYPE_VAR,\n        checkClashes,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | N.SpreadElement | N.ArgumentPlaceholder | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, this.state.curPosition(), {\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, this.state.startLoc);\n      }\n      const node = this.startNode<N.ArgumentPlaceholder>();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, startLoc, {\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n        ? isStrictBindReservedWord\n        : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, startLoc, {\n        reservedWord: word,\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, startLoc);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, startLoc);\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, startLoc);\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError(startLoc);\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, startLoc);\n        return;\n      }\n    }\n  }\n\n  // Returns wether `await` is allowed or not in this context, and if it is\n  // keeps track of it to determine whether a module uses top-level await.\n  recordAwaitIfAllowed(): boolean {\n    const isAwaitAllowed =\n      this.prodParam.hasAwait ||\n      (this.options.allowAwaitOutsideFunction && !this.scope.inFunction);\n\n    if (isAwaitAllowed && !this.scope.inFunction) {\n      this.state.hasTopLevelAwait = true;\n    }\n\n    return isAwaitAllowed;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(this: Parser, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, node);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``, await of []\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      (type === tt._of && !this.state.containsEsc) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportCall\n  parseImportCall(\n    this: Parser,\n    node: Undone<N.ImportExpression>,\n  ): N.ImportExpression {\n    this.next(); // eat tt.parenL\n    node.source = this.parseMaybeAssignAllowIn();\n    node.options = null;\n    if (this.eat(tt.comma)) {\n      if (!this.match(tt.parenR)) {\n        node.options = this.parseMaybeAssignAllowIn();\n\n        if (this.eat(tt.comma) && !this.match(tt.parenR)) {\n          // keep consuming arguments, to then throw ImportCallArity\n          // instead of \"expected )\"\n          do {\n            this.parseMaybeAssignAllowIn();\n          } while (this.eat(tt.comma) && !this.match(tt.parenR));\n\n          this.raise(Errors.ImportCallArity, node);\n        }\n      }\n    }\n    this.expect(tt.parenR);\n    return this.finishNode(node, \"ImportExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    // @ts-expect-error Remove this in Babel 8\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, leftStartLoc);\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr: N.Expression, startLoc: Position) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, this.state.startLoc);\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, startLoc);\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    // @ts-expect-error Remove this in Babel 8\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = ParamKind.PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | ParamKind.PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = ParamKind.PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~ParamKind.PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    if (!this.match(tt.braceL)) {\n      this.unexpected(null, tt.braceL);\n    }\n    // start program node immediately after `{`\n    const program = this.startNodeAt<N.Program>(this.state.endLoc);\n    this.next(); // eat `{`\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n","import type * as N from \"../types.ts\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types.ts\";\nimport ExpressionParser from \"./expression.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier.ts\";\nimport * as charCodes from \"charcodes\";\nimport {\n  ScopeFlag,\n  ClassElementType,\n  BindingFlag,\n} from \"../util/scopeflags.ts\";\nimport { ExpressionErrors } from \"./util.ts\";\nimport { ParamKind, functionFlags } from \"../util/production-parameter.ts\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope.ts\";\nimport type { SourceType } from \"../options.ts\";\nimport { Token } from \"../tokenizer/index.ts\";\nimport type { Position } from \"../util/location.ts\";\nimport { createPositionWithColumnOffset } from \"../util/location.ts\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node.ts\";\nimport type Parser from \"./index.ts\";\nimport { ParseBindingListFlags } from \"./lval.ts\";\nimport { LoopLabelKind } from \"../tokenizer/state.ts\";\n\nconst loopLabel = { kind: LoopLabelKind.Loop } as const,\n  switchLabel = { kind: LoopLabelKind.Switch } as const;\n\nexport const enum ParseFunctionFlag {\n  Expression = 0b0000,\n  Declaration = 0b0001,\n  HangingDeclaration = 0b0010,\n  NullableId = 0b0100,\n  Async = 0b1000,\n}\n\nexport const enum ParseStatementFlag {\n  StatementOnly = 0b0000,\n  AllowImportExport = 0b0001,\n  AllowDeclaration = 0b0010,\n  AllowFunctionDeclaration = 0b0100,\n  AllowLabeledFunction = 0b1000,\n}\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n */\nfunction babel7CompatTokens(\n  tokens: (Token | N.Comment)[],\n  input: string,\n  startIndex: number,\n) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start - startIndex) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(\n    this: Parser,\n    file: Undone<N.File>,\n    program: Undone<N.Program>,\n  ): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(\n        this.tokens,\n        this.input,\n        this.startIndex,\n      );\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (this.inModule) {\n      if (\n        !this.options.allowUndeclaredExports &&\n        this.scope.undefinedExports.size > 0\n      ) {\n        for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n          this.raise(Errors.ModuleExportUndefined, at, { localName });\n        }\n      }\n      this.addExtra(program, \"topLevelAwait\", this.state.hasTopLevelAwait);\n    }\n    let finishedProgram: N.Program;\n    if (end === tt.eof) {\n      // finish at eof for top level program\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      // finish immediately before the end token\n      finishedProgram = this.finishNodeAt(\n        program,\n        \"Program\",\n        createPositionWithColumnOffset(this.state.startLoc, -1),\n      );\n    }\n    return finishedProgram;\n  }\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(\n      this.offsetToSourcePos(directiveLiteral.start),\n      this.offsetToSourcePos(directiveLiteral.end),\n    );\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n\n  chStartsBindingIdentifier(ch: number, pos: number) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identifier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === charCodes.backslash) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  chStartsBindingPattern(ch: number) {\n    return (\n      ch === charCodes.leftSquareBracket || ch === charCodes.leftCurlyBrace\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `let` and declaration is allowed, check if it\n   * starts a variable declaration so that it should be interpreted as a keyword.\n   */\n  hasFollowingBindingAtom(): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      this.chStartsBindingPattern(nextCh) ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  /**\n   * Assuming we have seen a contextual `using` and declaration is allowed, check if it\n   * starts a variable declaration in the same line so that it should be interpreted as\n   * a keyword.\n   */\n  hasInLineFollowingBindingIdentifierOrBrace(): boolean {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return (\n      nextCh === charCodes.leftCurlyBrace ||\n      this.chStartsBindingIdentifier(nextCh, next)\n    );\n  }\n\n  startsUsingForOf(): boolean {\n    const { type, containsEsc } = this.lookahead();\n    if (type === tt._of && !containsEsc) {\n      // `using of` must start a for-lhs-of statement\n      return false;\n    } else if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n\n  startsAwaitUsing(): boolean {\n    let next = this.nextTokenInLineStart();\n    if (this.isUnparsedContextual(next, \"using\")) {\n      next = this.nextTokenInLineStartSince(next + 5);\n      const nextCh = this.codePointAtPos(next);\n      if (this.chStartsBindingIdentifier(nextCh, next)) {\n        this.expectPlugin(\"explicitResourceManagement\");\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleItem\n  parseModuleItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowImportExport |\n        ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        // This function is actually also used to parse StatementItems,\n        // which with Annex B enabled allows labeled functions.\n        ParseStatementFlag.AllowLabeledFunction,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-StatementListItem\n  parseStatementListItem(this: Parser) {\n    return this.parseStatementLike(\n      ParseStatementFlag.AllowDeclaration |\n        ParseStatementFlag.AllowFunctionDeclaration |\n        (!this.options.annexB || this.state.strict\n          ? 0\n          : ParseStatementFlag.AllowLabeledFunction),\n    );\n  }\n\n  parseStatementOrSloppyAnnexBFunctionDeclaration(\n    this: Parser,\n    allowLabeledFunction: boolean = false,\n  ) {\n    let flags: ParseStatementFlag = ParseStatementFlag.StatementOnly;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= ParseStatementFlag.AllowFunctionDeclaration;\n      if (allowLabeledFunction) {\n        flags |= ParseStatementFlag.AllowLabeledFunction;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  parseStatement(this: Parser) {\n    return this.parseStatementLike(ParseStatementFlag.StatementOnly);\n  }\n\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatementLike(\n    this: Parser,\n    flags: ParseStatementFlag,\n  ):\n    | N.Statement\n    | N.Declaration\n    | N.ImportDeclaration\n    | N.ExportDefaultDeclaration\n    | N.ExportNamedDeclaration\n    | N.ExportAllDeclaration {\n    let decorators: N.Decorator[] | null = null;\n\n    if (this.match(tt.at)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    flags: ParseStatementFlag,\n    decorators?: N.Decorator[] | null,\n  ): N.Statement {\n    const startType = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & ParseStatementFlag.AllowDeclaration);\n    const allowFunctionDeclaration = !!(\n      flags & ParseStatementFlag.AllowFunctionDeclaration\n    );\n    const topLevel = flags & ParseStatementFlag.AllowImportExport;\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (startType) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoWhileStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(\n            this.state.strict\n              ? Errors.StrictFunction\n              : this.options.annexB\n                ? Errors.SloppyFunctionAnnexB\n                : Errors.SloppyFunction,\n            this.state.startLoc,\n          );\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !allowDeclaration && allowFunctionDeclaration,\n        );\n      case tt._class:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(\n          this.maybeTakeDecorators(\n            decorators,\n            node as Undone<N.ClassDeclaration>,\n          ),\n          true,\n        );\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._await:\n        // [+Await] await [no LineTerminator here] using [no LineTerminator here] BindingList[+Using]\n        if (!this.state.containsEsc && this.startsAwaitUsing()) {\n          if (!this.recordAwaitIfAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, node);\n          } else if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, node);\n          }\n          this.next(); // eat 'await'\n          return this.parseVarStatement(\n            node as Undone<N.VariableDeclaration>,\n            \"await using\",\n          );\n        }\n        break;\n      case tt._using:\n        // using [no LineTerminator here] BindingList[+Using]\n        if (\n          this.state.containsEsc ||\n          !this.hasInLineFollowingBindingIdentifierOrBrace()\n        ) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, this.state.startLoc);\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, this.state.startLoc);\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          \"using\",\n        );\n      case tt._let: {\n        if (this.state.containsEsc) {\n          break;\n        }\n        // `let [` is an explicit negative lookahead for\n        // ExpressionStatement, so special-case it first.\n        const next = this.nextTokenStart();\n        const nextCh = this.codePointAtPos(next);\n        if (nextCh !== charCodes.leftSquareBracket) {\n          if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n          if (\n            !this.chStartsBindingIdentifier(nextCh, next) &&\n            nextCh !== charCodes.leftCurlyBrace\n          ) {\n            break;\n          }\n        }\n      }\n      // fall through\n      case tt._const: {\n        if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, this.state.startLoc);\n        }\n      }\n      // fall through\n      case tt._var: {\n        const kind = this.state.value;\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n      }\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, this.state.startLoc);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (startType === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n            decorators,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (!allowDeclaration) {\n            this.raise(\n              Errors.AsyncFunctionInSingleStatementContext,\n              this.state.startLoc,\n            );\n          }\n          this.next(); // eat 'async'\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !allowDeclaration && allowFunctionDeclaration,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(startType) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        expr,\n        flags,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n        decorators,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, node);\n    }\n  }\n\n  decoratorsEnabledBeforeExport(): boolean {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return (\n      this.hasPlugin(\"decorators\") &&\n      this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false\n    );\n  }\n\n  // Attach the decorators to the given class.\n  // NOTE: This method changes the .start location of the class, and thus\n  // can affect comment attachment. Calling it before or after finalizing\n  // the class node (and thus finalizing its comments) changes how comments\n  // before the `class` keyword or before the final .start location of the\n  // class are attached.\n  maybeTakeDecorators<T extends Undone<N.Class>>(\n    maybeDecorators: N.Decorator[] | null,\n    classNode: T,\n    exportNode?: Undone<N.ExportDefaultDeclaration | N.ExportNamedDeclaration>,\n  ): T {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        // Note: decorators attachment is only attempred multiple times\n        // when the class is part of an export declaration.\n        if (\n          typeof this.getPluginOption(\n            \"decorators\",\n            \"decoratorsBeforeExport\",\n          ) !== \"boolean\"\n        ) {\n          // If `decoratorsBeforeExport` was set to `true` or `false`, we\n          // already threw an error about decorators not being in a valid\n          // position.\n          this.raise(\n            Errors.DecoratorsBeforeAfterExport,\n            classNode.decorators[0],\n          );\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): N.Decorator[] {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(tt.at));\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, this.state.startLoc);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, this.state.startLoc);\n    }\n\n    return decorators;\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(\n            Errors.DecoratorArgumentsOutsideParentheses,\n            paramsStartLoc,\n          );\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt<N.MemberExpression>(startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode<N.CallExpression>(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === LoopLabelKind.Loop)) {\n          break;\n        }\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, node, { type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  // https://tc39.es/ecma262/#prod-DoWhileStatement\n  parseDoWhileStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isContextual(tt._await) && this.recordAwaitIfAllowed()) {\n      awaitAt = this.state.startLoc;\n      this.next();\n    }\n    this.scope.enter(ScopeFlag.OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    {\n      const startsWithAwaitUsing =\n        this.isContextual(tt._await) && this.startsAwaitUsing();\n      const starsWithUsingDeclaration =\n        startsWithAwaitUsing ||\n        (this.isContextual(tt._using) && this.startsUsingForOf());\n      const isLetOrUsing =\n        (startsWithLet && this.hasFollowingBindingAtom()) ||\n        starsWithUsingDeclaration;\n\n      if (this.match(tt._var) || this.match(tt._const) || isLetOrUsing) {\n        const initNode = this.startNode<N.VariableDeclaration>();\n        let kind;\n        if (startsWithAwaitUsing) {\n          kind = \"await using\";\n          if (!this.recordAwaitIfAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, this.state.startLoc);\n          }\n          this.next(); // eat 'await'\n        } else {\n          kind = this.state.value;\n        }\n        this.next();\n        this.parseVar(initNode, true, kind);\n        const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n        const isForIn = this.match(tt._in);\n        if (isForIn && starsWithUsingDeclaration) {\n          this.raise(Errors.ForInUsing, init);\n        }\n        if (\n          (isForIn || this.isContextual(tt._of)) &&\n          init.declarations.length === 1\n        ) {\n          return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n        }\n        if (awaitAt !== null) {\n          this.unexpected(awaitAt);\n        }\n        return this.parseFor(node as Undone<N.ForStatement>, init);\n      }\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, init);\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, init);\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { type });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  // https://tc39.es/ecma262/#prod-HoistableDeclaration\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync: boolean,\n    isHangingDeclaration: boolean,\n  ): N.FunctionDeclaration {\n    this.next(); // eat 'function'\n    return this.parseFunction(\n      node,\n      ParseFunctionFlag.Declaration |\n        (isHangingDeclaration ? ParseFunctionFlag.HangingDeclaration : 0) |\n        (isAsync ? ParseFunctionFlag.Async : 0),\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-IfStatement\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    // Annex B.3.3\n    // https://tc39.es/ecma262/#sec-functiondeclarations-in-ifstatement-statement-clauses\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(tt._else)\n      ? this.parseStatementOrSloppyAnnexBFunctionDeclaration()\n      : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, this.state.startLoc);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-SwitchStatement\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(ScopeFlag.OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode<N.SwitchCase>()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              Errors.MultipleDefaultsInSwitch,\n              this.state.lastTokStartLoc,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, this.state.lastTokEndLoc);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    this.scope.enter(\n      this.options.annexB && param.type === \"Identifier\"\n        ? ScopeFlag.SIMPLE_CATCH\n        : 0,\n    );\n    this.checkLVal(\n      param,\n      { type: \"CatchClause\" },\n      BindingFlag.TYPE_CATCH_PARAM,\n    );\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(ScopeFlag.OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, node);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-VariableStatement\n  // https://tc39.es/ecma262/#prod-LexicalDeclaration\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  // https://tc39.es/ecma262/#prod-WhileStatement\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, this.state.startLoc);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-LabelledStatement\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    flags: ParseStatementFlag,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, expr, {\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? LoopLabelKind.Loop\n      : this.match(tt._switch)\n        ? LoopLabelKind.Switch\n        : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.sourceToOffsetPos(this.state.start);\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.sourceToOffsetPos(this.state.start),\n    });\n    // https://tc39.es/ecma262/#prod-LabelledItem\n    node.body =\n      flags & ParseStatementFlag.AllowLabeledFunction\n        ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true)\n        : this.parseStatement();\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    decorators: N.Decorator[] | null,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(ScopeFlag.OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = topLevel\n        ? this.parseModuleItem()\n        : this.parseStatementListItem();\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    afterBlockParse?.call(this, hasStrictModeDirective);\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        !this.options.annexB ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, init, {\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, init, {\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(\n            Errors.DeclarationMissingInitializer,\n            this.state.lastTokEndLoc,\n            {\n              kind: \"destructuring\",\n            },\n          );\n        } else if (\n          (kind === \"const\" || kind === \"using\" || kind === \"await using\") &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(\n            Errors.DeclarationMissingInitializer,\n            this.state.lastTokEndLoc,\n            { kind },\n          );\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n  ): void {\n    const id = this.parseBindingAtom();\n    if (kind === \"using\" || kind === \"await using\") {\n      if (id.type === \"ArrayPattern\" || id.type === \"ObjectPattern\") {\n        this.raise(Errors.UsingDeclarationHasBindingPattern, id.loc.start);\n      }\n    }\n    this.checkLVal(\n      id,\n      { type: \"VariableDeclarator\" },\n      kind === \"var\" ? BindingFlag.TYPE_VAR : BindingFlag.TYPE_LEXICAL,\n    );\n    decl.id = id;\n  }\n\n  // https://tc39.es/ecma262/#prod-AsyncFunctionExpression\n  parseAsyncFunctionExpression(\n    this: Parser,\n    node: Undone<N.FunctionExpression>,\n  ): N.FunctionExpression {\n    return this.parseFunction(node, ParseFunctionFlag.Async);\n  }\n\n  // Parse a function declaration or expression (depending on the\n  // ParseFunctionFlag.Declaration flag).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    flags: ParseFunctionFlag = ParseFunctionFlag.Expression,\n  ): T {\n    const hangingDeclaration = flags & ParseFunctionFlag.HangingDeclaration;\n    const isDeclaration = !!(flags & ParseFunctionFlag.Declaration);\n    const requireId = isDeclaration && !(flags & ParseFunctionFlag.NullableId);\n    const isAsync = !!(flags & ParseFunctionFlag.Async);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star)) {\n      if (hangingDeclaration) {\n        this.raise(\n          Errors.GeneratorInSingleStatementContext,\n          this.state.startLoc,\n        );\n      }\n      this.next(); // eat *\n      node.generator = true;\n    }\n\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(ScopeFlag.FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* isConstructor */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isDeclaration && !hangingDeclaration) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    isConstructor?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      ParseBindingListFlags.IS_FUNCTION_PARAMS |\n        (isConstructor ? ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS : 0),\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BindingFlag.TYPE_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      !this.options.annexB || this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BindingFlag.TYPE_VAR\n          : BindingFlag.TYPE_LEXICAL\n        : BindingFlag.TYPE_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next(); // 'class'\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  nameIsConstructor(key: N.Expression | N.PrivateName): boolean {\n    return (\n      (key.type === \"Identifier\" && key.name === \"constructor\") ||\n      (key.type === \"StringLiteral\" && key.value === \"constructor\")\n    );\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed && !method.static && this.nameIsConstructor(method.key)\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(\n              Errors.DecoratorSemicolon,\n              this.state.lastTokEndLoc,\n            );\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, member);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, this.state.startLoc);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, publicMethod.key);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      !this.state.containsEsc && tokenIsIdentifier(this.state.type);\n    const key = this.parseClassElementName(member);\n    const maybeContextualKw = isContextual ? (key as N.Identifier).name : null;\n    const isPrivate = this.isPrivateName(key);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, key);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, key);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (maybeContextualKw === \"async\" && !this.isLineTerminator()) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, publicMethod.key);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      (maybeContextualKw === \"get\" || maybeContextualKw === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = maybeContextualKw;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, publicMethod.key);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (maybeContextualKw === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier | N.PrivateName {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, this.state.startLoc);\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, this.state.startLoc);\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    this.parsePropertyName(member);\n    return member.key;\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(\n      ScopeFlag.CLASS | ScopeFlag.STATIC_BLOCK | ScopeFlag.SUPER,\n    );\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(ParamKind.PARAM);\n    const body: N.Statement[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, member);\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (!prop.computed && this.nameIsConstructor(prop.key)) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, prop.key);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      ClassElementType.OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed && this.nameIsConstructor(prop.key)) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, prop.key);\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key as N.PrivateName),\n        ClassElementType.OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? ClassElementType.STATIC_GETTER\n          : ClassElementType.INSTANCE_GETTER\n        : node.kind === \"set\"\n          ? node.static\n            ? ClassElementType.STATIC_SETTER\n            : ClassElementType.INSTANCE_SETTER\n          : ClassElementType.OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<N.ClassPrivateMethod | N.TSDeclareMethod>,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key as N.PrivateName),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(ScopeFlag.CLASS | ScopeFlag.SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(ParamKind.PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingFlag = BindingFlag.TYPE_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, this.state.startLoc);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    decorators: N.Decorator[] | null,\n  ): N.AnyExport {\n    const maybeDefaultIdentifier = this.parseMaybeImportPhase(\n      node,\n      /* isExport */ true,\n    );\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, tt.braceL);\n    }\n\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, tt._from);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (node2.declaration?.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      const node2 = node as Undone<N.ExportDefaultDeclaration>;\n      // export default ...\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl as N.ClassDeclaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n\n      this.checkExport(node2, true, true);\n\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n\n    this.unexpected(null, tt.braceL);\n  }\n\n  eatExportStar(\n    node: Undone<N.Node>,\n  ): node is Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration> {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (maybeDefaultIdentifier || this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\", maybeDefaultIdentifier?.loc.start);\n      const id = maybeDefaultIdentifier || this.parseIdentifier(true);\n      const specifier = this.startNodeAtNode<N.ExportDefaultSpecifier>(id);\n      specifier.exported = id;\n      (node as Undone<N.ExportNamedDeclaration>).specifiers = [\n        this.finishNode(specifier, \"ExportDefaultSpecifier\"),\n      ];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(\n    node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (this.isContextual(tt._as)) {\n      (node as Undone<N.ExportNamedDeclaration>).specifiers ??= [];\n\n      const specifier = this.startNodeAt<N.ExportNamespaceSpecifier>(\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      (node as Undone<N.ExportNamedDeclaration>).specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(\n    node: Undone<N.Node>,\n  ): node is Undone<N.ExportNamedDeclaration> {\n    if (this.match(tt.braceL)) {\n      const node2 = node as Undone<N.ExportNamedDeclaration>;\n\n      if (!node2.specifiers) node2.specifiers = [];\n      const isTypeExport = node2.exportKind === \"type\";\n      node2.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node2.source = null;\n      node2.declaration = null;\n      if (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"importAssertions\")) {\n        node2.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenInLineStart();\n    return this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression(\n    this: Parser,\n  ): N.ExportDefaultDeclaration[\"declaration\"] {\n    const expr = this.startNode();\n\n    if (this.match(tt._function)) {\n      this.next();\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId,\n      );\n    } else if (this.isAsyncFunction()) {\n      this.next(); // eat 'async'\n      this.next(); // eat 'function'\n      return this.parseFunction(\n        expr as Undone<N.FunctionDeclaration>,\n        ParseFunctionFlag.Declaration |\n          ParseFunctionFlag.NullableId |\n          ParseFunctionFlag.Async,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, this.state.startLoc);\n      }\n      return this.parseClass(\n        this.maybeTakeDecorators(\n          this.parseDecorators(false),\n          this.startNode<N.ClassDeclaration>(),\n        ),\n        true,\n        true,\n      );\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, this.state.startLoc);\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    if (this.match(tt._class)) {\n      const node = this.parseClass(\n        this.startNode<N.ClassDeclaration>(),\n        true,\n        false,\n      );\n      return node;\n    }\n    return this.parseStatementListItem() as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      this.maybeParseImportAttributes(node);\n      this.checkJSONModuleImport(node);\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (\n          this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true\n        ) {\n          this.raise(Errors.DecoratorBeforeExport, this.state.startLoc);\n        }\n\n        return true;\n      }\n    }\n\n    if (this.isContextual(tt._using)) {\n      this.raise(Errors.UsingDeclarationExport, this.state.startLoc);\n      return true;\n    }\n\n    if (this.isContextual(tt._await) && this.startsAwaitUsing()) {\n      this.raise(Errors.UsingDeclarationExport, this.state.startLoc);\n      return true;\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<\n      | N.ExportNamedDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportDefaultDeclaration\n    >,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, declaration);\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers?.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, specifier, {\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if ((node as Undone<N.ExportNamedDeclaration>).declaration) {\n        const decl = (node as Undone<N.ExportNamedDeclaration>).declaration;\n        // Exported declarations\n        if (\n          decl.type === \"FunctionDeclaration\" ||\n          decl.type === \"ClassDeclaration\"\n        ) {\n          const { id } = decl;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (decl.type === \"VariableDeclaration\") {\n          for (const declaration of decl.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, node);\n      } else {\n        this.raise(Errors.DuplicateExport, node, { exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode<N.ExportSpecifier>();\n      node.local = this.parseModuleExportName() as N.Identifier;\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = loneSurrogate.exec(result.value);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, result, {\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkImportReflection(node: Undone<N.ImportDeclaration>) {\n    const { specifiers } = node;\n    const singleBindingType =\n      specifiers.length === 1 ? specifiers[0].type : null;\n\n    if (node.phase === \"source\") {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(\n          Errors.SourcePhaseImportRequiresDefault,\n          specifiers[0].loc.start,\n        );\n      }\n    } else if (node.phase === \"defer\") {\n      if (singleBindingType !== \"ImportNamespaceSpecifier\") {\n        this.raise(\n          Errors.DeferImportRequiresNamespace,\n          specifiers[0].loc.start,\n        );\n      }\n    } else if (node.module) {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, specifiers[0].loc.start);\n      }\n      if (node.assertions?.length > 0) {\n        this.raise(\n          Errors.ImportReflectionHasAssertion,\n          specifiers[0].loc.start,\n        );\n      }\n    }\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(\n            Errors.ImportJSONBindingNotDefault,\n            nonDefaultNamedSpecifier.loc.start,\n          );\n        }\n      }\n    }\n  }\n\n  isPotentialImportPhase(isExport: boolean): boolean {\n    if (isExport) return false;\n    return (\n      this.isContextual(tt._source) ||\n      this.isContextual(tt._defer) ||\n      (!process.env.BABEL_8_BREAKING && this.isContextual(tt._module))\n    );\n  }\n\n  applyImportPhase(\n    node: Undone<N.ImportDeclaration | N.ExportNamedDeclaration>,\n    isExport: boolean,\n    phase: string | null,\n    loc?: Position,\n  ): void {\n    if (isExport) {\n      if (!process.env.IS_PUBLISH) {\n        if (\n          (!process.env.BABEL_8_BREAKING && phase === \"module\") ||\n          phase === \"source\"\n        ) {\n          throw new Error(\n            `Assertion failure: export declarations do not support the '${phase}' phase.`,\n          );\n        }\n      }\n      return;\n    }\n\n    if (!process.env.BABEL_8_BREAKING && phase === \"module\") {\n      this.expectPlugin(\"importReflection\", loc);\n      (node as N.ImportDeclaration).module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      (node as N.ImportDeclaration).module = false;\n    }\n\n    if (phase === \"source\") {\n      this.expectPlugin(\"sourcePhaseImports\", loc);\n      (node as N.ImportDeclaration).phase = \"source\";\n    } else if (phase === \"defer\") {\n      this.expectPlugin(\"deferredImportEvaluation\", loc);\n      (node as N.ImportDeclaration).phase = \"defer\";\n    } else if (this.hasPlugin(\"sourcePhaseImports\")) {\n      (node as N.ImportDeclaration).phase = null;\n    }\n  }\n\n  /*\n   * Parse `source` in `import source x from \"x\"`, disambiguating\n   * `import source from \"x\"` and `import source from from \"x\"`.\n   *\n   * This function might return an identifier representing the `source`\n   * if it eats `source` and then discovers that it was the default import\n   * binding and not the import reflection.\n   *\n   * This function is also used to parse `import type` and `import typeof`\n   * in the TS and Flow plugins, and for parsing `import defer`.\n   */\n  parseMaybeImportPhase(\n    node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    isExport: boolean,\n  ): N.Identifier | null {\n    if (!this.isPotentialImportPhase(isExport)) {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      return null;\n    }\n\n    const phaseIdentifier = this.parseIdentifier(true);\n\n    const { type } = this.state;\n    const isImportPhase = tokenIsKeywordOrIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n\n    if (isImportPhase) {\n      this.resetPreviousIdentifierLeadingComments(phaseIdentifier);\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        phaseIdentifier.name,\n        phaseIdentifier.loc.start,\n      );\n      return null;\n    } else {\n      this.applyImportPhase(\n        node as Undone<N.ImportDeclaration>,\n        isExport,\n        null,\n      );\n      // `<phase>` is a default binding, return it to the main import declaration parser\n      return phaseIdentifier;\n    }\n  }\n\n  isPrecedingIdImportPhase(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    phase: string,\n  ) {\n    const { type } = this.state;\n    return tokenIsIdentifier(type)\n      ? // OK: import <phase> x from \"foo\";\n        // OK: import <phase> from from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // NO: import <phase> from 'foo';\n        // With the module declarations proposals, we will need further disambiguation\n        // for `import module from from;`.\n        type !== tt._from || this.lookaheadCharCode() === charCodes.lowercaseF\n      : // OK: import <phase> { x } from \"foo\";\n        // OK: import <phase> x from \"foo\";\n        // OK: import <phase> * as T from \"foo\";\n        // NO: import <phase> from \"foo\";\n        // OK: import <phase> \"foo\";\n        // The last one is invalid, we will continue parsing and throw\n        // an error later\n        type !== tt.comma;\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    if (this.match(tt.string)) {\n      // import '...'\n      return this.parseImportSourceAndAttributes(node);\n    }\n\n    return this.parseImportSpecifiersAndAfter(\n      node,\n      this.parseMaybeImportPhase(node, /* isExport */ false),\n    );\n  }\n\n  parseImportSpecifiersAndAfter(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): N.AnyImport {\n    node.specifiers = [];\n\n    // check if we have a default import like\n    // import React from \"react\";\n    const hasDefault = this.maybeParseDefaultImportSpecifier(\n      node,\n      maybeDefaultIdentifier,\n    );\n    /* we are checking if we do not have a default import, then it is obvious that we need named imports\n     * import { get } from \"axios\";\n     * but if we do have a default import\n     * we need to check if we have a comma after that and\n     * that is where this `|| this.eat` condition comes into play\n     */\n    const parseNext = !hasDefault || this.eat(tt.comma);\n    // if we do have to parse the next set of specifiers, we first check for star imports\n    // import React, * from \"react\";\n    const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n    // now we check if we need to parse the next imports\n    // but only if they are not importing * (everything)\n    if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n    this.expectContextual(tt._from);\n\n    return this.parseImportSourceAndAttributes(node);\n  }\n\n  parseImportSourceAndAttributes(\n    this: Parser,\n    node: Undone<N.ImportDeclaration>,\n  ): N.AnyImport {\n    node.specifiers ??= [];\n    node.source = this.parseImportSource();\n    this.maybeParseImportAttributes(node);\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    specifier: Undone<T>,\n    type: T[\"type\"],\n    bindingType: BindingFlag = BindingFlag.TYPE_LEXICAL,\n  ) {\n    this.checkLVal(specifier.local, { type }, bindingType);\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-attributes/#prod-WithEntries WithEntries}\n   */\n  parseImportAttributes(): N.ImportAttribute[] {\n    this.expect(tt.braceL);\n\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          Errors.ModuleAttributesWithDuplicateKeys,\n          this.state.startLoc,\n          {\n            key: keyName,\n          },\n        );\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(\n          Errors.ModuleAttributeInvalidValue,\n          this.state.startLoc,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    this.expect(tt.braceR);\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   */\n  parseModuleAttributes() {\n    const attrs: N.ImportAttribute[] = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode<N.ImportAttribute>();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, node.key);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, node.key, {\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(\n          Errors.ModuleAttributeInvalidValue,\n          this.state.startLoc,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAttributes(\n    node: Undone<\n      N.ImportDeclaration | N.ExportNamedDeclaration | N.ExportAllDeclaration\n    >,\n  ) {\n    let attributes: N.ImportAttribute[];\n    if (!process.env.BABEL_8_BREAKING) {\n      // eslint-disable-next-line no-var\n      var useWith = false;\n    }\n\n    // https://tc39.es/proposal-import-attributes/#prod-WithClause\n    if (this.match(tt._with)) {\n      if (\n        this.hasPrecedingLineBreak() &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      ) {\n        // This will be parsed as a with statement, and we will throw a\n        // better error about it not being supported in strict mode.\n        return;\n      }\n\n      this.next(); // eat `with`\n\n      if (!process.env.BABEL_8_BREAKING && this.hasPlugin(\"moduleAttributes\")) {\n        attributes = this.parseModuleAttributes();\n      } else {\n        attributes = this.parseImportAttributes();\n      }\n      if (!process.env.BABEL_8_BREAKING) {\n        useWith = true;\n      }\n    } else if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      if (\n        !this.hasPlugin(\"deprecatedImportAssert\") &&\n        (process.env.BABEL_8_BREAKING || !this.hasPlugin(\"importAssertions\"))\n      ) {\n        this.raise(Errors.ImportAttributesUseAssert, this.state.startLoc);\n      }\n      if (process.env.BABEL_8_BREAKING || !this.hasPlugin(\"importAssertions\")) {\n        this.addExtra(node, \"deprecatedAssertSyntax\", true);\n      }\n      this.next(); // eat `assert`\n      attributes = this.parseImportAttributes();\n    } else {\n      attributes = [];\n    }\n\n    if (\n      !process.env.BABEL_8_BREAKING &&\n      !useWith &&\n      this.hasPlugin(\"importAssertions\")\n    ) {\n      node.assertions = attributes;\n    } else {\n      node.attributes = attributes;\n    }\n  }\n\n  maybeParseDefaultImportSpecifier(\n    node: Undone<N.ImportDeclaration>,\n    maybeDefaultIdentifier: N.Identifier | null,\n  ): boolean {\n    // import defaultObj, { x, y as z } from '...'\n    if (maybeDefaultIdentifier) {\n      const specifier = this.startNodeAtNode<N.ImportDefaultSpecifier>(\n        maybeDefaultIdentifier,\n      );\n      specifier.local = maybeDefaultIdentifier;\n      node.specifiers.push(\n        this.finishImportSpecifier(specifier, \"ImportDefaultSpecifier\"),\n      );\n      return true;\n    } else if (\n      // We allow keywords, and parseImportSpecifierLocal will report a recoverable error\n      tokenIsKeywordOrIdentifier(this.state.type)\n    ) {\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, this.state.startLoc);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingFlag | undefined,\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, specifier, {\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","import type { Options } from \"../options.ts\";\nimport type * as N from \"../types.ts\";\nimport { getOptions } from \"../options.ts\";\nimport StatementParser from \"./statement.ts\";\nimport ScopeHandler from \"../util/scope.ts\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(\n    options: Options | undefined | null,\n    input: string,\n    pluginsMap: PluginsMap,\n  ) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap;\n    this.filename = options.sourceFilename;\n    this.startIndex = options.startIndex;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): new (...args: any) => ScopeHandler {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode<N.File>();\n    const program = this.startNode<N.Program>();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    file.comments.length = this.state.commentsLen;\n    return file as N.File;\n  }\n}\n","import type { Options } from \"./options.ts\";\nimport {\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n} from \"./plugin-utils.ts\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings.ts\";\nimport Parser, { type PluginsMap } from \"./parser/index.ts\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types.ts\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types.ts\";\nexport type { Token } from \"./tokenizer/index.ts\";\n\nimport type { Expression, File } from \"./types.ts\";\nexport type { Expression, File };\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(\n    internalTokenTypes,\n  ) as (keyof InternalTokenTypes)[]) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  const pluginsMap: PluginsMap = new Map();\n  if (options?.plugins) {\n    for (const plugin of options.plugins) {\n      let name, opts;\n      if (typeof plugin === \"string\") {\n        name = plugin;\n      } else {\n        [name, opts] = plugin;\n      }\n      if (!pluginsMap.has(name)) {\n        pluginsMap.set(name, opts || {});\n      }\n    }\n    validatePlugins(pluginsMap);\n    cls = getParserClass(pluginsMap);\n  }\n\n  return new cls(options, input, pluginsMap);\n}\n\nconst parserClassCache = new Map<string, new (...args: any) => Parser>();\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(\n  pluginsMap: Map<string, any>,\n): new (...args: any) => Parser {\n  const pluginList = [];\n  for (const name of mixinPluginNames) {\n    if (pluginsMap.has(name)) {\n      pluginList.push(name);\n    }\n  }\n  const key = pluginList.join(\"|\");\n  let cls = parserClassCache.get(key);\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache.set(key, cls);\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n"],"names":["Position","constructor","line","col","index","column","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset","code","ModuleErrors","ImportMetaOutsideModule","message","ImportOutsideModule","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","CatchClause","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","node","type","prefix","StandardErrors","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitUsingNotInAsyncContext","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorArgumentsOutsideParentheses","DecoratorBeforeExport","DecoratorsBeforeAfterExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeferImportRequiresNamespace","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","DynamicImportPhaseRequiresImportExpressions","phase","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForInUsing","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportAttributesUseAssert","ImportBindingIsString","importName","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","ImportReflectionHasAssertion","ImportReflectionNotBinding","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidLhsOptionalChaining","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","missingPlugin","map","name","JSON","stringify","join","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","key","ModuleExportNameHasLoneSurrogate","surrogateCharCode","toString","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","SloppyFunctionAnnexB","SourcePhaseImportRequiresDefault","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","expected","UnexpectedTokenUnaryExponentiation","UnexpectedUsingDeclaration","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","target","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","UsingDeclarationExport","UsingDeclarationHasBindingPattern","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","StrictModeErrors","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","UnparenthesizedPipeBodyDescriptions","Set","PipelineOperatorErrors","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","token","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","defineHidden","obj","value","Object","defineProperty","enumerable","configurable","toParseErrorConstructor","toMessage","reasonCode","syntaxPlugin","hasMissingPlugin","oldReasonCodes","AccessorCannotDeclareThisParameter","AccessorCannotHaveTypeParameters","ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference","SetAccessorCannotHaveOptionalParameter","SetAccessorCannotHaveRestParameter","SetAccessorCannotHaveReturnType","loc","details","error","SyntaxError","pos","clone","overrides","_overrides$loc","assign","get","set","writable","ParseErrorEnum","argument","Array","isArray","parseErrorTemplates","ParseErrorConstructors","keys","template","_ref","rest","_objectWithoutPropertiesLoose","_excluded","Errors","toUnenumerable","object","toESTreeLocation","estree","superClass","ESTreeParserMixin","parse","file","options","tokens","parseRegExpLiteral","pattern","flags","regex","RegExp","_","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","_unused","bigint","String","parseDecimalLiteral","decimal","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","expression","raw","extra","expressionValue","stmt","rawValue","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","params","isValidDirective","_stmt$expression$extr","parenthesized","parseBlockBody","allowDirectives","topLevel","afterBlockParse","directiveStatements","directives","d","body","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","push","parsePrivateName","getPluginOption","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","id","isPrivateName","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","computed","finishNode","nameIsConstructor","parseClassProperty","args","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","startLoc","refExpressionErrors","isValidLVal","isUnparenthesizedInAssign","binding","isAssignable","isBinding","toAssignable","isLHS","classScope","usePrivateName","toAssignableObjectExpressionProp","isLast","raise","finishCallExpression","unfinished","optional","callee","_ref2","source","arguments","attributes","toReferencedArguments","parseExport","decorators","exportStartLoc","state","lastTokStartLoc","exported","specifiers","length","_declaration$decorato","declaration","resetStartLocation","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","isOptionalMemberExpression","hasPropertyAsPrivateName","isObjectMethod","finishNodeAt","endLoc","resetEndLocation","lastTokEndLoc","TokContext","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","postfix","ExportedTokenType","label","conf","rightAssociative","binop","updateContext","keywords","Map","createKeyword","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_defer","_from","_get","_let","_meta","_of","_sent","_set","_source","_static","_using","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_satisfies","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","placeholder","string","num","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","tokenIsIdentifier","tokenKeywordOrIdentifierIsKeyword","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenComesBeforeExpression","tokenCanStartExpression","tokenIsAssignment","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsLoop","tokenIsKeyword","tokenIsOperator","tokenIsPostfix","tokenIsPrefix","tokenIsTSTypeOperator","tokenIsTSDeclarationStart","tokenLabelName","tokenOperatorPrecedence","tokenIsRightAssociative","tokenIsTemplate","getExportedToken","context","pop","tc","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","i","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","has","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","current","next","next2","reservedWordLikeSet","canBeReservedWord","Scope","names","firstLexicalName","ScopeHandler","parser","scopeStack","undefinedExports","inTopLevel","currentScope","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","ScopeFlag","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","add","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","sourceToOffsetPos","sourcePos","startIndex","offsetToSourcePos","offsetPos","hasPlugin","pluginConfig","plugins","pluginName","pluginOptions","actualOptions","plugin","_this$plugins$get","setTrailingComments","comments","trailingComments","undefined","unshift","setLeadingComments","leadingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","commentsLen","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","containingNode","finalizeComment","splice","trailingNode","commentStart","input","charCodeAt","properties","finalizeRemainingComments","resetPreviousNodeTrailingComments","resetPreviousIdentifierLeadingComments","takeSurroundingComments","lineBreak","lineBreakG","isNewLine","hasNewLine","skipWhiteSpace","skipWhiteSpaceInLine","isWhitespace","State","curLine","lineStart","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","topicContext","maxNumOfResolvableTopics","maxTopicIndex","labels","ct","firstInvalidTemplateEscapePos","strictErrors","tokensLength","v","init","strictMode","sourceType","startLine","startColumn","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","soloAwait","inFSharpPipelineDirectBody","canStartJSXElement","containsEsc","hasTopLevelAwait","curPosition","slice","isDigit","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","initialPos","initialLineStart","initialCurLine","out","firstInvalidLoc","chunkStart","unterminated","isStringEnd","res","readEscapedChar","str","containsInvalid","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","strictNumericEscape","startPos","match","exec","octalStr","octal","parseInt","len","forceLen","n","readInt","invalidEscapeSequence","allowNumSeparator","bailOnError","forbiddenSiblings","isAllowedSibling","invalid","total","e","Infinity","val","prev","numericSeparatorInEscapeSequence","Number","isNaN","unexpectedNumericSeparator","_isDigit","invalidDigit","indexOf","invalidCodePoint","buildPosition","VALID_REGEX_FLAGS","Token","Tokenizer","isLookahead","errorHandlers_readInt","errorRecovery","errorBuilder","errorHandlers_readCodePoint","errorHandlers_readStringContents_string","recordStrictModeErrors","errorHandlers_readStringContents_template","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","lastIndex","lookaheadCharCode","nextTokenInLineStart","nextTokenInLineStartSince","lookaheadInLineCharCode","codePointAtPos","cp","trail","setStrict","forEach","toParseError","clear","skipSpace","finishToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","spaceStart","loop","attachComment","annexB","commentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","proposal","topicToken","lookaheadCh","codePointAt","readToken_atSign","readToken_plus_min","readToken_lt","readToken_gt","size","readToken_eq_excl","readToken_question","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","escaped","content","mods","char","includes","isBigInt","replace","startsWithDot","isFloat","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","isDecimal","parseFloat","quote","readTemplateContinuation","opening","firstCode","escStart","identifierCheck","esc","keywordTypes","raiseOverwrite","expectOnePlugin","pluginNames","some","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","stack","oldClassScope","from","declarePrivateName","elementType","redefined","accessor","oldStatic","newStatic","oldKind","newKind","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","origin","recordArrowParameterBindingError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","UtilParser","addExtra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","tryParse","fn","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","andThrow","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","hasErrors","isLiteralPropertyName","property","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","ExpressionErrors","Node","ranges","range","NodePrototype","prototype","__clone","newNode","clonePlaceholder","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","NodeUtils","startNodeAt","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitialized","GetterMayNotHaveThisParam","ImportReflectionHasImportType","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","hasTypeImportKind","importKind","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flow","FlowParserMixin","flowPragma","shouldParseTypes","matches","Error","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","this","returnType","typeAnnotation","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","hasModuleExport","default","isLet","exportKind","flowParseTypeAnnotation","finished","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","flowParseInterfaceExtends","implements","mixins","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","proto","flowCheckGetterSetterParams","paramCount","_startLoc","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatementLike","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","_node$extra","toAssignableList","trailingCommaLoc","checkParams","result","parseParenItem","typeCastNode","assertModuleNodeAllowed","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","left","exprList","toReferencedList","isParenthesizedExpr","_expr$extra","parseArrayLike","close","canBePattern","isTuple","isParenthesized","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","parseObjPropValue","parseFunctionParamType","parseMaybeDefault","checkImportReflection","module","parseImportSpecifierLocal","specifier","local","finishImportSpecifier","isPotentialImportPhase","isExport","applyImportPhase","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","parseVarId","decl","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","_jsx","jsx","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","strictModeChanged","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","parseTopLevel","program","fileNode","skipFlowComment","hasFlowCommentCompletion","commentSkip","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitialized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","toUpperCase","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","afterNext","entities","__proto__","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","JSXParserMixin","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePoint","count","desc","entity","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","previousContext","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","TypeScriptScope","tsNames","TypeScriptScopeHandler","importsStack","hasImport","allowShadow","isConst","wasConst","unwrapParenthesizedExpression","LValParser","_node$extra3","last","_node$extra2","operator","arg","checkToRestConversion","elt","element","toReferencedListDeep","parseSpread","parseRestBinding","parseBindingList","ParseBindingListFlags","parseObjectLike","closeCharCode","allowEmpty","elts","checkCommaAfterRest","parseDecorator","parseAssignableListItem","parseBindingRestProperty","parseBindingProperty","parsePropertyName","_left","checkLVal","checkClashes","hasParenthesizedAncestor","_expression$extra","checkIdentifier","validity","ParseErrorClass","isParenthesizedExpression","nextAncestor","child","declareNameFromIdentifier","identifier","allowPattern","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","propertyName","AccessorCannotBeOptional","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TupleOptionalAfterType","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","tsIsVarianceAnnotations","typescript","TypeScriptParserMixin","tsParseInOutModifiers","tsParseModifiers","bind","allowedModifiers","disallowedModifiers","errorTemplate","tsParseConstModifier","tsParseInOutConstModifiers","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenOnSameLineAndCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","modified","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","hasOwnProperty","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsFillSignature","returnToken","signature","returnTokenRequired","paramsKey","returnTypeKey","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedType","tsExpectThenParseType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","elementNode","labeled","isWord","chAfterWord","wordName","typeOrLabel","tsParseNonArrayType","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","parseMaybeUnary","nodeType","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","isTypeOperator","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","_unused2","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","oldInDisallowConditionalTypesContext","tsNextThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","maybeDefaultIdentifier","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","startType","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","reScan_lt_gt","tsIsDeclarationStart","override","pp","parameter","isSimpleParameter","tsDisallowOptionalPattern","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","_callee$extra","parseExprOp","leftStartLoc","minPrec","isSatisfies","checkKeywords","checkDuplicateExports","importNode","parseMaybeImportPhase","parseImportSpecifiersAndAfter","nodeImportEquals","isAbstractClass","cls","allowMissingInitializer","declarations","isValidAmbientConstInitializer","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","isIdentifier","parseClassPropertyAnnotation","definite","parseClassAccessorProperty","declareClassPrivateMethodInScope","_typeCast","_typeCast2","typeCast","_typeParameters","reportReservedArrowTypeParam","trailingComma","sawUnary","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldStrict","oldInAbstractClass","maybeTakeDecorators","hasBody","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","leftOfAs","rightOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","kindKey","isPossiblyLiteralEnum","expressions","isUncomputedMemberExpressionChain","isNumber","isNegativeNumber","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","placeholders","PlaceholdersParserMixin","parsePlaceholder","assertNoSpace","finishPlaceholder","chStartsBindingIdentifier","verifyBreakContinue","isBreak","parseStatementOrSloppyAnnexBFunctionDeclaration","stmtPlaceholder","parseBlock","createNewLexicalScope","parseFunctionId","requireId","parseClassBody","startsWith","maybeParseExportDefaultSpecifier","_specifiers","checkExport","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","v8intrinsic","V8IntrinsicMixin","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","PIPELINE_PROPOSALS","TOPIC_TOKENS","validatePlugins","pluginsMap","decoratorsBeforeExport","allowCallParenthesized","_pluginsMap$get","proposalList","p","tupleSyntaxIsHash","syntaxType","tokenList","moduleAttributesVersionPluginOption","version","deprecatedAssertSyntax","RECORD_AND_TUPLE_SYNTAX_TYPES","missingPlugins","mixinPlugins","mixinPluginNames","createDefaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowNewTargetOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createImportExpressions","createParenthesizedExpressions","getOptions","opts","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","_resultError$loc","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","finishedNode","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","requiredParentheses","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","isAwait","recordAwaitIfAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","updateExpressionNode","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseImportCall","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","parseModuleExpression","parseAsyncFunctionExpression","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","parseFunction","isSource","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","elem","isTail","endOffset","elemEnd","cooked","tail","curElt","quasis","substitutions","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","_params","finishedProp","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","reservedTest","isAwaitAllowed","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","ParamKind","prodParamToClear","ret","revertScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","StatementParser","interpreter","parseInterpreterDirective","finishedProgram","stmtToDirective","directiveLiteral","hasFollowingBindingAtom","endCh","chStartsBindingPattern","hasInLineFollowingBindingIdentifierOrBrace","startsUsingForOf","startsAwaitUsing","parseModuleItem","ParseStatementFlag","parseStatementListItem","allowLabeledFunction","parseStatement","allowDeclaration","allowFunctionDeclaration","parseBreakContinueStatement","parseDebuggerStatement","parseDoWhileStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","decoratorsEnabledBeforeExport","maybeDecorators","classNode","exportNode","allowExport","paramsStartLoc","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","startsWithAwaitUsing","starsWithUsingDeclaration","isLetOrUsing","initNode","parseVar","isForIn","parseForIn","startsWithAsync","isForOf","isHangingDeclaration","ParseFunctionFlag","discriminant","cases","cur","sawDefault","isCase","block","handler","clause","finalizer","statementStart","parsedNonDirective","await","isFor","hangingDeclaration","isDeclaration","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","maybeContextualKw","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","_member$decorators","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","_node2$declaration","_ref$specifiers","isTypeExport","assertions","nextType","hasFrom","nextAfterFrom","maybeParseImportAttributes","checkJSONModuleImport","checkNames","isDefault","isFrom","_node$specifiers","_declaration$extra","nodes","surrogate","isJSONModuleImport","singleBindingType","_node$assertions","nonDefaultNamedSpecifier","find","phaseIdentifier","isImportPhase","isPrecedingIdImportPhase","parseImportSourceAndAttributes","maybeParseDefaultImportSpecifier","parseNext","_node$specifiers2","parseImportAttributes","attrs","attrNames","parseModuleAttributes","useWith","importSpecifier","Parser","_options","getParser","ast","moduleError","generateExportedTokenTypes","internalTokenTypes","tokTypes","getParserClass","parserClassCache","pluginList"],"mappings":"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AE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,IAAI,EAAC,EAAE,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,GAAG,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,IAAI,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,KAAK,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,GAAG,EAAC,IAAI,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,CAAC;AAEjkD,MAAMC,qBAAqB,GAAG,CAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EA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","sourceRoot":""},"url":null}}}